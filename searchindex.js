Search.setIndex({"docnames": ["about", "dials_scale_user_guide", "documentation/conventions", "documentation/data_files", "documentation/developer_examples/extending_dials", "documentation/developer_examples/index", "documentation/developer_examples/read_experiment_and_data", "documentation/getting_started", "documentation/index", "documentation/installation_developer", "documentation/library_reference/algorithms/dials.algorithms.background", "documentation/library_reference/algorithms/dials.algorithms.indexing", "documentation/library_reference/algorithms/dials.algorithms.integration", "documentation/library_reference/algorithms/dials.algorithms.profile_model", "documentation/library_reference/algorithms/dials.algorithms.refinement", "documentation/library_reference/algorithms/dials.algorithms.scaling", "documentation/library_reference/algorithms/dials.algorithms.spot_finding", "documentation/library_reference/algorithms/dials.algorithms.spot_prediction", "documentation/library_reference/algorithms/dials.algorithms.symmetry", "documentation/library_reference/algorithms/index", "documentation/library_reference/array_family/index", "documentation/library_reference/dxtbx/beam", "documentation/library_reference/dxtbx/crystal", "documentation/library_reference/dxtbx/detector", "documentation/library_reference/dxtbx/experiment_list", "documentation/library_reference/dxtbx/goniometer", "documentation/library_reference/dxtbx/imageset", "documentation/library_reference/dxtbx/index", "documentation/library_reference/dxtbx/profile", "documentation/library_reference/dxtbx/scan", "documentation/library_reference/dxtbx/serialize", "documentation/library_reference/extensions/index", "documentation/library_reference/index", "documentation/library_reference/util/index", "documentation/programs/dials_align_crystal", "documentation/programs/dials_anvil_correction", "documentation/programs/dials_apply_mask", "documentation/programs/dials_check_indexing_symmetry", "documentation/programs/dials_combine_experiments", "documentation/programs/dials_compare_orientation_matrices", "documentation/programs/dials_cosym", "documentation/programs/dials_create_profile_model", "documentation/programs/dials_estimate_gain", "documentation/programs/dials_estimate_resolution", "documentation/programs/dials_export", "documentation/programs/dials_export_bitmaps", "documentation/programs/dials_filter_reflections", "documentation/programs/dials_find_spots", "documentation/programs/dials_find_spots_apache_server", "documentation/programs/dials_find_spots_server", "documentation/programs/dials_generate_mask", "documentation/programs/dials_image_viewer", "documentation/programs/dials_import", "documentation/programs/dials_index", "documentation/programs/dials_integrate", "documentation/programs/dials_merge_cbf", "documentation/programs/dials_missing_reflections", "documentation/programs/dials_plot_scan_varying_model", "documentation/programs/dials_predict", "documentation/programs/dials_refine", "documentation/programs/dials_refine_bravais_settings", "documentation/programs/dials_reindex", "documentation/programs/dials_report", "documentation/programs/dials_scale", "documentation/programs/dials_search_beam_position", "documentation/programs/dials_show", "documentation/programs/dials_slice_sequence", "documentation/programs/dials_spot_counts_per_image", "documentation/programs/dials_stereographic_projection", "documentation/programs/dials_symmetry", "documentation/programs/dials_two_theta_refine", "documentation/programs/index", "documentation/programs/xia2_multiplex", "documentation/tutorials/3DED/Biotin", "documentation/tutorials/3DED/MyD88", "documentation/tutorials/3DED/lysozyme_nanocrystals", "documentation/tutorials/br_lyso_multi", "documentation/tutorials/centring_vs_pseudocentring", "documentation/tutorials/correcting_poor_initial_geometry_tutorial", "documentation/tutorials/diamond", "documentation/tutorials/index", "documentation/tutorials/metrology_corrections", "documentation/tutorials/mpro_x0692", "documentation/tutorials/multi_crystal_analysis", "documentation/tutorials/multi_crystal_symmetry_and_scaling", "documentation/tutorials/multi_lattice_tutorial", "documentation/tutorials/processing_in_detail_betalactamase", "documentation/tutorials/processing_in_detail_betalactamase_dui", "documentation/tutorials/small_molecule_tutorial", "howto", "index", "installation", "license", "missing-images", "projects", "publications", "ssx_processing_guide", "workshops/DIALS-1", "workshops/dials3d", "workshops/index"], "filenames": ["about.rst", "dials_scale_user_guide.rst", "documentation/conventions.rst", "documentation/data_files.rst", "documentation/developer_examples/extending_dials.rst", "documentation/developer_examples/index.rst", "documentation/developer_examples/read_experiment_and_data.rst", "documentation/getting_started.rst", "documentation/index.rst", "documentation/installation_developer.rst", "documentation/library_reference/algorithms/dials.algorithms.background.rst", "documentation/library_reference/algorithms/dials.algorithms.indexing.rst", "documentation/library_reference/algorithms/dials.algorithms.integration.rst", "documentation/library_reference/algorithms/dials.algorithms.profile_model.rst", "documentation/library_reference/algorithms/dials.algorithms.refinement.rst", "documentation/library_reference/algorithms/dials.algorithms.scaling.rst", "documentation/library_reference/algorithms/dials.algorithms.spot_finding.rst", "documentation/library_reference/algorithms/dials.algorithms.spot_prediction.rst", "documentation/library_reference/algorithms/dials.algorithms.symmetry.rst", "documentation/library_reference/algorithms/index.rst", "documentation/library_reference/array_family/index.rst", "documentation/library_reference/dxtbx/beam.rst", "documentation/library_reference/dxtbx/crystal.rst", "documentation/library_reference/dxtbx/detector.rst", "documentation/library_reference/dxtbx/experiment_list.rst", "documentation/library_reference/dxtbx/goniometer.rst", "documentation/library_reference/dxtbx/imageset.rst", "documentation/library_reference/dxtbx/index.rst", "documentation/library_reference/dxtbx/profile.rst", "documentation/library_reference/dxtbx/scan.rst", "documentation/library_reference/dxtbx/serialize.rst", "documentation/library_reference/extensions/index.rst", "documentation/library_reference/index.rst", "documentation/library_reference/util/index.rst", "documentation/programs/dials_align_crystal.rst", "documentation/programs/dials_anvil_correction.rst", "documentation/programs/dials_apply_mask.rst", "documentation/programs/dials_check_indexing_symmetry.rst", "documentation/programs/dials_combine_experiments.rst", "documentation/programs/dials_compare_orientation_matrices.rst", "documentation/programs/dials_cosym.rst", "documentation/programs/dials_create_profile_model.rst", "documentation/programs/dials_estimate_gain.rst", "documentation/programs/dials_estimate_resolution.rst", "documentation/programs/dials_export.rst", "documentation/programs/dials_export_bitmaps.rst", "documentation/programs/dials_filter_reflections.rst", "documentation/programs/dials_find_spots.rst", "documentation/programs/dials_find_spots_apache_server.rst", "documentation/programs/dials_find_spots_server.rst", "documentation/programs/dials_generate_mask.rst", "documentation/programs/dials_image_viewer.rst", "documentation/programs/dials_import.rst", "documentation/programs/dials_index.rst", "documentation/programs/dials_integrate.rst", "documentation/programs/dials_merge_cbf.rst", "documentation/programs/dials_missing_reflections.rst", "documentation/programs/dials_plot_scan_varying_model.rst", "documentation/programs/dials_predict.rst", "documentation/programs/dials_refine.rst", "documentation/programs/dials_refine_bravais_settings.rst", "documentation/programs/dials_reindex.rst", "documentation/programs/dials_report.rst", "documentation/programs/dials_scale.rst", "documentation/programs/dials_search_beam_position.rst", "documentation/programs/dials_show.rst", "documentation/programs/dials_slice_sequence.rst", "documentation/programs/dials_spot_counts_per_image.rst", "documentation/programs/dials_stereographic_projection.rst", "documentation/programs/dials_symmetry.rst", "documentation/programs/dials_two_theta_refine.rst", "documentation/programs/index.rst", "documentation/programs/xia2_multiplex.rst", "documentation/tutorials/3DED/Biotin.rst", "documentation/tutorials/3DED/MyD88.rst", "documentation/tutorials/3DED/lysozyme_nanocrystals.rst", "documentation/tutorials/br_lyso_multi.rst", "documentation/tutorials/centring_vs_pseudocentring.rst", "documentation/tutorials/correcting_poor_initial_geometry_tutorial.rst", "documentation/tutorials/diamond.rst", "documentation/tutorials/index.rst", "documentation/tutorials/metrology_corrections.rst", "documentation/tutorials/mpro_x0692.rst", "documentation/tutorials/multi_crystal_analysis.rst", "documentation/tutorials/multi_crystal_symmetry_and_scaling.rst", "documentation/tutorials/multi_lattice_tutorial.rst", "documentation/tutorials/processing_in_detail_betalactamase.rst", "documentation/tutorials/processing_in_detail_betalactamase_dui.rst", "documentation/tutorials/small_molecule_tutorial.rst", "howto.rst", "index.rst", "installation.rst", "license.rst", "missing-images.rst", "projects.rst", "publications.rst", "ssx_processing_guide.rst", "workshops/DIALS-1.rst", "workshops/dials3d.rst", "workshops/index.rst"], "titles": ["About", "User guide for scaling data with DIALS", "Conventions", "Data files", "Extending DIALS", "Developer Examples", "Reading experiment and data", "Getting started", "Documentation", "Installation for Developers", "dials.algorithms.background", "dials.algorithms.indexing", "dials.algorithms.integration", "dials.algorithms.profile_model", "dials.algorithms.refinement", "dials.algorithms.scaling", "dials.algorithms.spot_finding", "dials.algorithms.spot_prediction", "dials.algorithms.symmetry", "Algorithms", "Array Family", "dxtbx.model.beam", "dxtbx.model.crystal", "dxtbx.model.detector", "dxtbx.model.experiment_list", "dxtbx.model.goniometer", "dxtbx.imageset", "dxtbx", "dxtbx.model.profile", "dxtbx.model.scan", "dxtbx.serialize", "Extensions", "Library Reference", "Util", "dials.align_crystal", "dials.anvil_correction", "dials.apply_mask", "dials.check_indexing_symmetry", "dials.combine_experiments", "dials.compare_orientation_matrices", "dials.cosym", "dials.create_profile_model", "dials.estimate_gain", "dials.estimate_resolution", "dials.export", "dials.export_bitmaps", "dials.filter_reflections", "dials.find_spots", "distl/dials apache server", "dials.find_spots_server/client", "dials.generate_mask", "dials.image_viewer", "dials.import", "dials.index", "dials.integrate", "dials.merge_cbf", "dials.missing_reflections", "dials.plot_scan_varying_model", "dials.predict", "dials.refine", "dials.refine_bravais_settings", "dials.reindex", "dials.report", "dials.scale", "dials.search_beam_position", "dials.show", "dials.slice_sequence", "dials.spot_counts_per_image", "dials.stereographic_projection", "dials.symmetry", "dials.two_theta_refine", "Program documentation", "xia2.multiplex", "Processing Small Molecule MicroED/3DED: Biotin", "MyD88<sup>TIR</sup> small wedges", "Lysozyme nanocrystals", "Multi-crystal analysis with DIALS and xia2.multiplex", "DPF3 Part 2: A question of centring", "DPF3 Part 1: Correcting poor initial geometry", "Using DIALS at Diamond Light Source", "Tutorials", "Refining multi-tile detector metrology with DIALS", "SARS-CoV-2 main protease (Mpro)", "Multi-crystal analysis with DIALS and BLEND: individual vs joint refinement", "Multi-crystal symmetry analysis and scaling with DIALS", "Multi-lattice Tutorial", "Processing in Detail", "Processing in Detail with DUI", "Small-molecule data reduction tutorial", "DIALS How-To guides", "DIALS: Diffraction Integration for Advanced Light Sources", "Installation", "DIALS License", "Processing Sequences with Missing Images", "Projects", "Publications", "SSX processing guide", "DIALS 1: 12th-13th June 2012 (Diamond Light Source, UK)", "DIALS-3: 22nd May 2013 (Cambridge, UK)", "Workshops"], "terms": {"The": [0, 1, 3, 4, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 31, 33, 35, 36, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98], "softwar": [0, 2, 7, 11, 75, 82, 84, 85, 86, 90, 92, 94, 95, 97], "i": [0, 1, 2, 3, 4, 6, 7, 9, 11, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97], "fulli": [0, 2, 44, 46, 54, 74, 81, 82, 85, 86], "open": [0, 3, 51, 71, 73, 74, 76, 82, 84, 86, 87, 91], "sourc": [0, 4, 9, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 44, 52, 78, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 94, 95, 99], "collabor": [0, 90, 97, 98], "environ": [0, 4, 48, 75, 79, 81, 91], "main": [0, 3, 9, 14, 23, 34, 63, 71, 79, 80, 86, 96], "ar": [0, 1, 2, 3, 4, 7, 9, 11, 14, 15, 16, 18, 22, 23, 24, 25, 26, 33, 35, 38, 40, 41, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97], "base": [0, 1, 4, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 38, 43, 46, 53, 59, 60, 63, 64, 70, 79, 82, 83, 84, 86, 87, 88, 95, 97], "diamond": [0, 35, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 98, 99], "light": [0, 35, 80, 81, 82, 83, 84, 85, 86, 87, 92, 99], "ccp4": [0, 72, 73, 75, 76, 77, 79, 83, 84, 86, 87, 90, 95, 97, 98], "uk": [0, 91, 99], "lawrenc": [0, 90, 92], "berkelei": [0, 90, 92, 99], "nation": [0, 35, 90, 92], "laboratori": [0, 11, 21, 35, 68, 74, 75, 83, 90, 92, 98], "usa": [0, 2, 35], "howev": [0, 1, 2, 14, 41, 42, 44, 54, 61, 68, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 96], "spirit": 0, "movement": 0, "we": [0, 2, 4, 7, 11, 14, 16, 21, 25, 26, 33, 35, 37, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97], "welcom": [0, 83], "from": [0, 1, 2, 3, 4, 6, 7, 9, 11, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 30, 33, 35, 38, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 66, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "anyon": 0, "who": [0, 7], "wish": [0, 88], "contribut": [0, 18, 53, 59, 60, 76, 83], "project": [0, 2, 11, 44, 45, 51, 63, 68, 76, 79, 83, 84, 85, 90, 95, 97, 98], "To": [0, 1, 2, 4, 7, 11, 14, 47, 49, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 91, 93, 96, 97], "avoid": [0, 14, 33, 53, 59, 60, 72, 74, 81, 82, 83, 86], "reinvent": 0, "wheel": 0, "much": [0, 9, 73, 74, 78, 81, 82, 83, 84, 86, 87, 88], "possibl": [0, 1, 2, 4, 11, 18, 33, 34, 40, 53, 56, 59, 60, 69, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 92], "build": [0, 9, 14, 79], "knowledg": [0, 2, 35], "accumul": [0, 12, 18], "over": [0, 1, 11, 16, 18, 40, 52, 53, 59, 60, 69, 72, 73, 74, 76, 81, 82, 84, 86, 87], "mani": [0, 2, 4, 16, 38, 40, 48, 73, 74, 76, 77, 78, 79, 82, 83, 84, 86, 87], "decad": 0, "field": [0, 11, 33, 87, 97], "crystallograph": [0, 1, 2, 70, 72, 76, 77, 82, 95], "data": [0, 4, 5, 7, 8, 11, 12, 14, 15, 16, 18, 24, 26, 33, 35, 40, 41, 43, 44, 47, 48, 49, 52, 53, 54, 55, 59, 60, 61, 62, 63, 66, 69, 70, 72, 77, 78, 79, 80, 81, 83, 84, 85, 89, 90, 92, 93, 94, 95, 97, 98], "process": [0, 1, 3, 7, 12, 14, 16, 31, 38, 41, 44, 47, 48, 51, 52, 53, 54, 58, 59, 60, 63, 71, 75, 77, 78, 79, 80, 81, 82, 84, 85, 88, 89, 95, 97], "benefit": [0, 90, 97], "greatli": [0, 90, 97], "altruism": 0, "expert": [0, 87], "idea": [0, 76], "advic": [0, 77], "either": [0, 1, 2, 4, 24, 40, 44, 47, 48, 51, 52, 53, 58, 59, 60, 63, 68, 70, 73, 74, 79, 82, 86, 87, 96], "directli": [0, 3, 48, 73, 78, 79, 81, 82, 83, 86, 87, 96], "via": [0, 2, 4, 9, 45, 55, 76, 87, 88, 90], "detail": [0, 1, 3, 4, 7, 14, 48, 63, 71, 72, 74, 76, 77, 78, 80, 81, 82, 84, 85, 88], "public": [0, 14, 74, 75], "exist": [0, 1, 4, 9, 15, 18, 23, 52, 72, 82, 83, 84, 86, 87, 97], "algorithm": [0, 1, 2, 4, 31, 32, 38, 40, 41, 42, 47, 50, 51, 53, 54, 58, 59, 60, 63, 71, 74, 78, 81, 82, 83, 84, 85, 86, 87, 90, 94, 95, 96, 98], "packag": [0, 2, 4, 9, 91, 95, 97], "xd": [0, 22, 24, 30, 44, 53, 78, 81, 82, 86, 87, 97], "2": [0, 1, 2, 3, 4, 7, 11, 14, 16, 18, 22, 33, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 95, 96, 99], "mosflm": [0, 2, 22, 44, 52, 54, 97], "3": [0, 1, 2, 3, 6, 11, 15, 18, 22, 33, 35, 37, 39, 40, 41, 43, 45, 47, 48, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 68, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 99], "At": [0, 2, 7, 53, 59, 60, 74, 77, 78, 81, 82, 83, 86, 87, 88, 97], "heart": 0, "framework": [0, 2, 4, 6, 90, 95], "li": [0, 2, 53, 59, 60], "design": [0, 2, 11, 23, 25, 53, 94, 95, 97], "philosophi": 0, "hardwar": 0, "abstract": [0, 2, 14, 15], "generalis": 0, "model": [0, 3, 6, 10, 11, 12, 14, 18, 19, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 95, 96, 97], "experi": [0, 1, 2, 4, 5, 11, 12, 14, 15, 16, 17, 18, 23, 24, 30, 31, 33, 35, 36, 37, 38, 40, 41, 44, 46, 47, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 72, 73, 74, 75, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 95, 96, 97], "inspir": [0, 77, 78, 84], "materi": [0, 23, 35, 52, 82, 86, 92], "publish": [0, 74, 82], "semin": 0, "workshop": [0, 11, 86, 87], "posit": [0, 1, 2, 3, 11, 14, 15, 33, 47, 53, 54, 59, 60, 63, 64, 66, 69, 72, 73, 74, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 88], "sensit": [0, 11, 40, 84], "detector": [0, 1, 2, 3, 4, 6, 10, 11, 14, 21, 24, 26, 27, 30, 32, 38, 41, 42, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 59, 60, 63, 73, 75, 76, 78, 80, 82, 83, 84, 86, 87, 88, 90, 93, 95, 97], "1": [0, 1, 2, 3, 4, 6, 11, 14, 16, 17, 18, 21, 22, 29, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 62, 63, 64, 66, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 99], "continu": [0, 53, 59, 60, 73, 74, 77, 78, 82, 83, 85, 86, 87, 93], "held": [0, 2], "our": [0, 2, 4, 74, 81, 82, 83, 86, 87, 88, 93, 98], "own": [0, 4, 53, 59, 60, 63, 74, 75, 76, 83], "seri": [0, 11, 53, 83, 97], "meet": [0, 90, 97, 98], "talk": 0, "invit": 0, "speaker": 0, "code": [0, 2, 4, 6, 9, 51, 74, 83, 92, 95, 96], "camp": 0, "which": [0, 1, 2, 4, 7, 11, 14, 15, 18, 21, 22, 23, 25, 29, 33, 35, 37, 38, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63, 65, 70, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 96], "specif": [0, 2, 4, 7, 53, 54, 59, 70, 74, 75, 76, 82, 83, 86, 87, 92], "problem": [0, 14, 74, 77, 78, 79, 82, 83, 84, 86, 87, 93], "address": [0, 78, 84, 97], "intens": [0, 1, 3, 11, 15, 18, 33, 35, 37, 40, 43, 44, 46, 47, 49, 53, 54, 61, 63, 72, 73, 74, 77, 78, 82, 83, 84, 85, 86, 87, 88, 94, 96, 97], "effort": [0, 81, 83], "across": [0, 1, 43, 53, 59, 60, 63, 72, 74, 75, 82, 84, 88, 96], "summari": [0, 12, 33, 65, 76, 81, 82, 83, 84, 85, 86, 87, 88, 96], "copi": [0, 14, 24, 26, 50, 74, 75, 77, 81, 83, 93], "slide": 0, "given": [0, 1, 2, 4, 11, 14, 15, 16, 17, 18, 22, 23, 25, 28, 30, 35, 39, 41, 44, 46, 47, 49, 51, 52, 53, 54, 55, 58, 62, 63, 64, 67, 68, 69, 72, 74, 78, 82, 83, 84, 86, 87, 96], "present": [0, 14, 15, 18, 33, 40, 44, 46, 53, 59, 60, 61, 66, 71, 72, 76, 77, 78, 81, 82, 84, 85, 86, 87, 88, 90, 99], "avail": [0, 1, 4, 9, 14, 21, 26, 35, 47, 54, 63, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 96], "here": [0, 2, 6, 14, 40, 48, 52, 57, 62, 63, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95], "written": [0, 2, 7, 45, 52, 74, 82, 83, 85, 86, 92], "us": [0, 2, 3, 4, 7, 9, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "python": [0, 3, 4, 7, 9, 22, 23, 24, 25, 26, 79, 83, 95], "c": [0, 1, 2, 7, 10, 12, 14, 22, 23, 24, 25, 26, 35, 40, 53, 60, 61, 64, 66, 73, 74, 76, 77, 78, 81, 82, 84, 85, 86, 87, 88, 92, 95], "make": [0, 2, 4, 9, 15, 23, 25, 45, 53, 54, 55, 59, 60, 63, 70, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 90, 93], "heavi": [0, 63, 76], "cctbx": [0, 1, 2, 4, 9, 11, 14, 18, 22, 24, 48, 79, 83, 95], "4": [0, 1, 2, 3, 11, 16, 18, 22, 33, 35, 40, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 60, 63, 64, 69, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 95, 97], "core": [0, 81, 83, 88, 95, 96], "calcul": [0, 1, 2, 6, 11, 12, 14, 15, 18, 34, 35, 37, 39, 40, 41, 43, 47, 51, 53, 54, 58, 59, 60, 61, 63, 68, 72, 74, 76, 78, 82, 84, 85, 86, 87, 88, 95], "infrastructur": 0, "includ": [0, 1, 4, 11, 14, 18, 24, 33, 43, 44, 47, 48, 49, 53, 54, 57, 59, 60, 61, 63, 70, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 90, 92], "complet": [0, 7, 14, 21, 43, 48, 53, 56, 59, 60, 63, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 93, 97], "system": [0, 2, 7, 33, 54, 74, 75, 76, 79, 82, 86, 95], "seamless": 0, "interact": [0, 63, 74, 75, 87, 88], "between": [0, 1, 2, 3, 11, 14, 15, 18, 21, 35, 37, 39, 40, 41, 44, 45, 47, 51, 52, 53, 54, 58, 59, 60, 61, 63, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 93], "compon": [0, 1, 2, 4, 15, 25, 40, 47, 56, 63, 76, 82, 83, 84, 86, 87], "thi": [0, 1, 2, 3, 4, 6, 7, 9, 11, 14, 15, 16, 18, 21, 23, 24, 25, 29, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97], "hybrid": 0, "enabl": [0, 4, 38, 45, 51, 52, 54, 83, 84, 94, 95, 96, 97], "boost": [0, 22, 23, 24, 25, 26, 35, 73], "provid": [0, 1, 4, 7, 11, 14, 15, 18, 23, 24, 33, 36, 38, 40, 43, 47, 50, 51, 52, 53, 54, 61, 63, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 91, 92, 96, 97], "ground": 0, "rapid": [0, 96, 97], "prototyp": 0, "after": [0, 1, 14, 18, 35, 39, 44, 48, 53, 54, 59, 60, 61, 63, 66, 72, 73, 74, 75, 78, 81, 82, 83, 84, 85, 86, 87, 88, 93, 96], "structur": [0, 7, 14, 24, 53, 59, 60, 63, 74, 75, 76, 77, 78, 82, 84, 85, 86, 87, 88, 90, 95, 97], "mai": [0, 1, 2, 3, 4, 7, 9, 11, 12, 14, 15, 18, 34, 35, 40, 41, 42, 46, 47, 48, 49, 51, 52, 53, 54, 59, 60, 62, 63, 66, 70, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 92, 95, 96, 99], "transfer": 0, "speed": [0, 45, 53, 54, 59, 60, 73, 81, 82, 86, 87, 96, 97], "high": [0, 1, 11, 18, 35, 37, 38, 40, 46, 47, 48, 50, 51, 53, 54, 63, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 96, 97], "level": [0, 1, 4, 12, 18, 38, 43, 45, 47, 53, 59, 60, 63, 72, 74, 81, 83, 87, 88, 96], "interfac": [0, 14, 16, 18, 41, 51, 54, 58, 74, 80, 83, 87], "remain": [0, 2, 11, 14, 38, 53, 54, 59, 60, 74, 75, 78, 82, 85, 86, 87], "facilit": [0, 97], "further": [0, 1, 4, 7, 15, 48, 63, 72, 77, 81, 82, 85, 86, 87, 88, 91, 96], "reus": [0, 94], "both": [0, 2, 18, 35, 52, 53, 59, 60, 63, 70, 72, 73, 74, 78, 82, 84, 85, 86, 87], "within": [0, 1, 2, 4, 7, 14, 37, 47, 50, 51, 52, 53, 58, 59, 60, 63, 66, 72, 74, 79, 81, 82, 83, 84, 86, 87, 88, 90, 97], "third": [0, 1, 9, 52, 73], "parti": [0, 9], "fund": [0, 94], "wellcom": [0, 90], "trust": [0, 47, 50, 52, 74, 78], "led": 0, "dr": [0, 53, 59, 60, 95], "gwyndaf": [0, 83, 97, 98], "evan": [0, 11, 18, 69, 83, 95, 97, 98], "nichola": 0, "sauter": [0, 2, 11, 48, 53, 59, 60, 64, 95, 97], "support": [0, 4, 7, 11, 43, 44, 45, 51, 52, 53, 55, 59, 60, 70, 71, 79, 90], "institut": [0, 35, 90], "health": [0, 90], "gener": [0, 1, 3, 4, 11, 12, 18, 24, 25, 29, 33, 35, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 60, 62, 63, 66, 67, 68, 72, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94, 96, 97], "medic": [0, 90], "scienc": [0, 33, 79, 82, 90, 95], "grant": [0, 90], "r01": [0, 90], "gm117126": [0, 90], "new": [0, 1, 2, 7, 9, 14, 15, 16, 23, 26, 48, 53, 59, 60, 63, 71, 73, 74, 75, 77, 78, 81, 82, 83, 84, 86, 87, 90, 91, 94, 95, 97], "comput": [0, 1, 2, 11, 18, 31, 39, 41, 44, 47, 51, 54, 58, 64, 67, 76, 79, 82, 84, 94, 95, 96], "method": [0, 1, 2, 7, 11, 14, 15, 16, 18, 25, 26, 29, 40, 41, 43, 47, 49, 51, 53, 54, 58, 59, 60, 63, 64, 66, 69, 72, 73, 74, 78, 82, 83, 84, 86, 87, 95, 96], "challeng": [0, 73, 74, 77, 78, 87, 95, 97], "work": [0, 2, 4, 7, 9, 11, 14, 21, 25, 33, 53, 54, 59, 60, 63, 73, 74, 76, 77, 78, 79, 81, 83, 84, 86, 87, 88, 90, 93, 94, 97], "lbnl": [0, 90], "perform": [0, 2, 6, 9, 11, 14, 15, 18, 37, 40, 41, 43, 44, 53, 54, 56, 59, 60, 63, 68, 72, 73, 74, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 96], "under": [0, 7, 15, 47, 48, 82, 83, 86, 87, 90], "depart": [0, 90, 94], "energi": [0, 35, 90], "contract": [0, 90, 92], "de": [0, 90, 95], "ac02": [0, 90], "05ch11231": [0, 90], "grate": 0, "all": [0, 1, 2, 3, 4, 7, 11, 14, 15, 18, 23, 24, 25, 26, 33, 35, 38, 40, 44, 45, 47, 48, 49, 51, 52, 53, 54, 59, 60, 62, 63, 64, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 92, 96], "those": [0, 7, 9, 14, 33, 40, 49, 53, 59, 60, 66, 70, 73, 74, 76, 77, 82, 83, 84, 86, 87, 88], "have": [0, 1, 2, 4, 7, 18, 25, 35, 36, 40, 42, 44, 47, 52, 53, 54, 59, 60, 63, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 93, 96, 97], "contributor": [0, 92], "aaron": 0, "brewster": [0, 95], "ammaar": 0, "saeed": 0, "asmit": 0, "bhowmick": 0, "benjamin": 0, "william": [0, 95], "billi": 0, "poon": [0, 53, 59, 60], "daniel": 0, "palei": 0, "tchon": 0, "david": [0, 97, 98], "waterman": [0, 11, 73, 75, 95, 97, 98], "derek": 0, "mendez": 0, "graem": [0, 97, 98], "winter": [0, 11, 18, 40, 79, 84, 95, 97, 98], "huw": 0, "jenkin": 0, "ian": 0, "ree": 0, "iri": 0, "young": [0, 95], "jame": [0, 83, 98], "beilsten": [0, 84, 95], "edmand": [0, 84, 95], "parkhurst": [0, 11, 75, 95, 98], "johan": 0, "hattn": [0, 95], "katrin": 0, "leinweb": 0, "kevin": 0, "dalton": 0, "lee": 0, "o": [0, 2, 4, 22, 73, 75, 79, 83, 91, 95], "riordan": [0, 95], "lui": [0, 98], "fuent": [0, 95, 98], "montero": [0, 95, 98], "marcin": 0, "wojdyr": 0, "marku": 0, "gerstel": [0, 95], "nathaniel": 0, "echol": [0, 95], "devenish": [0, 95], "nigel": 0, "moriarti": [0, 2], "oliv": 0, "zeldin": [0, 95], "richard": 0, "gildea": [0, 11, 18, 40, 72, 84, 95], "robert": 0, "bolotovski": [0, 11], "stef": 0, "smeet": 0, "takanori": 0, "nakan": 0, "tara": 0, "michel": [0, 95], "clark": [0, 95], "tarik": 0, "drevon": 0, "In": [0, 1, 2, 4, 7, 11, 14, 15, 21, 23, 40, 47, 52, 53, 54, 59, 60, 61, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 93, 97], "addit": [0, 1, 7, 14, 15, 26, 33, 41, 43, 44, 46, 47, 49, 53, 54, 59, 60, 63, 75, 81, 82, 84, 86, 87, 88, 94, 96], "guidanc": 0, "gain": [0, 23, 26, 33, 42, 45, 47, 51, 52, 73, 74, 75, 78, 82, 86], "through": [0, 1, 14, 23, 35, 63, 73, 74, 76, 77, 78, 82, 83, 84, 86, 87, 88, 97], "numer": [0, 1, 14, 18], "intellectu": 0, "discuss": [0, 76, 82, 85, 86, 87, 97], "follow": [0, 1, 2, 3, 6, 7, 9, 14, 18, 40, 43, 46, 48, 52, 53, 54, 64, 66, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 96, 97], "alun": [0, 97], "ashton": [0, 95, 97], "gleb": 0, "bourenkov": 0, "gerard": [0, 97], "bricogn": [0, 11, 97], "phil": [0, 3, 4, 6, 7, 11, 12, 14, 15, 18, 21, 23, 25, 29, 31, 33, 51, 54, 63, 74, 75, 83, 98], "andrew": [0, 40, 84, 97, 98], "lesli": [0, 54, 97, 98], "garib": [0, 98], "murshudov": [0, 95, 98], "jim": [0, 97], "pflugrath": [0, 97], "harri": [0, 98], "powel": [0, 98], "jon": 0, "schuermann": 0, "matthew": 0, "webber": 0, "g": [0, 1, 2, 3, 6, 7, 11, 14, 15, 18, 30, 40, 47, 49, 52, 53, 54, 59, 60, 61, 63, 64, 66, 69, 72, 73, 76, 77, 79, 82, 83, 84, 85, 86, 88, 91, 95], "1987": 0, "proceed": [0, 11, 74, 76, 77], "daresburi": 0, "studi": [0, 95], "weekend": 0, "pp": 0, "120": [0, 1, 45, 46, 47, 50, 51, 78, 82, 84, 86, 87, 96], "145": [0, 73, 76, 81, 82, 84, 86], "kabsch": [0, 97], "w": [0, 2, 11, 14, 15, 95], "2010": [0, 53, 59, 60, 79], "acta": [0, 2, 11, 18, 40, 69, 72, 75, 79, 84, 95], "cryst": [0, 11, 18, 40, 64, 69, 72, 77, 79, 84], "d66": 0, "125": [0, 73, 76, 78, 81, 82, 84, 85, 86], "132": [0, 76, 78, 81, 82, 84, 85, 86], "A": [0, 1, 2, 3, 4, 6, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 40, 43, 44, 47, 49, 52, 53, 54, 59, 60, 61, 63, 70, 72, 73, 74, 75, 78, 80, 81, 82, 84, 85, 86, 88, 92, 93, 94, 95, 96, 97], "h": [0, 2, 35, 37, 53, 61, 73, 74, 75, 77, 78, 82, 83, 84, 85, 86, 95], "r": [0, 1, 2, 6, 11, 15, 18, 35, 40, 43, 47, 50, 51, 63, 69, 72, 73, 76, 77, 84, 85, 93, 95], "2007": 0, "evolv": 0, "macromolecular": [0, 1, 70, 94, 95], "crystallographi": [0, 1, 2, 73, 74, 90, 94, 96, 97], "245": [0, 82, 85, 86], "41": [0, 73, 75, 78, 79, 81, 82, 83, 84, 86, 88], "51": [0, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86], "isbn": 0, "978": [0, 82, 84, 85, 86], "4020": 0, "6314": 0, "5": [0, 1, 2, 3, 6, 11, 21, 33, 40, 41, 44, 45, 46, 47, 48, 50, 51, 53, 54, 58, 59, 60, 63, 66, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 95, 97, 99], "gross": [0, 2, 11, 95], "kunstlev": [0, 2, 11, 95], "n": [0, 2, 3, 4, 6, 11, 18, 21, 22, 33, 35, 54, 58, 73, 82, 84, 85, 86, 87, 95], "k": [0, 2, 11, 18, 37, 40, 53, 61, 75, 78, 82, 84, 85, 86, 95], "adam": [0, 2, 11, 95], "p": [0, 2, 3, 11, 18, 40, 48, 69, 70, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96], "d": [0, 1, 2, 4, 11, 18, 22, 23, 25, 29, 30, 31, 40, 44, 46, 47, 50, 51, 53, 58, 63, 73, 74, 75, 78, 79, 81, 82, 83, 84, 86, 95, 97], "2002": [0, 2, 82], "journal": [0, 14, 19, 53, 59, 60], "appli": [0, 1, 3, 4, 11, 14, 15, 18, 21, 24, 46, 52, 53, 54, 59, 60, 61, 63, 72, 73, 75, 76, 78, 82, 83, 84, 86, 87, 88], "35": [0, 2, 3, 73, 74, 77, 81, 82, 83, 84, 85, 86], "126": [0, 2, 73, 78, 82, 84, 86], "136": [0, 2, 73, 78, 82, 84, 85, 86, 96], "document": [1, 54, 63, 79, 92], "aim": [1, 76, 88], "variou": [1, 2, 11, 14, 43, 44, 52, 53, 60, 62, 63, 72, 74, 75, 82, 86, 87, 91, 94], "depth": [1, 4, 23], "encourag": 1, "read": [1, 2, 3, 4, 5, 23, 24, 25, 26, 29, 33, 40, 55, 73, 74, 78, 82, 83, 84, 85, 86, 87], "symmetri": [1, 11, 15, 19, 32, 37, 40, 53, 59, 60, 63, 68, 70, 71, 72, 75, 76, 80, 81, 83, 95], "section": [1, 3, 74, 76, 77, 82, 86, 87], "tutori": [1, 7, 8, 74, 75, 76, 77, 78, 79, 81, 83, 84, 93], "quick": [1, 49, 63, 74, 81, 83], "overview": 1, "For": [1, 2, 7, 9, 11, 14, 15, 38, 41, 42, 44, 47, 48, 51, 52, 53, 54, 55, 58, 59, 60, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 96], "most": [1, 2, 4, 7, 11, 15, 18, 33, 35, 38, 53, 54, 71, 73, 74, 76, 79, 82, 83, 84, 86, 87, 88, 96, 97], "like": [1, 2, 3, 4, 7, 11, 14, 26, 54, 73, 74, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88], "suffici": [1, 7, 40, 78, 83, 85, 87], "onli": [1, 2, 6, 7, 11, 14, 18, 26, 33, 36, 38, 44, 45, 46, 47, 53, 54, 55, 56, 59, 60, 63, 69, 70, 72, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 93, 96], "below": [1, 3, 11, 35, 38, 40, 44, 47, 52, 53, 54, 59, 60, 63, 72, 73, 78, 82, 83, 84, 86, 87, 88], "return": [1, 4, 6, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 49, 53, 59, 60, 74, 83, 87], "rest": [1, 11, 40, 74, 84], "help": [1, 4, 6, 18, 21, 24, 29, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 78, 81, 82, 86, 87, 88, 96, 97], "need": [1, 2, 4, 9, 14, 16, 21, 24, 25, 40, 41, 47, 51, 54, 58, 60, 63, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 91, 97], "As": [1, 2, 4, 7, 35, 40, 47, 74, 78, 79, 81, 82, 83, 84, 85, 86, 87, 96, 97], "remind": [1, 81], "how": [1, 4, 6, 11, 14, 15, 47, 53, 57, 59, 60, 62, 73, 74, 76, 78, 81, 82, 83, 84, 86, 87, 88, 95, 96, 97], "run": [1, 4, 6, 7, 9, 14, 15, 16, 18, 38, 40, 43, 44, 48, 53, 55, 59, 60, 63, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 96], "routin": [1, 63, 88], "integr": [1, 3, 15, 19, 30, 32, 35, 40, 41, 44, 46, 47, 50, 51, 56, 60, 61, 62, 63, 66, 69, 70, 71, 72, 76, 77, 78, 79, 81, 83, 84, 89, 93, 94, 95, 97, 98], "obtain": [1, 2, 4, 9, 14, 15, 40, 53, 59, 60, 75, 77, 78, 82, 84, 95], "merg": [1, 33, 43, 44, 53, 55, 59, 60, 63, 72, 73, 74, 76, 83, 84, 87, 88], "mtz": [1, 33, 40, 43, 44, 61, 63, 72, 73, 74, 75, 76, 79, 81, 83, 84, 85, 88, 93], "file": [1, 4, 7, 8, 21, 23, 24, 25, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 96], "refl": [1, 3, 6, 35, 37, 38, 40, 41, 43, 44, 46, 47, 51, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 93, 96], "expt": [1, 3, 6, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88, 93, 96], "symmetr": [1, 40, 69, 73, 76, 82, 84, 85, 86, 88], "also": [1, 2, 3, 4, 7, 9, 11, 14, 15, 18, 21, 22, 23, 25, 26, 33, 37, 44, 48, 53, 59, 60, 61, 63, 66, 68, 70, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 91, 96], "advis": [1, 92], "familiaris": 1, "themselv": [1, 23], "standard": [1, 2, 15, 21, 23, 25, 35, 40, 47, 54, 63, 70, 72, 74, 75, 76, 79, 81, 83, 84, 85, 88, 96], "program": [1, 3, 7, 8, 34, 35, 36, 37, 40, 41, 42, 44, 46, 47, 50, 51, 52, 53, 54, 55, 58, 60, 61, 62, 63, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 96, 99], "output": [1, 3, 6, 7, 14, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 96], "contain": [1, 3, 4, 9, 11, 14, 15, 16, 18, 24, 34, 38, 40, 44, 46, 47, 52, 53, 54, 59, 60, 61, 62, 63, 70, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 96, 98], "inform": [1, 2, 7, 9, 14, 15, 18, 23, 26, 41, 44, 47, 48, 52, 53, 59, 60, 70, 72, 73, 76, 77, 82, 83, 84, 85, 86, 87, 88, 90], "html": [1, 40, 43, 48, 62, 63, 69, 73, 74, 76, 84, 85, 96], "report": [1, 12, 14, 40, 42, 48, 54, 63, 67, 69, 70, 71, 74, 76, 78, 84, 85, 87, 90, 96], "plot": [1, 12, 15, 31, 57, 59, 62, 63, 67, 68, 70, 73, 74, 76, 81, 82, 83, 84, 85, 86, 87, 96], "relat": [1, 2, 14, 37, 39, 53, 59, 60, 73, 76, 77, 78, 82, 83, 84, 86, 87], "statist": [1, 14, 42, 43, 44, 47, 48, 53, 59, 60, 63, 65, 67, 72, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 96], "These": [1, 2, 3, 4, 14, 15, 33, 38, 48, 53, 60, 63, 74, 75, 76, 78, 80, 82, 83, 84, 86, 87, 96], "cover": [1, 47, 54, 76, 82, 86, 87], "commonli": [1, 14, 74, 76, 77, 87], "exampl": [1, 2, 3, 4, 6, 7, 8, 21, 23, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 96], "valu": [1, 3, 7, 10, 11, 14, 15, 18, 33, 35, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 96], "cut": [1, 44, 53, 59, 60, 63, 74, 97], "back": [1, 54, 63, 73, 74, 76, 81, 83, 87], "inspect": [1, 4, 59, 70, 76, 78, 81, 82, 83, 85, 86], "v": [1, 2, 7, 43, 53, 59, 60, 72, 73, 80, 82, 86, 87, 95, 96, 97], "batch": [1, 33, 44, 52, 63, 72, 73, 76, 79, 84, 88, 96], "often": [1, 2, 4, 11, 35, 53, 74], "case": [1, 2, 4, 7, 11, 14, 15, 21, 23, 25, 35, 40, 47, 52, 53, 54, 59, 60, 61, 63, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 93, 96, 97], "suitabl": [1, 15, 44, 53, 59, 60, 63, 72, 74, 75, 82, 85, 86, 87, 88, 96], "perhap": [1, 44, 78], "due": [1, 14, 15, 63, 72, 73, 82, 84, 86, 87, 88], "radiat": [1, 72, 73, 74, 78, 81, 82, 84, 86, 87, 95], "damag": [1, 72, 73, 74, 78, 81, 82, 84, 86, 87, 92], "nonisomorph": 1, "can": [1, 2, 3, 4, 7, 9, 11, 14, 16, 21, 23, 24, 33, 35, 37, 38, 40, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 59, 60, 61, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 95, 96, 97], "singl": [1, 2, 4, 11, 12, 14, 15, 16, 18, 24, 25, 29, 38, 40, 41, 45, 47, 48, 51, 52, 53, 54, 55, 58, 59, 60, 63, 66, 69, 70, 72, 74, 76, 77, 81, 82, 83, 85, 86, 87, 88, 93, 95], "sweep": [1, 15, 63, 72, 76, 79, 82, 83, 85, 86, 88, 89, 96], "multipl": [1, 3, 4, 11, 16, 33, 34, 36, 38, 39, 43, 45, 47, 50, 51, 52, 53, 54, 59, 60, 63, 64, 66, 68, 69, 70, 72, 73, 74, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 93, 96, 97, 98], "multi": [1, 2, 15, 16, 18, 33, 38, 40, 42, 44, 45, 48, 51, 52, 53, 54, 59, 60, 63, 72, 80, 82, 86, 87, 95], "crystal": [1, 2, 3, 4, 6, 11, 15, 18, 24, 27, 30, 32, 33, 34, 38, 40, 44, 47, 48, 52, 53, 54, 57, 59, 60, 62, 63, 65, 66, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 93, 95, 96], "d_min": [1, 11, 18, 33, 37, 38, 40, 41, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 63, 64, 69, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88], "0": [1, 2, 3, 4, 6, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 29, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 93, 96], "resolut": [1, 11, 17, 18, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 60, 63, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 95], "cutoff": [1, 11, 18, 38, 40, 43, 44, 53, 54, 59, 60, 63, 72, 73, 76, 82, 84, 86, 87], "angstrom": [1, 11, 41, 47, 50, 51, 53, 54, 58, 72, 77, 78, 81, 82, 83, 84, 86, 87], "exclude_imag": [1, 47, 54, 63, 69, 72, 73, 84], "100": [1, 18, 40, 41, 45, 47, 50, 51, 53, 54, 55, 58, 59, 60, 63, 72, 73, 76, 79, 81, 82, 84, 85, 86, 87, 88], "remov": [1, 4, 35, 40, 50, 53, 54, 59, 60, 63, 66, 70, 72, 73, 74, 76, 82, 83, 84, 85, 86, 87, 93], "imag": [1, 2, 3, 4, 6, 11, 12, 14, 15, 16, 23, 24, 26, 29, 30, 31, 33, 38, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 97], "command": [1, 4, 7, 9, 32, 33, 48, 52, 63, 71, 73, 74, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 96], "exclud": [1, 14, 15, 33, 44, 47, 49, 53, 54, 59, 60, 63, 66, 69, 72, 74, 76, 77, 82, 83, 84, 86], "rang": [1, 15, 16, 26, 47, 50, 51, 52, 53, 54, 59, 60, 63, 64, 66, 69, 72, 74, 79, 82, 83, 84, 85, 86, 87], "one": [1, 2, 6, 11, 14, 15, 16, 24, 36, 38, 40, 44, 47, 53, 54, 59, 60, 61, 63, 69, 70, 72, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 93, 96], "must": [1, 2, 4, 7, 14, 15, 33, 36, 52, 53, 54, 59, 60, 63, 64, 66, 74, 75, 76, 82, 84, 86, 87, 92], "id": [1, 3, 16, 33, 44, 46, 52, 53, 59, 60, 63, 66, 67, 72, 73, 74, 78, 82, 83, 84, 85, 86, 95], "exclus": [1, 47, 51, 54, 63, 66, 69, 72, 76, 84], "should": [1, 2, 4, 7, 14, 15, 18, 25, 38, 44, 50, 54, 63, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 93], "syntax": [1, 74], "b": [1, 2, 14, 15, 18, 21, 22, 40, 53, 59, 60, 61, 63, 72, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 95], "where": [1, 2, 4, 7, 11, 14, 15, 18, 21, 23, 24, 25, 26, 29, 35, 38, 43, 44, 47, 49, 52, 53, 54, 55, 59, 60, 63, 66, 69, 72, 74, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 91], "number": [1, 2, 4, 7, 11, 12, 14, 15, 16, 17, 18, 33, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 95, 96], "start": [1, 2, 8, 15, 18, 23, 25, 33, 47, 48, 53, 54, 59, 60, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 98], "initi": [1, 11, 12, 14, 15, 21, 23, 25, 29, 53, 54, 59, 60, 63, 72, 74, 75, 77, 80, 82, 83, 86, 87, 97], "final": [1, 12, 14, 59, 63, 70, 72, 73, 74, 76, 81, 82, 83, 84, 86, 87, 88, 90], "exclude_dataset": [1, 63, 76], "10": [1, 11, 14, 15, 40, 41, 42, 43, 47, 51, 53, 54, 55, 56, 58, 59, 60, 63, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 88, 95, 96], "50": [1, 16, 40, 41, 43, 50, 51, 53, 54, 55, 58, 72, 73, 78, 81, 82, 83, 84, 85, 86], "79": [1, 53, 73, 76, 79, 81, 82, 83, 84, 85, 86], "whole": [1, 4, 47, 50, 51, 53, 59, 60, 63, 72, 76, 78, 81, 82, 83, 86, 87], "anomal": [1, 33, 43, 63, 72, 74, 76, 79, 82, 84, 86, 87, 88], "dure": [1, 2, 4, 14, 15, 41, 48, 49, 50, 51, 53, 54, 58, 59, 60, 63, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 96], "true": [1, 2, 4, 6, 11, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 77, 81, 82, 83, 84, 86, 87, 93], "fals": [1, 4, 6, 11, 14, 15, 16, 17, 22, 23, 24, 26, 31, 33, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 67, 68, 70, 72, 73, 74, 75, 82, 83], "determin": [1, 2, 3, 4, 11, 14, 15, 18, 22, 38, 40, 44, 47, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63, 69, 72, 75, 76, 78, 82, 83, 84, 86, 87, 95], "whether": [1, 4, 14, 15, 18, 33, 38, 47, 51, 53, 54, 57, 59, 60, 62, 63, 65, 69, 72, 82, 83, 86, 87, 92], "pair": [1, 2, 14, 18, 23, 34, 40, 43, 48, 53, 55, 63, 66, 72, 73, 75, 76, 78, 82, 84, 86], "combin": [1, 2, 11, 15, 18, 38, 40, 44, 46, 47, 51, 53, 54, 59, 60, 63, 70, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 88, 93], "outlier": [1, 14, 15, 40, 53, 54, 59, 60, 63, 72, 73, 76, 81, 82, 83, 84, 85, 86, 87], "reject": [1, 14, 15, 43, 46, 47, 50, 51, 53, 54, 59, 60, 63, 72, 73, 81, 82, 83, 84, 85, 86, 87], "By": [1, 2, 7, 34, 52, 53, 55, 59, 60, 61, 63, 66, 68, 70, 74, 76, 81, 82, 83, 84, 85, 86, 87, 88], "default": [1, 7, 11, 14, 15, 18, 24, 31, 33, 34, 35, 43, 44, 45, 48, 52, 53, 55, 59, 60, 61, 63, 64, 66, 68, 70, 72, 74, 75, 78, 79, 81, 82, 85, 86, 87, 88, 96], "some": [1, 2, 3, 4, 6, 7, 9, 14, 25, 33, 41, 53, 59, 60, 63, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 93, 94], "signal": [1, 74, 95], "strongli": [1, 63, 84], "strength": [1, 74, 76, 88, 95], "enhanc": 1, "when": [1, 2, 9, 11, 14, 15, 18, 25, 26, 33, 35, 38, 44, 47, 50, 51, 52, 53, 54, 59, 60, 63, 66, 69, 70, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84, 86, 87, 93, 96], "absorpt": [1, 15, 35, 54, 63, 72, 82, 84, 86, 87, 88], "correct": [1, 2, 3, 4, 15, 18, 23, 30, 35, 44, 47, 50, 51, 52, 54, 63, 65, 72, 74, 75, 76, 77, 80, 82, 83, 84, 86, 87, 88], "physic": [1, 2, 4, 15, 35, 63, 72, 82, 84, 86, 87, 88, 95, 97], "rel": [1, 11, 15, 18, 47, 53, 57, 62, 63, 72, 76, 81, 82, 83, 84, 86, 87, 88], "incom": [1, 82, 86, 87], "outgo": 1, "scatter": [1, 2, 47, 53, 59, 60, 63, 74, 82, 86, 87, 95], "vector": [1, 2, 3, 6, 11, 14, 18, 21, 23, 34, 35, 40, 52, 53, 77, 82, 83, 84, 86, 87], "account": [1, 2, 35, 47, 50, 51, 82, 84, 86, 87, 88], "differ": [1, 2, 4, 6, 14, 18, 33, 38, 39, 40, 42, 50, 53, 54, 63, 69, 72, 74, 75, 76, 77, 81, 82, 83, 84, 86, 87, 88, 97], "path": [1, 4, 7, 26, 34, 35, 36, 37, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 67, 68, 69, 72, 74, 81, 83, 84, 91], "rather": [1, 2, 7, 63, 74, 75, 76, 78, 81, 82, 83, 86, 87, 88, 97], "than": [1, 2, 7, 11, 18, 21, 38, 41, 46, 47, 51, 53, 54, 56, 58, 59, 60, 63, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 93, 96, 97], "absolut": [1, 18, 30, 44, 53, 59, 60, 72, 83, 84], "beam": [1, 2, 3, 4, 6, 11, 22, 23, 24, 26, 27, 32, 33, 34, 35, 37, 38, 41, 47, 51, 52, 53, 54, 57, 58, 59, 60, 64, 68, 74, 75, 76, 77, 81, 82, 83, 84, 86, 87, 93, 94, 95, 97], "constrain": [1, 11, 53, 59, 60, 63, 82, 86, 87], "constraint": [1, 11, 14, 53, 59, 60, 70, 74, 82, 83, 85, 86, 87, 88], "parameteris": [1, 2, 14, 15, 53, 59, 60, 73, 74, 75, 81, 82, 83, 86, 96], "chang": [1, 2, 9, 18, 24, 33, 39, 41, 51, 53, 54, 58, 60, 61, 63, 66, 72, 73, 74, 75, 76, 77, 81, 82, 85, 86, 87, 95, 96, 97], "absorption_level": [1, 63, 72, 88], "low": [1, 11, 37, 47, 50, 51, 53, 63, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88], "medium": [1, 63, 72, 88], "give": [1, 2, 7, 14, 18, 40, 45, 46, 53, 59, 60, 61, 66, 69, 72, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 96], "around": [1, 18, 34, 47, 50, 51, 53, 59, 60, 74, 76, 78, 83, 87, 97], "25": [1, 11, 43, 47, 53, 63, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86], "depend": [1, 2, 14, 35, 44, 48, 59, 62, 63, 76, 81, 82, 86, 87, 88], "see": [1, 2, 7, 9, 11, 18, 47, 48, 53, 54, 59, 60, 63, 72, 73, 74, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 91, 96], "extent": [1, 72, 82, 84, 86], "check": [1, 4, 7, 9, 16, 18, 24, 26, 33, 37, 38, 53, 63, 69, 74, 76, 79, 81, 82, 83, 84, 86, 93], "conveni": [1, 2, 47, 54, 63, 69, 72], "invok": 1, "export": [1, 18, 30, 33, 45, 63, 71, 74, 75, 81, 83, 84, 89], "unmerg": [1, 43, 44, 72, 73, 74, 79, 83, 84, 87, 98], "you": [1, 4, 7, 9, 23, 40, 48, 54, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 91, 97], "want": [1, 48, 73, 74, 77, 78, 81, 82, 83, 84, 86, 87, 88], "individu": [1, 9, 40, 44, 63, 65, 68, 73, 74, 75, 76, 80, 81, 82, 84, 85, 86, 88, 93], "more": [1, 3, 4, 7, 9, 11, 18, 33, 36, 38, 46, 47, 48, 53, 54, 59, 60, 63, 66, 69, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 93, 96, 97], "extens": [1, 4, 32, 41, 45, 47, 51, 54, 58, 59, 70, 74, 75, 90, 94], "merged_mtz": [1, 63], "creat": [1, 4, 7, 9, 14, 15, 16, 22, 23, 24, 26, 28, 38, 48, 50, 53, 54, 59, 60, 63, 70, 74, 75, 76, 82, 83, 86, 87, 88, 96], "unmerged_mtz": [1, 63], "format": [1, 2, 3, 18, 23, 24, 26, 30, 33, 44, 45, 47, 51, 52, 54, 55, 57, 63, 69, 72, 73, 74, 75, 79, 81, 82, 83, 85, 86, 87, 88, 96, 98], "One": [1, 38, 74, 75, 76, 78, 83], "choic": [1, 2, 15, 18, 34, 38, 39, 40, 41, 43, 44, 45, 47, 51, 52, 53, 54, 57, 58, 59, 60, 62, 63, 68, 69, 72, 73, 76, 77, 82, 84, 86, 87, 88], "made": [1, 2, 15, 23, 33, 35, 38, 40, 53, 59, 60, 74, 82, 83, 84, 86, 87, 88], "automat": [1, 9, 11, 18, 33, 40, 48, 53, 59, 60, 66, 72, 74, 75, 79, 82, 83, 84, 85, 86, 87, 88, 95], "summat": [1, 35, 40, 54, 63, 74, 81, 82, 83, 84, 85, 86], "profil": [1, 3, 12, 24, 27, 31, 32, 35, 40, 41, 44, 47, 51, 54, 58, 63, 72, 74, 77, 78, 81, 82, 83, 84, 85, 86, 87, 94], "seem": [1, 44, 74, 81, 83], "best": [1, 2, 4, 11, 18, 40, 44, 45, 53, 59, 60, 63, 70, 72, 73, 74, 76, 81, 82, 83, 84, 85, 86, 87, 95], "estim": [1, 11, 18, 40, 42, 43, 48, 49, 53, 54, 59, 60, 63, 67, 70, 72, 76, 79, 82, 84, 86, 87, 88], "two": [1, 2, 3, 4, 15, 18, 23, 35, 39, 52, 53, 59, 60, 64, 66, 73, 74, 76, 77, 78, 82, 86, 87, 88], "result": [1, 2, 11, 14, 15, 18, 35, 37, 38, 39, 40, 42, 43, 44, 51, 53, 57, 59, 60, 63, 64, 66, 67, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 88, 93, 96], "tabl": [1, 2, 3, 4, 14, 15, 16, 33, 35, 38, 46, 47, 54, 57, 59, 60, 63, 65, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87], "log": [1, 11, 14, 18, 33, 35, 37, 38, 40, 41, 43, 44, 47, 50, 51, 52, 53, 54, 58, 59, 60, 61, 63, 64, 69, 70, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 96], "score": [1, 11, 18, 40, 63, 69, 73, 76, 77, 79, 82, 84, 85, 86, 87, 88], "set": [1, 2, 3, 6, 7, 11, 12, 14, 15, 16, 18, 26, 29, 30, 33, 34, 37, 38, 40, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 68, 69, 72, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97], "imid": [1, 15, 63, 82, 84, 86], "rpim": [1, 74, 76, 79, 82, 84, 86, 87, 88], "cc1": [1, 18, 73, 82, 84, 85, 86], "specifi": [1, 2, 11, 14, 15, 33, 34, 36, 38, 43, 46, 47, 50, 51, 52, 53, 54, 59, 60, 61, 63, 64, 66, 68, 69, 70, 72, 74, 81, 83, 84, 91, 96], "coupl": [1, 83], "intensity_choic": [1, 33, 63], "sum": [1, 3, 6, 18, 29, 40, 44, 51, 54, 55, 63, 74, 81, 82, 83, 84, 85, 86, 87], "700": [1, 79, 82, 86], "crossov": [1, 81], "adjust": [1, 73, 74, 75, 82, 84, 86, 87, 88], "uncertainti": [1, 53, 75, 82, 84, 86, 87, 88], "error": [1, 9, 14, 15, 18, 35, 44, 52, 53, 59, 60, 63, 70, 72, 74, 75, 82, 84, 86, 87, 93], "sigma": [1, 18, 41, 51, 52, 53, 54, 58, 59, 60, 63, 69, 72, 74, 75, 76, 79, 82, 84, 85, 86, 87, 88], "systemat": [1, 40, 68, 69, 72, 77, 78, 79, 81, 82, 84, 86, 87], "suffient": [], "refin": [1, 3, 4, 11, 15, 18, 19, 32, 38, 41, 44, 46, 51, 53, 54, 57, 58, 60, 62, 63, 70, 71, 72, 76, 77, 78, 79, 80, 84, 89, 95, 96, 98], "while": [1, 2, 9, 14, 38, 53, 66, 74, 75, 81, 82, 83, 84, 86, 87, 88], "an": [1, 2, 3, 4, 7, 9, 11, 14, 15, 16, 18, 21, 23, 24, 25, 26, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90, 93, 95, 96, 97], "import": [1, 2, 3, 4, 6, 7, 24, 32, 33, 42, 47, 53, 64, 67, 71, 74, 76, 77, 81, 83, 89, 96], "improv": [1, 63, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96], "qualiti": [1, 45, 48, 49, 72, 73, 74, 78, 81, 82, 84, 85, 86, 87, 95, 97], "typic": [1, 2, 7, 11, 35, 47, 48, 53, 54, 59, 60, 63, 66, 69, 72, 74, 78, 81, 82, 86, 87, 88], "poorer": [1, 84], "paramet": [1, 2, 4, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 96], "becom": [1, 2, 14, 63, 76, 78, 83], "overinfl": 1, "If": [1, 4, 7, 9, 11, 14, 15, 16, 18, 22, 24, 33, 34, 35, 38, 40, 43, 44, 46, 47, 48, 50, 52, 53, 54, 59, 60, 63, 64, 66, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 96], "so": [1, 2, 4, 11, 14, 16, 24, 26, 35, 40, 44, 53, 59, 60, 63, 70, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88], "error_model": [1, 15, 63], "none": [1, 4, 6, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 78, 83, 84, 96], "don": [1, 33, 35, 38, 71, 81, 83], "t": [1, 2, 15, 22, 23, 25, 26, 29, 33, 35, 38, 40, 71, 73, 74, 75, 76, 81, 82, 83, 86, 87, 95], "basic": [1, 2, 7, 14, 76, 82, 84, 86, 87], "Will": 1, "keep": [1, 14, 38, 43, 44, 53, 59, 60, 66, 70, 72, 73, 76, 81, 87, 97], "pre": [1, 12, 82, 86, 87], "02": [1, 14, 40, 41, 51, 53, 54, 58, 59, 60, 74, 76, 79, 81, 82, 84, 85, 86, 95, 96], "first": [1, 4, 12, 15, 18, 23, 25, 26, 34, 38, 40, 45, 46, 52, 53, 54, 56, 59, 60, 68, 70, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 93, 95, 97], "assumpt": [1, 23, 35, 76, 78, 83], "similar": [1, 4, 15, 18, 40, 47, 52, 53, 74, 76, 77, 82, 83, 84, 85, 86, 87, 96], "affect": [1, 42, 53, 59, 60, 72, 74, 75, 78, 82, 83, 84, 86, 87], "approach": [1, 11, 76, 95], "optim": [1, 18, 74, 82, 84, 86, 87, 95], "altern": [1, 4, 7, 11, 52, 53, 59, 60, 61, 63, 66, 77, 79, 82], "separ": [1, 14, 15, 38, 40, 43, 47, 53, 54, 59, 60, 63, 70, 72, 73, 74, 75, 81, 82, 83, 85, 86, 93], "group": [1, 2, 4, 11, 15, 18, 22, 23, 33, 37, 40, 43, 45, 46, 47, 50, 51, 52, 53, 59, 60, 61, 63, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96], "chosen": [1, 2, 4, 11, 14, 15, 18, 35, 38, 43, 53, 57, 59, 60, 62, 63, 74, 76, 77, 82, 84, 85, 86, 87], "error_model_group": [1, 63], "e": [1, 2, 3, 4, 6, 7, 11, 14, 15, 18, 25, 35, 40, 43, 47, 49, 52, 53, 54, 59, 60, 61, 63, 64, 66, 69, 72, 73, 74, 76, 77, 82, 83, 84, 85, 86, 87, 88, 91, 93, 95], "partial": [1, 3, 18, 40, 44, 46, 53, 59, 60, 63, 69, 70, 72, 74, 77, 81, 82, 84, 85, 86, 95], "abov": [1, 4, 9, 37, 38, 40, 41, 44, 47, 51, 54, 58, 63, 69, 70, 73, 74, 76, 82, 84, 86, 87, 88, 92], "threshold": [1, 15, 16, 31, 37, 38, 40, 41, 44, 45, 47, 51, 54, 58, 69, 70, 72, 73, 74, 75, 78, 82, 84, 86, 87], "partiality_threshold": [1, 33, 40, 44, 69, 70], "95": [1, 37, 40, 45, 54, 63, 69, 73, 76, 81, 82, 84, 85, 86], "disregard": 1, "measur": [1, 2, 3, 11, 14, 60, 63, 72, 74, 76, 82, 83, 84, 85, 86, 87, 95], "resourc": 1, "million": 1, "slow": [1, 23, 38, 44, 47, 50, 51, 52, 63, 72, 73, 74, 75], "memori": [1, 11, 14, 26, 38, 53, 54, 63, 81, 82, 86], "There": [1, 2, 7, 9, 74, 75, 76, 77, 78, 81, 82, 83, 86, 87, 90, 97], "sever": [1, 9, 49, 76, 77, 82, 83, 84, 86, 87], "manag": [1, 12, 14, 53, 59, 60, 63, 82, 86, 98], "allow": [1, 3, 11, 14, 16, 18, 23, 24, 34, 38, 44, 46, 48, 52, 53, 59, 60, 61, 63, 73, 74, 75, 76, 77, 81, 82, 83, 86, 87, 88, 90, 93, 94, 96], "blockwis": 1, "parallel": [1, 2, 16, 24, 35, 38, 48, 81, 82, 83, 86, 87, 95, 97], "nproc": [1, 14, 16, 47, 49, 53, 54, 59, 60, 63, 64, 72, 73, 82, 83, 86], "8": [1, 2, 11, 22, 40, 44, 47, 49, 53, 63, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 95], "probabl": [1, 11, 18, 40, 41, 51, 53, 54, 58, 59, 60, 73, 76, 82, 84, 85, 86], "reason": [1, 2, 53, 59, 60, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 88], "computation": [1, 87, 97], "part": [1, 2, 14, 47, 53, 59, 60, 73, 74, 80, 81, 82, 83, 84, 86, 87, 96], "round": [1, 53, 63, 72, 73, 74, 78, 79, 82, 84, 86], "full": [1, 3, 4, 14, 21, 23, 74, 76, 81, 82, 83, 86, 87, 96], "matrix": [1, 6, 14, 18, 22, 39, 40, 44, 52, 53, 57, 59, 60, 62, 63, 70, 72, 74, 81, 82, 83, 85, 86, 88], "full_matrix": [1, 63], "turn": [1, 2, 11, 25, 53, 54, 59, 60, 63, 73, 76, 78, 81, 82, 83, 86, 87], "off": [1, 18, 53, 54, 59, 60, 63, 73, 74, 78, 82, 83, 86, 87], "factor": [1, 3, 14, 15, 35, 40, 53, 63, 64, 66, 72, 73, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88], "compromis": 1, "full_matrix_max_iter": [1, 63], "do": [1, 6, 7, 9, 11, 12, 14, 16, 21, 31, 33, 38, 41, 47, 51, 53, 54, 58, 59, 60, 63, 72, 73, 74, 75, 76, 77, 79, 82, 84, 86, 87, 88, 93, 97], "least": [1, 14, 53, 59, 60, 74, 82, 84, 86, 87], "iter": [1, 11, 14, 16, 23, 40, 41, 51, 53, 54, 58, 59, 60, 63, 64, 72, 78, 83], "reduc": [1, 2, 14, 15, 35, 40, 45, 47, 51, 53, 59, 60, 66, 72, 73, 76, 82, 83, 86, 87, 88], "reflection_select": [1, 63, 72], "auto": [1, 11, 18, 40, 44, 45, 47, 49, 51, 52, 53, 54, 59, 60, 62, 63, 64, 69, 72, 82, 83, 86, 87], "even": [1, 2, 14, 44, 74, 77, 78, 82, 83, 84, 87, 92], "veri": [1, 35, 73, 74, 76, 78, 81, 82, 83, 84, 86, 87, 88], "alwai": [1, 9, 47, 54, 77, 78, 83, 87], "get": [1, 8, 14, 16, 17, 23, 24, 25, 26, 29, 30, 33, 54, 74, 76, 81, 82, 83, 84, 86, 87], "ce2": [1, 96], "try": [1, 4, 7, 24, 33, 63, 73, 74, 76, 77, 78, 79, 81, 82, 83, 86, 96], "quasi_random": [1, 63, 72], "alongsid": [1, 73, 93], "function": [1, 2, 7, 11, 12, 14, 15, 16, 18, 26, 36, 40, 43, 53, 54, 59, 60, 63, 74, 81, 82, 83, 84, 86, 87, 94], "target": [1, 11, 14, 15, 18, 19, 53, 59, 60, 63, 70, 73, 74, 81, 82, 84, 86, 87], "ha": [1, 4, 7, 11, 14, 15, 21, 23, 25, 29, 35, 40, 53, 59, 60, 73, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 90, 93, 96, 97], "alreadi": [1, 4, 14, 16, 21, 23, 25, 26, 29, 53, 59, 60, 63, 72, 74, 76, 78, 82, 84, 86, 87, 88], "been": [1, 15, 23, 25, 29, 40, 47, 52, 53, 59, 60, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 96], "anoth": [1, 53, 61, 74, 75, 78, 82, 84, 86, 96], "datafil": [1, 79, 82, 83, 85, 86], "only_target": [1, 63], "agre": [1, 2, 76], "close": [1, 14, 24, 53, 59, 60, 66, 73, 74, 75, 77, 81, 82, 83, 86, 87], "els": [1, 6, 23, 87], "togeth": [1, 2, 63, 72, 74, 75, 76, 81, 83, 97], "joint": [1, 3, 53, 59, 60, 63, 80, 81], "assum": [1, 2, 7, 14, 21, 22, 23, 25, 29, 35, 37, 46, 48, 74, 75, 79, 81, 83, 84, 88], "varianc": [1, 3, 15, 40, 45, 47, 51, 54, 63, 76, 82, 84, 86, 87], "column": [1, 3, 6, 14, 33, 53, 54, 59, 60, 63, 70, 77, 78, 84, 85], "would": [1, 7, 15, 53, 59, 60, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 93, 97], "same": [1, 2, 11, 14, 23, 24, 36, 44, 54, 59, 61, 66, 70, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 87, 96], "regardless": 1, "type": [1, 3, 4, 6, 7, 11, 14, 15, 17, 18, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 91], "three": [1, 2, 3, 11, 53, 57, 59, 60, 62, 73, 74, 76, 82, 84, 86, 87, 90, 97], "access": [1, 9, 14, 21, 48, 81, 83, 87, 90], "line": [1, 7, 9, 12, 33, 52, 63, 71, 73, 74, 77, 79, 80, 81, 82, 83, 86, 87, 88, 96], "arrai": [1, 4, 11, 14, 15, 18, 32, 33, 42, 54, 55, 63, 72, 90, 97], "kb": [1, 4, 15, 63, 72], "aimless": [1, 44, 75, 82, 84, 86, 87], "taken": [1, 35, 53, 57, 59, 60, 62, 75, 76, 82, 83, 84, 86, 87, 88], "xscale": [1, 44], "simpl": [1, 4, 14, 15, 21, 23, 24, 31, 33, 47, 50, 51, 53, 54, 63, 72, 81, 83, 87], "still": [1, 3, 9, 11, 12, 14, 16, 24, 52, 53, 54, 59, 60, 73, 74, 75, 76, 78, 81, 82, 83, 85, 86, 87, 95, 96], "small": [1, 2, 11, 53, 59, 60, 76, 77, 78, 80, 81, 82, 84, 86, 87], "rotat": [1, 2, 4, 6, 11, 14, 22, 25, 33, 34, 35, 38, 39, 47, 52, 53, 54, 57, 59, 60, 62, 63, 68, 72, 73, 74, 75, 76, 78, 81, 82, 84, 85, 86, 87, 93, 96, 97], "degre": [1, 2, 11, 15, 23, 25, 35, 41, 51, 53, 54, 58, 59, 60, 63, 66, 68, 72, 74, 77, 81, 82, 83, 84, 85, 86, 87, 88], "sensibl": [1, 76, 82, 86, 87, 88], "oscil": [1, 3, 12, 15, 29, 38, 52, 53, 59, 60, 63, 75, 77, 82, 86], "unless": [1, 7, 21, 33, 53, 59, 60, 63, 72, 74], "60": [1, 40, 63, 73, 75, 78, 79, 82, 84, 85, 86, 96], "disabl": [1, 14, 38, 47, 50, 51, 53, 84], "poorli": [1, 47, 53, 59, 60, 73, 74, 76, 84, 87], "space": [1, 2, 4, 7, 11, 14, 15, 18, 22, 31, 33, 37, 40, 41, 43, 44, 45, 46, 47, 50, 51, 53, 54, 58, 59, 60, 61, 63, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 96], "down": [1, 73, 74, 77, 82, 86, 87], "90": [1, 40, 45, 46, 47, 50, 51, 53, 54, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 95, 96], "consist": [1, 2, 11, 14, 18, 40, 53, 60, 61, 63, 72, 74, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 97], "up": [1, 7, 11, 14, 15, 24, 40, 42, 53, 54, 59, 60, 66, 68, 73, 74, 75, 77, 81, 82, 83, 84, 86, 87, 91, 96, 97], "smoothli": [1, 74, 82, 86, 87, 88, 93], "vari": [1, 14, 17, 41, 44, 51, 53, 54, 57, 58, 59, 60, 73, 74, 81, 82, 83, 85, 86, 87, 88, 93], "surfac": [1, 15, 35, 81, 82, 86, 87, 88], "scale_correct": 1, "decay_correct": [1, 63, 87], "absorption_correct": [1, 54, 63], "term": [1, 2, 14, 53, 59, 60, 63, 73, 82, 86, 87, 88], "regular": [1, 47, 54, 63, 66, 69, 72, 76, 78, 81, 85, 96], "interv": [1, 15, 47, 53, 54, 59, 60, 63, 66, 69, 72, 82, 86], "scale_interv": [1, 63, 87], "decay_interv": [1, 63], "highest": [1, 11, 38, 40, 54, 61, 78, 81, 82, 84, 85, 86, 87], "order": [1, 4, 9, 11, 14, 15, 23, 33, 36, 38, 52, 53, 54, 55, 59, 60, 63, 74, 78, 81, 82, 83, 84, 86, 87, 88], "spheric": [1, 53, 59, 60, 63, 72, 88], "harmon": [1, 63, 72, 88], "lmax": [1, 63, 72], "recommend": [1, 3, 7, 53, 59, 60, 63, 73, 74, 75, 82, 84, 85, 86], "higher": [1, 4, 11, 63, 73, 74, 78, 82, 83, 84, 86, 87], "6": [1, 2, 3, 15, 18, 38, 40, 44, 45, 47, 51, 53, 59, 60, 63, 68, 69, 72, 73, 74, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 99], "weak": [1, 75, 77, 78, 79, 84, 96], "decay_restraint": [1, 63], "strong": [1, 3, 16, 44, 47, 49, 51, 53, 54, 62, 64, 67, 70, 73, 74, 75, 76, 77, 78, 81, 82, 83, 85, 86, 87, 88, 96], "surface_weight": [1, 63], "restrain": [1, 53, 59, 60, 63, 75], "decai": [1, 15, 63, 73, 82, 84, 86, 88], "toward": [1, 73, 74, 81, 97], "zero": [1, 2, 11, 35, 47, 53, 54, 59, 60, 63, 66, 69, 70, 73, 81], "although": [1, 38, 60, 73, 75, 77, 78, 81, 82, 83, 86, 87, 93], "reciproc": [1, 2, 3, 4, 11, 14, 18, 22, 31, 34, 41, 44, 51, 53, 54, 58, 74, 77, 78, 82, 84, 86, 87, 88], "coverag": [1, 81], "decay_term": 1, "thin": [1, 18, 72], "wedg": [1, 11, 53, 80, 83, 87], "necessari": [1, 2, 11, 15, 40, 54, 73, 75, 76, 81, 82, 86, 88, 93], "unstabl": [1, 63], "per": [1, 14, 15, 24, 35, 36, 38, 40, 41, 43, 47, 51, 53, 54, 58, 59, 60, 63, 67, 72, 73, 74, 76, 79, 82, 83, 85, 86, 87, 93, 96], "2d": [1, 2, 12, 14, 47, 54, 63, 98], "grid": [1, 11, 37, 41, 49, 51, 52, 53, 54, 58, 63, 64, 78, 81, 82, 86, 87, 96], "bin": [1, 15, 37, 38, 43, 45, 47, 48, 51, 53, 54, 60, 63, 72, 73, 74, 79, 81, 82, 83, 84, 85, 86, 87], "n_resolution_bin": [1, 63], "second": [1, 18, 34, 73, 77, 78, 82, 83, 86, 87], "3d": [1, 11, 12, 47, 52, 53, 63, 74, 82, 83, 86, 87, 96, 98], "x": [1, 2, 11, 14, 18, 21, 22, 23, 25, 33, 35, 40, 43, 47, 50, 51, 52, 53, 59, 60, 61, 63, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 87, 90, 91, 94, 95, 97], "y": [1, 2, 11, 14, 18, 21, 22, 23, 25, 40, 43, 47, 50, 51, 52, 53, 59, 60, 61, 63, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 87, 95], "begin": [1, 2, 53, 73, 82, 86, 87], "n_absorption_bin": [1, 63], "modulation_correct": [1, 63], "smooth": [1, 82, 83, 86, 87], "n_modulation_bin": [1, 63], "wide": [1, 7, 47, 51, 53, 64, 74, 76, 84], "test": [1, 11, 14, 15, 18, 33, 37, 53, 61, 63, 69, 72, 75, 76, 78, 83, 84, 85, 87, 88], "lead": [1, 53, 59, 60, 77, 78, 82, 83, 86, 87], "overparameteris": [1, 84], "subset": [1, 14, 38, 46, 53, 54, 59, 60, 63, 64, 72, 76, 78, 81, 82, 84, 86, 87], "effici": [1, 3, 14], "four": [1, 73, 76, 84, 88], "intensity_rang": [1, 63, 72], "use_al": [1, 63, 72], "select": [1, 6, 11, 14, 15, 38, 40, 41, 43, 46, 51, 53, 54, 58, 59, 60, 63, 72, 74, 76, 78, 82, 84, 86, 87, 88], "properti": [1, 2, 11, 14, 15, 18, 25, 26, 29, 33, 35, 47, 95], "20k": 1, "each": [1, 2, 11, 12, 14, 17, 18, 33, 35, 38, 40, 42, 47, 52, 53, 54, 59, 60, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 93, 96], "connected": [1, 63, 72], "area": [1, 47, 74, 84, 86, 87, 97], "shell": [1, 7, 43, 47, 72, 73, 74, 75, 76, 84, 88], "find": [1, 4, 9, 11, 16, 24, 38, 42, 45, 47, 50, 51, 52, 53, 54, 64, 76, 77, 81, 83, 85, 91, 93], "averag": [1, 38, 42, 55, 63, 82, 86, 87], "therefor": [1, 4, 14, 53, 59, 60, 73, 82, 83, 84, 86, 88], "explicitli": [1, 54, 74], "min_per_area": 1, "multi_dataset": [1, 63], "min_per_dataset": 1, "isigma_cutoff": [1, 63], "size": [1, 4, 11, 18, 23, 26, 35, 38, 39, 41, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 72, 73, 74, 81, 82, 84, 85, 86, 87, 96], "normalis": [1, 15, 18, 35, 37, 40, 43, 63, 69, 72, 82, 84, 86], "e2_rang": [1, 63, 72], "isigma_rang": [1, 63, 72], "d_rang": [1, 63, 72], "simpli": [1, 2, 7, 14, 35, 40, 82, 83, 86, 87, 93], "prohibit": 1, "vec": 2, "describ": [2, 3, 7, 18, 48, 53, 59, 60, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 95], "fraction": [2, 3, 11, 16, 21, 38, 41, 46, 47, 51, 52, 53, 54, 58, 59, 60, 72, 82, 84, 86], "lattic": [2, 3, 11, 18, 40, 44, 53, 72, 75, 76, 78, 80, 84, 95, 96, 98], "basi": [2, 11, 18, 24, 39, 53, 60, 61, 73, 74, 76, 77, 82, 83, 84, 85, 86, 88], "pmatrix": 2, "l": [2, 14, 18, 37, 53, 61, 74, 75, 76, 77, 78, 82, 84, 85, 86, 88, 93, 95], "end": [2, 14, 15, 33, 46, 47, 54, 59, 63, 69, 72, 73, 74, 77, 78, 81, 82, 83, 84, 86, 87, 88, 90, 96, 98], "special": [2, 4, 11, 51, 53, 59, 60, 63, 73, 74, 75, 76, 87, 92], "integ": [2, 53, 66, 83, 84, 85], "defin": [2, 14, 15, 18, 43, 46, 47, 50, 51, 53, 54, 63, 73, 74, 75, 88], "point": [2, 3, 7, 11, 14, 18, 38, 40, 44, 53, 54, 65, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 93], "hkl": [2, 17, 30, 39, 44, 68, 78, 88], "miller": [2, 3, 18, 33, 39, 51, 53, 56, 68, 76, 77, 84, 85, 87], "indic": [2, 3, 4, 11, 14, 15, 24, 26, 39, 45, 48, 49, 51, 53, 54, 56, 59, 60, 63, 68, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87], "r_": [2, 18, 76], "phi": [2, 14, 22, 25, 52, 53, 59, 60, 63, 68, 75, 78, 81, 82, 83, 86, 87], "cartesian": [2, 11], "its": [2, 14, 33, 35, 48, 53, 59, 60, 63, 70, 74, 75, 77, 82, 86, 87, 92, 94], "ax": [2, 14, 25, 34, 35, 52, 57, 62, 74, 75, 76, 78, 84], "coincid": [2, 25], "distinct": [2, 76, 84], "becaus": [2, 11, 42, 73, 74, 78, 81, 82, 83, 86, 87], "distanc": [2, 11, 16, 23, 40, 51, 52, 53, 54, 59, 60, 73, 75, 81, 82, 83, 84, 85, 86], "unit": [2, 11, 18, 22, 33, 40, 41, 44, 45, 46, 47, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 92, 96], "unicod": [2, 75], "x212b": [2, 75], "accept": [2, 7, 14, 47, 50, 51, 53, 73, 82, 84, 86, 87], "refer": [2, 8, 14, 18, 21, 23, 25, 29, 37, 38, 40, 41, 43, 51, 52, 54, 57, 58, 61, 62, 63, 66, 71, 72, 75, 81, 82, 86, 87, 89, 96], "real": [2, 4, 11, 76, 77, 78, 81, 82, 83, 86, 87, 95, 96], "lab": [2, 45, 51], "clear": [2, 24, 40, 77, 78, 81, 83, 84, 87, 88, 93, 97], "context": [2, 94], "mathbf": [2, 35], "goniostat": 2, "invers": [2, 3, 14, 41, 51, 54, 58, 78, 82, 84, 86], "index": [2, 3, 6, 14, 15, 17, 18, 19, 26, 32, 37, 40, 41, 44, 45, 46, 47, 51, 54, 58, 59, 60, 61, 62, 63, 64, 68, 70, 71, 72, 76, 77, 79, 81, 83, 84, 89, 93, 95], "product": [2, 11, 92], "r_0": 2, "axi": [2, 4, 6, 21, 22, 23, 25, 33, 34, 38, 52, 53, 59, 60, 72, 73, 75, 76, 77, 78, 82, 84, 85, 86, 87], "angl": [2, 6, 11, 18, 21, 23, 25, 33, 39, 40, 52, 53, 54, 60, 63, 68, 69, 70, 72, 73, 74, 76, 82, 84, 86, 87, 88], "doe": [2, 7, 14, 17, 36, 51, 52, 53, 55, 62, 73, 74, 81, 82, 83, 84, 86, 87], "cours": [2, 82, 87, 88], "notwithstand": [2, 78, 81], "misset": [2, 82, 86, 87], "about": [2, 4, 7, 14, 15, 23, 25, 47, 48, 57, 62, 74, 76, 78, 81, 82, 83, 84, 85, 86, 87, 98], "actual": [2, 14, 15, 73, 76, 81, 83, 86], "effect": [2, 14, 35, 47, 53, 59, 60, 63, 74, 76, 81, 82, 83, 84, 86, 87], "label": [2, 14, 43, 45, 47, 59, 68, 70, 72, 84, 85], "sampl": [2, 11, 14, 18, 23, 35, 52, 53, 54, 59, 60, 73, 74, 76, 81, 82, 86, 87, 88], "equip": 2, "omega": [2, 25, 52], "deal": [2, 75, 81, 87], "might": [2, 4, 14, 35, 74, 77, 78, 81, 82, 83, 84, 86, 87], "redefin": 2, "outsid": [2, 14, 38, 66], "modul": [2, 14, 15, 18, 33, 63, 77, 79, 83, 84, 86, 87], "definit": [2, 14, 15, 21, 33, 74, 75, 78, 83], "decompos": [2, 57, 62], "matric": [2, 39, 84, 85], "convention": 2, "u": [2, 4, 35, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 95], "name": [2, 3, 4, 6, 7, 14, 15, 23, 24, 25, 26, 30, 31, 33, 35, 36, 42, 44, 45, 48, 50, 51, 52, 53, 59, 60, 62, 63, 66, 70, 78, 79, 81, 82, 84, 85, 86, 87, 88, 92], "common": [2, 18, 29, 40, 63, 73, 78, 82, 84, 86, 89], "univers": [2, 11], "particular": [2, 4, 26, 47, 53, 59, 60, 74, 76, 87, 92, 96], "text": [2, 24, 33, 35, 73, 74, 82, 83, 86, 87], "Of": 2, "pure": [2, 14], "whilst": [2, 3, 53, 59, 60, 83], "fix": [2, 14, 15, 25, 35, 38, 41, 51, 52, 53, 54, 58, 59, 60, 63, 73, 74, 75, 77, 78, 79, 81, 82, 83, 86], "orthogon": [2, 35, 53, 59, 60], "infinit": [2, 14], "wai": [2, 33, 73, 74, 77, 78, 79, 81, 82, 83, 84, 92, 93, 94, 96], "symbol": [2, 12, 53, 84, 85], "express": [2, 46, 88, 92], "simplifi": [2, 21], "align": [2, 11, 21, 23, 25, 34, 75, 76, 77, 78, 88], "j": [2, 11, 18, 35, 40, 47, 53, 64, 66, 72, 74, 76, 79, 84, 85, 95], "lie": [2, 77], "plane": [2, 21, 34, 53, 54, 59, 60, 68, 74, 75], "unfortun": [2, 78, 81, 83, 84], "disconnect": 2, "usual": [2, 14, 41, 42, 47, 72, 73, 74, 78, 79, 81, 82, 83, 86, 87, 88, 93], "call": [2, 14, 16, 35, 40, 47, 48, 53, 54, 72, 74, 76, 82, 83, 86, 87, 96], "pdb": [2, 40, 44, 51, 61, 63, 72, 74, 77, 82, 84], "7": [2, 3, 37, 40, 45, 46, 47, 48, 50, 51, 73, 74, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96], "essenti": [2, 14, 73, 76, 82, 83, 86, 87], "transform": [2, 11, 39, 53, 60, 85, 87, 88], "state": [2, 14, 53, 59, 60, 82, 86], "element": [2, 14, 15, 18, 25, 40, 76, 78, 82, 83, 84, 86, 87], "explicit": [2, 53, 59, 60, 82, 86, 87], "compact": [2, 11, 18, 24, 44, 52, 81], "form": [2, 7, 14, 30, 43, 47, 53, 54, 59, 60, 74, 76, 77, 78, 82, 83, 86, 87, 92], "co": [2, 35, 76, 84, 95], "gamma": [2, 18, 40, 84, 88], "beta": [2, 18, 40, 60, 69, 72, 82, 84, 86, 87, 88], "sin": 2, "alpha": [2, 25, 40, 53, 59, 60, 84, 88], "It": [2, 3, 11, 14, 35, 37, 40, 41, 50, 53, 54, 59, 60, 63, 71, 72, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87], "desir": [2, 9, 41, 63, 72, 82, 85, 86, 88], "deriv": [2, 4, 6, 14, 22, 84, 87, 88, 92], "relationship": [2, 3, 52], "interest": [2, 16, 47, 73, 81, 83], "eqnarrai": 2, "m": [2, 11, 35, 40, 46, 73, 74, 76, 79, 82, 84, 85, 86, 87, 95, 96], "mathsf": 2, "prime": 2, "nonumb": 2, "analogi": 2, "left": [2, 35, 78, 87], "right": [2, 4, 35, 73, 74, 78, 81, 83, 92], "f": [2, 6, 18, 74, 75, 76, 82, 84, 85, 86, 87, 88], "fractionalis": 2, "easili": [2, 4, 74], "uctbx": [2, 11, 22], "unit_cel": [2, 11, 22, 33, 41, 44, 45, 46, 47, 50, 51, 53, 54, 58, 59, 60, 63, 72, 73, 74, 75, 77, 78, 81, 82, 85, 86, 96], "object": [2, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 52, 53, 59, 60, 66, 81, 83, 97, 98], "cell": [2, 11, 14, 18, 22, 33, 35, 40, 41, 44, 45, 46, 47, 50, 51, 53, 54, 57, 58, 59, 60, 63, 64, 69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 95, 96], "frac": [2, 35, 81, 82, 86, 87], "bc": 2, "ac": [2, 91, 95], "ab": [2, 82, 84, 86], "abc": 2, "sqrt": [2, 18, 82, 84, 86], "implicit": [2, 54], "orthonorm": 2, "scale": [2, 3, 18, 19, 22, 24, 32, 35, 40, 43, 44, 45, 48, 56, 71, 72, 76, 78, 79, 80, 83, 89, 94, 95], "Its": [2, 36], "clearli": [2, 74, 78, 81, 82, 83, 86, 87], "mutual": [2, 51], "think": [2, 78, 83, 97], "sequenc": [2, 3, 15, 16, 24, 26, 30, 36, 47, 52, 53, 54, 59, 60, 63, 66, 78, 79, 81, 82, 83, 85, 86, 88, 96], "practic": [2, 14, 73, 74, 77, 82, 84, 86, 87, 89], "time": [2, 4, 16, 26, 33, 46, 63, 73, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 94, 95, 97], "slippag": 2, "unknown": [2, 26, 44], "expect": [2, 7, 14, 18, 35, 63, 73, 74, 75, 77, 78, 81, 82, 83, 84, 86, 87, 97], "inadequaci": 2, "other": [2, 4, 7, 14, 22, 23, 25, 38, 40, 42, 47, 53, 54, 59, 60, 63, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 90, 92, 93, 96, 97], "aspect": [2, 75], "experiment": [2, 3, 4, 7, 11, 26, 38, 52, 53, 59, 60, 61, 63, 64, 66, 70, 74, 75, 76, 77, 82, 84, 86, 87, 88, 89, 96, 97], "descript": [2, 3, 4, 7, 21, 23, 47, 63, 74, 82, 83, 86, 87, 96], "reconcil": 2, "current": [2, 4, 7, 14, 18, 24, 33, 44, 53, 55, 59, 60, 63, 69, 75, 77, 78, 81, 83, 87, 91, 93, 94, 96, 97], "expand": [2, 68, 75], "datum": [2, 35], "variabl": [2, 52, 63, 74, 75, 81, 87], "That": [2, 14, 74, 83], "psi": [2, 14], "u_0": 2, "psi_x": 2, "psi_i": 2, "psi_z": 2, "convert": [2, 12, 14, 16, 21, 22, 23, 24, 25, 26, 28, 29, 30, 52, 53, 70, 73, 88], "equival": [2, 14, 15, 49, 52, 60, 63, 68, 78, 82, 84, 86, 87], "stage": [2, 35, 73, 74, 75, 77, 82, 86, 87, 88], "unclear": 2, "goal": [2, 90], "dial": [2, 3, 5, 6, 8, 19, 31, 32, 33, 71, 72, 73, 74, 75, 77, 78, 80, 82, 85, 86, 87, 88, 93, 99], "vectori": 2, "mean": [2, 10, 15, 36, 42, 45, 47, 51, 53, 59, 60, 63, 72, 74, 76, 77, 81, 82, 84, 85, 86, 87], "arbitrarili": 2, "appropri": [2, 7, 11, 12, 14, 15, 23, 40, 43, 53, 59, 60, 63, 66, 74, 75, 76, 79, 81, 83, 84, 87, 88], "nevertheless": [2, 77, 81], "adopt": 2, "meaning": 2, "comparison": [2, 11, 24, 37, 38, 39, 53, 63, 81, 83], "commun": [2, 74, 95], "what": [2, 14, 23, 72, 74, 76, 77, 78, 82, 85, 86, 87, 97], "incompat": 2, "argu": [2, 84], "standardis": 2, "choos": [2, 18, 38, 44, 53, 59, 60, 63, 72, 73, 74, 77, 81, 82, 86, 87, 89], "cif": [2, 40, 44, 61, 63, 70, 72, 76], "imgcif": [2, 21, 23, 25, 29], "horizont": 2, "beamlin": [2, 4, 35, 44, 48, 78, 81, 82, 84, 85, 86, 87, 90, 95, 97], "vertic": [2, 54, 78], "ensur": [2, 14, 23, 26, 38, 40, 63, 74, 81, 82, 83, 86, 87, 88], "appear": [2, 29, 36, 45, 71, 73, 74, 76, 79, 82, 84, 86, 87], "viewer": [2, 73, 74, 75, 77, 78, 81, 82, 86, 87, 88], "confus": [2, 84], "user": [2, 4, 7, 11, 14, 36, 46, 47, 48, 54, 63, 78, 79, 80, 82, 83, 84, 86, 87, 90, 91], "Such": [2, 88], "decis": 2, "class": [2, 6, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 41, 45, 47, 51, 52, 54, 55, 58, 73, 74, 75, 82, 83, 85, 86], "freedom": [2, 53, 59, 60, 81], "geometri": [2, 3, 4, 11, 33, 44, 52, 53, 59, 60, 66, 74, 75, 77, 80, 81, 82, 86, 87, 88, 95, 96, 98], "ub": [2, 74, 81, 82, 85, 86, 88, 95], "rub": 2, "wrt": 2, "diffract": [2, 3, 11, 21, 35, 37, 42, 44, 45, 47, 51, 53, 54, 59, 63, 66, 69, 72, 73, 74, 75, 77, 78, 81, 82, 83, 84, 86, 87, 95, 96, 97, 98], "direct": [2, 3, 4, 11, 21, 23, 25, 34, 38, 44, 52, 53, 59, 60, 69, 73, 74, 76, 77, 78, 82, 84, 86, 87, 92], "": [2, 4, 6, 14, 18, 35, 43, 49, 51, 53, 54, 59, 60, 63, 70, 72, 73, 74, 76, 78, 81, 82, 83, 84, 86, 87, 88, 95], "along": [2, 11, 23, 33, 34, 40, 52, 53, 74, 75, 77, 81, 84], "impact": [2, 14, 73, 88], "sensor": [2, 23], "reflect": [2, 4, 6, 10, 11, 12, 14, 15, 16, 17, 18, 31, 33, 35, 37, 38, 40, 41, 43, 44, 46, 47, 51, 53, 54, 56, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 98], "pixel": [2, 3, 16, 23, 31, 36, 41, 42, 45, 47, 50, 51, 52, 53, 54, 59, 60, 62, 73, 74, 78, 79, 81, 82, 85, 86, 87, 90, 96, 97], "origin": [2, 3, 4, 23, 38, 46, 52, 53, 64, 66, 72, 74, 75, 76, 78, 79, 82, 83, 86, 87, 94], "develop": [2, 4, 7, 8, 47, 90, 94, 95, 97, 98], "sinc": [2, 11, 35, 53, 54, 82, 86, 87, 88], "concern": [2, 78], "intern": [2, 26, 59, 63, 72, 76], "represent": [2, 15, 18, 52, 84], "oper": [2, 4, 14, 18, 24, 37, 39, 40, 46, 47, 48, 60, 61, 73, 74, 76, 77, 78, 81, 82, 84, 85, 86, 87, 88], "wa": [2, 7, 14, 15, 47, 53, 59, 60, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88], "introduc": [2, 75, 76], "repres": [2, 12, 40, 44, 52, 81, 82, 86, 87], "motor": 2, "mount": [2, 35], "floor": 2, "etc": [2, 18, 33, 59, 70, 76, 79, 84, 88, 96], "composit": 2, "_1": [2, 35], "circ": 2, "_2": 2, "_3": 2, "cdot": [2, 35], "gonimomet": 2, "record": [2, 4, 14, 15, 44, 53, 59, 60, 73, 74, 76, 77, 78, 79, 81, 82, 83, 85, 86, 88], "angular": [2, 11, 18, 53, 59, 60, 81, 82, 86], "displac": [2, 11], "magnitud": [2, 35, 62, 63, 78], "_i": [2, 35], "prior": [2, 11, 54, 74, 82, 86, 87, 88, 92], "handl": [2, 16, 23, 24, 25, 29, 33, 74, 75, 76, 83, 84, 85, 98], "scan": [2, 3, 4, 6, 14, 16, 17, 24, 25, 26, 27, 32, 38, 41, 44, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 68, 69, 72, 73, 74, 76, 81, 82, 83, 85, 86, 87, 88, 93, 97], "_n": 2, "_": [2, 22, 35], "constant": [2, 14, 53, 54, 59, 60, 75, 88], "throughout": [2, 81, 84], "thei": [2, 9, 11, 14, 16, 18, 38, 46, 47, 53, 54, 59, 60, 73, 74, 75, 76, 78, 81, 82, 86, 87, 97], "whose": [2, 47, 50, 51, 53, 54, 59, 60], "befor": [2, 7, 23, 35, 37, 38, 41, 53, 54, 59, 60, 63, 68, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 91], "apparatu": [2, 4], "circl": [2, 47, 50, 51, 73, 76, 82, 86], "\u03ba": 2, "arrang": [2, 81, 84], "\u03c9": 2, "\u03c6": [2, 82, 86, 87], "hold": 2, "explor": [2, 74, 78, 82, 84, 87, 95], "region": [2, 11, 16, 46, 47, 56, 74, 75, 77, 81, 84, 87], "_\u03c9": 2, "_\u03ba": 2, "_\u03c6": 2, "\ud835\udfd9": 2, "bernstein": [2, 40, 84, 95], "int": [2, 11, 12, 14, 15, 16, 18, 23, 24, 25, 26, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72], "crystallogr": [2, 75, 95], "199": [2, 73, 81, 82, 84, 85, 86], "205": [2, 73, 76, 78, 81, 82, 84, 86], "iucr": 2, "2006": [2, 18, 69], "buse": 2, "levi": 2, "rai": [2, 11, 22, 33, 35, 52, 73, 74, 78, 82, 86, 90, 94, 95, 97], "neutron": [2, 52], "22": [2, 3, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 95, 96], "457": [2, 81, 82, 84, 86], "464": [2, 82, 86], "1967": 2, "giacovazzo": 2, "fundament": [2, 14], "oxford": 2, "press": [2, 78, 87], "toolbox": [2, 95], "reusabl": 2, "appl": [2, 11, 40, 64, 79, 84, 95], "hammerslei": 2, "westbrook": 2, "444": [2, 76, 82, 83, 86], "458": [2, 81, 82, 86], "paciorek": 2, "meyer": 2, "chapui": 2, "On": [2, 49, 74, 75, 77, 83, 87], "modern": 2, "sect": 2, "found": [2, 4, 6, 11, 16, 40, 47, 48, 49, 52, 53, 63, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 95, 96], "55": [2, 73, 74, 78, 81, 82, 83, 84, 85, 86, 88], "543": [2, 82, 86], "557": [2, 81, 86], "1999": [2, 53, 54, 59, 60, 84, 86, 95], "atom": [2, 63, 76, 84], "bibliograph": 2, "entri": [2, 77], "brookhaven": 2, "natl": [2, 95], "1992": [2, 95], "rupp": 2, "write": [3, 7, 33, 40, 44, 46, 47, 53, 59, 60, 70, 74, 77, 78, 81, 82, 83, 84, 85, 86, 87, 96], "store": [3, 4, 14, 18, 48, 57, 74, 75], "summaris": [3, 74, 96], "plu": [3, 14, 15, 30, 82, 86, 87], "option": [3, 4, 6, 7, 11, 15, 18, 33, 34, 38, 39, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 72, 74, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 96], "input": [3, 6, 7, 11, 14, 15, 16, 18, 29, 30, 31, 33, 36, 37, 38, 40, 41, 44, 46, 47, 51, 52, 53, 54, 55, 57, 59, 60, 61, 63, 64, 66, 69, 70, 72, 73, 76, 81, 82, 83, 84, 85, 86, 87, 88, 96], "find_spot": [3, 16, 48, 49, 53, 67, 71, 73, 74, 75, 76, 78, 81, 82, 83, 85, 86, 87, 88, 96], "profile_model": [3, 4, 19, 32], "json": [3, 11, 18, 24, 30, 34, 36, 38, 40, 43, 44, 52, 54, 59, 62, 63, 67, 68, 69, 70, 75, 76, 82, 84, 86, 96], "ascii": [3, 74, 87], "being": [3, 6, 12, 14, 18, 25, 42, 53, 55, 59, 60, 63, 73, 74, 76, 78, 81, 82, 83, 84, 86, 87, 88, 93, 94], "human": 3, "readabl": 3, "edit": [3, 36, 73, 81, 83, 87], "locat": [3, 18, 33, 50, 53, 59, 60, 83, 84, 86, 87], "ani": [3, 7, 11, 14, 15, 18, 24, 33, 38, 40, 44, 47, 49, 52, 53, 59, 60, 61, 63, 66, 72, 74, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93], "imageset": [3, 6, 16, 24, 27, 30, 32, 36, 45, 47, 53, 54, 55, 73, 74, 82, 83, 85, 86, 87, 93], "goniomet": [3, 4, 6, 24, 26, 27, 32, 34, 35, 38, 52, 53, 59, 60, 74, 75, 78, 82, 83, 86, 93, 95], "encod": 3, "share": [3, 10, 12, 14, 23, 24, 25, 26, 38, 59, 63, 72, 83, 93], "short": [3, 44, 49, 77, 81, 83], "shown": [3, 4, 7, 52, 63, 73, 82, 83, 84, 86, 87], "__id__": 3, "experimentlist": [3, 4, 11, 14, 16, 24, 27, 33, 83], "imagesequ": [3, 26, 27], "templat": [3, 21, 22, 23, 24, 25, 26, 29, 33, 52, 75, 79, 82, 83, 86, 87, 93], "centroid_": 3, "cbf": [3, 4, 21, 23, 25, 33, 45, 47, 48, 49, 51, 52, 55, 65, 75, 79, 81, 82, 83, 85, 86, 88, 93, 96], "007852057721998333": 3, "772524827250213e": 3, "14": [3, 40, 73, 74, 76, 81, 82, 83, 84, 86, 95], "9999691721195861": 3, "polarization_norm": [3, 21, 38, 52], "diverg": [3, 21, 41, 51, 52, 54, 58, 74, 82, 85, 86, 87], "polarization_fract": [3, 21, 38, 52], "999": [3, 21, 82, 84, 86, 87], "sigma_diverg": [3, 21, 52], "058": [3, 73, 82, 84], "wavelength": [3, 6, 18, 21, 22, 33, 38, 44, 52, 53, 59, 60, 63, 72, 73, 74, 75, 79, 82, 84, 85, 86, 88], "9795": 3, "panel": [3, 14, 23, 38, 45, 46, 47, 50, 51, 52, 53, 54, 55, 59, 60, 73, 74, 75, 76, 81, 82, 86, 87], "211": [3, 82, 85, 86], "53596470096178": 3, "219": [3, 73, 82, 84, 86], "45303890619488": 3, "192": [3, 73, 76, 82, 84, 86], "7062494437063": 3, "fast_axi": [3, 23, 38, 52, 75, 82, 86], "9999551354884303": 3, "0021159302715049923": 3, "009233084500921031": 3, "slow_axi": [3, 23, 38, 52, 75, 82, 86], "0021250002879257116": 3, "999997269169901": 3, "0009726389448611214": 3, "trusted_rang": [3, 23, 52, 82, 86], "495976": 3, "image_s": [3, 23, 52, 82, 86], "2463": [3, 82, 86], "2527": [3, 82, 86], "px_mm_strategi": 3, "parallaxcorrectedpxmmstrategi": [3, 82, 86], "sensor_unknown": 3, "pixel_s": [3, 23, 52, 74, 82, 86], "172": [3, 78, 82, 84, 86], "fixed_rot": [3, 25, 38, 52], "rotation_axi": [3, 25, 38], "5919306617286774e": 3, "16": [3, 40, 48, 73, 74, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 95], "904199434387693e": 3, "exposure_tim": [3, 29], "epoch": [3, 29, 52, 82, 86], "1360324992": 3, "1360324993": 3, "1360324994": 3, "image_rang": [3, 15, 26, 29, 33, 52, 53, 64, 66, 73, 76], "9": [3, 11, 40, 45, 52, 53, 73, 74, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 95], "real_space_a": [3, 22, 30], "23781811553089": 3, "600614003857873": 3, "077690418635804": 3, "real_space_b": [3, 22, 30], "657129890916668": 3, "4698317405529955": 3, "65693038892429": 3, "real_space_c": [3, 22, 30], "295803077552249": 3, "38": [3, 40, 73, 76, 78, 81, 82, 83, 84, 85, 86, 96], "99952334925477": 3, "972795822746061": 3, "space_group_hall_symbol": 3, "mosaic": [3, 22, 41, 51, 53, 54, 58, 74, 79, 82, 86, 96], "157": [3, 76, 82, 84, 86], "done": [3, 14, 15, 44, 46, 47, 53, 54, 57, 59, 60, 62, 68, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 93], "dxtbx": [3, 4, 9, 10, 11, 14, 32, 73, 75, 81, 82, 83, 85, 86, 95], "experiment_list": [3, 4, 11, 27, 30, 32, 33, 83], "from_fil": [3, 24, 83], "save": [3, 38, 40, 41, 47, 50, 52, 54, 58, 63, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 96], "messagepack": 3, "flag": [3, 6, 14, 15, 16, 44, 46, 53, 54, 59, 60, 65, 70, 72, 82, 83, 86], "bit": [3, 24, 74, 76], "mask": [3, 16, 23, 26, 31, 36, 46, 47, 50, 51, 52, 54, 66, 75, 82, 86], "statu": [3, 79], "miller_index": 3, "enter": [3, 7, 14, 63, 74, 87], "exit": [3, 83], "s1": [3, 23, 41, 51, 54, 58], "xyzcal": 3, "mm": [3, 14, 23, 35, 47, 50, 51, 52, 53, 59, 60, 74, 78, 81, 82, 83, 85, 86, 87, 95], "predict": [3, 11, 14, 16, 17, 40, 41, 44, 51, 53, 54, 59, 60, 71, 74, 75, 81, 82, 83, 84, 85, 86, 87], "rad": [3, 14, 53, 59, 60, 84], "px": [3, 47, 50, 51, 52, 73, 74, 78, 81, 82, 83, 85, 86], "frame": [3, 11, 12, 21, 22, 23, 25, 33, 34, 35, 44, 47, 48, 54, 63, 68, 69, 72, 75, 76, 82, 86, 87, 97], "ub_matrix": 3, "xyzob": [3, 14], "centroid": [3, 4, 11, 31, 41, 44, 47, 50, 51, 53, 54, 58, 59, 60, 66, 70, 78, 81, 82, 83, 85, 86, 87], "millimetr": [3, 74], "rlp": [3, 44, 53], "raw": [3, 9, 44, 45, 47, 48, 55, 65, 73, 75, 82, 86, 87], "prf": [3, 40, 54, 74, 81, 82, 84, 85, 86], "fit": [3, 12, 35, 41, 43, 51, 54, 58, 60, 63, 70, 72, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 92], "without": [3, 7, 33, 76, 78, 81, 83, 87, 88, 92, 93], "inverse_scale_factor": [3, 15], "divisori": 3, "inverse_scale_factor_vari": 3, "lp": [3, 82, 86, 87], "qe": 3, "quantum": 3, "correl": [3, 14, 18, 37, 40, 53, 59, 60, 61, 70, 72, 74, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88], "bbox": [3, 12], "bound": [3, 11, 12, 18, 47, 50, 51, 53, 54, 66], "box": [3, 12, 47, 53, 73, 74, 87], "shoebox": [3, 10, 16, 38, 41, 47, 51, 54, 58, 63, 74, 82, 86, 87, 88], "background": [3, 19, 31, 32, 41, 47, 51, 54, 74, 78, 82, 85, 86, 87, 95], "struct": [3, 75, 95], "look": [3, 4, 47, 52, 53, 59, 60, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 97], "array_famili": [3, 4, 11, 83], "flex": [3, 4, 11, 14, 15, 83], "reflection_t": [3, 4, 11, 12, 15, 16, 33, 83], "extern": [4, 14, 16, 62, 74, 87], "libtbx_refresh": 4, "py": [4, 9, 73, 75, 83], "io": [4, 82, 84, 86, 90], "subprocess": 4, "sy": [4, 83], "pathlib": 4, "libtbx": [4, 6, 11, 15, 18, 83], "pkg_util": 4, "pkg_resourc": 4, "except": [4, 11, 33, 47, 53, 59, 60, 74, 75], "modulenotfounderror": 4, "script": [4, 6, 7, 9, 33, 38, 76, 83], "out": [4, 7, 9, 14, 22, 33, 38, 44, 46, 47, 50, 51, 53, 59, 60, 73, 74, 75, 78, 81, 82, 83, 84, 86, 87, 92], "them": [4, 16, 25, 38, 46, 59, 73, 74, 75, 76, 78, 81, 82, 83, 86, 87, 93, 96], "_src_path_root": 4, "str": [4, 6, 11, 15, 18, 21, 22, 24, 25, 26, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 72], "env": [4, 83], "dist_path": 4, "joinpath": 4, "src": [4, 33], "insert": 4, "configur": [4, 9, 14, 15, 21, 23, 33, 48, 53, 59, 60, 63, 70, 79, 81, 82, 83, 84, 86, 88], "attempt": [4, 24, 34, 35, 53, 63, 76, 83, 88, 96], "implement": [4, 14, 15, 16, 18, 23, 26, 31, 40, 41, 51, 54, 58, 69, 78, 84, 90, 95], "regist": 4, "refresh": 4, "style": [4, 53, 72], "setup": [4, 14, 33, 91], "setuptool": 4, "list": [4, 7, 11, 12, 14, 15, 16, 18, 24, 25, 26, 29, 30, 31, 33, 35, 38, 44, 47, 50, 52, 53, 54, 56, 59, 60, 63, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 86, 90, 92, 93, 94, 96], "instal": [4, 8, 32, 33, 48, 71, 73, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88], "plugin": 4, "basis_vector_search_strategi": 4, "fft1d": [4, 11, 53, 82, 83, 86, 96], "basis_vector_search": [4, 19], "fft3d": [4, 11, 53, 87], "real_space_grid_search": [4, 11, 53, 87, 96], "scaling_model_ext": 4, "gaussian_r": [4, 31, 41, 51, 54, 58], "gaussian_rs_profile_model_ext": [4, 31], "lattice_search_strategi": 4, "low_res_spot_match": [4, 53], "now": [4, 6, 33, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 93], "discov": [4, 81], "instead": [4, 43, 63, 74, 77, 78, 83, 87], "runtim": [4, 75], "directori": [4, 7, 9, 24, 29, 30, 44, 45, 52, 57, 60, 73, 74, 75, 76, 79, 82, 83, 84, 88, 91, 93], "install_format": [4, 73], "add": [4, 9, 10, 12, 14, 15, 29, 33, 44, 47, 53, 73, 76, 82, 86, 87, 91, 96], "distribut": [4, 18, 53, 59, 60, 65, 75, 76, 82, 86, 87, 92, 96], "pleas": [4, 9, 63, 72, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90], "submit": [4, 83, 95], "pull": [4, 87], "request": [4, 14, 26, 43, 48, 53, 59, 60, 78, 81, 90], "repositori": [4, 9, 53, 59, 60, 75], "whenev": 4, "staff": 4, "essenc": 4, "associ": [4, 11, 14, 15, 53, 59, 60, 68, 83, 93, 95], "thing": [4, 6, 42, 73, 81, 83, 84, 97], "take": [4, 15, 17, 18, 38, 40, 46, 48, 52, 53, 54, 58, 59, 60, 63, 69, 74, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 93, 95], "overrid": [4, 14, 18, 41, 43, 45, 47, 51, 52, 53, 54, 58, 59, 60, 66, 72, 75, 81, 83], "construct": [4, 11, 14, 16, 21, 23, 25, 29, 30, 74, 75], "kei": [4, 6, 14, 18, 48, 76, 82, 83, 86, 87], "decid": [4, 76], "custom": [4, 63], "serial": [4, 15, 24, 27, 32, 53, 59, 60, 74, 83, 90, 95, 96, 97], "ideal": [4, 33, 74, 77, 88, 93], "your": [4, 7, 9, 35, 48, 73, 76, 77, 79, 82, 83, 84, 86, 87, 88, 93], "inherit": [4, 14], "just": [4, 11, 14, 23, 25, 53, 63, 73, 74, 78, 81, 82, 83, 85, 86, 87, 96, 97], "longest": 4, "chain": [4, 77], "ancestor": 4, "claim": [4, 74], "built": 4, "factori": [4, 14, 16, 21, 23, 25, 26, 28, 29, 33, 81], "trivial": [4, 78], "complex": [4, 7, 21, 23, 38, 82, 87], "hopefulli": [4, 83], "correspond": [4, 6, 11, 14, 33, 36, 53, 54, 73, 74, 77, 78, 82, 83, 84, 86, 87], "let": [4, 73, 74, 76, 78, 81, 82, 83, 84, 86, 87], "pretend": 4, "revers": [4, 11, 25, 44, 78], "correctli": [4, 7, 37, 40, 74, 88], "instanti": [4, 24], "__future__": [4, 6], "absolute_import": 4, "divis": 4, "print_funct": 4, "formatcbfminipilatu": [4, 82, 83], "formatcbfminipilatusmybeamlin": 4, "mini": 4, "pilatu": [4, 48, 78, 81, 82, 86, 87], "mybeamlin": 4, "staticmethod": 4, "def": [4, 6, 83], "image_fil": 4, "header": [4, 9, 23, 26, 29, 52, 73, 74, 77, 78, 83, 85], "get_cbf_head": 4, "split": [4, 12, 14, 24, 38, 47, 51, 53, 54, 59, 60, 63, 66, 77, 78, 81, 82, 83, 85, 86, 88, 93, 96], "42": [4, 53, 59, 60, 64, 72, 76, 78, 81, 82, 83, 84, 85, 86, 87, 96], "4242": 4, "_goniomet": 4, "self": [4, 6, 12], "_goniometer_factori": 4, "single_axis_revers": [4, 25], "local": [4, 7, 45, 47, 53, 62, 74, 87, 91], "myproject": 4, "define_entry_point": 4, "my_format_modul": 4, "formatmyclass": 4, "formatbaseclass1": 4, "formatbaseclass2": 4, "myformat": 4, "top": [4, 12, 73, 74, 78], "view": [4, 40, 47, 51, 74, 75, 77, 78, 82, 86, 87, 88, 95, 97], "hierarchi": [4, 23, 52, 53, 59, 60, 75, 81], "show_registri": 4, "show": [4, 22, 31, 33, 40, 45, 47, 51, 56, 71, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 87, 88, 96], "registri": 4, "root": [4, 53, 59, 60, 74], "subclass": [4, 14, 15], "indent": [4, 18, 33], "formatbruk": 4, "formatbrukerfixedchi": 4, "formatbrukerphotonii": 4, "deleg": [4, 14], "find_basis_vector": [4, 11], "mystrategy_phil_str": 4, "magic_paramet": 4, "magic": 4, "float": [4, 10, 11, 15, 18, 21, 22, 23, 25, 33, 35, 37, 38, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 72], "phil_scop": [4, 6, 11, 15, 83], "pars": [4, 6, 33], "mystrategi": 4, "my": 4, "reciprocal_lattice_vector": [4, 11], "arg": [4, 11, 14, 24, 33], "scitbx": [4, 6, 10, 11, 12, 14, 18, 22, 23, 24, 25, 26, 40, 72], "vec3_doubl": [4, 11, 25], "period": [4, 11, 82, 86, 87], "tupl": [4, 11, 14, 15, 16, 18, 21, 22, 23, 25, 26, 33, 53, 59, 60, 83], "bool": [4, 10, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 37, 38, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 72], "identifi": [4, 11, 23, 24, 26, 33, 40, 42, 47, 52, 53, 54, 56, 59, 60, 63, 65, 69, 72, 76, 78, 82, 83, 84, 86, 87, 88], "were": [4, 11, 14, 38, 48, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88], "used_in_index": 4, "candidate_basis_vector": 4, "entir": [4, 47, 73, 77, 88], "mylatticesearch": 4, "find_crystal_model": [4, 11], "candid": [4, 11, 53, 82, 83, 86, 87], "spot": [4, 11, 16, 35, 41, 42, 44, 45, 47, 49, 50, 51, 53, 54, 58, 59, 60, 64, 67, 77, 79, 81, 83, 85, 93, 96], "candidate_crystal_model": 4, "scalingmodelbas": [4, 15], "from_dict": [4, 15, 21, 22, 23, 24, 25, 28, 29, 31], "from_data": [4, 15], "configure_compon": [4, 15], "__init__": [4, 6, 10, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 30, 31, 33], "consecutive_refinement_ord": [4, 15], "consecut": [4, 15, 52, 55, 63], "mode": [4, 15, 18, 33, 34, 40, 52, 53, 59, 60, 61, 63, 72, 74, 75, 76, 82, 83, 86, 87], "compos": [4, 14, 15, 25, 53, 59, 60, 88], "scale_compon": 4, "scalecomponentbas": 4, "mypath": 4, "specialcompon": 4, "mymodel_phil_str": 4, "special_correct": 4, "toggl": [4, 76, 82, 86], "myscalingmodel": 4, "id_": [4, 15], "modelnam": 4, "parameters_dict": [4, 15], "configdict": [4, 15], "is_scal": [4, 15], "super": 4, "_compon": 4, "parameter_esd": 4, "classmethod": [4, 14, 15, 22, 31, 33], "cl": 4, "obj": [4, 15, 24, 28], "dictionari": [4, 15, 18, 21, 22, 23, 24, 25, 28, 29, 30, 44], "configuration_paramet": 4, "doubl": [4, 10, 14, 22, 23, 25, 81, 91], "est_standard_dev": 4, "param": [4, 6, 11, 12, 14, 15, 16, 18, 21, 22, 23, 25, 26, 29, 30, 31, 33, 54, 83], "mycalingmodel": 4, "append": [4, 11, 14, 24, 44], "important_numb": 4, "len": [4, 6, 75, 83], "requir": [4, 7, 11, 14, 15, 18, 44, 52, 53, 54, 59, 60, 62, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 95, 97], "nest": [4, 15, 46], "extend": [5, 11, 24, 33, 41, 51, 54, 58, 72, 78, 81, 82, 86, 87, 94], "demonstr": [6, 76, 77, 87, 97], "load": [6, 16, 24, 26, 30, 32, 33, 48, 51, 63, 76, 79, 82, 83, 84, 86, 87], "s0": [6, 21, 23, 43], "col": 6, "get_s0": 6, "print": [6, 7, 12, 14, 18, 33, 46, 47, 57, 60, 65, 74, 78, 82, 83, 86, 87], "\u00e5": [6, 21, 73, 74, 76, 82, 84, 86, 87, 95], "jiggeri": 6, "pokeri": 6, "cope": [6, 97], "interpret": [6, 47, 63, 73, 74, 75, 76, 78, 96], "annot": 6, "util": [6, 12, 14, 32, 35, 38, 48, 71, 83], "show_mail_handle_error": 6, "help_messag": 6, "pass": [6, 7, 14, 18, 23, 44, 45, 46, 49, 51, 52, 63, 74, 76, 77, 81, 82, 83, 84, 85, 86, 88], "png": [6, 11, 45, 57, 67, 68, 70, 76, 81, 83], "process_includ": 6, "usag": [6, 7, 63, 72, 83, 88], "experiment_data": 6, "parser": [6, 33], "argumentpars": [6, 32, 33], "epilog": [6, 33], "check_format": [6, 24, 26, 30, 33, 83], "read_experi": [6, 33], "read_reflect": [6, 33], "parse_arg": [6, 33], "show_diff_phil": [6, 33], "flatten_experi": [6, 32, 33], "flatten_reflect": [6, 32, 33], "print_help": 6, "get_flag": 6, "kept": [6, 53, 59, 60, 75, 76, 81], "sort": [6, 33, 54, 78, 83, 84, 86], "verifi": [6, 24], "exactli": [6, 23, 74, 78, 81], "obvious": 6, "assert": [6, 52], "next": [6, 40, 74, 76, 82, 84, 85, 86, 87], "quantiti": 6, "get_wavelength": 6, "ident": [6, 40, 60, 76, 82, 86, 88, 93], "get_angle_from_array_index": 6, "get_array_rang": [6, 26], "get_rotation_axis_datum": [6, 25], "sqr": 6, "get_fixed_rot": [6, 25], "get_setting_rot": [6, 25], "axis_and_angle_as_r3_rotation_matrix": 6, "deg": [6, 14, 21, 22, 23, 25, 29, 40, 81, 82, 83, 84, 85, 86, 87, 96], "__name__": [6, 83], "__main__": [6, 83], "download": [7, 48, 71, 73, 74, 75, 78, 82, 85, 86, 87, 91], "latest": [7, 14, 79], "releas": 7, "site": [7, 75, 90], "linux": [7, 24, 74, 79, 81, 83], "mac": 7, "intend": [7, 35, 44, 49, 53, 59], "toolkit": [7, 38, 78, 83, 94, 95], "stabl": [7, 88], "window": [7, 73, 75, 78, 87, 91], "somewhat": [7, 83], "wiki": [7, 9, 18], "prepar": [7, 14, 63, 73, 76, 79, 83, 88], "compress": [7, 44, 45, 78], "archiv": [7, 75, 78], "onc": [7, 40, 47, 52, 53, 73, 74, 76, 81, 82, 85, 86, 87, 88], "unpack": [7, 75], "tar": [7, 48, 75, 76, 78, 85, 86, 87, 88, 91], "xjf": [7, 91], "major": [7, 54, 74, 78, 83, 84, 87], "minor": [7, 77], "patch": 7, "x86_64": [7, 91], "xz": [7, 44, 76, 91], "substitut": [7, 92], "version": [7, 14, 35, 44, 48, 49, 75, 79, 81, 84, 87], "usr": [7, 91], "permiss": [7, 54, 92], "cd": [7, 9, 33, 48, 73, 74, 76, 79, 81, 83, 84, 91, 95], "home": [7, 75], "prefix": [7, 12, 44, 45, 47, 53, 59, 60, 83, 91], "put": [7, 53, 74, 78], "suit": [7, 48], "achiev": [7, 14, 35, 53, 56, 59, 60, 81, 88], "bash": [7, 74, 75, 76, 83], "dials_env": [7, 91], "sh": [7, 74, 91], "csh": [7, 48], "bourn": 7, "produc": [7, 38, 44, 53, 54, 59, 60, 66, 74, 75, 77, 78, 81, 82, 83, 84, 86, 87, 96], "everyth": [7, 21, 23, 25, 74, 76], "properli": [7, 74, 75, 77, 78, 83, 84], "messag": [7, 33], "argument": [7, 14, 15, 26, 31, 33, 52, 53, 64, 66], "displai": [7, 38, 40, 45, 48, 51, 72, 75, 77, 82, 86, 87], "expert_level": [7, 38, 40, 41, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 66, 69, 70, 72, 82, 86], "e2": [7, 57, 62], "string": [7, 12, 14, 33, 43, 47, 49, 53, 54, 59, 60, 63, 68, 69, 70, 72], "increas": [7, 14, 53, 63, 72, 73, 81, 82, 83, 86, 87, 96, 97], "attributes_level": 7, "a2": [7, 18, 96], "apart": [7, 81, 82, 86, 87], "switch": [7, 18, 76, 81, 83, 85], "though": [7, 73, 74, 76, 81, 82, 83, 84, 86, 88], "less": [7, 18, 40, 47, 50, 51, 53, 54, 60, 63, 69, 72, 73, 74, 77, 78, 81, 82, 83, 86, 87, 88], "frequent": 7, "clarif": 7, "index_assign": [7, 53], "sai": [7, 53, 59, 60, 78, 83, 87], "myparam": 7, "readi": [7, 44, 75, 83, 87], "convent": [8, 22, 52, 53, 61, 64, 66, 77, 82, 88], "librari": [8, 30, 73, 83], "prerequisit": 9, "Then": [9, 14, 53, 59, 60, 75, 76, 82, 86, 87, 91, 96], "bootstrap": [9, 83], "wget": [9, 48, 91], "http": [9, 11, 18, 35, 47, 48, 53, 59, 60, 73, 75, 82, 88, 91], "githubusercont": [9, 48, 73, 75], "com": [9, 41, 48, 51, 54, 58, 73, 75, 79], "curl": [9, 48, 75, 91], "explan": 9, "step": [9, 14, 18, 40, 44, 45, 53, 54, 59, 60, 63, 70, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 97], "updat": [9, 14, 15, 33, 44, 53, 59, 63, 81, 82, 83, 85, 86, 87, 98], "conda_bas": 9, "compil": [9, 48, 91], "subsequ": [9, 15, 75, 77, 81, 82, 84, 86, 87, 88], "login": 9, "session": [9, 97], "sure": [9, 72, 73, 74, 77, 78, 87], "dispatch": 9, "libgl": 9, "glu": 9, "khr": 9, "instruct": [9, 44, 74, 78, 87, 91, 93, 95], "privat": [9, 14], "dials_regress": 9, "histor": [9, 97], "svn": 9, "cci": [9, 48], "server": [9, 49, 71], "replac": [9, 24, 38, 52, 73, 74, 75, 77, 83], "usernam": 9, "checkout": 9, "ssh": 9, "lbl": [9, 48], "gov": [9, 35, 48], "trunk": 9, "scratch": [9, 79, 83, 86], "prefer": [9, 18, 40, 47, 60, 69, 72, 74, 76, 81, 82, 83, 84, 86, 87], "guid": [9, 63], "github": [9, 75, 82, 84, 86, 90, 91], "handi": 9, "radialaverag": [10, 19], "instanc": [10, 12, 14, 16, 23, 24, 25, 26, 29, 33, 76, 78], "arg1": [10, 12, 14, 22, 23, 24, 25, 26], "beambas": [10, 24, 26], "arg2": [10, 12, 22, 23, 24, 25, 26], "arg3": [10, 12, 23, 24, 25, 26], "arg4": [10, 12, 25, 26], "arg5": [10, 12, 25], "arg6": [10, 25], "signatur": [10, 12, 14, 22, 23, 24, 25, 26], "void": [10, 12, 14, 22, 23, 24, 25, 26], "_object": [10, 12, 14, 22, 23, 24, 25, 26], "std": [10, 22, 23, 24, 25, 26, 40, 63, 72, 79, 84], "shared_ptr": [10, 24, 26], "unsign": [10, 12, 14, 24, 25, 26], "long": [10, 12, 14, 24, 25, 26, 63, 74, 77, 82, 86, 87, 88], "lvalu": [10, 12, 22, 23, 24, 25, 26], "af": [10, 12, 14, 23, 24, 25, 26], "const_ref": [10, 12, 25, 26], "c_grid": 10, "2ul": [10, 12, 26], "inv_d2": 10, "weight": [10, 11, 14, 15, 18, 40, 53, 59, 60, 63, 72, 81, 82, 83, 86], "set_shoebox_background_valu": [10, 19], "ref": [10, 43, 72], "trivial_accessor": [10, 12, 25, 26], "dialsindexerror": [11, 19], "runtimeerror": 11, "dialsindexrefineerror": [11, 19], "export_as_json": 11, "file_nam": [11, 48], "indexed_experi": 11, "export_reflect": 11, "pickl": [11, 16, 24, 38, 47, 51, 75], "find_lattic": 11, "find_max_cel": 11, "static": [11, 12, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 31, 41, 44, 51, 53, 54, 57, 58, 59, 60, 62, 73, 74, 81, 82, 83, 87, 88], "from_paramet": [11, 16], "known_crystal_model": 11, "index_reflect": 11, "setup_index": 11, "show_experi": 11, "apply_hkl_offset": 11, "offset": [11, 15, 23, 52, 53, 63, 64, 74, 78, 81, 82, 86], "stillsindex": 11, "choose_best_orientation_matrix": 11, "candidate_orientation_matric": 11, "experiment_list_for_cryst": 11, "identify_outli": 11, "stillsindexerbasisvectorsearch": 11, "basisvectorsearch": 11, "stillsindexerknownorient": 11, "known_orient": [11, 83], "indexerknownorient": 11, "stillsindexerlatticesearch": 11, "latticesearch": 11, "calc_2d_rmsd_and_displac": 11, "e_refin": 11, "graph_verbos": 11, "plot_displac": 11, "kwarg": [11, 14, 16, 24, 31, 33], "strategi": [11, 14, 16, 47, 53, 59, 60, 82, 86, 95], "search": [11, 29, 37, 38, 53, 59, 60, 64, 74, 77, 78, 83, 85, 96], "1d": [11, 53, 82, 86, 87], "fft": [11, 53, 74, 82, 83, 86, 87], "dimensionless": 11, "radial": [11, 47], "7000": 11, "total": [11, 14, 47, 49, 74, 76, 79, 81, 82, 83, 84, 86, 87, 88], "roughli": [11, 43], "evenli": 11, "solid": 11, "hemispher": 11, "onto": [11, 53, 77, 78], "scalar": 11, "linear": [11, 14, 35, 53, 54, 63, 82, 83, 86, 87], "densiti": [11, 18, 35, 53, 77], "aggreg": 11, "shortest": 11, "non": [11, 14, 53, 59, 60, 72, 84], "collinear": 11, "wave": 11, "greatest": [11, 81], "spectral": 11, "steller": [11, 53], "rossmann": 11, "1997": [11, 53, 81, 86], "30": [11, 45, 53, 66, 73, 74, 75, 81, 82, 83, 84, 85, 86, 87, 97], "1036": [11, 73, 82], "1040": [11, 76], "2004": [11, 35, 64, 84], "37": [11, 53, 64, 73, 74, 76, 77, 81, 82, 83, 84, 85, 86], "399": [11, 64, 76, 82, 83, 84, 85, 86, 95], "409": [11, 64, 73, 81, 82, 84, 85, 86], "maximum": [11, 15, 16, 17, 18, 38, 40, 41, 43, 44, 46, 47, 51, 52, 53, 54, 59, 60, 63, 64, 72, 76, 82, 84, 86, 87, 88], "dimens": [11, 14, 18, 23, 40, 53, 59, 60, 63, 72, 74, 76, 82, 83, 84, 86, 87], "primit": [11, 53, 60, 73, 77, 78, 82, 86, 87, 88], "characteristic_grid": [11, 53], "frequenc": [11, 53], "radian": [11, 53, 54], "029": [11, 53, 79, 82, 84, 88], "phil_help": 11, "lower": [11, 18, 53, 54, 59, 60, 63, 73, 81, 82, 84, 86, 87], "narrow": [11, 47, 51, 53, 83, 87], "scope": [11, 12, 15, 33, 37, 53], "min_cel": [11, 53], "ascrib": 11, "assign": [11, 22, 53, 72, 77, 82, 83, 84, 86, 87, 88], "spatial": 11, "appreci": 11, "procedur": [11, 40, 74, 82, 83, 84, 86, 87], "mitig": 11, "sometim": [11, 52, 73, 82, 86], "curtail": 11, "certain": [11, 35, 38, 53, 54, 59, 60, 63, 72, 73, 84, 88], "ignor": [11, 26, 33, 52, 53, 58, 59, 60, 77, 84], "1986": [11, 86, 97], "eec": 11, "cooper": 11, "phase": [11, 73, 77], "iii": 11, "28": [11, 73, 78, 81, 82, 83, 84, 85, 86, 87, 95], "pari": 11, "lure": 11, "campbel": 11, "1998": [11, 83], "31": [11, 35, 73, 74, 76, 81, 82, 83, 84, 85, 86, 95], "407": [11, 82, 86], "413": [11, 73, 82, 86], "n_point": [11, 53], "limit": [11, 14, 37, 40, 41, 43, 46, 47, 49, 50, 51, 53, 54, 55, 58, 63, 65, 67, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 92, 95, 97], "b_iso": [11, 53], "isotrop": [11, 18, 40, 77, 84], "b_factor": 11, "math": 11, "05": [11, 14, 21, 40, 41, 51, 53, 54, 58, 69, 74, 75, 76, 81, 82, 83, 84, 85, 86, 88, 96], "rmsd_cutoff": [11, 53, 59, 60], "rmsd": [11, 14, 53, 59, 60, 63, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 96], "map": [11, 18, 40, 42, 45, 47, 50, 51, 62, 65, 76, 77, 78, 82, 84, 86, 87], "peak": [11, 47, 51, 53, 74, 82, 85, 86, 87, 94], "peak_volume_cutoff": [11, 53], "larger": [11, 53, 54, 56, 59, 60, 78, 84], "volum": [11, 41, 43, 51, 53, 54, 58, 59, 60, 72, 73, 74, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 97], "largest": [11, 14, 38, 40, 84], "conserv": 11, "minimum": [11, 14, 17, 18, 40, 41, 43, 44, 46, 47, 51, 53, 54, 58, 59, 60, 63, 72, 76, 82, 84, 85, 86], "quit": [11, 21, 44, 53, 73, 74, 75, 78, 84], "realspacegridsearch": 11, "target_unit_cel": 11, "known": [11, 25, 47, 53, 64, 74, 77, 78, 81, 82, 86, 87, 96], "difficult": [11, 53, 74, 78, 81, 83, 84, 87], "especi": [11, 53, 73, 84, 86, 87], "accord": [11, 14, 18, 42, 46, 47, 76], "well": [11, 29, 44, 57, 62, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 87], "reconstruct": 11, "observ": [11, 14, 16, 18, 35, 40, 41, 44, 53, 59, 60, 62, 65, 66, 69, 74, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88], "examin": [11, 38, 54, 73], "orient": [11, 35, 39, 41, 51, 53, 54, 57, 58, 59, 60, 62, 72, 73, 75, 81, 82, 86, 87, 88, 95, 96, 97], "nearli": [11, 14, 78, 81], "shorter": [11, 21, 74], "elimin": [11, 68, 76], "axford": [11, 83, 95], "sutton": [11, 95], "stuart": [11, 95, 97], "2014": [11, 40, 84, 95, 99], "d70": 11, "2652": [11, 95], "2666": [11, 81], "compute_funct": [11, 18], "until": [11, 14, 53, 59, 60, 73, 77, 78, 81, 82, 86, 87], "match": [11, 14, 18, 29, 33, 38, 48, 53, 59, 60, 66, 74, 81, 82, 83, 86, 87, 88], "score_vector": 11, "search_direct": 11, "length": [11, 14, 18, 33, 35, 53, 73, 77, 81, 86], "search_vector": 11, "basis_vector": 11, "max_combin": [11, 53], "filter_known_symmetri": 11, "crystal_model": [11, 22], "target_symmetri": 11, "relative_length_toler": [11, 18, 40, 53, 69], "absolute_angle_toler": [11, 18, 40, 53, 69], "max_delta": [11, 18, 53], "filter": [11, 12, 14, 15, 16, 18, 38, 40, 41, 44, 45, 46, 47, 48, 50, 51, 53, 54, 58, 63, 70, 72, 74, 75, 82, 84, 85, 86, 87], "toler": [11, 18, 38, 41, 44, 51, 53, 54, 58, 63, 72, 75, 83, 88], "le": [11, 18, 53, 78], "page": [11, 18, 48, 53, 73, 74, 78, 79], "delta": [11, 14, 18, 40, 41, 51, 53, 54, 58, 63, 72, 73, 78, 82, 84, 85, 86, 87, 96], "filter_similar_orient": 11, "other_crystal_model": 11, "minimum_angular_separ": [11, 53], "optimis": [11, 63, 64, 72, 73, 74, 78, 82, 84, 86, 87], "basisvectorminimis": 11, "reciprocal_lattice_point": 11, "lbfgs_termination_param": 11, "lbfgs_core_param": 11, "lbfg": [11, 14, 18, 63, 82, 84, 86], "core_paramet": 11, "compute_functional_and_gradi": [11, 14, 18], "basisvectortarget": 11, "optimise_basis_vector": 11, "lowresspotmatch": 11, "target_symmetry_primit": 11, "max_lattic": [11, 53, 85, 96], "solut": [11, 14, 40, 53, 63, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88], "assess": [11, 48, 73, 74, 76, 82, 83, 84, 86, 87, 96], "against": [11, 15, 18, 47, 59, 63, 70, 76, 77, 81, 82, 83, 86, 88, 89], "electron": [11, 21, 47, 52, 53, 73, 74, 75, 90, 95, 97], "collect": [11, 15, 49, 66, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97], "laue": [11, 18, 40, 69, 72, 73, 76, 82, 84, 85, 86, 94], "zone": [11, 58, 74], "principl": [11, 21, 34], "good": [11, 38, 63, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 92], "stop": [11, 15, 41, 47, 49, 51, 54, 58, 63, 69, 72, 74, 75, 82, 84, 86], "shadow": [11, 45, 47, 51, 52, 58, 81], "primarili": [11, 44, 53, 82, 86, 87], "extract": [11, 16, 33, 78, 82, 83, 85, 86, 87], "modelevalu": 11, "refinement_param": 11, "evalu": [11, 14, 15, 46, 53, 76, 95], "modelrank": 11, "item": [11, 16, 33, 53, 54, 59, 60, 74, 82, 85, 86], "best_model": 11, "modelrankfilt": 11, "check_doubled_cel": [11, 53], "likelihood_cutoff": [11, 53], "volume_cutoff": [11, 53], "n_indexed_cutoff": [11, 53], "filter_by_likelihood": 11, "filter_by_n_index": 11, "filter_by_volum": 11, "update_analysi": 11, "modelrankweight": 11, "power": [11, 53, 76, 82, 86], "volume_weight": [11, 53], "n_indexed_weight": [11, 53], "rmsd_weight": [11, 53], "combined_scor": 11, "score_by_fraction_index": 11, "score_by_rmsd_xi": 11, "score_by_volum": 11, "model_likelihood": 11, "n_index": 11, "fraction_index": 11, "hkl_offset": [11, 61, 78], "alia": [11, 12, 15, 33, 63], "filter_doubled_cel": 11, "max_cell_multipli": 11, "step_siz": [11, 53], "45": [11, 53, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 88], "nearest_neighbor_percentil": [11, 53], "histogram_bin": [11, 53], "nn_per_bin": [11, 53], "max_height_fract": [11, 53], "filter_ic": [11, 53], "filter_overlap": [11, 53], "overlaps_bord": [11, 53], "nearest_neighbor": 11, "neighboranalysi": 11, "percentil": [11, 53], "plot_histogram": 11, "filenam": [11, 14, 16, 18, 24, 26, 29, 30, 33, 36, 38, 41, 44, 46, 47, 50, 52, 53, 54, 58, 59, 60, 61, 63, 66, 68, 69, 70, 74, 76, 83, 87, 96], "nn_hist": 11, "figsiz": 11, "12": [11, 40, 73, 74, 76, 78, 81, 82, 83, 84, 85, 86, 88], "assign_indic": 11, "assignindicesglob": 11, "assignindicesstrategi": 11, "assignindicesloc": 11, "epsilon": [11, 18, 53], "l_min": [11, 53], "nearest_neighbour": [11, 53], "20": [11, 14, 16, 38, 40, 41, 46, 47, 48, 51, 53, 54, 58, 59, 60, 63, 66, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86], "compare_orientation_matric": [11, 71], "difference_rotation_matrix_axis_angl": 11, "crystal_a": 11, "crystal_b": 11, "target_angl": 11, "rotation_matrix_differ": 11, "miller_indic": 11, "pairwis": [11, 39, 76], "symmetryhandl": 11, "space_group": [11, 18, 22, 30, 33, 34, 39, 40, 43, 45, 46, 47, 50, 51, 53, 61, 69, 72, 73, 74, 77, 81, 82, 83, 85, 86, 88, 96], "apply_symmetri": 11, "cb_op": [11, 18, 60, 73, 74, 77, 78, 82, 85, 86], "sgtbx": [11, 18, 22, 24, 53], "change_of_basis_op": [11, 18, 24, 61, 69, 74, 77, 82, 86], "calc_acentric_subgroup": 11, "group_info": 11, "space_group_info": 11, "bravais_t": 11, "find_matching_symmetri": 11, "target_space_group": 11, "best_monoclinic_beta": [11, 18, 40, 60, 69, 72, 74, 82], "target_bravais_str": 11, "groups_cach": 11, "fn": 11, "metric_supergroup": 11, "executor": [12, 19], "boost_python": 12, "executorwrapp": 12, "fit_profil": 12, "profile_validation_report": 12, "profile_model_report": 12, "profile_fitt": 12, "block_siz": [12, 66, 82, 86], "block_size_unit": 12, "stuff": [12, 33], "integrator2d": [12, 19], "processorclass": 12, "processor2d": [12, 19], "finalize_reflect": 12, "post": [12, 82, 86, 87, 90, 95], "initialize_reflect": 12, "integrator3d": [12, 19], "processor3d": [12, 19], "integrator3dthread": [12, 19], "finalis": [12, 14], "initialis": [12, 14, 15, 16, 17, 18, 31, 33, 82, 84, 86], "integratorexecutor": [12, 19], "valid_foreground_threshold": [12, 54], "75": [12, 45, 54, 73, 78, 79, 81, 82, 84, 85, 86, 95], "frame0": 12, "frame1": 12, "job": [12, 16, 47, 53, 54, 59, 60, 63, 74, 81, 82, 83, 86, 87], "last": [12, 14, 53, 59, 60, 74, 83, 84], "integratorflat3d": [12, 19], "flatten": [12, 18, 33], "processorflat3d": [12, 19], "integratorsingle2d": [12, 19], "processorsingle2d": [12, 19], "integratorstil": [12, 19], "processorstil": [12, 19], "joblist": [12, 19], "tiny_int_2": 12, "tini": [12, 26], "shoebox_memori": 12, "size_t": [12, 15, 16, 24, 26], "stack": 12, "valid": [12, 14, 15, 26, 33, 48, 49, 53, 54, 59, 60, 63, 84, 85], "from_phil": [12, 21, 23, 25, 29], "_processorrot": 12, "processor": [12, 14, 16, 48, 54, 72, 82, 83, 86, 87], "flat": [12, 35, 47, 74, 82, 86, 87], "_processor": 12, "profilemodellerexecutor": [12, 19], "profilevalidatorexecutor": [12, 19], "reflectionmanag": [12, 14, 19], "finish": [12, 33, 63, 82, 86, 87], "num_reflect": 12, "frame_hist": [12, 19], "width": [12, 14, 15, 18, 38, 46, 47, 50, 51, 53, 59, 60, 66, 75, 81, 82, 86, 87], "80": [12, 33, 40, 73, 78, 79, 81, 82, 84, 85, 86, 87], "histogram": [12, 53, 74, 76, 82, 85, 86], "generate_phil_scop": [12, 16, 19], "hist": [12, 19], "charact": [12, 51, 52], "nframes_hist": [12, 19], "princip": [14, 40, 76, 84], "reflection_manag": 14, "blockcalcul": [14, 19], "block": [14, 24, 53, 54, 59, 60, 63, 66, 76, 81, 82, 83, 86, 87, 93], "block_centr": 14, "centr": [14, 18, 23, 37, 41, 47, 51, 52, 53, 54, 57, 58, 59, 60, 64, 74, 75, 76, 80, 82, 86, 87, 94, 97], "per_imag": [14, 67], "per_width": 14, "nref_per_degre": 14, "max_sample_s": 14, "min_sample_s": 14, "close_to_spindle_cutoff": [14, 53, 59, 60, 81], "scan_margin": [14, 53, 59, 60], "outlier_detector": 14, "weighting_strategy_overrid": 14, "maintain": [14, 48], "random": [14, 38, 53, 54, 59, 60, 63, 64, 72, 81, 84], "experiment_typ": 14, "filter_ob": 14, "sel": 14, "criteria": [14, 43, 46, 76, 82, 84, 86], "analysi": [14, 18, 37, 40, 49, 53, 56, 59, 60, 63, 69, 72, 77, 78, 80, 81, 85, 87, 88, 90, 95, 96, 97], "centroidanalysi": 14, "get_accepted_refs_s": 14, "inclus": [14, 40, 46, 47, 53, 54, 59, 60, 63, 69, 72, 74], "potenti": [14, 53, 59, 60, 61, 72, 73, 76, 82, 86], "get_centroid_analys": 14, "debug": [14, 44, 53, 54, 57, 59, 81, 82, 86, 87], "get_free_reflect": 14, "get_index": 14, "get_match": 14, "everi": [14, 38, 47, 51, 53, 54, 55, 59, 60, 63, 66, 69, 72, 76, 81, 82, 83, 86, 87], "get_ob": 14, "get_sample_s": 14, "print_stats_on_match": 14, "reset_accepted_reflect": 14, "reset": [14, 63, 73], "reflectionmanagerfactori": [14, 19], "from_parameters_reflections_experi": 14, "do_stil": 14, "stillsreflectionmanag": [14, 19], "overload": [14, 74, 79, 81, 82, 84, 85, 86], "too": [14, 40, 53, 59, 60, 74, 78, 81, 82, 83, 84, 86, 87], "spindl": [14, 53, 59, 60, 81, 82, 86, 87], "delpsi": 14, "residu": [14, 53, 59, 60, 76, 81, 82, 86, 87], "scheme": [14, 63, 82, 86, 87], "weighting_strategi": [14, 53, 59, 60], "constantweightingstrategi": [14, 19], "wx": 14, "wy": 14, "wz": 14, "calculate_weight": 14, "z": [14, 18, 21, 22, 23, 25, 33, 40, 43, 61, 63, 73, 76, 78, 82, 84, 86, 87, 90], "delpsic": 14, "attribut": [14, 15, 33], "otherwis": [14, 21, 46, 47, 50, 51, 53, 59, 60, 64, 74, 75, 81, 82, 86, 87, 92], "externaldelpsiweightingstrategi": [14, 19], "statisticalweightingstrategi": [14, 19], "deltapsi": 14, "var": 14, "stillsweightingstrategi": [14, 19], "delpsi_const": [14, 53, 59, 60], "1000000": [14, 23, 53, 59, 60], "refinerfactori": [14, 19], "pred_param": 14, "param_report": 14, "refman": 14, "refineri": [14, 19, 53, 59, 60, 63], "get_experi": 14, "get_param_report": 14, "parameter_correlation_plot": 14, "selection_used_for_refin": 14, "predict_for_reflection_t": 14, "predict_for_index": 14, "note": [14, 35, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 91, 96], "histori": [14, 53, 59, 60, 84, 85, 87], "accessor": 14, "expos": 14, "mandatori": 14, "predictionparameteris": 14, "parameterreport": 14, "calc_exp_rmsd_t": 14, "link": [14, 65, 88], "get_parameter_correlation_matrix": 14, "col_select": [14, 59, 70], "jacobian": [14, 53, 59, 60], "engin": [14, 18, 40, 44, 53, 59, 60, 63, 72], "addition": [14, 82, 84, 86], "used_in_refin": [14, 46], "expens": [14, 87], "skip_deriv": 14, "suppli": [14, 52, 53, 54, 59, 60, 63, 75], "print_exp_rmsd_t": 14, "print_out_of_sample_rmsd_t": 14, "rsmd": [14, 83], "track": [14, 53, 59, 60, 76, 78, 82, 86, 87], "print_panel_rmsd_t": 14, "print_step_t": 14, "rmsds_for_reflection_t": 14, "unweight": 14, "config_refineri": 14, "constraints_manag": 14, "could": [14, 29, 53, 59, 60, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 93], "config_restraint": 14, "restraint": [14, 53, 59, 60, 63, 74, 75, 83, 88], "predictionparamet": 14, "config_spars": 14, "spars": [14, 18, 40, 53, 59, 60, 81, 95, 96], "datatyp": 14, "config_target": 14, "predictor": [14, 17], "restraints_param": 14, "do_spars": 14, "from_parameters_data_experi": 14, "reflections_after_outlier_reject": 14, "scanvaryingrefin": [14, 19], "levenbergmarquardtiter": [14, 19], "gaussnewtoniter": [14, 19], "simplelbfg": [14, 19, 53, 59, 60, 63], "lbfgscurv": [14, 19, 53, 59, 60], "concret": 14, "adaptlbfg": [14, 19], "adapt": [14, 75, 94], "bfg": [14, 18], "minimis": [14, 18, 39, 53, 59, 60, 63, 72, 82, 84, 86, 87, 89], "callback_after_step": [14, 18, 82, 84, 86], "minim": [14, 18, 40, 72, 76, 82, 84, 86, 95, 96], "reach": [14, 53, 59, 60, 97], "termin": [14, 18, 53, 59, 60, 63, 79, 81, 91], "compute_functional_gradients_and_curvatur": [14, 18], "run_lbfg": 14, "curvatur": [14, 18, 40, 72], "adaptlstbx": [14, 19], "prediction_parameteris": 14, "max_iter": [14, 18, 40, 53, 59, 60, 63, 72], "non_linear_l": 14, "non_linear_ls_mixin": 14, "lstbx": 14, "n_paramet": [14, 82, 84, 86], "n_equat": 14, "opposite_of_grad_object": 14, "normal_matrix": 14, "versa": 14, "packed_u_accessor": 14, "build_up": 14, "objective_onli": 14, "calculate_esd": 14, "esd": [14, 88], "parameter_vector_norm": 14, "restart": 14, "set_cholesky_factor": 14, "choleski": 14, "dens": 14, "step_backward": 14, "step_forward": 14, "disablempmixin": [14, 19], "mixin": 14, "multiprocess": [14, 24, 53, 54, 59, 60, 82, 86], "set_nproc": 14, "kwd": 14, "gauss": 14, "newton": 14, "convergence_as_shift_over_esd": 14, "1e": [14, 18, 23, 24, 25, 38, 41, 44, 51, 54, 58, 63], "damping_valu": 14, "0007": 14, "gradient_threshold": 14, "max_shift_over_esd": 14, "15": [14, 40, 53, 54, 63, 73, 76, 81, 82, 83, 84, 85, 86], "preced": 14, "prepare_for_step": 14, "update_journ": 14, "test_for_termin": 14, "step_threshold": 14, "dict": [14, 15, 18, 21, 23, 24, 25, 26, 33], "extra": [14, 30, 48, 53, 59, 60, 81, 87], "hidden": [14, 81], "eas": 14, "add_column": 14, "add_row": 14, "fail": [14, 53, 59, 60, 73, 74, 82, 83, 85, 86, 88, 93], "wrong": [14, 74, 78, 81, 82, 86], "del_last_row": 14, "delet": [14, 38, 54], "from_json_fil": [14, 24], "get_nrow": 14, "reason_for_termin": 14, "set_last_cel": 14, "to_json_fil": 14, "compute_functional_gradients_diag": [14, 18], "emploi": [14, 78], "levenberg": [14, 82, 84, 86], "marquadt": 14, "add_constant_to_diagon": 14, "mu": [14, 23, 35, 82, 86], "diagon": [14, 18, 77], "normal": [14, 21, 35, 38, 41, 51, 52, 53, 54, 58, 59, 60, 78, 79, 82, 86, 87], "report_progress": 14, "callback": 14, "loop": [14, 76, 83], "overridden": [14, 52], "possibli": [14, 18, 37, 76, 77], "setup_mu": 14, "tau": 14, "001": [14, 40, 53, 59, 60, 73, 82, 84], "get_correlation_matrix_for_step": 14, "decompress": 14, "get_num_step": 14, "jacobian_condition_numb": 14, "condit": [14, 53, 59, 60, 69, 74, 92], "cond": 14, "inv": 14, "rectangular": 14, "moor": 14, "penros": 14, "pseudoinvers": 14, "norm": 14, "ratio": [14, 40, 76, 84], "smallest": [14, 53, 59, 60], "singular": 14, "sig_": 14, "sig_min": 14, "accur": [14, 47, 50, 51, 73, 78, 83, 88, 95, 97], "equat": [14, 40], "amplifi": 14, "larg": [14, 44, 51, 53, 59, 60, 63, 70, 72, 74, 75, 76, 81, 82, 84, 86, 87, 88, 89, 96, 97], "linearli": [14, 63], "detect": [14, 53, 59, 60, 73, 78, 82, 83, 84, 86, 97], "situat": [14, 74, 81, 82, 83, 86], "shift": [14, 53, 59, 60, 62, 78, 81, 82, 86, 87], "problemat": 14, "row": 14, "reduct": [14, 53, 77, 80, 82, 86, 87, 97], "linearis": 14, "issu": [14, 54, 74, 76, 77, 78, 82, 83, 84, 86, 87, 90, 93], "squar": [14, 53, 59, 60, 74, 82, 86, 87], "marquardt": [14, 82, 84, 86], "polici": 14, "dictat": 14, "control": [14, 38, 43, 44, 53, 54, 59, 60, 70, 74, 87, 89, 95, 97], "split_jacobian_into_block": 14, "test_objective_increasing_but_not_nref": 14, "caus": [14, 15, 74, 77, 78, 82, 86, 87, 92, 93], "stai": [14, 76], "bad": [14, 54, 74, 78, 79, 81, 82, 83, 84, 86, 87, 93], "sign": [14, 73, 82, 86, 87], "test_rmsd_converg": 14, "converg": [14, 41, 51, 54, 58, 63, 81], "leastsquarespositionalresidualwithrmsdcutoff": [14, 19], "restraints_parameteris": 14, "frac_binsize_cutoff": 14, "33333": 14, "absolute_cutoff": [14, 53, 59, 60], "gradient_calculation_blocks": [14, 53, 59, 60], "intris": 14, "criterion": [14, 53, 59, 60, 63, 82, 84, 86, 87], "leastsquarespositionalresidualwithrmsdcutoffspars": [14, 19], "sparsegradientsmixin": [14, 19], "gradient": [14, 18, 53, 59, 60], "formula": [14, 18, 82, 84, 86], "concaten": 14, "storag": 14, "queri": 14, "relev": [14, 43, 44, 82, 84, 86, 87], "With": [14, 35, 73, 74, 75, 76, 81, 83], "place": [14, 24, 34, 44, 52, 73, 75, 77, 81, 82, 86], "auxiliari": 14, "calculate_gradi": 14, "approxim": [14, 35, 37, 43, 63, 72, 74, 77, 81, 84], "side": [14, 58, 74, 81], "compute_residu": 14, "compute_residuals_and_gradi": 14, "compute_restraints_functional_gradients_and_curvatur": 14, "compute_restraints_residuals_and_gradi": 14, "dim": [14, 18], "get_num_match": 14, "get_num_matches_for_experi": 14, "iexp": [14, 84], "get_num_matches_for_panel": 14, "ipanel": 14, "predict_for_free_reflect": 14, "rmsd_name": 14, "rmsd_x": [14, 73, 74, 78, 81, 82, 83, 85, 86, 87], "rmsd_y": [14, 73, 74, 78, 81, 82, 83, 85, 86, 87], "rmsd_phi": [14, 81, 82, 83, 85, 86, 87], "rmsd_unit": 14, "rmsds_for_experi": 14, "rmsds_for_panel": 14, "caution": 14, "_rmsds_core": 14, "split_matches_into_block": 14, "concurr": [14, 63], "exce": [14, 52], "update_match": 14, "forc": [14, 16, 17, 38, 41, 44, 47, 51, 53, 54, 58, 59, 60, 73, 78, 82], "date": [14, 81], "targetfactori": [14, 19], "from_parameters_and_experi": 14, "target_stil": 14, "leastsquaresstillsresidualwithrmsdcutoff": [14, 19], "ewald": [14, 53, 59, 60, 74], "sphere": [14, 53, 59, 60, 74], "rmsd_deltapsi": 14, "leastsquaresstillsresidualwithrmsdcutoffspars": [14, 19], "datastructur": 15, "arrayscalingmodel": 15, "limit_image_rang": 15, "new_image_rang": 15, "modifi": [15, 40, 41, 47, 48, 50, 53, 64, 66, 73, 81, 82, 83, 84, 85, 86], "involv": [15, 35, 76], "plot_model_compon": 15, "plotli": 15, "dosedecai": 15, "exponenti": 15, "dataset": [15, 18, 33, 40, 44, 47, 53, 54, 59, 60, 61, 63, 69, 72, 74, 76, 77, 78, 81, 82, 84, 85, 86, 87, 89, 97], "fix_initial_paramet": 15, "dosedecayscalingmodel": 15, "get_shared_compon": 15, "dose_decai": [15, 63, 72], "kbscalingmodel": 15, "physicalscalingmodel": 15, "scaler": [15, 84], "cycl": [15, 41, 51, 53, 54, 58, 59, 63, 64, 72, 78, 81, 82, 84, 86, 87], "fixed_compon": 15, "previous": [15, 82, 84, 86], "load_error_model": 15, "error_param": 15, "n_param": 15, "record_intensity_combination_imid": 15, "set_error_model": 15, "set_scaling_model_as_sc": 15, "boolean": [15, 31, 46], "set_scaling_model_as_unsc": 15, "set_valid_image_rang": 15, "to_dict": [15, 22, 23, 24, 25], "model_param": 15, "calc_n_param_from_bin": 15, "value_min": [15, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 67, 68, 69, 70, 72], "value_max": [15, 40, 43, 44, 45, 46, 47, 52, 53, 54, 59, 60, 63, 69, 72], "n_bin": [15, 38, 47, 51, 54, 63, 72], "gaussian": [15, 31, 41, 47, 51, 54, 58, 82, 86, 87], "smoother": [15, 53, 59, 60, 73, 75, 87], "calculate_new_offset": 15, "current_image_0": 15, "new_image_0": 15, "new_norm_fac": 15, "n_old_param": 15, "n_new_param": 15, "determine_auto_absorption_param": 15, "initialise_smooth_input": 15, "osc_rang": 15, "one_osc_width": 15, "norm_fac": 15, "make_combined_plot": 15, "plot_scaling_model": 15, "ih_tabl": 15, "reject_outli": 15, "determine_outlier_index_arrai": 15, "normdevoutlierreject": 15, "zmax": 15, "outlierrejectionbas": 15, "deviat": [15, 35, 40, 47, 53, 54, 60, 63, 70, 72, 74, 77, 79, 81, 82, 84, 85, 86, 93], "ihtabl": 15, "_do_outlier_reject": 15, "_outlier_indic": 15, "upon": [15, 76], "popul": [15, 26, 33, 84, 96], "final_outlier_arrai": 15, "simplenormdevoutlierreject": 15, "targetedoutlierreject": 15, "investig": [15, 74, 75, 77, 82, 83, 84, 86], "determine_esq_outlier_index_arrai": 15, "emax": [15, 43, 63, 72], "classifi": [15, 47], "ih": [15, 63, 82, 84, 86], "rejectiob": 15, "importantli": 15, "outlier_index_arrai": 15, "rais": [15, 52, 53, 59, 60], "valueerror": [15, 33], "invalid": [15, 50, 74, 82, 85, 86], "compar": [15, 37, 38, 44, 63, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 96], "outlier_in_sc": 15, "unscal": [15, 44, 75, 78, 82, 86, 87], "prefilt": 15, "finder": [16, 82, 86], "extractpixelsfromimag": [16, 19], "threshold_funct": 16, "region_of_interest": [16, 47], "max_strong_pixel_fract": [16, 47], "compute_mean_background": [16, 47], "extractpixelsfromimage2dnoshoebox": [16, 19], "min_spot_s": [16, 47, 49, 73, 75, 81, 82, 85, 86], "max_spot_s": [16, 47, 75], "filter_spot": 16, "extractspot": [16, 19], "mp_method": 16, "mp_nproc": 16, "mp_njob": 16, "mp_chunksiz": 16, "no_shoeboxes_2d": 16, "min_chunks": [16, 47], "write_hot_pixel_mask": 16, "extractspotsparalleltask": [16, 19], "execut": [16, 74, 83], "task": [16, 54, 76, 82, 83, 86, 87], "cluster": [16, 18, 38, 40, 47, 48, 54, 72, 82, 83, 84, 86, 96], "spotfind": [16, 19, 47, 48, 75, 79, 82, 86, 95, 96], "mask_gener": 16, "scan_rang": [16, 47, 54], "write_hot_mask": [16, 47], "hot_mask_prefix": [16, 47], "hot_mask": [16, 47], "is_stil": 16, "advanc": [16, 80, 82, 83, 86, 87, 89, 97], "remap": 16, "stills_process": [16, 96], "pixel_list_to_reflection_t": [16, 19], "pixel_label": 16, "pixellistlabel": 16, "pixel_list_to_shoebox": [16, 19], "shoeboxes_to_reflection_t": [16, 19], "backgroundgradientfilt": [16, 19], "background_s": [16, 47], "gradient_cutoff": [16, 47], "filterrunn": [16, 19], "success": [16, 18, 73, 74, 75, 76, 82, 83, 86, 87, 96], "check_flag": 16, "re": [16, 34, 48, 60, 61, 72, 75, 76, 83, 84, 85], "equal": [16, 18, 35, 43, 47, 53, 54, 56, 59, 60, 63, 66, 72, 77, 84], "peakcentroiddistancefilt": [16, 19], "maxd": 16, "spotdensityfilt": [16, 19], "nbin": [16, 43, 63, 72], "002": [16, 46, 47, 50, 51, 82, 84], "spotfinderfactori": [16, 19], "configure_filt": 16, "configure_threshold": 16, "load_imag": 16, "filename_or_data": 16, "reflection_predictor": 17, "reflectionpredictor": [17, 19], "dmin": [17, 74, 82, 83, 85, 86], "dmax": [17, 74, 82, 83, 85, 86], "margin": [17, 41, 51, 54, 77], "force_stat": [17, 41, 51, 53, 54, 58, 59, 60, 73, 75], "pad": [17, 23, 41, 45, 51, 54, 81], "proper": [17, 33, 73], "resolution_filter_from_arrai": [18, 19], "min_i_mean_over_sigma_mean": [18, 40, 69, 72], "min_cc_half": [18, 40, 69, 72], "resolution_filter_from_reflections_experi": [18, 19], "nativ": [18, 79, 81, 84, 85], "symmetry_bas": [18, 19], "ml_aniso": [18, 40, 69, 72], "lattice_symmetry_max_delta": [18, 40, 69, 72], "autotyp": 18, "kernel": [18, 40, 47, 51, 69, 72], "quasi": [18, 40, 69, 72, 84, 94], "ml_iso": [18, 40, 69, 72], "altogeth": 18, "1982": [18, 40, 84], "cc\u00bd": [18, 40, 43, 72, 73, 76, 82, 84, 86], "median": [18, 40, 44, 53, 59, 60, 63, 84], "monoclin": [18, 40, 60, 69, 72, 74, 82, 86, 87], "center": [18, 40, 60, 69, 72, 77, 82, 86], "i2": [18, 40, 60, 69, 72, 74, 82], "c2": [18, 40, 60, 69, 72, 74, 82, 86], "obliqu": [18, 40, 60, 69, 72], "smaller": [18, 40, 53, 55, 59, 60, 66, 69, 72, 73, 74], "kernel_normalis": 18, "ml_aniso_normalis": 18, "anisotrop": [18, 84], "likelihood": [18, 40, 41, 51, 54, 58, 69, 73, 76, 82, 84, 85, 86, 87], "ml_iso_normalis": 18, "laue_group": [18, 69, 72, 84], "correlationcoefficientaccumul": [18, 19], "increment": [18, 63, 74, 76], "coeffici": [18, 35, 37, 40, 60, 72, 78, 81, 82, 86, 87], "pearson": 18, "en": 18, "wikipedia": 18, "org": [11, 18, 47, 48, 53, 59, 60, 75, 82, 88], "pearson_correlation_coeffici": 18, "for_a_sampl": 18, "denomin": 18, "lauegroupanalysi": [18, 19], "pointless": [18, 40, 44, 69, 75, 77, 84, 86], "d62": [18, 69], "72": [18, 40, 69, 73, 74, 79, 81, 82, 83, 84, 86, 87, 95], "82": [18, 69, 73, 78, 79, 81, 82, 84, 85, 86, 95], "2011": [18, 69, 79, 95], "d67": [18, 69, 79], "282": [18, 69, 73, 82, 86], "292": [18, 69, 73, 76, 81, 82, 84, 86], "as_dict": 18, "as_json": [18, 24], "pretti": [18, 78, 87], "scorecorrelationcoeffici": [18, 19], "cc": [18, 40, 43, 72, 73, 74, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88], "sigma_cc": 18, "expected_cc": 18, "lower_bound": 18, "upper_bound": 18, "p_cc_given_not_": 18, "sym": 18, "op": [18, 73, 77, 78, 79, 82, 85, 86, 88], "NOT": [18, 92], "p_cc_given_": 18, "cauchi": 18, "cc_true": 18, "p_s_given_cc": 18, "scoresubgroup": [18, 19], "subgroup": 18, "sym_op_scor": 18, "absent": [18, 40, 68, 72, 82, 84, 85, 86], "overal": [18, 40, 41, 44, 51, 53, 54, 58, 59, 60, 72, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 96], "zcc": [18, 40, 73, 76, 82, 84, 85, 86, 87], "appendix": 18, "lattice_symmetri": 18, "metric_subgroup": 18, "scoresymmetryel": [18, 19], "patterson_group": 18, "confid": [18, 37, 40, 73, 74, 76, 82, 84, 85, 86, 87], "z_cc_for": 18, "z_cc_against": 18, "z_cc_net": 18, "net": [18, 48, 79, 82, 87, 90], "cc_for": 18, "cc_against": 18, "max_angular_differ": 18, "symmetris": 18, "p1": [18, 22, 53, 73, 74, 76, 82, 86, 96], "sym_op": 18, "cc_sig_fac": 18, "analys": [18, 37, 40, 52, 53, 59, 60, 74, 82, 83, 84, 86, 87, 90], "presenc": [18, 40, 77, 84, 88, 95], "a1": [18, 82, 86], "rt_mx": 18, "z_cc": 18, "n_ref": 18, "xyz": 18, "trunccauchy_pdf": [18, 19], "loc": 18, "truncat": [18, 53, 54, 59, 60, 82, 84, 85, 86], "pdf": [18, 53, 57, 59, 60, 71], "upper": [18, 54, 63, 72, 87], "reindex": [18, 24, 40, 53, 60, 71, 72, 73, 74, 75, 76, 77, 78, 82, 84, 85, 86, 87, 88], "reindex_to_refer": 18, "determine_reindex_operator_against_refer": [18, 19], "test_miller_set": 18, "reference_miller_set": 18, "twin": [18, 61, 76, 79], "2018": [18, 40, 75, 79, 84, 95], "d74": [18, 40, 79, 84], "405": [18, 40, 81, 82, 83, 84, 86, 95], "410": [18, 40, 82, 84, 86, 95], "patterson": [18, 40, 73, 76, 82, 84, 85, 86, 87, 95], "ambigu": [18, 40, 61, 72, 76, 77, 84, 95], "cosymanalysi": [18, 19], "seed_dataset": 18, "subject": 18, "scope_extract": [18, 21], "seed": [18, 40, 53, 54, 59, 60, 64, 69, 72], "star": [18, 77], "symmetryanalysi": [18, 19], "coord": 18, "cb_op_inp_min": 18, "subgroups_t": 18, "summary_t": 18, "sym_ops_t": 18, "extract_reference_intens": [18, 19], "iotbx": 18, "lattice_id": 18, "min_pair": [18, 40, 72], "lattice_group": [18, 40, 69, 72], "np": 18, "ndarrai": 18, "count": [18, 40, 66, 72, 74, 76, 78, 82, 84, 85, 86, 87, 97], "standard_error": [18, 40, 72], "rij": [18, 40, 72], "w_": 18, "ij": 18, "www": [18, 48], "sjsu": 18, "edu": 18, "faculti": 18, "gerstman": 18, "statprim": 18, "greater": [18, 41, 47, 51, 54, 58, 63, 64, 78, 83, 96], "coordin": [18, 22, 23, 25, 47, 50, 51, 52], "dimension": [18, 53, 82, 86], "compute_gradi": 18, "grad": 18, "respect": [18, 35, 39, 63, 76, 79, 84], "compute_gradients_fd": 18, "ep": [18, 53], "06": [18, 23, 24, 25, 40, 48, 63, 73, 74, 76, 81, 82, 83, 84, 85, 86], "finit": 18, "curv": [18, 43, 74, 78, 81], "curvatures_fd": 18, "set_dimens": 18, "lbfgs_with_curv": [18, 19], "use_curvatur": [18, 40, 72], "termination_param": 18, "termination_paramet": 18, "progress": [18, 33, 85, 94], "minimize_scipi": [18, 19], "max_cal": [18, 40, 72], "wrapper": 18, "scipi": [18, 40, 72], "minimize_scitbx_lbfg": [18, 19], "stills_index": 19, "lattice_search": 19, "model_evalu": 19, "max_cel": [19, 53, 64, 82, 86, 87], "outlier_reject": [19, 63, 72], "spot_find": [19, 32], "spot_predict": [19, 32], "cosym": [19, 32, 63, 71, 72, 73, 76, 84], "beamfactori": [21, 27], "encapsul": [21, 23, 25], "sample_to_sourc": 21, "polarization_plane_norm": 21, "constructor": [21, 33], "know": [21, 23, 25, 54, 72, 73, 74, 77, 82, 83, 84, 86, 87], "polychromaticbeam": 21, "cif_fil": [21, 23, 25, 29], "polar": [21, 38, 52, 82, 84, 86], "imgcif_h": [21, 23, 25, 29], "cbf_handl": [21, 23, 25, 29], "cbf_handle_struct": 21, "make_beam": 21, "unit_s0": 21, "make_polarized_beam": 21, "flux": [21, 52, 82, 86], "transmiss": [21, 52, 82, 86], "probe": [21, 52, 82, 86], "dxtbx_model_ext": 21, "xrai": 21, "make_polychromatic_beam": 21, "sample_to_source_dist": [21, 52], "unpolar": 21, "simple_direct": 21, "crystalbas": [22, 24], "api": [22, 24, 25, 26, 83], "vec3": [22, 23, 25], "space_group_symbol": 22, "__cxx11": [22, 23, 24, 25, 26], "basic_str": [22, 23, 24, 25, 26], "char": [22, 23, 24, 25, 26], "char_trait": [22, 23, 24, 25, 26], "alloc": [22, 23, 24, 25, 26, 54], "mat3": [22, 25], "as_str": 22, "show_scan_vari": [22, 65], "get_crystal_symmetri": 22, "assert_is_compatible_unit_cel": 22, "mosaiccrystalkabsch2010": [22, 27], "get_mosa": 22, "is_similar_to": [22, 23, 25], "angle_toler": 22, "01": [22, 35, 40, 54, 73, 74, 75, 76, 77, 79, 81, 82, 84, 85, 86, 95, 96], "uc_rel_length_toler": 22, "uc_abs_angle_toler": 22, "mosaicity_toler": 22, "set_mosa": 22, "mosaiccrystalsauter2014": [22, 27], "get_a_as_sqr": 22, "get_a_inverse_as_sqr": 22, "get_domain_size_ang": 22, "get_half_mosaicity_deg": 22, "half_mosaicity_toler": 22, "domain_size_toler": 22, "set_domain_size_ang": 22, "domain_size_ang": 22, "set_half_mosaicity_deg": 22, "half_mosaicity_deg": 22, "crystalfactori": [22, 27], "from_mosflm_matrix": 22, "mosflm_a_matrix": 22, "ve": [22, 74, 76], "yd": 22, "spread": [22, 63, 76, 78, 79], "add_group": 23, "detectornod": 23, "node": [23, 87], "add_panel": 23, "imagedoubl": 23, "get_max_inscribed_resolut": 23, "get_max_resolut": 23, "get_nam": [23, 25], "std_string": [23, 24, 25], "get_panel_intersect": 23, "get_ray_intersect": 23, "vec2": 23, "has_projection_2d": 23, "fast_axis_toler": [23, 24], "slow_axis_toler": [23, 24], "origin_toler": [23, 24], "static_onli": 23, "ignore_trusted_rang": 23, "iter_levelord": 23, "breadth": 23, "iter_panel": 23, "iter_preord": 23, "rotate_around_origin": [23, 25], "detectorfactori": [23, 27], "littl": [23, 25, 73, 74, 75, 76, 81, 82, 86, 88], "easier": [23, 25, 74, 82, 86], "fast": [23, 33, 38, 47, 50, 51, 52, 53, 59, 60, 73, 74, 75, 83, 86, 95], "px_mm": 23, "pedest": [23, 26, 52, 82, 86], "rigaku": 23, "saturn": 23, "generate_from_phil": 23, "make_detector": 23, "stype": 23, "thick": [23, 35, 52, 53, 54, 59, 60, 82, 86], "overwrite_from_phil": 23, "overwrit": [23, 25, 38, 52, 81, 84], "token": 23, "ccd": [23, 42, 78, 82, 86, 87], "image_pl": 23, "everywher": [23, 78], "beam_centr": 23, "fast_direct": 23, "slow_direct": 23, "presum": [23, 74], "two_theta": [23, 72], "two_theta_direct": 23, "two_theta_angl": 23, "theta": [23, 88], "move": [23, 33, 53, 59, 60, 73, 77, 81, 83, 84, 86, 87], "merge_panel_scope_extracts_by_id": [23, 27], "panel_param": 23, "all_sequ": 24, "all_stil": 24, "as_fil": 24, "dump": [24, 32, 33], "uniqu": [24, 52, 53, 63, 72, 74, 76, 79, 82, 84, 85, 86, 87, 88], "change_basi": 24, "in_plac": 24, "empti": [24, 33, 48], "from_templ": [24, 26], "is_consist": 24, "nullify_all_single_file_reader_format_inst": 24, "hdf5": 24, "mess": [24, 54], "fork": [24, 94], "reopen": 24, "remove_on_experiment_identifi": 24, "scaling_model": 24, "select_on_experiment_identifi": 24, "beamcomparison": [24, 27], "wavelength_toler": [24, 33, 44, 72], "direction_toler": 24, "polarization_normal_toler": 24, "polarization_fraction_toler": 24, "detectorcomparison": [24, 27], "experimentlistfactori": [24, 27], "from_arg": 24, "unhandl": [24, 33, 52], "serialis": 24, "recognis": [24, 74, 78], "datablock": [24, 75], "metadata": [24, 33, 44, 52, 63, 73, 74, 75, 82, 86, 87, 96], "from_filenam": 24, "compare_beam": [24, 33], "compare_detector": [24, 33], "compare_goniomet": [24, 33], "scan_toler": [24, 33], "format_kwarg": [24, 26, 33], "load_model": [24, 33, 51], "from_imageset_and_cryst": 24, "from_json": 24, "from_pickle_fil": 24, "decod": 24, "from_sequence_and_cryst": 24, "from_serialized_format": 24, "from_stills_and_cryst": 24, "from_xd": 24, "xds_inp": [24, 30], "xds_other": 24, "goniometercomparison": [24, 27], "rotation_axis_toler": [24, 25], "fixed_rotation_toler": [24, 25], "setting_rotation_toler": [24, 25], "goniometerbas": 25, "fixed_rotation_matrix": 25, "setting_rotation_matrix": 25, "get_num_scan_point": 25, "get_rotation_axi": 25, "get_setting_rotation_at_scan_point": 25, "mat3_doubl": 25, "num_scan_point": 25, "reset_scan_point": 25, "set_fixed_rot": 25, "set_rotation_axi": 25, "set_rotation_axis_datum": 25, "set_setting_rot": 25, "set_setting_rotation_at_scan_point": 25, "goniometerfactori": [25, 27], "peachi": 25, "kappa": [25, 52], "scan_axi": [25, 52], "primari": [25, 33, 34, 74], "arm": 25, "attach": 25, "known_axi": 25, "noth": [25, 52, 74], "make_goniomet": 25, "make_kappa_goniomet": 25, "make_multi_axis_goniomet": 25, "multi_axi": 25, "multi_axis_goniometer_from_phil": 25, "single_axi": 25, "canon": 25, "single_axis_goniometer_from_phil": 25, "kappagoniomet": [25, 27], "kappadirect": 25, "kappascanaxi": 25, "scanaxi": 25, "arg7": 25, "get_alpha_angl": 25, "get_direct": 25, "get_kappa_angl": 25, "get_kappa_axi": 25, "get_omega_angl": 25, "get_omega_axi": 25, "get_phi_angl": 25, "get_phi_axi": 25, "get_scan_axi": 25, "multiaxisgoniomet": [25, 27], "get_angl": 25, "get_ax": 25, "set_angl": 25, "set_ax": 25, "externallookup": [26, 27], "dx": [26, 52, 53, 59, 60, 75], "dy": [26, 52, 53, 59, 60, 75], "externallookupitembool": [26, 27], "externallookupitemdoubl": [26, 27], "imagegrid": [26, 27], "imagesetdata": [26, 27], "grid_siz": [26, 41, 51, 52, 54, 58, 62, 81], "from_imageset": 26, "get_grid_s": 26, "complete_set": 26, "get_beam": [26, 30], "get_detector": [26, 30], "get_goniomet": [26, 30], "get_scan": [26, 30], "get_templ": [26, 30, 83], "partial_set": 26, "set_beam": 26, "set_detector": 26, "set_goniomet": 26, "set_scan": 26, "update_detector_px_mm_data": 26, "inject": [26, 95], "as_imageset": 26, "clear_cach": 26, "external_lookup": 26, "get_corrected_data": 26, "get_detectorbas": 26, "detectorbas": 26, "get_format_class": 26, "get_gain": 26, "get_image_identifi": 26, "get_mask": 26, "get_path": 26, "get_pedest": 26, "get_raw_data": 26, "get_spectrum": 26, "spectrum": 26, "get_vendortyp": 26, "vendor": 26, "has_dynamic_mask": 26, "is_marked_for_reject": 26, "mark_for_reject": 26, "masker": 26, "reader": [26, 32, 33, 71, 74, 78], "get_data": [26, 33], "imagebuff": 26, "get_master_path": 26, "get_param": 26, "get_vendor": 26, "has_single_file_read": 26, "goniometershadowmask": 26, "partial_data": 26, "set_format_class": 26, "set_param": 26, "set_templ": 26, "set_vendor": 26, "imagesetfactori": [26, 27], "check_head": 26, "imageset_from_anyset": 26, "make_imageset": 26, "format_class": 26, "single_file_indic": 26, "make_sequ": 26, "ignore_unknown": 26, "imagesetlazi": [26, 27], "lazi": 26, "doesn": 26, "necessit": 26, "ahead": [26, 74, 77, 78, 83], "derefer": 26, "pointer": 26, "_detector": 26, "member": 26, "memread": [26, 27], "is_single_file_read": 26, "master_path": 26, "profilemodelfactori": [27, 28], "scanfactori": [27, 29], "basic_imageset_from_dict": [27, 30], "basic_imageset_to_dict": [27, 30], "filename_or_non": [27, 30], "filename_to_absolut": [27, 30], "imagesequence_from_dict": [27, 30], "imagesequence_to_dict": [27, 30], "imageset_from_dict": [27, 30], "imageset_to_dict": [27, 30], "to_cryst": [27, 30], "to_imageset": [27, 30], "to_xd": [27, 30], "xds_detector_nam": [27, 30], "circumst": [29, 53, 59, 60, 93], "wrap": [29, 96, 97], "slightli": [29, 74, 81, 82, 83, 86, 87], "clumsi": 29, "idiomat": 29, "make_scan": 29, "batch_offset": [29, 33, 52], "impli": [29, 53, 59, 60, 63, 78, 82, 86, 87, 92], "henc": [29, 35, 82, 84], "single_fil": 29, "osc_start": 29, "osc_width": 29, "infil": 30, "xparm": [30, 33, 44], "input_filenam": 30, "extra_filenam": 30, "inp": [30, 44], "intgrat": 30, "xds_ascii": [30, 44], "content": [30, 33, 73, 74, 82, 83, 85, 86, 87], "space_group_numb": 30, "job_card": 30, "xycorr": 30, "init": [30, 33], "colspot": 30, "idxref": 30, "defpix": 30, "xparm_xd": 30, "dxtbx_name": 30, "translat": [30, 53, 59, 60, 77, 82, 84, 86], "xia2": [30, 71, 73, 80, 82, 86, 88, 95], "simple_background_ext": 31, "simplebackgroundext": [31, 32], "subtract": [31, 41, 54, 73, 78, 87], "compute_background": 31, "image_volum": 31, "null_background_ext": 31, "nullbackgroundext": [31, 32], "null": [31, 53, 54, 59, 60, 81, 83], "dispersion_spotfinder_threshold_ext": 31, "dispersionspotfinderthresholdext": [31, 32], "dispers": [31, 45, 47, 51, 75], "compute_threshold": 31, "arbitrari": 31, "keyword": 31, "foreground": [31, 54, 74, 82, 85, 86], "estimate_global_threshold": [31, 32], "simple_centroid_ext": 31, "simplecentroidext": [31, 32], "compute_centroid": 31, "gaussianrsprofilemodelext": [31, 32], "famili": 32, "progressbar": [32, 33], "progressbartim": [32, 33], "colour": [32, 33, 45, 62, 68, 82, 86, 87], "head": [32, 33], "madmergedmtzwrit": [32, 33], "mtzwriterbas": [32, 33], "mergedmtzwrit": [32, 33], "unmergedmtzwrit": [], "wavelengthgroup": [32, 33], "convert_to_cambridg": [32, 33], "export_mtz": [32, 33, 83], "match_wavelength": [32, 33], "rotate_cryst": [32, 33], "export_text": [32, 33], "get_inverse_ub_matrix_from_xparm": [32, 33], "get_space_group_type_from_xparm": [32, 33], "get_entri": [32, 33], "argumenthandlingerrorinfo": [32, 33], "argumentparserbas": [32, 33], "invalidphilerror": [32, 33], "optionpars": [32, 33], "philcommandpars": [32, 33], "reflections_and_experiments_from_fil": [32, 33], "command_lin": [33, 83], "nice": [33, 73, 74], "info": [11, 33, 82, 83, 84, 86], "max_length": 33, "print_tim": 33, "titl": [33, 73, 84, 85], "spinner": 33, "bar": 33, "estimate_tim": 33, "fpercent": 33, "percentag": [33, 54, 63, 72], "timer": 33, "get_elapsed_tim": 33, "percent": [33, 53, 77], "writer": 33, "add_dataset": 33, "merged_arrai": 33, "anom_arrai": 33, "amplitud": [33, 63, 77, 84, 85], "anom_amplitud": 33, "dano": [33, 84], "anom_multipl": 33, "suffix": [33, 40], "half_dataset": [33, 43, 72], "mergedhalfdataset": 33, "r_free_arrai": 33, "recent": [33, 79, 84, 90, 97], "imean": [33, 84, 85, 86], "helper": 33, "ad": [33, 59, 70, 73, 74, 76, 81, 82, 86, 94], "add_cryst": 33, "crystal_nam": [33, 44, 63], "project_nam": [33, 44, 63], "add_empty_dataset": 33, "add_batch_list": [32, 33], "dataset_id": 33, "force_static_model": [33, 44], "write_column": [32, 33], "AND": [33, 92], "min_wl": 33, "max_possible_wl": 33, "exp_no": 33, "weighted_mean": 33, "add_experi": 33, "loc_in_list": 33, "wl": 33, "calculate_weighted_mean": 33, "cambridg": [33, 99], "best_unit_cel": [33, 44, 63], "combine_parti": [33, 44], "min_isigi": [33, 44, 63, 82, 84, 86], "filter_ice_r": [33, 44], "0001": [33, 63, 72, 82], "hklout": [33, 44, 73, 75, 81, 83, 86, 88, 93], "absolute_toler": 33, "rmat": 33, "integrated_data": 33, "read_fil": 33, "colorama": 33, "ansitowin32": 33, "streamwrapp": 33, "base_package_opt": 33, "configure_modul": 33, "mmtbx": 33, "smtbx": 33, "cbflib": 33, "annlib_adaptbx": 33, "wxtbx": 33, "gltbx": 33, "dest_dir_prefix": 33, "include_gui_packag": 33, "installer_dir": 33, "dl": [33, 78, 79, 82, 86], "scisoft": [33, 79, 82], "build_dial": 33, "make_app": 33, "product_nam": 33, "product_specific_finalize_instal": 33, "cleanup": 33, "ons": 33, "remove_sources_default": 33, "source_packag": 33, "cctbx_bundl": 33, "annlib": 33, "ioutil": 33, "inverse_ub_matrix": 33, "tyoe": 33, "nexu": [33, 42, 44], "traceback": 33, "read_experiments_from_imag": 33, "sort_opt": 33, "formatter_class": 33, "argpars": 33, "rawdescriptionhelpformatt": 33, "diff_phil": 33, "diff": 33, "format_help": 33, "formatt": 33, "return_unhandl": 33, "ignore_unhandl": [33, 52], "quick_pars": 33, "system_phil": 33, "config_opt": 33, "format_epilog": 33, "parse_known_arg": 33, "verbos": [33, 48, 53, 59, 60, 82, 86, 96], "intellig": 33, "tri": [33, 47], "try_read_experi": 33, "try_read_experiments_from_imag": 33, "try_read_reflect": 33, "filename_object_list": 33, "renumb": 33, "clash": 33, "experiment_identifi": 33, "reflection_file_object_list": 33, "experiment_file_object_list": 33, "cusp": 34, "perpendicular": [34, 68, 76], "attenu": 35, "anvil": 35, "pressur": 35, "sandwich": 35, "plate": [35, 76, 82, 83, 86, 87], "passag": 35, "incid": [35, 53, 59, 60], "amount": [35, 41, 51, 54, 58, 63, 73, 84], "caption": 35, "3510": 35, "kg": 35, "cubic": 35, "metr": 35, "synthet": [35, 85], "allow_non": [35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72], "5925": 35, "i19": 35, "un": 35, "l_0": 35, "l_1": 35, "illustr": [35, 76, 97], "schemat": 35, "perfectli": 35, "hat": 35, "_0": 35, "lambda": 35, "l_i": 35, "alpha_i": 35, "exp": [35, 47, 54, 63, 69, 72, 73, 74, 78, 81, 82, 83, 85, 86], "rho": 35, "tabul": 35, "mass": [35, 41, 51, 54, 58, 82, 86], "carbon": 35, "collat": 35, "technologi": 35, "nist": 35, "recov": 35, "absenc": [35, 69, 72, 79, 82, 84, 86, 88], "multipli": [35, 41, 47, 51, 53, 54, 58, 59, 60], "subtli": 35, "contradict": 35, "anticip": [35, 82, 86], "signific": [35, 38, 43, 47, 54, 63, 69, 72, 75, 81, 82, 83, 84, 86, 87], "hubbel": 35, "seltzer": 35, "onlin": [35, 74, 75], "xaamdi": 35, "2020": [11, 35, 82, 84, 86, 95], "gaithersburg": 35, "md": 35, "augment": 36, "hand": 36, "crucial": 36, "pixels1": 36, "pixels2": 36, "belong": [37, 52, 77, 83], "misindex": [37, 53, 78], "pattern": [37, 73, 75, 77, 78, 81, 82, 83, 84, 86, 95, 97], "incorrect": [37, 53, 74, 77, 78, 88], "symop_threshold": 37, "grid_l": 37, "d_max": [37, 41, 46, 47, 50, 51, 54, 56, 63, 72, 73, 74, 75, 82, 83, 84, 85, 86, 87], "grid_h": 37, "grid_k": 37, "asu": [37, 73], "normalise_bin": 37, "consid": [37, 41, 47, 50, 51, 53, 54, 58, 74, 76, 77, 82, 84, 86, 88], "symm": [37, 73], "No": [38, 40, 82, 83, 84, 85, 86, 96], "repeat": [38, 47, 63, 73, 74, 75, 81, 83, 84, 87, 96], "experiments_0": [38, 40, 84, 88], "experiments_1": [38, 40, 81, 84, 88], "reflections_0": [38, 40, 84, 88], "reflections_1": [38, 40, 84, 88], "reference_from_experi": [38, 81, 83, 93], "average_detector": 38, "compare_model": [38, 83], "average_hierarchy_level": 38, "dendrogram": [38, 40, 72, 83], "1000": [38, 47, 53, 54, 59, 60, 73, 82, 83, 85, 86], "max_clust": [38, 72], "exclude_single_crystal_clust": 38, "experiments_filenam": [38, 66], "reflections_filenam": [38, 66], "n_subset": 38, "n_subset_method": 38, "n_refl": [38, 82, 84, 86], "significance_filt": [38, 54], "n_refl_panel_list": 38, "Not": [38, 45, 51, 52, 53, 59, 60], "compat": [38, 74, 78], "fall": [38, 47, 50, 51, 54, 74, 81, 82, 86], "hierarch": [38, 40, 53, 59, 60, 72, 81], "5e": [38, 88], "setting_rot": [38, 52], "03": [38, 40, 73, 76, 79, 81, 82, 84, 85, 86, 95, 96], "sig": [38, 40, 44, 82, 84, 85, 86], "max_batch_s": 38, "5500": 38, "917": [38, 73, 82], "916": [38, 82], "delete_shoebox": [38, 54], "comb": 38, "ining": 38, "min_reflections_per_experi": 38, "throw": [38, 47], "fewer": [38, 74, 96], "max_reflections_per_experi": 38, "sigi": [38, 43, 54, 63, 72, 74, 79, 81, 82, 84, 85, 86], "isigi_cutoff": [38, 54], "falloff": [38, 43, 54, 84], "past": [38, 54, 74, 81], "retain": [38, 44, 54, 76, 92], "euler": 39, "models_1": 39, "models_2": 39, "sequenti": [39, 74], "i23": 40, "unit_cell_clust": [40, 72], "5000": [40, 72, 73], "reference_model": [40, 61, 63], "min_reflect": [40, 63], "230": [40, 69, 82, 86], "_reindex": 40, "experiments_2": [40, 84, 88], "experiments_3": [40, 84, 88], "reflections_2": [40, 84, 88], "reflections_3": [40, 84, 88], "metric": [40, 43, 53, 60, 72, 73, 74, 77, 78, 82, 83, 84, 85, 86, 87], "aren": 40, "carri": [40, 82, 83, 86, 87], "forward": [40, 54, 76], "47": [40, 74, 75, 81, 82, 83, 84, 85, 86, 95], "346": [40, 73, 76, 82, 84, 86], "singleton": [40, 84], "cluster_id": [40, 84, 96], "n_xtal": [40, 84, 96], "med_a": [40, 84, 96], "med_b": [40, 84, 96], "med_c": [40, 84, 96], "med_alpha": [40, 84, 96], "med_beta": [40, 84, 96], "med_gamma": [40, 84, 96], "cluster_1": [40, 84, 96], "68": [40, 49, 73, 75, 78, 82, 84, 85, 86], "36": [40, 53, 59, 60, 73, 76, 81, 82, 83, 84, 85, 86], "103": [40, 73, 82, 84, 85, 86], "00": [40, 42, 50, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 96], "123": [40, 73, 78, 82, 84, 86], "bracket": [40, 84], "bravai": [40, 60, 74, 78, 84, 85], "niggli": [40, 84], "dev": [40, 53, 59, 60, 75, 79, 82, 84, 85, 86, 91], "lepag": [40, 84], "255": [40, 73, 75, 82, 84, 86], "3deg": [40, 84], "wilson": [40, 73, 79, 82, 84, 86], "ml": [40, 73, 82, 84, 86], "13": [40, 73, 74, 76, 77, 81, 82, 83, 84, 85, 86, 96], "52": [40, 73, 78, 81, 82, 83, 84, 85, 86], "04": [40, 44, 73, 74, 76, 78, 79, 81, 82, 84, 85, 86, 88, 95, 96], "11": [40, 73, 74, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 95], "96": [40, 73, 76, 78, 81, 82, 84, 85, 86, 88, 96], "67": [40, 73, 78, 82, 84, 85, 86], "\u03c3": [40, 72, 82, 84, 86], "83": [73, 78, 82, 84, 85, 86], "148639": [], "abl": [40, 82, 86, 87], "747": 84, "8561": [], "5986": [], "9292": [], "3244": [], "8874": [], "2239": [], "8612": [], "fact": [40, 74, 75, 77, 78, 81, 83], "genuin": 40, "diederich": [40, 97], "2017": [40, 95], "933": [40, 82, 84], "69": [40, 73, 81, 82, 84, 85, 86, 87, 95], "97": [40, 73, 74, 76, 78, 79, 81, 82, 84, 85, 86, 87, 95], "934": [40, 82, 84], "932": [40, 73, 82, 84], "936": [40, 74, 82, 84], "73": [73, 74, 81, 82, 83, 84, 86], "937": [73, 82, 84, 85, 86], "74": [40, 74, 75, 78, 79, 81, 82, 84, 86, 95], "rank": 40, "sub": [40, 46, 53, 59, 60, 73, 76, 77, 82, 84, 85, 86, 87, 90], "netzcc": [40, 73, 76, 82, 84, 85, 86, 87], "71": [40, 73, 74, 79, 81, 82, 83, 84, 85, 86, 95], "3603": 84, "953": [40, 73, 74, 82, 84], "000": [40, 75, 76, 79, 81, 82, 84, 85, 86, 88], "conclud": [40, 77, 81, 82, 85, 86, 87], "hide": [40, 82, 84, 86], "1024": 73, "gad69d9734": [], "76079": [40, 84], "54367": [40, 84], "1127": [40, 84], "75607": [40, 84], "54845": [40, 84], "1284": [40, 82, 84, 86], "77983": [40, 84], "54461": [40, 84], "1404": [40, 82, 84, 86], "76468": [40, 84], "53877": [40, 84], "1062": [40, 84], "explain": [40, 74, 76, 84], "0063": [], "0052": [40, 82, 84], "0044": 74, "0043": [40, 84], "004": [41, 51, 54, 58, 73, 76, 82, 84, 85], "0036": [40, 84, 86], "7e": 88, "23": [40, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86], "19": [40, 73, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 95], "00098": [], "short_capt": [40, 43, 47, 52, 53, 54, 59, 60, 63, 69, 72], "max": [40, 41, 46, 51, 52, 53, 54, 58, 63, 64, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 96], "\u03b4": [40, 72, 87], "\u03b2": [40, 72, 74], "occas": [41, 76], "independ": [41, 53, 59, 60, 76, 81, 82, 84, 86, 87, 88, 96], "models_with_profil": 41, "ellipsoid": [41, 51, 54, 58, 96], "rlp_mosaic": [41, 51, 54, 58], "simple1": [41, 51, 54, 58], "simple6": [41, 51, 54, 58], "simple1angular1": [41, 51, 54, 58], "simple1angular3": [41, 51, 54, 58], "simple6angular1": [41, 51, 54, 58], "wavelength_spread": [41, 51, 54, 58], "fail_on_bad_index": [41, 51, 54, 58], "max_separ": [41, 47, 51, 54, 58, 73], "outlier_prob": [41, 51, 54, 58], "975": [41, 51, 53, 54, 58, 59, 60, 69, 73, 81, 84], "n_macro_cycl": [41, 51, 53, 54, 58, 64, 78], "n_cycl": [41, 51, 54, 58], "min_n_reflect": [41, 51, 54, 58], "max_it": [41, 51, 54, 58], "ll_toler": [41, 51, 54, 58], "997300": [41, 51, 54, 58], "scan_vari": [41, 51, 53, 54, 58, 59, 60, 73, 74, 75, 81, 82, 83, 93], "min_spot": [41, 51, 54, 58, 96], "per_degre": [41, 51, 54, 58], "sigma_m_algorithm": [41, 51, 54, 58], "centroid_definit": [41, 51, 54, 58], "n_sigma": [41, 51, 54, 58], "sigma_b": [41, 45, 51, 54, 58], "sigma_m": [41, 51, 54, 58, 82, 86, 87], "min_zeta": [41, 51, 54, 58], "scan_step": [41, 51, 54, 58], "grid_method": [41, 51, 54, 58], "regular_grid": [41, 51, 54, 58], "circular_grid": [41, 51, 54, 58], "spherical_grid": [41, 51, 54, 58], "fit_method": [41, 51, 54, 58], "reciprocal_spac": [41, 51, 54, 58], "detector_spac": [41, 51, 54, 58], "deconvolut": [41, 51, 54, 58], "subtract_background": 41, "multivari": [41, 51, 54, 58, 87], "total_reflect": [41, 51, 54, 58], "reflections_per_degre": [41, 51, 53, 54, 58, 59, 60], "min": [41, 46, 51, 52, 54, 58, 73, 74, 77, 78, 81, 82, 83, 84, 85, 86], "zeta": [41, 51, 54, 58, 82, 86, 87], "behav": [42, 82, 86], "poisson": [42, 78, 82, 86, 87], "older": [42, 87], "amongst": [42, 83], "abil": 42, "nois": [42, 47, 51, 75, 82, 84, 86], "kernel_s": [42, 45, 47, 51], "max_imag": 42, "gain_map": [42, 47], "cc_half": [43, 72, 79, 84], "isigma": [43, 72], "misigma": [43, 72], "i_mean_over_sigma_mean": [43, 72], "cc_ref": [43, 72], "rmerg": [43, 72, 74, 76, 79, 82, 84, 86, 87, 88], "lowest": [43, 63, 74, 78, 82, 86, 87], "tanh": [43, 72], "half": [43, 53, 74, 77, 79, 82, 84, 86, 87, 88], "steep": [43, 86], "polynomi": [43, 72], "scaled_unmerg": [43, 44, 76], "cc_half_method": [43, 72], "sigma_tau": [43, 72], "reflections_per_bin": [43, 72], "batch_rang": 43, "outer": [43, 48, 72, 81, 88], "ccref": [43, 72], "cc_half_significance_level": [43, 72], "cc_half_fit": [43, 72], "binning_method": [43, 72], "counting_sort": [43, 72], "downstream": [44, 63, 72, 74, 75, 76, 82, 84, 85, 86, 87, 88], "nx": [44, 47], "nxmx": 44, "mmcif": [44, 70, 76], "sadab": 44, "cosin": 44, "ersatz": 44, "evalccd": 44, "mat": 44, "pet": 44, "dynam": [44, 45, 51, 52, 54, 58, 95], "jana2020": 44, "shelx": [44, 70, 73, 88], "xtal": [44, 63, 83, 84, 85], "sad": [44, 88], "instrument_nam": 44, "instrument_short_nam": 44, "source_nam": 44, "source_short_nam": 44, "gz": [44, 48, 86, 88, 91], "bz2": [44, 78, 85], "pdb_version": 44, "v5": 44, "v5_next": 44, "n_digit": 44, "ins": [44, 73, 88], "scale_rang": 44, "9999": [44, 84], "filename_prefix": 44, "dials_dyn": 44, "partiality_cutoff": [44, 63, 72, 82, 84, 86], "99": [44, 69, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 96], "flag_filt": 44, "virtual_fram": 44, "excitation_error_cutoff": 44, "n_merg": 44, "applic": [44, 54, 72, 73, 82, 84, 86, 87, 91], "unfeas": 44, "ic": [44, 45, 46, 47, 49, 50, 51, 53, 54, 81, 82, 84, 86, 95], "ring": [44, 45, 46, 47, 49, 50, 51, 53, 54, 74, 75, 81, 82, 84, 85, 86, 95], "instrument": [44, 81, 94], "acronym": 44, "facil": [44, 83, 84, 97], "compli": 44, "decim": [44, 53, 59, 60], "maximis": 44, "precis": [44, 82, 86], "2f": 44, "999999": 44, "9999999": 44, "cif_pet": 44, "deem": 44, "integrated_sum": 44, "integrated_prf": 44, "restrict": [44, 53, 59, 60, 83, 84], "excit": 44, "virtual": 44, "bitmap": 45, "intermedi": [45, 54, 83], "sigma_": [45, 51], "alter": [45, 74, 76, 87], "bright": [45, 51, 73, 82, 86], "colour_schem": 45, "inverse_greyscal": 45, "greyscal": 45, "rainbow": [45, 51], "heatmap": [45, 51, 62], "global_threshold": [45, 47, 51, 75], "nsigma_b": [45, 51], "nsigma_": [45, 51], "min_loc": [45, 47, 51], "satur": 45, "show_mask": [45, 51], "resolution_r": 45, "d_space": [45, 46, 47, 50, 51, 84], "fontsiz": 45, "fill": 45, "red": [45, 73, 74, 82, 86, 87], "ice_r": [45, 46, 47, 50, 51, 54], "blue": [45, 74, 82, 86, 87], "compress_level": 45, "jpeg": 45, "tiff": 45, "imageset_index": 45, "498": [45, 46, 47, 50, 51, 82, 85, 86], "338": [45, 46, 47, 50, 51, 76, 82, 86], "powder": [45, 46, 47, 50, 51, 74, 75, 81, 82, 85, 86], "194": [45, 46, 47, 50, 51, 73, 82, 84, 86], "zlib": 45, "worst": 45, "dynamic_shadow": [45, 51, 52], "multi_panel": [45, 51, 52], "sens": 45, "flag_express": 46, "parenthes": 46, "reference_spot": 46, "failed_during_summ": 46, "failed_during_profile_fit": 46, "select_good_intens": 46, "dead_tim": 46, "reject_fract": 46, "intersect": 46, "trustworthi": [46, 82, 86, 87], "dead": [46, 81], "exposur": [46, 52, 82, 86, 87], "overlap": [46, 53, 74, 82, 86, 87, 88], "logic": 47, "connect": [47, 56, 62, 84], "config": [47, 83], "image1": 47, "imager_00": 47, "per_image_statist": 47, "lookup": [47, 52, 53, 54, 75], "force_2d": 47, "border": [47, 50, 51, 53], "disable_parallax_correct": [47, 50, 51], "resolution_rang": [47, 50, 51], "untrust": [47, 50, 51, 73, 75], "rectangl": [47, 50, 51, 75], "polygon": [47, 50, 51], "mp": [47, 53, 54, 59, 60, 73, 77, 78, 79, 82, 85, 86], "drmaa": [47, 54], "sge": [47, 54], "lsf": [47, 54], "pb": [47, 54], "njob": [47, 54], "chunksiz": [47, 82, 86], "dispersion_extend": 47, "radial_profil": 47, "n_iqr": [47, 51], "blur": [47, 51], "insid": [47, 76, 83], "hot": 47, "maximum_trusted_valu": 47, "j0": [47, 53, 64, 66], "j1": [47, 53, 64, 66], "liter": 47, "wherea": [47, 63, 74, 81, 82, 86, 87], "go": [47, 54, 63, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "150": [47, 53, 54, 63, 69, 72, 73, 79, 81, 82, 84, 85, 86, 87], "200": [47, 50, 53, 54, 63, 69, 72, 73, 76, 82, 84, 85, 86], "250": [47, 54, 63, 69, 72, 76, 81, 82, 84, 86, 95], "x0": [47, 50, 51], "x1": [47, 50, 51], "y0": [47, 50, 51], "y1": [47, 50, 51], "roi": 47, "height": [47, 53, 54, 59, 60, 84], "contigu": [47, 93], "mark": [47, 74, 82, 86, 87], "background_gradi": 47, "spot_dens": 47, "edg": [47, 50, 51, 53, 54, 59, 60, 73, 75, 76, 88, 97], "faster": [47, 50, 51, 53, 59, 60], "parallax": [47, 50, 51, 52], "xc": [47, 50, 51, 81, 82, 83, 86], "yc": [47, 50, 51, 81, 82, 83, 86], "corner": [47, 50, 51, 81, 82, 86, 87], "act": [47, 51, 66], "cannot": [47, 73, 74, 78, 81, 93], "conjunct": [47, 54], "ny": 47, "sigma_background": 47, "sigma_strong": [47, 75], "global": [47, 53, 54, 59, 60, 64, 74, 83], "iqr": [47, 51, 53, 54, 59, 60], "2\u03b8": [47, 51, 70, 72], "particularli": [47, 74, 75, 78, 83, 84, 87, 88, 96], "consider": [47, 77, 82, 86, 87], "inelast": [47, 74], "insensit": [47, 84], "respons": [47, 49, 74], "peakfind": 47, "doi": [11, 47, 53, 59, 60, 75, 82], "1107": [11, 47, 53, 59, 60, 75], "s1600576714007626": 47, "preprocess": [47, 51, 82, 84, 86], "convolut": [47, 51], "webserv": 48, "labelit": [48, 78], "client_serv": 48, "raster": [48, 76], "balanc": 48, "throughput": 48, "07": [48, 74, 75, 76, 77, 81, 82, 83, 84, 86], "cento": 48, "mod_python": 48, "apr": [48, 95], "webpag": 48, "ask": [48, 76, 83, 84], "mirror": [48, 74, 82, 84, 86, 90], "closest": [48, 82], "visit": 48, "web": [48, 71, 73], "dyn": 48, "closer": [48, 74, 81, 83], "cgi": 48, "httpd": 48, "folder": [48, 76, 84, 86, 87], "project_root": 48, "mkdir": [48, 73, 74, 75, 76, 81, 83, 84], "project_src": 48, "cctbx_project": 48, "master": [48, 73, 75, 76], "apache_install_di": 48, "dist": [48, 75], "modpython": 48, "tgz": 48, "motorlogi": 48, "hour": 48, "mpm_prefork_modul": 48, "conf": 48, "mpm": 48, "better": [48, 64, 73, 74, 76, 82, 83, 84, 86, 87, 93], "capabl": [48, 74, 90], "machin": [48, 49, 96, 97], "host": [48, 49, 79], "localhost": 48, "8125": [48, 82], "signal_strength": 48, "from_sunbird": 48, "rawdata": 48, "ssrl_p6": 48, "i3_1_0001": 48, "stat": [48, 63], "eiger": [48, 76], "dectri": [48, 81], "eiger16mnov2015": 48, "2015_11_10": 48, "insu6_1_mast": 48, "h5": 48, "frame_numb": 48, "44": [48, 78, 81, 82, 83, 84, 85, 86], "disk": 48, "analyz": 48, "feedback": 49, "port": 49, "1234": [49, 86], "find_spots_cli": 49, "hostnam": 49, "xml": [49, 54], "image_0001": 49, "spot_count": 49, "352": [49, 73, 82, 86, 95], "spot_count_no_ic": 49, "263": [49, 73, 76, 82, 84, 85, 86], "46": [49, 73, 76, 79, 81, 82, 83, 84, 85, 86], "d_min_method_1": 49, "92": [49, 73, 74, 76, 79, 81, 82, 84, 85, 86, 95], "d_min_method_2": 49, "total_intens": 49, "56215": 49, "distl": [49, 71], "1701": [49, 86], "unwant": 50, "few": [50, 53, 59, 60, 73, 74, 77, 78, 81, 83, 84, 96], "shape": [50, 63, 82, 86, 87, 88], "overlaid": 51, "color_schem": 51, "grayscal": 51, "invert": [51, 52, 78, 82, 86], "show_beam_cent": 51, "show_resolution_r": 51, "show_ice_r": 51, "show_ctr_mass": 51, "show_max_pix": 51, "show_all_pix": 51, "show_threshold_pix": 51, "show_shoebox": 51, "show_predict": 51, "show_miller_indic": 51, "show_index": 51, "show_integr": 51, "show_rotation_axi": 51, "stack_mod": 51, "powder_arc": 51, "calibrate_silv": 51, "calibrate_pdb": 51, "calibrate_unit_cel": 51, "show_hkl": 51, "mask_param": 51, "predict_reflect": 51, "stack_imag": 51, "arc": [51, 74], "fetch": 51, "internet": [51, 62], "gui": 51, "metrologi": [51, 80], "silver": [51, 97], "behen": 51, "calibr": [51, 66, 73, 74, 75, 81], "spacegroup": [51, 75, 79], "matter": [51, 88], "stdin": 52, "digit": 52, "manual": [52, 73, 74, 83, 88], "reference_geometri": [52, 75], "mosflm_beam_centr": 52, "image_": [52, 55, 65], "image_1_": 52, "image_2_": 52, "eof": [52, 75, 86], "image_1": 52, "image_2": 52, "identifier_typ": 52, "uuid": 52, "timestamp": [52, 96], "allow_multiple_sequ": [52, 93], "as_grid_scan": 52, "check_reference_geometri": 52, "use_beam_refer": 52, "use_gonio_refer": 52, "use_detector_refer": 52, "monochromat": [52, 94], "polychromat": [11, 52, 53], "beam_typ": 52, "beam_prob": 52, "parallax_correct": 52, "fast_slow_beam_centr": [52, 73], "size_min": 52, "size_max": 52, "slow_fast_beam_centr": 52, "prioriti": 52, "invert_rotation_axi": 52, "extrapolate_scan": 52, "extrapol": 52, "convert_stills_to_sequ": 52, "convert_sequences_to_stil": 52, "offsetparallaxcorrectedpxmmstrategi": 52, "autoindex": [53, 79, 82, 86, 87], "fourier": [53, 69], "proce": [53, 59, 60, 76, 78, 82, 84, 85, 86, 87, 88, 93], "enforc": [53, 74, 77, 82, 83, 86], "p43212": [53, 76], "known_symmetri": 53, "hkl_toler": 53, "check_misindex": 53, "grid_search_scop": 53, "refinement_protocol": 53, "d_min_step": [53, 82, 86], "d_min_start": 53, "d_min_fin": 53, "ewald_proximity_resolution_cutoff": 53, "refine_all_candid": 53, "rmsd_min_px": 53, "ewald_proximal_volume_max": 53, "0025": 53, "isoform": 53, "lookup_symbol": 53, "rmsd_target_mm": 53, "beam_restraint": 53, "set_domain_size_ang_valu": 53, "set_mosaic_half_deg_valu": 53, "joint_index": [53, 82, 86], "interval_width_degre": [53, 59, 60], "set_scan_varying_error": [53, 59, 60], "in_spindle_plan": [53, 59, 60, 73, 75], "out_spindle_plan": [53, 59, 60, 73, 75], "in_beam_plan": [53, 59, 60], "out_beam_plan": [53, 59, 60], "mcd": [53, 59, 60, 82, 83, 86, 87], "tukei": [53, 54, 59, 60, 81, 82, 83, 85, 86, 87], "sauter_poon": [53, 59, 60, 83], "mm_search_scop": [53, 64], "radiu": [53, 64], "wide_search_bin": [53, 64], "coars": [53, 64], "min_cell_volum": 53, "max_cell_estim": 53, "nn": 53, "logarithm": 53, "nearest": [53, 54, 56, 66, 87], "neighbour": [53, 56, 82, 86, 87], "sigma_phi_deg": 53, "mainli": [53, 54, 77], "shot": [53, 95], "almost": [53, 74, 76, 77, 82, 86], "certainli": 53, "ness": 53, "index_error": 53, "index_magnitud": 53, "index_qu": 53, "combine_scan": 53, "refine_shel": 53, "repredict_onli": 53, "macro": [53, 59, 64, 78, 81, 82, 86, 87], "ever": [53, 78, 97], "disable_unit_cell_volume_sanity_check": 53, "saniti": 53, "unrealist": 53, "multiple_lattice_search": 53, "recycle_unindexed_reflections_cutoff": 53, "unindex": [53, 54, 73, 74, 78, 82, 85, 86, 87], "cluster_analysi": 53, "dbscan": 53, "hcluster": 53, "linkag": 53, "ward": 53, "euclidean": 53, "cutoff_criterion": 53, "inconsist": 53, "min_sampl": 53, "min_cluster_s": 53, "intersection_union_ratio_cutoff": 53, "candidate_outlier_reject": 53, "refine_candidates_with_known_symmetri": 53, "proxim": 53, "pointgroup": 53, "assur": 53, "domain": [53, 74], "ang": 53, "nave": 53, "basis_vector_combin": 53, "agreement": [53, 82, 84, 86, 87, 88], "max_refin": 53, "sys_absent_threshold": 53, "solution_scor": 53, "optimise_initial_basis_vector": 53, "peak_search": 53, "flood_fil": 53, "clean": [53, 74, 81], "reciprocal_space_grid": 53, "256": [53, 73, 75, 78, 82, 86, 87], "max_vector": 53, "candidate_spot": 53, "limit_resolution_bi": 53, "n_spot": 53, "d_star_toler": 53, "band": [53, 74], "use_p1_indices_as_se": 53, "search_depth": 53, "triplet": 53, "quad": [53, 75], "bootstrap_cryst": 53, "max_pair": 53, "max_triplet": 53, "600": [53, 84, 86], "max_quad": 53, "slice": [53, 66, 74, 97], "auto_reduct": [53, 59, 60], "behaviour": [53, 59, 60, 74], "min_nref_per_paramet": [53, 59, 60], "action": [53, 59, 60], "trigger": [53, 59, 60, 63], "excis": [53, 59, 60], "eman": [53, 59, 60], "macrocycl": [53, 59, 60, 74, 78, 81, 82, 86, 87], "checkpoint": [53, 59, 60], "compose_model_p": [53, 59, 60], "trade": [53, 59, 60], "accuraci": [53, 59, 60], "block_width": [53, 59, 60, 73, 75], "fine": [53, 59, 60, 74, 81, 82, 86, 87, 93, 97], "grain": [53, 59, 60], "covari": [53, 59, 60, 87], "moment": [53, 59, 60, 81], "trim_scan_to_observ": [53, 59, 60], "trim": [53, 59, 60, 73], "failur": [53, 59, 60, 72, 78], "extrem": [53, 59, 60, 62, 78, 81, 83, 84, 95, 97], "debug_centroid_analysi": [53, 59, 60], "plot_centroid_analysi": [53, 59, 60], "dials_scratch": [53, 59, 60], "fix_list": [53, 59, 60, 75], "suffic": [53, 59, 60], "detector1": [53, 59, 60], "absolute_num_interv": [53, 59, 60, 73, 75], "tie_to_target": [53, 59, 60, 74, 75], "tie_to_group": [53, 59, 60], "low_memory_mean": [53, 59, 60], "tie": [53, 59, 60], "treat": [53, 59, 60, 76, 81, 93], "rigid": [53, 59, 60, 81], "bodi": [53, 59, 60], "hierarchy_level": [53, 59, 60, 81], "treat_single_image_as_stil": [53, 59, 60], "spherical_relp_model": [53, 59, 60], "relp": [53, 59, 60], "gaussnewton": [53, 59, 60, 63], "levmar": [53, 59, 60, 63], "sparselevmar": [53, 59, 60], "track_step": [53, 59, 60], "track_gradi": [53, 59, 60], "track_parameter_correl": [53, 59, 60, 83], "track_jacobian_structur": [53, 59, 60], "track_condition_numb": [53, 59, 60], "track_normal_matrix": [53, 59, 60], "track_out_of_sample_rmsd": [53, 59, 60], "fraction_of_bin_s": [53, 59, 60], "discret": [53, 59, 60, 63], "bin_size_fract": [53, 59, 60, 81], "natur": [53, 59, 60, 84, 86, 87, 95], "viz": [53, 59, 60, 88], "wider": [53, 59, 60], "minimum_sample_s": [53, 54, 59, 60], "maximum_sample_s": [53, 54, 59, 60], "random_se": [53, 54, 59, 60], "parallelepip": [53, 59, 60], "bia": [53, 59, 60], "external_deltapsi": [53, 59, 60], "identif": [53, 59, 60], "minimum_number_of_reflect": [53, 59, 60], "separate_experi": [53, 59, 60], "separate_panel": [53, 59, 60], "separate_block": [53, 59, 60], "divid": [53, 59, 60, 63], "18": [53, 59, 60, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 95], "enough": [53, 59, 60, 73, 78, 81, 83, 93], "separate_imag": [53, 59, 60], "rejector": [53, 54, 59, 60], "iqr_multipli": [53, 59, 60], "rule": [53, 59, 60], "rousseeuw": [53, 59, 60], "van": [53, 59, 60, 95], "driessen": [53, 59, 60], "1080": [53, 59, 60], "00401706": [53, 59, 60], "10485670": [53, 59, 60], "max_n_group": [53, 59, 60], "twice": [53, 59, 60, 82, 86, 87], "min_group_s": [53, 59, 60], "300": [53, 59, 60, 75, 76, 82, 83, 84, 86], "maxim": [53, 59, 60], "n_trial": [53, 59, 60], "500": [53, 59, 60, 73, 75, 82, 86], "k1": [53, 59, 60], "concentr": [53, 59, 60], "k2": [53, 59, 60], "k3": [53, 59, 60], "threshold_prob": [53, 59, 60], "quantil": [53, 59, 60], "chi": [53, 59, 60], "robust": [53, 54, 59, 60, 76, 95], "mahalanobi": [53, 59, 60], "s0021889810010782": [53, 59, 60], "px_sz": [53, 59, 60], "graph": [53, 56, 59, 60, 73, 87], "reintegr": 54, "glm": 54, "include_bad_refer": 54, "create_profile_model": [54, 71], "max_memory_usag": 54, "use_dynamic_mask": 54, "reference_profil": 54, "separate_fil": 54, "split_experi": [54, 81, 83, 85, 88, 93], "number_of_partit": 54, "min_partition_s": 54, "overlaps_filt": 54, "foreground_foreground": 54, "foreground_background": 54, "n_subset_split": 54, "detector_gain": 54, "gmodel": 54, "tuning_const": 54, "345": [54, 73, 75, 82, 85, 86], "constant2d": 54, "constant3d": 54, "loglinear2d": 54, "loglinear3d": 54, "min_pixel": 54, "nsigma": 54, "linear2d": 54, "linear3d": 54, "fuller_kapton": 54, "kapton_2019": 54, "xtal_height_above_kapton_mm": 54, "rotation_angle_deg": 54, "kapton_half_width_mm": 54, "5875": [54, 81], "kapton_thickness_mm": 54, "005": [54, 73, 79, 82, 84], "smart_sigma": 54, "within_spot_sigma": 54, "output_unintegrated_reflect": 54, "unintegr": [54, 82, 86], "bad_refer": 54, "integrate_all_reflect": 54, "nframe": 54, "guarante": [54, 87, 88], "immedi": [54, 75, 81, 86, 87], "i_over_sigma": 54, "reflection_table_selector": 54, "subsampl": 54, "neighbor": 54, "imping": 54, "tune": [54, 82, 86, 87], "thereof": 54, "irradi": 54, "kapton": 54, "tape": 54, "merge_n_imag": 55, "image_prefix": 55, "sum_": 55, "get_raw_data_from_imageset": 55, "modif": [55, 92], "bypass": 55, "miss": [56, 73, 74, 81, 84, 89], "asymmetr": [56, 77, 94], "min_component_s": 56, "orientation_decomposit": [57, 62], "e1": [57, 62], "e3": [57, 62], "relative_to_static_orient": [57, 62], "decomposit": [57, 62], "ignore_shadow": 58, "buffer_s": 58, "buffer": [58, 72], "visualis": [], "reverse_phi": [], "crystal_fram": [], "beam_centre_panel": [], "z_min": [], "z_max": [], "n_min": [], "n_max": [], "partiality_min": [], "partiality_max": [], "outlier_displai": [], "inlier": [], "experiment_id": [], "black_background": [], "show_beam_vector": [], "show_reciprocal_cel": [], "label_nearest_point": [], "marker_s": 68, "autospin": [], "model_view_matrix": [], "max_experi": [], "black": [], "white": [94, 95, 97], "n_static_macrocycl": 59, "separate_independent_set": 59, "include_unused_reflect": 59, "unus": 59, "purpos": [59, 74, 77, 81, 82, 83, 86, 87, 92], "parameter_t": 59, "correlation_plot": [59, 70, 83], "matplotlib": [59, 70], "later": [59, 70, 73, 87, 88], "replot": [59, 70], "triclin": [60, 70, 74, 75, 82, 86, 87, 88], "bravais_setting_1": [60, 82, 86], "bravais_setting_": 60, "lepage_max_delta": 60, "cc_n_bin": 60, "crystal_id": [60, 85], "external_depend": 62, "remot": [62, 79], "emb": 62, "pixels_per_bin": 62, "40": [62, 73, 74, 76, 81, 82, 83, 84, 85, 86, 87, 96], "relocat": 62, "inflat": 62, "centroid_diff_max": 62, "centroid_diff_x": [62, 81], "centroid_diff_i": [62, 81], "motiv": [63, 82, 83, 86], "refelct": 63, "previou": [63, 75, 76, 81, 82, 84, 86, 87], "1_integr": 63, "2_integr": 63, "integrated_2": [63, 72, 75, 88], "overwrite_existing_model": 63, "reset_error_model": 63, "cut_data": [63, 84], "scaling_opt": 63, "check_consistent_index": 63, "cross_valid": 63, "deltacchalf": [63, 72, 74], "max_cycl": [63, 72], "max_percent_remov": [63, 72], "min_complet": [63, 72, 76], "image_group": [63, 72, 74], "group_siz": [63, 72, 74], "stdcutoff": [63, 72], "scale_and_filter_result": 63, "dataset_select": 63, "analytical_correct": 63, "relative_b_correct": 63, "resolution_depend": 63, "quadrat": 63, "dose": [63, 72, 81], "1e6": 63, "fix_initi": 63, "reliabl": [63, 73, 82, 84, 86, 88], "weakli": [63, 81], "needl": 63, "protein": [63, 73, 74, 75, 82, 83, 95], "absorb": 63, "100um": 63, "1a": 63, "5e5": 63, "filepath": 63, "use_internal_vari": 63, "additional_stat": 63, "delete_integration_shoebox": 63, "discard": 63, "randomli": [63, 72, 82, 84, 86, 97], "min_group": 63, "2000": [63, 72, 82, 85], "50000": [63, 73], "min_parti": [63, 72, 82, 84, 86], "midpoint": 63, "rmea": [63, 74, 76, 79, 82, 84, 86, 87, 88], "joint_analysi": 63, "weighting_schem": 63, "invvar": 63, "uniti": [63, 78], "reweight": 63, "min_ih": [63, 74], "oppos": 63, "target_cycl": 63, "only_save_target": 63, "target_model": 63, "deprec": 63, "target_mtz": 63, "use_free_set": 63, "free": [63, 72, 73, 74, 77, 79, 82, 83, 86, 90, 95, 97], "overbias": 63, "alongisd": 63, "free_set_percentag": 63, "free_set_offset": 63, "gn": [63, 95], "lm": [63, 95], "outlier_zmax": [63, 87], "cross_validation_mod": 63, "cross": [63, 74, 75, 82, 84, 86], "docstr": 63, "discreet": [], "parameter_valu": 63, "nfold": 63, "fold": 63, "repetit": 63, "scaling_refineri": 63, "refinement_ord": 63, "rmsd_toler": 63, "full_matrix_engin": 63, "cchalf": [63, 72], "\u03b4cc\u00bd": [63, 72, 74, 76, 84], "use_dataset": 63, "et": [11, 64, 72, 73, 79, 84], "al": [11, 64, 72, 79, 84], "plot_search_scop": 64, "max_reflect": [64, 65], "10000": [64, 78], "show_shared_model": 65, "show_all_reflection_data": 65, "show_intens": 65, "show_centroid": 65, "show_profile_fit": 65, "show_flag": 65, "show_identifi": 65, "image_statist": 65, "show_correct": 65, "show_raw": 65, "resolution_analysi": 67, "split_json": 67, "joint_json": 67, "stereograph": [68, 76], "hkl_limit": 68, "expand_to_p1": 68, "eliminate_sys_abs": 68, "indexed_1": 68, "indexed_2": 68, "phi_angl": 68, "use_starting_angl": 68, "plane_norm": 68, "save_coordin": 68, "label_indic": 68, "font_siz": 68, "colour_map": 68, "gridsiz": 68, "systematic_abs": 69, "significance_level": 69, "signfic": [], "axial": [69, 88], "corrplot": [70, 83], "refined_cel": [70, 88], "p4p": [70, 76, 88], "filter_integrated_centroid": 70, "combine_crystal_model": [70, 72], "xprep": [70, 73, 88], "refine_bravais_set": [71, 73, 74, 75, 77, 78, 82, 85, 86, 87, 88], "two_theta_refin": [71, 72, 76, 88], "multiplex": [71, 80, 95], "image_view": [71, 73, 74, 75, 77, 78, 81, 82, 86, 87], "reciprocal_lattice_view": [74, 76, 77, 78, 81, 82, 86, 87, 88], "generate_mask": [71, 73, 75], "check_indexing_symmetri": [71, 78], "search_beam_posit": [71, 78], "plot_scan_varying_model": [71, 74], "find_spots_serv": 71, "client": 71, "apach": 71, "apply_mask": 71, "estimate_gain": 71, "estimate_resolut": [71, 72, 76, 84], "merge_cbf": 71, "export_bitmap": 71, "slice_sequ": 71, "spot_counts_per_imag": 71, "stereographic_project": 71, "combine_experi": [71, 81, 83, 93], "align_cryst": 71, "anvil_correct": 71, "missing_reflect": 71, "filter_reflect": 71, "printabl": 71, "adob": 71, "browser": [71, 73, 76, 82, 84, 86], "click": [71, 73, 74, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91], "Or": [71, 91], "tab": [71, 76, 84, 87], "pathologi": 72, "isomorph": [72, 76, 83], "preliminari": 72, "cite": 72, "2022": [72, 84, 92, 95], "d78": [72, 84], "752": [72, 73, 84, 95], "769": [72, 73, 84, 95], "integrated_1": [72, 75, 88, 96], "brotat": 72, "secondari": 72, "resolve_indexing_ambigu": 72, "rescale_after_resolution_cutoff": 72, "multi_crystal_analysi": 72, "min_multipl": 72, "cluster_method": 72, "cos_angl": 72, "remove_profile_fitting_failur": 72, "r_free_flag": 72, "use_lattice_symmetri": 72, "use_dataman_shel": 72, "n_shell": 72, "relative_to_complete_set": 72, "resolv": [72, 74, 76, 82, 86, 87], "rescal": [72, 82, 86], "bold": 72, "noauto": 72, "max_fre": 72, "bias": 72, "old_test_flag_valu": 72, "guess": 72, "phenix": 72, "d_ep": 72, "sca": 72, "significantli": [72, 73, 82, 84, 86, 87, 96], "loss": [72, 92], "author": 73, "jessica": 73, "bruhn": 73, "nanoimag": 73, "servic": [73, 92], "thermofish": 73, "glacio": 73, "tem": 73, "ceta": 73, "camera": 73, "leginon": 73, "deposit": 73, "ccdc": 73, "biotin16": 73, "p2": [73, 82, 86], "featur": [73, 74, 75, 77, 83, 90], "cheng": 73, "negro": 73, "jf": [73, 95], "rice": 73, "wj": 73, "dallakyan": 73, "eng": 73, "dg": [73, 75, 95], "potter": 73, "carragh": 73, "sci": [73, 95], "jan": [73, 95], "2021": [73, 74], "pmid": [73, 74, 75, 95], "33030237": 73, "pmc": [73, 74, 75, 95], "reprint": [73, 74, 75, 95], "pmc7737759": 73, "microcryst": [73, 74, 95], "pharmaceut": 73, "industri": 73, "lesson": 73, "learn": [73, 74, 81], "fifti": 73, "scapin": 73, "mercado": 73, "bq": 73, "ganesh": 73, "bn": 73, "nieusma": 73, "lucier": 73, "kw": 73, "mayer": 73, "chiang": 73, "nj": 73, "poweleit": 73, "mcgilvrai": 73, "pt": 73, "mashor": 73, "hennessi": 73, "thomson": 73, "wang": 73, "front": 73, "mol": 73, "biosci": 73, "648603": 73, "34327213": 73, "pmc8313502": 73, "801406_1": 73, "801574_1": 73, "802003_1": 73, "810542_1": 73, "magnif": 73, "footprint": 73, "yellow": 73, "pictur": 73, "tilt": 73, "movi": 73, "neg": [73, 75, 76, 79, 84], "valuabl": 73, "smv": [73, 74], "beyond": [73, 82, 86, 87, 94], "benefici": [73, 87], "leginon_offset": 73, "suggest": [73, 74, 76, 79, 81, 82, 83, 85, 86, 88], "image_pedest": 73, "plug": [73, 75], "dxtbx_ed_format": [73, 75], "formatsmvcetad_tui": 73, "img": [73, 74, 78, 83], "980": [73, 82], "editor": [73, 74, 83], "slider": [73, 82, 86], "zoom": [73, 74, 76, 77, 82, 86], "weaker": [73, 77], "mous": [73, 74, 87], "beamstop": 73, "friedel": [73, 78, 82, 86], "draw": 73, "bottom": [73, 74, 78, 87], "1059": 73, "988": [73, 82, 85, 86], "diamet": 73, "max_spot": 73, "consum": [73, 83], "26": [73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 95, 96], "zinger": [73, 83], "27": [73, 75, 77, 78, 81, 82, 83, 84, 85, 86], "160": [73, 82, 84, 85, 86], "276": [73, 82, 84, 86], "347": [73, 82, 86], "598": [73, 86], "584": [73, 86], "483": [73, 82, 86], "506": [73, 75, 82, 84, 86, 95], "327": [73, 78, 81, 82, 84, 86], "422": [73, 76, 82, 84, 86], "17": [73, 74, 76, 79, 81, 82, 83, 84, 85, 86, 95], "286": [73, 81, 82, 84, 85, 86], "328": [73, 74, 79, 82, 86], "21": [73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88], "142": [73, 76, 82, 84, 86], "189": [73, 82, 85, 86], "140": [73, 76, 81, 82, 84, 86], "24": [73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 95], "424": [73, 82, 86], "1031": [73, 86], "735": [73, 82, 86], "419": [73, 74, 82, 86], "374": [73, 82, 86], "29": [73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 96], "670": [73, 86], "718": [73, 86], "32": [73, 75, 76, 81, 82, 83, 84, 85, 86, 96], "evid": [73, 74, 76, 77], "mental": 73, "carefulli": [73, 74, 76], "microscop": [73, 75], "nref": [73, 74, 78, 81, 82, 83, 84, 85, 86, 87], "rmsd_z": [73, 74, 78, 81, 82, 83, 85, 86], "8365": 73, "34229": 73, "okai": [73, 74, 83], "1101": [73, 82], "299": [73, 82, 83, 84, 86], "78": [73, 74, 76, 77, 79, 81, 82, 83, 84, 85, 86, 95], "chiral": [73, 74, 82, 84, 86], "ap": [73, 74, 77, 78, 79, 82, 85, 86], "p21": [73, 86], "p222": [73, 85, 88], "p2221": 73, "p21212": 73, "p212121": 73, "4889": 73, "08": [73, 76, 81, 82, 84, 85, 86], "763": [73, 85], "873": [73, 82], "990": [73, 82, 84], "1112": 73, "4856": 73, "079": [73, 76, 84, 85], "798": 73, "979": [73, 82, 85, 86], "81": [73, 74, 79, 81, 82, 84, 85, 86], "1114": 73, "074": [73, 76, 84, 85], "996": [73, 76, 78, 82, 83, 84, 86], "1115": 73, "4718": 73, "068": [73, 82, 84, 85, 87], "1009": [73, 82], "062": [73, 79, 82, 84, 86], "989": [73, 82], "33": [73, 75, 76, 77, 81, 82, 83, 84, 85, 86, 96], "1121": [73, 82, 86], "straightforward": [73, 76, 77, 88], "doubt": 73, "addsym": 73, "platon": 73, "great": [73, 77, 87], "orthorhomb": [73, 75, 77, 78], "decreas": [73, 74, 81, 82, 83, 84, 85, 86, 87], "890": [73, 86], "79025": 73, "1428": [73, 82], "24032": 73, "mind": 73, "incomplet": [73, 74, 75, 88], "wait": 73, "scroll": [73, 87], "bring": [73, 76, 83], "focu": [73, 76, 85, 90, 94], "orang": 73, "uptick": 73, "suboptim": [73, 84], "hint": [73, 76, 78, 87], "1022": [73, 82], "992": [73, 76, 84, 85], "831": [73, 76, 81, 82, 84], "1026": [73, 82], "986": [73, 84, 85], "791": 73, "998": [73, 79, 82, 84, 86, 87], "1619": [73, 86], "715": [73, 82, 86], "43": [73, 78, 79, 81, 82, 83, 84, 85, 86], "149": [73, 76, 79, 82, 84, 86], "071": [73, 76, 77, 82, 84, 85, 86], "033": [73, 76, 78, 82, 84, 87], "032": [73, 79, 82, 84, 86, 88], "77": [73, 74, 75, 78, 79, 81, 82, 84, 85, 86, 87], "19032": 73, "8498": 73, "2916": [73, 81], "2178": 73, "636": [73, 86], "fed": 73, "reprocess": [73, 86, 87], "rememb": [73, 78, 81, 83], "saw": 73, "129": [73, 76, 78, 82, 84, 86], "101": [73, 77, 82, 84, 86], "128": [73, 76, 78, 81, 82, 84, 86], "011": [73, 82, 84, 86], "39": [73, 77, 78, 81, 82, 83, 84, 85, 86, 96], "007": [73, 88], "56": [73, 75, 77, 78, 81, 82, 83, 84, 86], "57": [73, 74, 78, 79, 81, 82, 83, 84, 85, 86], "19159": 73, "2937": [73, 82], "8531": 73, "49": [73, 81, 82, 83, 84, 85, 86, 88, 95], "had": [73, 77, 81, 82, 83, 84, 86, 87], "fairli": [73, 74, 75, 78, 81, 82, 86, 87], "ob": [73, 82, 84, 85, 86, 95], "uniq": [73, 82, 84, 85, 86], "mult": [73, 82, 84, 85, 86], "comp": [73, 82, 84, 85, 86], "si": [73, 82, 84, 85, 86], "r_mrg": [73, 82, 84, 85, 86], "r_mea": [73, 82, 84, 85, 86], "r_pim": [73, 82, 84, 85, 86], "r_anom": [73, 82, 84, 86], "cc_ano": [73, 82, 84, 85, 86], "86": [73, 82, 84, 85, 86], "941": [73, 82, 84], "87": [73, 76, 78, 81, 82, 83, 84, 85, 86], "104": [73, 74, 75, 82, 84, 85, 86, 87], "109": [73, 81, 82, 84, 85, 86, 95], "085": [73, 76, 84, 85], "994": [73, 76, 84], "943": [73, 82, 84, 85], "98": [73, 74, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87], "158": [73, 76, 81, 82, 84, 86], "164": [73, 76, 82, 84, 86], "044": [73, 84], "935": 73, "84": [73, 74, 81, 82, 84, 85, 86, 87], "161": [73, 76, 82, 84, 86], "169": [73, 76, 82, 84, 85, 86], "046": [73, 76, 84, 85, 86], "114": [73, 82, 84, 85, 86], "983": [73, 82, 84, 85], "1013": [73, 82], "265": [73, 78, 81, 82, 86], "067": [73, 76, 84, 86, 88], "966": [73, 82], "523": [73, 82, 84, 86], "865": [73, 82, 84], "63": [73, 74, 81, 82, 84, 85, 86], "277": [73, 82, 84, 86], "288": [73, 82, 84, 86], "076": [73, 75, 76, 82, 84, 85, 88], "225": [73, 76, 82, 85, 86], "942": [73, 76, 82, 84], "051": [73, 75, 76, 82, 84, 85], "970": 73, "76": [11, 73, 74, 78, 79, 81, 82, 84, 85, 86, 95], "307": [73, 81, 82, 86], "322": [73, 76, 82, 84, 86], "091": [73, 78, 84, 85, 87], "213": [73, 76, 82, 84, 86], "816": [73, 82, 84], "612": [73, 86], "65": [73, 78, 81, 82, 84, 85, 86], "310": [73, 82, 86], "323": [73, 82, 84, 86], "259": [73, 78, 81, 82, 84, 86], "881": [73, 82, 85, 86], "306": [73, 82, 84, 86], "09": [73, 74, 76, 78, 79, 81, 82, 84, 85, 86, 95], "993": [73, 74, 76, 82, 84, 85], "393": [73, 82, 86], "408": [73, 82, 86], "272": [73, 76, 78, 82, 86], "965": 73, "167": [73, 78, 82, 84, 86], "920": [73, 82, 84], "58": [73, 81, 82, 83, 84, 85, 86, 88], "428": [73, 82, 86], "442": [73, 82, 86], "110": [73, 82, 84, 86], "915": 73, "078": [73, 76, 78, 79, 85, 86], "607": [73, 78, 82, 86], "155": [73, 76, 81, 82, 84, 86], "842": [73, 78, 82], "856": [73, 82], "61": [73, 74, 81, 82, 84, 85, 86], "622": [73, 76, 81, 82, 86], "647": [73, 86], "166": [73, 82, 85, 86, 96], "520": [73, 82, 86], "931": [73, 76], "910": [73, 82, 84], "246": [73, 76, 82, 83, 86], "628": [73, 82, 84, 86], "495": [73, 82, 84, 86], "876": 73, "70": [73, 74, 76, 82, 84, 85, 86, 95], "964": [73, 82, 86], "268": [73, 78, 81, 82, 86], "696": [73, 86], "333": [73, 81, 82, 86], "261": [73, 78, 82, 86, 95], "751": [73, 82], "62": [73, 78, 82, 84, 86, 95], "146": [73, 81, 82, 84, 86], "326": [73, 82, 86], "805": [73, 82], "491": [73, 82, 86, 95], "324": [73, 81, 82, 84, 86], "88": [73, 74, 78, 81, 82, 84, 85, 86], "631": [73, 74, 76, 85, 86], "556": [73, 86], "648": [73, 82, 86], "505": [73, 82, 84, 86], "224": [73, 81, 82, 86], "554": [73, 86], "572": [73, 86], "503": [73, 79, 82, 84, 86], "459": [73, 82, 86], "251": [73, 82, 84, 86, 88], "260": [73, 75, 81, 82, 86], "050": [73, 76, 82, 84, 86, 87], "513": [73, 82, 86], "939": [73, 83, 86], "673": [73, 82, 86], "371": [73, 76, 82, 85, 86], "427": [73, 82, 86], "48": [73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 95], "808": [73, 82, 86], "947": [73, 76, 82, 84], "666": [73, 76, 86], "389": [73, 76, 82, 86], "423": [73, 82, 86], "817": [73, 82], "054": [73, 76, 84, 86], "099": [73, 86, 88], "173": [73, 74, 82, 86], "285": [73, 82, 84, 86], "312": [73, 82, 86], "477": [73, 82, 86], "003": [73, 84], "432": [73, 82, 86], "85": [73, 75, 76, 78, 79, 81, 82, 84, 85, 86, 95, 96], "15798": 73, "1361": [73, 81, 82], "257": [73, 78, 79, 82, 86], "111": [73, 74, 76, 81, 82, 84, 86, 95], "968": [73, 84, 86], "94": [73, 74, 76, 81, 82, 84, 85, 86, 87, 96], "116": [73, 78, 82, 86], "034": [73, 79, 84], "995": [73, 76, 82, 85, 86], "080": [73, 74, 76, 82, 84, 85], "961": [73, 82, 84, 86], "54": [73, 74, 81, 82, 83, 84, 85, 86], "170": [73, 76, 82, 84, 86], "045": [73, 76, 84, 85], "075": [73, 76, 79, 84, 85], "492": [73, 81, 82, 86], "178": [73, 78, 82, 84, 86], "185": [73, 76, 82, 86, 87], "1034": [73, 82], "960": [73, 75], "365": [73, 76, 82, 84, 86], "891": [73, 82, 86], "332": [73, 82, 86], "090": [73, 76, 85, 86], "906": [73, 82, 84, 86], "148": [73, 76, 81, 82, 84, 86], "1003": [73, 82], "364": [73, 81, 82, 86], "379": [73, 82, 86], "267": [73, 81, 82, 85, 86], "708": [73, 82, 86], "34": [73, 76, 78, 81, 82, 83, 84, 85, 86], "361": [73, 82, 86], "096": [73, 84, 86], "296": [73, 82, 84, 86], "905": [73, 82], "020": [73, 76, 79, 82, 84, 86], "439": [73, 76, 82, 86], "455": [73, 74, 82, 85, 86], "302": [73, 82, 86], "242": [73, 79, 82, 84, 85, 86, 95], "493": [73, 82, 86], "121": [11, 73, 76, 77, 78, 82, 84, 86], "812": [73, 82], "1081": [73, 81], "672": [73, 82, 86], "699": [73, 76, 82, 86], "180": [53, 73, 76, 82, 84, 86], "739": [73, 77], "879": [73, 82], "710": [73, 86], "736": [73, 77, 82, 84, 86], "184": [73, 82, 84, 86], "264": [73, 82, 84, 86], "951": [73, 75, 82, 84], "249": [73, 82, 84, 86], "481": [73, 82, 84, 86], "571": [73, 82, 84, 86], "105": [73, 82, 84, 85, 86], "897": [73, 82, 84], "082": [73, 74, 76, 84, 85], "124": [73, 74, 76, 78, 82, 84, 85, 86], "294": [73, 81, 82, 86], "796": 73, "386": [73, 82, 86], "760": [73, 82, 85], "262": [73, 75, 82, 83, 84, 86], "642": [73, 86], "777": [73, 82], "866": [73, 76, 84], "544": [73, 86], "208": [73, 78, 82, 86], "514": [73, 75, 82, 86], "190": [73, 79, 82, 84, 86], "593": [73, 86], "706": [73, 82, 86], "827": 73, "605": [73, 86], "290": [73, 82, 86], "089": [73, 76, 85], "538": [73, 82, 86], "195": [73, 78, 82, 84, 86], "744": 73, "534": [73, 76, 81, 86], "289": [73, 82, 84, 86], "436": [73, 82, 86], "314": [73, 82, 84, 86], "799": [73, 82], "353": [73, 78, 82, 86], "363": [73, 82, 84, 86], "472": [73, 81, 82, 86], "794": [73, 82, 85, 86], "137": [73, 74, 82, 84, 85, 86, 88], "052": [73, 76, 82, 84, 85, 86], "291": [73, 74, 82, 86], "041": [73, 76, 81, 84, 86], "519": [73, 76, 78, 81, 82, 86], "851": [73, 82], "350": [73, 82, 86], "490": [73, 76, 82, 86], "16205": 73, "1373": [73, 86], "266": [73, 78, 82, 84, 86], "072": [73, 76, 84, 85, 86], "201": [73, 76, 81, 82, 86], "127": [73, 76, 78, 81, 82, 84, 86], "lot": [73, 76, 81, 85, 87], "954": [73, 78, 82], "077": [73, 76, 79, 84, 85, 96], "028": [73, 76, 78, 82, 84, 85], "168": [73, 82, 84, 86, 88], "991": [73, 82, 84, 86, 88], "957": [73, 84], "186": [73, 76, 79, 82, 86], "971": [73, 81, 82, 83, 84], "053": [73, 84, 85, 87], "1017": [73, 82], "073": [73, 76, 84, 86], "177": [73, 81, 82, 84, 86], "956": [73, 75, 85], "203": [73, 81, 82, 84, 85, 86], "885": [73, 84], "334": [73, 82, 86], "908": [73, 82], "017": [73, 82, 84], "359": [73, 76, 82, 83, 86], "375": [73, 82, 86, 87], "102": [73, 82, 84, 85, 86], "722": [73, 82], "331": [73, 76, 78, 81, 82, 85, 86], "914": [73, 82, 86], "366": [73, 76, 81, 82, 86], "295": [73, 82, 86], "900": [73, 82], "452": [73, 74, 82, 86], "304": [73, 82, 84, 86], "870": 73, "475": [73, 82, 86], "122": [73, 76, 78, 82, 84, 86], "761": 73, "397": [73, 82, 86], "1072": 73, "637": [73, 74, 76, 83, 86], "663": [73, 86], "394": [73, 81, 82, 85, 86], "775": [73, 82, 84, 85], "869": 73, "714": [73, 86], "741": 73, "560": [73, 84, 85, 86], "608": [73, 86], "175": [73, 81, 82, 86], "921": [73, 82], "253": [73, 82, 84, 86], "486": [73, 82, 86, 95], "755": [73, 82], "151": [73, 76, 81, 82, 84, 85, 86], "888": [73, 82], "059": [73, 82, 84, 85, 86, 87], "746": [73, 74, 78, 82, 86], "471": [73, 82, 84, 86], "421": [73, 76, 82, 84, 85, 86], "911": [73, 82], "218": [73, 82, 86], "629": [73, 82, 86], "635": [73, 86], "719": [73, 84, 86], "507": [73, 82, 84, 86], "550": [73, 82, 86], "023": [73, 76, 82, 84, 88], "679": [73, 86], "800": [73, 82], "602": [73, 76, 78, 82, 86], "315": [73, 76, 82, 86], "212": [73, 78, 82, 84, 86], "147": [73, 82, 86], "529": [73, 85, 86], "107": [73, 74, 82, 84, 86], "790": [73, 86], "577": [73, 82, 86], "223": [73, 82, 86], "429": [73, 74, 81, 82, 86], "274": [73, 81, 82, 86], "802": [73, 81, 82], "318": [73, 82, 84, 86], "569": [73, 85, 86], "426": [73, 82, 86], "047": [73, 74, 76, 84, 86], "232": [73, 82, 83, 86, 95], "220": [73, 82, 84, 86], "287": [73, 82, 84, 86], "537": [73, 86], "340": [73, 81, 82, 86, 95], "650": [73, 83, 86], "15973": 73, "248": [73, 82, 84, 86], "biotin_p222": 73, "viewhkl": 73, "middl": 73, "variat": [73, 82, 83, 84, 86, 87, 88], "happen": [73, 78, 82, 85, 86, 87], "goe": 73, "to_shelx": [73, 88], "chno": [73, 88], "shelxt": [73, 88], "shelxd": 73, "biotin_p212121": 73, "02501": 73, "19177": 73, "29400": 73, "84910": 73, "0000": [73, 74, 78, 81, 82, 85, 86, 88], "zerr": 73, "00104": [73, 86], "00206": 73, "00417": 73, "latt": 73, "sfac": 73, "64": [73, 74, 75, 78, 81, 82, 84, 86, 96], "plop": 73, "ntry": 73, "hklf": 73, "organ": [73, 88], "m1000": 73, "realli": [73, 76, 81, 83], "ni": 73, "difficulti": [73, 77, 78], "figur": [73, 74, 78, 81, 83], "again": [73, 74, 78, 81, 82, 83, 85, 86, 87, 88, 93], "molecular": [73, 74, 75, 77, 95, 98], "phaser": 73, "freerflag": 73, "solvent": 73, "struggl": 73, "grow": [73, 76, 77], "ones": 73, "luck": 73, "myd88": [74, 80], "tir": [74, 80], "assembli": 74, "micro": [74, 80], "sfx": 74, "insight": [74, 76], "toll": 74, "receptor": 74, "transduct": 74, "articl": 74, "reveal": [74, 77], "femtosecond": [74, 95], "clabber": [74, 75, 95], "mtb": [74, 75, 95], "holm": 74, "muuss": 74, "tw": 74, "vajjhala": 74, "pr": 74, "thygesen": 74, "sj": 74, "mald": 74, "ak": 74, "hunter": 74, "djb": 74, "croll": 74, "ti": 74, "flueckig": 74, "nanson": 74, "jd": 74, "rahaman": 74, "mh": 74, "aquila": 74, "liang": 74, "yoon": 74, "ch": 74, "zhao": [74, 95], "zatsepin": 74, "na": 74, "abbei": 74, "sierecki": 74, "gambin": 74, "stacei": 74, "kj": 74, "darmanin": 74, "kobe": 74, "xu": 74, "nat": [74, 95], "2578": 74, "33972532": 74, "pmc8110528": 74, "reproduc": [74, 75, 77, 82, 83, 86, 87, 92], "sbgrid": 74, "mt": 74, "zou": 74, "myeloid": 74, "differenti": [74, 82, 86, 87], "7beq": 74, "bank": 74, "814": [74, 82], "eighteen": 74, "subdirectori": [74, 76, 84, 86, 87], "prompt": 74, "proc": [74, 75, 95], "dive": 74, "feel": [74, 82, 83, 86], "00001": 74, "00072": 74, "inde": [74, 78, 79], "Near": 74, "formatsmvtimepix_su_516x516": 74, "193": [74, 76, 82, 86], "earlier": [74, 75], "055": [74, 76, 84, 85, 86], "timepix": [74, 75], "\u00b5m": 74, "\u00e5ngstr\u00f6m": 74, "rigor": 74, "despit": [74, 78, 81, 86, 87], "2193": [74, 86], "overwritten": 74, "plai": [74, 82, 86], "improperli": 74, "photon": [74, 95, 97], "tick": [74, 87], "overlai": 74, "big": [74, 82, 86, 87], "pick": [74, 75, 77, 87], "occur": [74, 75, 82, 86, 87], "ll": [74, 81, 83, 84, 86, 87], "leav": [74, 87], "art": [74, 87], "633": [74, 86], "launch": [74, 87], "But": [74, 84], "782563": 74, "622571": 74, "find_rotation_axi": 74, "627963": 74, "778243": 74, "checkbox": [74, 87], "0251": 74, "simultan": [74, 83, 87, 95], "hardli": 74, "neglig": [74, 82, 86, 92], "wander": 74, "unreason": 74, "latter": [74, 82, 86], "proport": 74, "562": [74, 82, 83, 86], "528": [74, 76, 82, 86], "51747": 74, "67141": 74, "28935": 74, "mi": [74, 78, 81, 95], "4508": 74, "118": [74, 78, 82, 86], "533": [74, 84, 86], "115": [74, 82, 86, 88], "267504": 74, "89": [74, 75, 77, 78, 79, 82, 83, 85, 86, 87], "134383": 74, "knew": 74, "beforehand": 74, "cheat": 74, "paper": [74, 75, 95], "\u03b1": [74, 95], "\u03b3": 74, "favour": [74, 77, 82, 86, 87], "mc": [74, 77, 78, 79, 82, 85, 86, 95], "117": [74, 82, 84, 85, 86], "highli": [74, 83, 97], "bravais_setting_2": [74, 82, 86], "push": 74, "thu": [74, 82, 83, 86, 87], "break": [74, 93], "degeneraci": 74, "awkward": 74, "twist": 74, "sophist": [74, 82, 83, 87], "1843": [74, 86], "prudent": [74, 87], "skip": [74, 96], "drift": [74, 75], "59": [74, 81, 82, 84, 85, 86, 88], "2799": [74, 82], "6495": 74, "7070": 74, "2456": [74, 82, 86], "7603": 74, "6013": 74, "9281": 74, "0053": [74, 82, 86], "3723": 74, "0101": 74, "0321": 74, "0032": 74, "0194": [74, 82], "0051": 74, "0209": 74, "0137": 74, "0244": 74, "0117": [74, 82, 85], "0082": 74, "0002": [74, 82, 85], "0072": 74, "tell": [74, 77, 81, 83, 87, 93], "won": [74, 76, 81], "4328": [74, 86], "540": [74, 79, 86], "950": [74, 82], "403": [74, 82, 83, 84, 86], "4849": 74, "643": [74, 86, 87], "4917": [74, 81], "335": [74, 76, 82, 84, 86], "ibg": [74, 81, 82, 85, 86], "cc_pearson": [74, 82, 85, 86], "cc_spearman": [74, 82, 85, 86], "rock": 74, "454": [74, 82, 86], "003907": 74, "083698": 74, "came": 74, "chmod": 74, "snapshot": [11, 74, 95, 97], "tend": [74, 75], "pai": [74, 76, 87], "attent": [74, 76, 87], "contrast": [74, 87], "synchrotron": [74, 78, 90, 94, 96, 97], "regard": [74, 87], "3ded": [74, 80], "435": [74, 82, 86], "317": [74, 82, 84, 86], "886": [74, 78, 82, 83, 84], "460": [74, 82, 85, 86], "336": [74, 82, 86], "830": 74, "113": [74, 76, 81, 82, 86], "657": [74, 84, 86], "154": [74, 76, 78, 81, 82, 85, 86], "106": [74, 81, 82, 84, 86], "787": 74, "919": [74, 82, 86], "773": [74, 76, 84], "slope": [74, 76, 79, 82, 84, 86, 87, 88], "015": [74, 79, 84, 86, 87], "df": [74, 76, 82, 84, 86, 87, 88], "di": [74, 76, 82, 84, 86, 87, 88, 95], "811": [74, 82, 85], "36662": 74, "2125": [74, 84], "974": [74, 81, 84], "2705": [74, 86], "144": [74, 76, 82, 86], "xdg": 74, "successfulli": [75, 83], "protocol": [75, 83], "peculiar": 75, "gruen": [75, 95], "jm": [75, 95], "abraham": [75, 95], "jp": [75, 95], "biol": [75, 95], "518": [75, 82, 84, 86, 95], "jun": [75, 95], "29872002": [75, 95], "pmc6096487": [75, 95], "2084": 75, "g06727c3": 75, "posix": 75, "compliant": 75, "seven": 75, "gzip": 75, "lys_ed_dataset_": 75, "lys_ed_dataset_1": 75, "shall": [75, 78, 84, 85, 92], "parent": [75, 87], "data_par": 75, "pwd": 75, "minicbf": 75, "unusu": [75, 83], "formatcbfminitimepix": 75, "fi": 75, "outlin": [75, 78, 82, 86], "dummi": 75, "distort": [75, 78, 82, 86, 87], "s2059798317010348": 75, "ellipt": 75, "six": [75, 88], "ellips": 75, "generate_distortion_map": 75, "lys_ed_dataset_2": 75, "frame_value_018": 75, "l1": 75, "l2": 75, "centre_xi": 75, "2475": [75, 85], "subsect": 75, "cat": 75, "018138": 75, "999803": 75, "008012": 75, "3525": [75, 86], "535": [75, 82, 86], "1890": [75, 86], "frame_value_": 75, "tendenc": 75, "recreat": 75, "515": [75, 82, 86], "504": [75, 82, 84, 86], "438": [75, 82, 86], "1615": [75, 86], "309": [75, 82, 86, 95], "2055": 75, "0344": 75, "lys_ed_dataset_3": 75, "0481": 75, "485": [75, 78, 82, 86], "lys_ed_dataset_4": 75, "lys_ed_dataset_5": 75, "305": [75, 82, 86], "952": [75, 82, 84, 86], "lys_ed_dataset_6": 75, "blank": 75, "222": [75, 76, 82, 84, 85, 86], "358": [75, 82, 86], "207": [75, 82, 84, 86], "lys_ed_dataset_7": 75, "833": [75, 82, 85], "stabilis": 75, "tau_2": 75, "tau_3": 75, "tau2": 75, "tau3": 75, "bravais_setting_5": [75, 77, 85, 86], "poor": [75, 77, 80, 81, 82, 83, 86, 87], "soft": 75, "awai": [75, 81], "did": [75, 77, 81, 83, 97], "impos": [75, 85], "obviou": [75, 82, 83, 86], "refined_experi": 75, "compens": [75, 86], "seen": [75, 81, 82, 86, 87], "longer": [75, 81, 82, 83, 84, 85, 86], "itself": [75, 81], "meant": 75, "chose": [75, 81, 87], "integrated_experi": 75, "integrated_3": [75, 88], "integrated_4": [75, 88], "integrated_5": 75, "integrated_6": 75, "integrated_7": 75, "2_1": [75, 77, 84], "declar": 75, "hklin": [75, 86], "integrated_": [75, 83, 93], "sorted_": 75, "pointless_reindex_": 75, "sorted_1": 75, "sorted_2": 75, "sorted_3": 75, "sorted_4": 75, "sorted_5": 75, "sorted_6": 75, "sorted_7": 75, "pointless_combin": 75, "outofsequencefil": 75, "come": [76, 83], "tool": [76, 77, 78, 82, 84, 86, 87, 89, 90], "cumbersom": 76, "dispos": [76, 78], "kindli": [76, 78], "school": 76, "spring": 76, "bl32xu_group2_data": 76, "zoo": 76, "9m": 76, "tetragon": [76, 81], "lysozym": 76, "outset": 76, "care": [76, 81, 82, 83, 86, 87], "dozen": 76, "hundr": 76, "organis": [76, 99], "yourself": 76, "sweep00": 76, "sweep30": 76, "combine0": 76, "spell": 76, "printf": 76, "02d": [76, 83], "ten": 76, "somewher": 76, "p4": [76, 81, 96], "mmm": 76, "0015": 76, "0013": [76, 81, 82, 85], "0012": [76, 86], "00078": 76, "00062": 76, "00047": 76, "081": [76, 82, 84, 85, 86], "946": [76, 82], "93": [76, 78, 81, 82, 84, 85, 86, 88, 95], "2189": 76, "2723": [76, 86], "firefox": [76, 84], "graphic": [76, 82, 86, 87], "critic": [76, 81, 97], "275": [76, 82, 84, 86], "156": [76, 82, 84, 86], "063": [76, 81, 82, 85, 86, 87, 88], "141": [76, 82, 84, 85, 86], "134": [76, 78, 81, 82, 84, 85, 86], "130": [76, 78, 82, 86], "525": [76, 81, 82, 86, 95], "163": [76, 82, 84, 86], "048": [76, 84], "064": [76, 84, 85], "061": [76, 82, 84, 85, 86], "165": [76, 82, 84, 86], "278": [76, 81, 82, 84, 85, 86], "039": [76, 82, 84, 85, 86], "095": [76, 85, 86, 88], "167233": 76, "9155": 76, "8507": 76, "247651": 76, "22555": 76, "1278": [76, 82, 86], "1104": [76, 81, 82, 85], "42048": 76, "enthusiast": 76, "676": [76, 86], "588": [76, 85, 86], "131": [76, 78, 81, 82, 86], "801": 76, "823": 76, "060": [76, 79, 84], "864": [76, 84], "370": [76, 81, 82, 86], "258": [76, 81, 82, 86], "087": [76, 82, 84], "094": [76, 82, 84], "158400": 76, "8650": 76, "8072": 76, "21401": 76, "1212": [76, 84], "1054": 76, "worth": [76, 78, 82, 83, 84, 85, 86, 87], "227": [76, 81, 82, 85, 86], "793": 76, "749": [76, 84], "084": [76, 82, 84, 86], "892": 76, "021": [76, 78, 82, 84, 85], "728": [76, 82], "026": [76, 84, 86, 87], "018": [76, 84], "997": [76, 82, 84, 85, 86], "240": [76, 82, 86], "086": [76, 84, 86], "549": [76, 81, 82, 86], "301412": 76, "16640": 76, "15140": 76, "321968": 76, "20324": 76, "1149": 76, "21649": 76, "somehow": 76, "compute_delta_cchalf": [76, 84], "625": [76, 86], "599": [76, 82, 86], "254": [76, 78, 81, 82, 86], "056": [76, 84, 85, 86], "463": [76, 82, 86], "508": [76, 82, 84, 85, 86], "527": [76, 82, 84, 86], "758": [76, 81, 82], "770": 76, "843": [76, 86], "854": [76, 82], "898": [76, 82], "705": [76, 79, 82, 86], "delta_cc_half": [76, 84], "3674101744536096": 76, "stddev": [76, 84], "1112402970091422": 76, "0775510135829585": 76, "139": [76, 82, 85, 86], "238": [76, 81, 82, 86], "038": [76, 85, 96], "482": [76, 82, 86], "196": [76, 82, 84, 86], "153": [76, 78, 81, 82, 84, 86], "316": [76, 82, 85, 86], "088": [76, 84, 85, 86], "522": [76, 78, 82, 86], "300879": 76, "16563": 76, "15320": 76, "304888": 76, "21363": 76, "1203": [76, 82], "21637": 76, "textrm": [76, 81], "pim": [76, 84, 85], "069": [76, 84, 85], "135": [76, 81, 82, 86], "448": [76, 82, 86], "619": [76, 86], "092": 76, "255800": 76, "14071": 76, "13145": 76, "21540": 76, "1061": [76, 82], "realist": 76, "revisit": 76, "198": [76, 82, 86], "239": [76, 82, 84, 85, 86, 95], "025": [76, 82, 84, 86, 88], "639": [76, 86], "231": [76, 81, 82, 84, 86], "626": [76, 86, 95], "415898": 76, "22943": 76, "21222": 76, "21636": 76, "1220": [76, 86], "1065": [76, 82], "252": [76, 81, 82, 84, 86], "319": [76, 82, 86], "400": [76, 81, 82, 85, 86], "461": [76, 82, 86], "674": [76, 86], "724": 76, "824": [76, 84], "097": [76, 84, 85], "187": [76, 82, 86], "321": [76, 82, 84, 86], "042": [76, 84, 85], "083": [76, 82, 84], "019": [76, 82, 84, 86, 87], "973": [76, 82, 85], "226": [76, 82, 86], "616": [76, 83, 84, 86], "400223": 76, "22084": 76, "20368": 76, "21639": 76, "1221": [76, 82, 84, 86], "1063": [76, 82], "chanc": [76, 82, 86, 87, 96], "snow": 76, "blind": 76, "ceas": 76, "blame": 76, "substructur": 76, "far": [76, 81, 83, 88], "focuss": 76, "someth": [76, 78, 82, 83, 86], "outward": [76, 78], "xia": 76, "manner": [76, 82, 86, 87, 96], "mplex": 76, "tricki": 76, "question": [76, 78, 80, 84], "risk": 76, "situ": [76, 83, 84], "repeatedli": 76, "dot": [76, 82, 86], "visibl": [76, 82, 86, 87], "appar": [76, 81, 86, 87], "detract": 76, "touch": 76, "rapidli": 76, "mayb": 76, "ran": [76, 83], "cluster_20": 76, "27_dial": 76, "multiplicities_h_0": 76, "two_theta_refine_2theta": 76, "27_refined_cel": 76, "multiplicities_k_0": 76, "28_dial": 76, "28_scale": 76, "multiplicities_l_0": 76, "28_scaled_unmerg": 76, "29_dial": 76, "highlight": [76, 87], "thought": [77, 78], "solv": [77, 78, 82, 86, 87, 88], "late": 77, "warn": [77, 78, 83, 84, 86], "pipelin": [77, 79, 82, 84, 86, 95], "accordingli": 77, "ctruncat": [77, 86], "nc": [77, 84], "face": [77, 81, 90], "spend": 77, "notic": [77, 81, 82, 86, 87, 92], "subtl": 77, "suspect": [77, 78], "central": [77, 79, 81], "5th": 77, "odd": 77, "theori": [77, 92], "easi": [77, 82, 83, 86, 87], "a222": 77, "unconvent": 77, "839": [77, 83], "20000": [77, 78, 82, 86], "oc": [77, 78, 79, 85, 86], "678848": 77, "678373": 77, "678914": 77, "338728": 77, "338516": 77, "mimick": 77, "exercis": [77, 78], "diagnost": [77, 78], "isol": 77, "onward": 77, "rebuild": 77, "5i3l": 77, "contrari": 77, "firstli": 77, "pseudo": [77, 84], "dimer": 77, "superpos": 77, "wors": [77, 81, 82, 83, 84, 86, 87], "disord": 77, "undergon": 77, "transit": 77, "thorough": 77, "ultim": 77, "thank": [77, 78, 83], "wolfram": [77, 78], "tempel": [77, 78], "andrei": 77, "lebedev": 77, "versu": [77, 82, 86, 87], "pseudocentr": 78, "dealt": 78, "pernici": 78, "outright": 78, "careless": 78, "useless": [78, 83], "cautionari": 78, "tale": 78, "moral": 78, "xvf": 78, "dpf3_247398": 78, "x247398": 78, "t1": 78, "unrecognis": 78, "asid": 78, "whatev": [78, 82, 83, 86, 87], "keen": 78, "ei": 78, "button": [78, 82, 86, 87], "worri": [78, 81, 87], "neat": [78, 81], "spiral": 78, "grossli": 78, "understand": [78, 82, 85, 86, 87, 97], "inaccur": 78, "succe": 78, "word": 78, "straight": [78, 81, 82, 86, 87], "increasingli": 78, "imagin": 78, "unwarp": 78, "98416": 78, "6552": 78, "4345": 78, "23317": 78, "119": [78, 81, 82, 84, 86, 96], "682": [78, 86], "experienc": 78, "paus": 78, "66": [78, 81, 82, 84, 85, 86, 87, 95], "sceptic": 78, "messi": 78, "messier": 78, "heed": 78, "7490": 78, "hp": [78, 95], "1702991": 78, "043": [78, 79, 82, 84, 86], "057": [78, 84], "215": [78, 82, 84, 86], "3484342": 78, "601": [78, 82, 84, 86], "027": [78, 82, 84, 86], "214": [78, 82, 84, 86], "53": [78, 79, 81, 82, 83, 84, 85, 86], "3466356": 78, "3289": [78, 85], "564": [78, 84, 86], "3297608": 78, "3233": [78, 86], "040": [78, 84, 86, 87], "3624346": 78, "210": [78, 82, 86, 87], "3205385": 78, "1761030": 78, "2564": [78, 86], "437": [78, 82, 86], "3358310": 78, "1535": [78, 86], "3057089": 78, "0684": 78, "031": [78, 82, 84, 85, 86], "204": [78, 82, 86], "91": [78, 82, 84, 85, 86], "2949728": 78, "6885": 78, "3288791": 78, "19928": 78, "1576060": 78, "jump": [78, 86], "rough": 78, "latch": 78, "bragg": 78, "offer": [78, 97], "dh": 78, "dk": 78, "2996": 78, "171": [78, 82, 84, 85, 86], "3151": 78, "241": [78, 81, 82, 84, 86], "3147": 78, "2924": 78, "159": [78, 82, 83, 84, 86], "3097": [78, 86], "3232": [78, 86], "2729": 78, "2904": [78, 86], "3139": 78, "1573": [78, 86], "2876": 78, "2992": 78, "3135": [78, 86], "2851": 78, "3005": [78, 86], "3156": 78, "339": [78, 79, 82, 86], "2792": 78, "244": [78, 82, 84, 86], "3073": 78, "283": [78, 82, 84, 86], "3718": 78, "symop": 78, "culprit": 78, "badli": [78, 87], "sit": 78, "macrocyl": [78, 82, 86, 87], "dp": [78, 87, 95], "old": 78, "1562": [78, 82, 86], "1508": [78, 83, 86], "152": [78, 81, 82, 84, 86], "1560": [78, 86], "1490": [78, 86], "162": [78, 81, 82, 83, 84, 86], "1584": [78, 86], "1498": [78, 86], "convinc": 78, "50948": 78, "56722": 78, "20791": 78, "62669": 78, "521": [78, 81, 82, 86], "9765": 78, "9914": 78, "0028": 78, "0250": 78, "679306": 78, "0237": 78, "679612": 78, "679516": 78, "0091": [78, 82, 85], "678570": 78, "678646": 78, "foreseen": 78, "earli": [78, 83], "circumv": 78, "topic": 78, "wrongli": 78, "life": 78, "encount": [78, 79, 83], "excel": 78, "troubleshoot": 78, "manifest": 78, "insidi": 78, "nightli": [79, 91], "mx": [79, 82, 84, 86, 88, 97], "dials_tutori": 79, "i04_thaumatin": 79, "dev20191028": 79, "python2": 79, "dls_sw": 79, "app": 79, "clibd": 79, "lib": 79, "ccp4_scr": 79, "tmp": 79, "tmp4xxusn": 79, "thaumatin": [79, 81], "4229": 79, "gb": [79, 81, 82, 86], "cs03r": 79, "sc": 79, "serv": 79, "contact": 79, "gmail": 79, "g73f70f18": 79, "1038": [79, 82], "gf37b0db7a": 79, "sweep1": 79, "120152": 79, "2197": 79, "tp": [79, 85], "ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo": 79, "oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo": 79, "ok": [79, 87, 88], "abandon": 79, "97625": 79, "th_8_2_": 79, "13_integr": 79, "070": [79, 86], "356": [79, 82, 86], "035": [79, 84, 85, 86, 87], "012": [79, 84, 85, 86, 88], "321472": 79, "25415": 79, "70801": 79, "4729": [79, 86], "78346": 79, "9943": 79, "automatic_default_fre": 79, "mtz_unmerg": 79, "automatic_default_scaled_unmerg": 79, "took": [79, 81, 83], "00h": 79, "06m": 79, "citat": [79, 84], "bibtex": [79, 84], "bib": [79, 84], "winn": 79, "235": [79, 82, 85, 86], "love": 79, "hear": 79, "sourceforg": [79, 90], "dui": 80, "introductori": 80, "molecul": 80, "sar": 80, "cov": 80, "proteas": 80, "mpro": 80, "dpf3": 80, "tile": [80, 82, 86, 87], "blend": 80, "biotin": 80, "analyse_output": 81, "characteris": 81, "p6m": 81, "isn": 81, "mechan": [81, 83], "workaround": 81, "p6m_60_panel": 81, "thaum_m10s15_3_": 81, "matur": 81, "adxv": [81, 86], "albula": 81, "360": [40, 81, 82, 84, 86, 87], "supercel": 81, "plenti": 81, "q1": [81, 82, 83, 86], "med": [81, 82, 83, 86, 95], "q3": [81, 82, 83, 86], "xo": [81, 82, 83, 86], "04261": 81, "0004832": 81, "0424": 81, "yo": [81, 82, 83, 86], "697": [81, 82, 86], "03481": 81, "001733": 81, "03682": 81, "656": [81, 86], "phic": [81, 82, 83, 86], "phio": [81, 82, 83, 86], "9645": 81, "06454": 81, "0007655": 81, "06379": 81, "8353": 81, "133": [81, 82, 84, 86], "18025": 81, "067273": 81, "063827": 81, "086195": 81, "067369": 81, "063706": 81, "086197": 81, "067439": 81, "063629": 81, "086155": 81, "067531": 81, "063529": 81, "086115": 81, "067587": 81, "063456": 81, "086122": 81, "067607": 81, "063419": 81, "067617": 81, "063401": 81, "086176": 81, "06762": 81, "063395": 81, "086181": 81, "39314": 81, "36858": 81, "24623": 81, "53322": 81, "82846": 81, "14379": 81, "37822": 81, "43153": 81, "26887": 81, "297": [81, 82, 83, 84, 86], "41585": 81, "40848": 81, "26118": 81, "5563": 81, "40867": 81, "27493": 81, "49115": 81, "43483": 81, "21656": [81, 86], "41713": 81, "46071": 81, "27804": [81, 85], "44932": 81, "51832": 81, "26569": 81, "33153": 81, "28766": 81, "25461": 81, "478": [81, 82, 86], "38555": 81, "40525": 81, "26244": 81, "47338": 81, "45054": 81, "24652": 81, "40191": 81, "959": [81, 82, 85, 86], "2976": 81, "701": [81, 86], "31004": 81, "3035": [81, 86], "24597": 81, "1128": [81, 84], "37366": 81, "24303": 81, "24016": 81, "33404": 81, "32094": 81, "24614": 81, "50746": 81, "47124": 81, "27169": 81, "40185": 81, "56122": 81, "3029": 81, "745": 81, "21926": 81, "30075": 81, "21426": 81, "17864": 81, "17706": 81, "2176": [81, 82], "778": 81, "36795": 81, "21167": 81, "20696": 81, "269": [81, 82, 84, 86], "44757": 81, "40028": 81, "23809": 81, "48078": 81, "65283": 81, "34241": 81, "467": [81, 82, 86], "37577": 81, "35789": 81, "20992": 81, "22329": 81, "29697": 81, "20943": 81, "447": [81, 82, 84, 86], "36708": 81, "22722": 81, "20176": 81, "28466": 81, "52795": 81, "31729": 81, "36377": 81, "1547": 81, "70452": 81, "14842": 81, "29869": 81, "23437": 81, "13375": 81, "17175": 81, "1222": [81, 82, 86], "14108": 81, "17261": 81, "40725": 81, "85708": 81, "42044": 81, "60805": 81, "57195": 81, "43388": 81, "281": [81, 82, 86], "18353": 81, "21351": 81, "2061": 81, "19984": 81, "15417": 81, "1993": 81, "15006": 81, "27665": 81, "21823": 81, "44084": 81, "50436": 81, "38365": 81, "86526": 81, "47248": 81, "32568": 81, "54992": 81, "31614": 81, "19036": 81, "22611": 81, "12494": 81, "21894": 81, "624": [81, 82, 86], "23105": 81, "20793": [81, 84], "22246": 81, "43408": 81, "43312": 81, "2724": 81, "55289": 81, "3935": 81, "26933": 81, "29543": 81, "24331": [81, 85], "23127": 81, "771": 81, "46252": 81, "19655": 81, "2348": 81, "658": [81, 85, 86], "24901": 81, "31232": 81, "24217": 81, "44994": 81, "43547": 81, "28695": 81, "5679": 81, "44719": 81, "23983": 81, "44117": 81, "44019": 81, "24586": 81, "592": [81, 82, 86], "3056": [81, 86], "44653": 81, "24795": 81, "411": [81, 82, 86], "67885": 81, "39219": 81, "2588": 81, "45355": 81, "5659": 81, "2611": 81, "0009": [81, 86], "46232": 81, "21423": 81, "72162": 81, "36619": 81, "23884": 81, "51574": 81, "48569": 81, "2488": 81, "41145": 81, "40151": 81, "2671": [81, 86], "5362": 81, "50568": 81, "21454": 81, "85351": 81, "57076": 81, "24389": 81, "72428": 81, "38373": 81, "27121": 81, "80208": 81, "98469": 81, "27939": 81, "5144": 81, "3281": 81, "30346": 81, "33371": 81, "50058": 81, "24425": 81, "192715": 81, "834": [81, 84, 86], "022": [81, 82, 84], "4122": 81, "9018": 81, "1299": [81, 86], "2361": [81, 82], "0320": 81, "9712": 81, "8800": 81, "4310": [81, 86], "0173": 81, "0067": 81, "0071": 81, "0156": [81, 82], "0041": [81, 82, 86], "0006": 81, "0065": [40, 81, 84], "0152": 81, "0075": 81, "quarter": [81, 84, 87], "quicker": 81, "yet": [81, 82, 83, 86, 87], "use_all_reflect": 81, "refined_lev0": 81, "487": [81, 82, 84, 85, 86], "04174": 81, "000276": 81, "03468": 81, "00168": 81, "03656": 81, "654": [81, 84, 86], "06627": 81, "002108": 81, "6375": 81, "2933": 81, "04128": 81, "167e": 81, "04112": 81, "3725": 81, "4707": [81, 84], "03376": 81, "001821": 81, "03588": 81, "4945": 81, "6965": 81, "06574": 81, "002213": 81, "06229": 81, "7919": 81, "186203": 81, "064091": 81, "057786": 81, "086136": 81, "064045": 81, "057829": 81, "08608": 81, "063949": 81, "05791": 81, "086068": 81, "063825": 81, "058023": 81, "086026": 81, "063734": 81, "058114": 81, "085958": 81, "063682": 81, "058167": 81, "085909": 81, "063654": 81, "058198": 81, "085887": 81, "063645": 81, "058208": 81, "085882": 81, "063644": 81, "05821": 81, "37002": 81, "33843": 81, "24538": 81, "47216": 81, "59331": 81, "22352": 81, "1363": [81, 86], "35019": 81, "46301": 81, "26549": 81, "3076": 81, "4128": 81, "40658": 81, "26659": 81, "1630": [81, 82, 86], "39692": 81, "25547": 81, "112": [81, 82, 85, 86], "39711": 81, "42575": 81, "23841": 81, "35145": 81, "51263": 81, "25474": 81, "3489": 81, "3238": 81, "48667": 81, "25694": 81, "6172": [81, 82], "30869": 81, "27402": 81, "25323": 81, "3908": 81, "37309": 81, "38322": 81, "25577": 81, "680": [81, 86], "46698": 81, "44533": 81, "24812": 81, "1178": [81, 82], "33544": 81, "51129": 81, "26289": 81, "5690": 81, "28409": 81, "29009": 81, "24376": 81, "9385": 81, "36731": 81, "23495": 81, "23873": 81, "6878": 81, "31962": 81, "31088": 81, "23691": 81, "1749": [81, 86], "43068": 81, "47078": 81, "25696": 81, "1870": [81, 85], "29306": 81, "46181": 81, "26494": 81, "6328": 81, "19137": 81, "29002": 81, "21465": 81, "7599": 81, "17418": 81, "1739": [81, 82], "22093": 81, "7072": 81, "36776": 81, "18662": 81, "20821": 81, "2609": 81, "37377": 81, "42663": 81, "24206": 81, "1806": 81, "40342": 81, "57026": 81, "32007": 81, "4247": 81, "35488": 81, "34512": 81, "19181": 81, "3558": 81, "21403": 81, "30996": 81, "20695": 81, "4103": 81, "36559": 81, "19154": 81, "17851": 81, "2270": [81, 85], "25744": 81, "48077": 81, "26616": 81, "480": [81, 82, 86], "38505": 81, "0035": [81, 85, 86], "73284": 81, "930": 81, "15033": 81, "26661": 81, "34611": 81, "11836": 81, "19105": 81, "18709": 81, "11907": 81, "25901": 81, "30046": 81, "41024": 81, "95027": 81, "72705": 81, "1478": [81, 86], "56625": 81, "3835": [81, 86], "34664": 81, "3216": [81, 86], "16373": 81, "19856": 81, "19257": 81, "2826": 81, "20149": 81, "14689": 81, "19485": 81, "3285": 81, "12942": 81, "30274": 81, "20848": 81, "1965": [81, 86], "38874": 81, "45564": 81, "38875": 81, "1934": [81, 82, 86], "61707": 81, "35339": 81, "25067": 81, "55413": 81, "29556": 81, "19246": 81, "5992": 81, "2137": [81, 86], "12029": 81, "21502": 81, "6589": 81, "2254": 81, "21047": 81, "21193": 81, "2763": [81, 86], "39851": 81, "41673": 81, "27272": 81, "1512": [81, 82, 86], "50654": 81, "36893": 81, "25051": 81, "6476": 81, "28308": 81, "21635": 81, "22668": 81, "9212": 81, "40577": 81, "18283": 81, "2252": [81, 82], "7521": 81, "22936": 81, "29881": 81, "23864": 81, "2392": 81, "40816": 81, "42881": 81, "2751": [81, 86], "611": [81, 86], "56917": 81, "48084": 81, "26191": 81, "4379": [81, 86], "42672": 81, "42447": 81, "25285": 81, "7749": 81, "29309": 81, "4378": 81, "24631": 81, "5470": 81, "67537": 81, "37528": 81, "25187": 81, "1210": [81, 83, 86], "42778": 81, "53938": 81, "27266": 81, "92194": 81, "45501": 81, "24629": 81, "2235": [81, 86], "71785": 81, "33424": 81, "25781": 81, "41055": 81, "38155": 81, "25735": 81, "2757": 81, "44268": 81, "40149": 81, "26646": 81, "52856": 81, "51306": 81, "28205": 81, "60967": 81, "26482": 81, "1507": [81, 82, 86], "70752": 81, "67612": 81, "25844": 81, "786": [81, 82, 86], "53669": 81, "50635": 81, "27127": 81, "43205": 81, "65796": 81, "25585": 81, "backstop": 81, "thrown": 81, "notabl": 81, "hieararchy_level": 81, "lcl": 81, "deep": 81, "refined_lev1": 81, "never": 81, "rate": [81, 83, 87, 97], "underwai": [81, 94], "minut": [81, 83, 84, 97], "desktop": [81, 83], "i7": [81, 83], "cpu": [81, 83, 97], "07ghz": [81, 83], "ram": 81, "496": [81, 82, 84, 86], "04178": 81, "0004518": 81, "04222": 81, "903": [81, 84], "03577": 81, "0006705": 81, "576": [81, 82, 86], "06467": 81, "0007391": 81, "06414": 81, "6433": 81, "04138": 81, "0001204": 81, "3683": [81, 86], "4838": [81, 82], "0008164": 81, "03518": 81, "6969": 81, "06416": 81, "0008647": 81, "06351": 81, "7644": 81, "186145": 81, "063617": 81, "058127": 81, "085801": 81, "056976": 81, "05538": 81, "085719": 81, "049808": 81, "052619": 81, "085597": 81, "04634": 81, "051408": 81, "085475": 81, "045568": 81, "051142": 81, "085391": 81, "04538": [81, 82], "051014": 81, "085337": 81, "045228": 81, "050729": 81, "085285": 81, "045054": 81, "050076": 81, "085215": 81, "044868": 81, "049034": 81, "085115": 81, "044746": 81, "048167": 81, "085025": 81, "044708": 81, "047833": 81, "08498": 81, "044695": 81, "047759": 81, "084969": 81, "04468": 81, "047738": 81, "084967": 81, "044668": 81, "047726": 81, "044662": 81, "047721": 81, "04466": [81, 82], "047719": 81, "25965": 81, "27743": 81, "24276": 81, "32036": 81, "57819": 81, "22482": 81, "34304": 81, "4111": [81, 82], "26504": 81, "3079": [81, 86], "3561": 81, "36483": 81, "26682": 81, "1632": [81, 85, 86], "37843": 81, "37838": 81, "25453": 81, "39065": 81, "39675": 81, "23706": 81, "30539": 81, "48132": 81, "25442": 81, "3490": [81, 86], "29682": 81, "35249": 81, "25661": 81, "6178": 81, "28525": 81, "27486": 81, "25318": 81, "3909": 81, "31728": 81, "30551": 81, "25565": 81, "675": [81, 82, 86], "39465": 81, "42802": 81, "24507": 81, "1175": [81, 82], "30057": 81, "46365": 81, "26215": 81, "5685": 81, "23485": 81, "27143": 81, "24326": 81, "9386": 81, "20171": 81, "18887": 81, "23872": 81, "6880": 81, "23494": 81, "23081": 81, "23689": 81, "1746": [81, 82, 86], "31911": 81, "40137": 81, "25357": 81, "27575": 81, "44911": 81, "26334": 81, "6321": 81, "18338": 81, "21691": 81, "21382": 81, "7608": 81, "14673": 81, "13459": 81, "22118": 81, "7075": 81, "15323": 81, "1772": [81, 82, 84], "20816": 81, "2608": 81, "27977": 81, "40106": 81, "23663": 81, "1803": 81, "24748": 81, "54944": 81, "31271": 81, "4249": 81, "15151": 81, "21436": 81, "18971": 81, "3560": 81, "11336": 81, "12431": 81, "20676": 81, "10087": 81, "16239": 81, "17534": 81, "2271": 81, "20061": 81, "46907": 81, "24929": 81, "476": [81, 82, 86], "26774": 81, "94809": 81, "69743": 81, "927": [81, 82, 84, 86], "10167": 81, "22193": 81, "33398": 81, "097735": 81, "13559": 81, "1876": [81, 84], "977": [81, 82, 84, 85], "069491": 81, "1907": 81, "29589": 81, "19349": 81, "91362": 81, "67233": 81, "1474": [81, 82, 86], "31601": 81, "36268": 81, "32879": 81, "3209": 81, "13728": 81, "15038": 81, "18643": 81, "2829": 81, "10162": 81, "11078": 81, "19453": 81, "3276": [81, 86], "10363": 81, "17357": 81, "2043": 81, "1951": 81, "20521": 81, "4038": 81, "36983": 81, "1931": 81, "37408": 81, "28915": 81, "24379": 81, "5869": 81, "18862": 81, "14476": 81, "1912": [81, 86, 95], "5991": 81, "13887": 81, "11716": 81, "21506": 81, "6591": 81, "15001": 81, "19861": 81, "21179": 81, "25238": 81, "36458": 81, "26476": 81, "1511": [81, 86], "47841": 81, "27181": 81, "24826": 81, "6461": 81, "27368": 81, "18468": 81, "22587": 81, "9213": 81, "19848": 81, "15776": [81, 82], "22531": 81, "21923": 81, "24706": 81, "2383": 81, "2390": 81, "32645": 81, "40052": 81, "27085": 81, "55212": 81, "29673": 81, "26008": 81, "38894": 81, "24988": 81, "25198": 81, "7747": 81, "2824": 81, "2289": 81, "29905": 81, "31716": 81, "25135": 81, "41311": 81, "47572": 81, "2691": [81, 82, 86], "69191": 81, "39228": 81, "2447": 81, "2231": 81, "47797": 81, "32129": 81, "25717": 81, "38899": 81, "31331": 81, "25676": 81, "2758": [81, 86], "39246": 81, "40955": 81, "26575": 81, "48186": 81, "52671": 81, "2798": 81, "57234": 81, "42803": 81, "2643": 81, "494": [81, 82, 83, 85, 86], "41177": 81, "25741": 81, "48028": 81, "48906": 81, "26898": 81, "39499": 81, "38962": 81, "2466": 81, "mv": 81, "analysis_lev0": 81, "analysis_lev1": 81, "rewrit": 81, "incorpor": [81, 98], "tutorial_data": [81, 86], "th_8_2": 81, "53916": 81, "26341": 81, "21858": 81, "sv_refin": 81, "1093": 81, "1100": [81, 86], "984": [81, 82, 86], "2317": 81, "2331": 81, "2138": 81, "3776": [81, 86], "3803": 81, "3581": 81, "5416": 81, "5450": 81, "5100": 81, "7235": 81, "7289": 81, "6806": 81, "9504": 81, "9567": 81, "8952": 81, "12495": 81, "12582": 81, "11826": 81, "16967": [81, 82], "17078": 81, "16125": 81, "20187": 81, "20340": 81, "19437": 81, "23623": 81, "23881": 81, "22761": 81, "24126": 81, "271": [81, 82, 84, 86], "24397": 81, "23289": 81, "25506": 81, "25787": 81, "24863": 81, "24269": 81, "24510": 81, "23389": 81, "24780": 81, "25018": 81, "24019": 81, "25710": 81, "25988": 81, "25059": 81, "24757": 81, "25031": 81, "24000": 81, "25673": 81, "25925": 81, "25119": 81, "25214": 81, "25511": 81, "24607": 81, "25766": 81, "303": [81, 82, 86], "26069": 81, "25226": 81, "338720": 81, "4747": 81, "331984": 81, "317541": 81, "uncorrect": [81, 82, 84, 86, 87], "misorient": 81, "bewar": 81, "forgiv": 81, "corrected_refin": 81, "snippet": 81, "4049": 81, "688": [81, 82, 86], "019202": 81, "28874": 81, "30251": 81, "045937": 81, "045205": 81, "4701": 81, "02988": 81, "01025": 81, "02159": 81, "6902": 81, "7267": 81, "02846": 81, "005739": 81, "02339": 81, "247": [81, 82, 84, 86], "01035": 81, "562e": 81, "01104": 81, "4029": 81, "2382": 81, "1148": [81, 84], "02997": 81, "01092": 81, "01966": 81, "1397": [81, 86], "02791": 81, "005742": 81, "02263": 81, "2531": 81, "1881": 81, "009998": 81, "0001419": 81, "0109": [81, 82], "1176": 81, "53738": 81, "04524": [81, 82], "04251": 81, "015875": 81, "043495": 81, "041514": 81, "015395": 81, "042657": 81, "040762": 81, "01535": 81, "040455": 81, "038826": 81, "015287": 81, "0356": 81, "034575": 81, "015251": 81, "028146": 81, "027998": 81, "015246": 81, "021919": 81, "022913": 81, "015245": 81, "019867": 81, "021931": 81, "015256": 81, "019579": 81, "02202": 81, "015267": 81, "019553": 81, "02204": 81, "015269": 81, "019552": 81, "022041": 81, "11368": 81, "12815": 81, "10179": 81, "18212": 81, "28586": 81, "12145": 81, "15295": 81, "24972": 81, "12934": 81, "609": [81, 86], "1286": [81, 82, 86], "21324": 81, "12291": 81, "1243": [81, 82], "21443": 81, "10878": 81, "1189": [81, 82, 84, 86], "14339": 81, "19084": 81, "10244": 81, "2389": 81, "097393": 81, "16185": 81, "1550": [81, 86], "084417": 81, "14168": 81, "098364": 81, "14653": 81, "17253": 81, "11116": 81, "21387": 81, "15463": 81, "10746": 81, "2728": [81, 82], "11345": 81, "15427": 81, "081722": 81, "4265": 81, "060489": 81, "096919": 81, "2952": [81, 86], "07167": 81, "092076": 81, "093342": 81, "565": [81, 86], "1626": [81, 85, 86], "11391": 81, "11975": 81, "18454": 81, "16728": 81, "16016": 81, "2772": [81, 84], "092555": 81, "12647": 81, "076534": 81, "2873": 81, "047736": 81, "10398": 81, "090391": 81, "2686": 81, "063075": 81, "074814": 81, "075038": 81, "729": 81, "16869": 81, "11128": 81, "14306": 81, "81495": 81, "29087": 81, "44711": 81, "406": [81, 82, 86], "080441": 81, "12121": 81, "098888": 81, "425": [81, 82, 85, 86], "052654": 81, "15365": 81, "0754": 81, "06931": 81, "066238": 81, "073655": 81, "85448": 81, "22713": 81, "24889": 81, "579": [81, 82, 85, 86], "21735": 81, "11564": 81, "18439": 81, "1994": 81, "061756": 81, "09509": 81, "068866": 81, "1924": 81, "091952": 81, "11146": 81, "083513": 81, "2166": 81, "088252": 81, "10009": 81, "085247": 81, "13737": 81, "16646": 81, "1872": 81, "634": [81, 82, 84, 86], "16379": 81, "093519": 81, "12164": 81, "2835": 81, "067371": 81, "080697": 81, "081958": 81, "3737": [81, 86], "094318": 81, "086918": 81, "10408": [81, 82], "2806": 81, "098988": 81, "13001": 81, "082836": 81, "417": [81, 82, 85, 86], "17099": 81, "18814": 81, "12774": 81, "20834": 81, "14785": 81, "10324": 81, "1817": 81, "082715": 81, "1174": [81, 84], "10219": 81, "2385": 81, "1096": [81, 82], "12543": 81, "10965": 81, "1589": [81, 86], "12167": 81, "17861": 81, "099929": 81, "21088": 81, "2111": [81, 86], "10221": [81, 84], "19222": 81, "16491": 81, "16288": 81, "094714": 81, "15589": 81, "1232": [81, 83], "1047": [81, 82, 83], "11775": 81, "17961": 81, "12234": 81, "12735": 81, "22443": 81, "11915": 81, "11972": 81, "18238": 81, "11037": 81, "12845": 81, "24552": 81, "1396": 81, "corrected_sv_refin": 81, "corrected_integr": 81, "343": [81, 82, 85, 86], "1125": 81, "1131": [81, 82], "1011": [81, 82], "2346": 81, "2359": 81, "3800": 81, "3565": [81, 82], "5448": 81, "5485": 81, "5123": 81, "7241": 81, "7293": 81, "6804": 81, "9522": 81, "9593": 81, "8986": 81, "12528": 81, "12612": 81, "11851": 81, "16954": 81, "17067": 81, "16130": 81, "20247": 81, "20401": 81, "19499": 81, "23553": 81, "23820": 81, "22740": 81, "24022": 81, "24289": 81, "23215": 81, "25479": 81, "25765": 81, "24860": 81, "24305": 81, "24546": 81, "23395": 81, "24742": 81, "236": [81, 82, 86], "24978": 81, "23965": 81, "25657": 81, "25938": 81, "24999": 81, "24755": 81, "25023": 81, "24005": 81, "25596": 81, "25846": 81, "25058": 81, "25140": 81, "298": [81, 82, 86], "25438": 81, "24540": 81, "25720": 81, "26023": 81, "25193": 81, "338446": 81, "4836": 81, "331750": 81, "317393": 81, "nicer": 81, "artefact": 81, "sigma_i": [81, 82, 86, 87], "d_": 81, "mid": 81, "modular": 81, "satisfi": [81, 87], "dave": [81, 97], "hall": [81, 95], "pcm": 82, "0102340": 82, "xchem": 82, "fragment": 82, "screen": [82, 86], "campaign": 82, "i04": [82, 85, 86, 87], "x0692": 82, "5rel": 82, "5281": 82, "zenodo": [82, 88], "3730940": 82, "mx27124": 82, "dials_data": 82, "mpro_x0692": 82, "x0692_1_0": 82, "x0692_1_": 82, "num": [82, 83, 85, 86], "\u2460": [82, 86], "marker": [82, 86], "\u2461": [82, 86], "omit": [82, 86], "1424": [82, 86], "1578": 82, "1555": [82, 86], "1634": [82, 86], "1590": 82, "1533": [82, 86], "1773": 82, "1920": [82, 86], "1873": [82, 85], "1743": 82, "1923": 82, "2118": 82, "2179": 82, "1838": [82, 86], "2168": [82, 86], "2128": 82, "2363": 82, "2597": 82, "2275": 82, "2157": [82, 86], "2565": 82, "2623": 82, "2604": 82, "2438": 82, "2474": 82, "2613": [82, 86], "2594": [82, 86], "2503": [82, 86], "2499": [82, 83], "2585": 82, "2706": 82, "2532": 82, "2576": 82, "2424": 82, "2177": 82, "2352": [82, 86], "2439": [82, 86], "2259": 82, "2377": 82, "2284": 82, "2381": [82, 86], "2183": 82, "2512": [82, 85], "2313": 82, "2272": [82, 85], "2327": 82, "2234": [82, 86, 87], "2298": 82, "2342": [82, 86], "2513": 82, "2494": [82, 85], "2557": 82, "2388": 82, "2290": 82, "2316": 82, "2071": 82, "2069": [82, 86], "2268": 82, "2247": 82, "2187": 82, "2266": 82, "2243": [82, 86], "2260": [82, 86], "2237": [82, 85], "2253": 82, "1969": 82, "2299": 82, "2351": 82, "2319": [82, 86], "2145": 82, "2371": [82, 86], "2332": [82, 86], "2194": [40, 82, 84], "1995": [82, 97], "2333": [82, 86], "2238": 82, "2063": [82, 83], "2099": 82, "2129": 82, "2312": 82, "2236": 82, "1930": [82, 86], "1752": [82, 86], "1792": 82, "1798": [82, 86], "1762": [82, 86], "1452": [82, 86], "1729": [82, 86], "1782": [82, 86], "1795": [82, 86], "1787": [82, 86], "1703": [82, 86], "1536": [82, 86], "1621": [82, 86], "108": [82, 84, 85, 86, 88], "1522": 82, "1473": [82, 83, 86], "1651": 82, "1454": [82, 83, 86], "1401": 82, "1623": [82, 86], "1704": 82, "1372": 82, "1276": [82, 86], "1281": [82, 86], "1399": [82, 83, 86], "1419": [82, 86], "1476": [82, 86], "1487": 82, "1477": [82, 83, 86], "1505": [82, 86], "1495": 82, "1351": [82, 86], "1325": [82, 86], "1365": 82, "1500": [82, 86], "1345": [82, 86], "1414": [82, 86], "1264": [82, 86], "1165": 82, "1185": 82, "138": [82, 85, 86], "1219": [82, 86], "1226": [82, 84, 86], "1202": 82, "1032": 82, "143": [82, 84, 86], "1086": [82, 83], "1347": [82, 86], "1214": [82, 86], "1186": [82, 86], "1166": 82, "923": 82, "1126": 82, "1109": 82, "1191": [82, 84, 86], "1266": 82, "868": 82, "877": [82, 95], "1058": 82, "1005": 82, "1060": [82, 83], "1132": 82, "1223": [82, 86], "1020": 82, "174": [82, 84, 86], "176": [82, 84, 85, 86], "179": [82, 86], "181": [82, 84, 86], "182": [82, 84, 85, 86, 95], "922": [82, 84, 86], "183": [82, 84, 86], "188": [82, 84, 86], "1090": 82, "191": [82, 86, 96], "1006": 82, "1014": 82, "197": [82, 84, 85, 86], "857": 82, "904": [82, 85], "1097": [82, 83], "202": [82, 86], "1130": [82, 83, 86], "826": 82, "206": [82, 86], "849": 82, "737": 82, "901": [82, 86], "209": [82, 84, 86], "1043": 82, "216": [82, 86], "867": 82, "217": [82, 84, 86], "785": 82, "909": [82, 86, 87], "221": [82, 86, 96], "1069": 82, "896": 82, "228": [82, 84, 86], "229": [82, 86], "969": [82, 84, 85], "804": 82, "233": [82, 86], "234": [82, 86], "887": [82, 87], "829": 82, "860": 82, "237": [82, 85, 86], "893": [82, 85, 86], "958": [82, 84], "243": [82, 84, 86], "859": 82, "907": [82, 84, 86], "945": [82, 84], "940": 82, "918": [82, 84], "972": [82, 86], "1025": 82, "1041": [82, 85], "813": 82, "1045": 82, "1042": [82, 83], "878": [82, 84], "889": [82, 84], "270": [82, 86], "1010": 82, "928": [82, 84], "273": [82, 84, 86], "846": [82, 84], "963": [82, 84], "1089": 82, "279": [82, 86], "1079": 82, "280": [82, 86, 87], "1067": [82, 86], "1076": [82, 86], "1193": [82, 84], "284": [82, 86], "1001": 82, "944": [82, 83, 84], "293": [82, 86], "1037": 82, "894": [82, 95], "948": [82, 84, 86], "976": [82, 86], "301": [82, 84, 86], "1094": [82, 83, 86], "1056": 82, "1145": 82, "308": [82, 86, 87], "1030": 82, "311": [82, 86], "1140": 82, "313": [82, 84, 85, 86], "981": [82, 83, 85], "1141": 82, "1309": [82, 86], "1257": [82, 86], "1233": [82, 84, 86], "1225": [82, 84], "1238": [82, 86], "320": [82, 86], "1253": [82, 86], "1068": [82, 88], "1240": [82, 86], "325": [82, 84, 86], "1429": [82, 83, 86], "1204": [82, 86], "1258": [82, 84, 86], "329": [82, 84, 86], "1384": [82, 86], "330": [82, 86], "1241": 82, "1296": [82, 86], "1666": 82, "337": [82, 86], "1308": [82, 83], "1207": [82, 84], "1447": [82, 86], "1360": 82, "341": [82, 84, 86], "1252": [82, 86], "342": [82, 84, 86], "1440": [82, 86], "1392": 82, "344": [82, 86], "1576": [82, 86], "1616": 82, "1412": 82, "348": [82, 86], "1503": [82, 86], "349": [82, 84, 86], "1479": 82, "1493": [82, 86], "351": [82, 86], "1514": 82, "1625": [82, 86], "1655": [82, 86], "354": [82, 86], "1544": 82, "355": [82, 86], "1430": [82, 83, 86], "1379": [82, 86], "357": [82, 86, 95], "1458": [82, 86], "1598": [82, 86], "1668": [82, 86], "1662": [82, 86], "362": [82, 84, 86, 87], "1848": 82, "1833": 82, "1731": [82, 86], "1648": [82, 86], "1837": [82, 84], "367": [82, 86], "2029": 82, "368": [82, 84, 86], "1853": 82, "369": [82, 85, 86, 95], "1871": [82, 86], "1741": [82, 86], "1842": [82, 86], "372": [82, 85, 86], "1697": [82, 86], "373": [82, 86], "1611": 82, "1563": [82, 83, 86], "376": [82, 86], "1705": [82, 86], "377": [82, 86], "1586": [82, 86], "378": [82, 83, 86], "1883": [82, 86], "1955": 82, "380": [82, 86], "1720": 82, "381": [82, 84, 86], "1742": [82, 86], "382": [82, 86], "1667": 82, "383": [82, 84, 86], "384": [82, 85, 86], "1724": [82, 86], "385": [82, 84, 86, 95], "1661": [82, 86], "1672": [82, 86], "387": [82, 86], "388": [82, 86], "1464": [82, 83, 86], "390": [82, 83, 84, 86], "391": [82, 86, 87], "392": [82, 83, 86], "1592": 82, "395": [82, 86], "396": [82, 86], "1421": [82, 86], "398": [82, 86], "1287": [82, 86], "30376": 82, "7811": 82, "22562": 82, "21740": 82, "newli": [82, 86], "green": [82, 86, 87], "pink": [11, 82, 86], "incorrectli": [82, 86], "\u2462": [82, 86], "preview": [82, 86, 87], "ey": [82, 86, 87], "20836": 82, "rmsd_xy": [82, 86], "131784": 82, "21005": 82, "130920": 82, "20874": 82, "131244": 82, "20815": 82, "130947": 82, "20903": 82, "130988": 82, "20817": 82, "131302": 82, "20905": 82, "131333": 82, "20942": 82, "131615": 82, "20979": 82, "131757": 82, "20988": 82, "131478": 82, "20971": 82, "131699": 82, "20934": 82, "130748": 82, "20887": 82, "131505": 82, "20977": 82, "131181": 82, "20949": [82, 86], "131653": 82, "20929": 82, "131143": 82, "20978": 82, "130878": 82, "131446": 82, "131949": 82, "132001": 82, "20924": 82, "131286": 82, "20982": 82, "131102": 82, "20975": 82, "131553": 82, "20964": 82, "131729": 82, "20986": 82, "130749": 82, "20972": 82, "131689": 82, "20935": 82, "130961": 82, "20990": 82, "131849": 82, "20950": 82, "131547": 82, "20966": 82, "131909": 82, "20958": 82, "131574": 82, "20984": 82, "131360": 82, "21022": 82, "131075": 82, "21001": 82, "131936": 82, "21025": 82, "131503": 82, "20944": [82, 84], "131107": 82, "20976": 82, "20899": 82, "131398": 82, "20985": 82, "131818": 82, "20938": 82, "131032": 82, "21000": 82, "131708": 82, "20936": 82, "131069": 82, "20967": 82, "131138": 82, "20999": 82, "131546": 82, "132052": 82, "20961": 82, "131474": 82, "20941": 82, "131072": 82, "20983": 82, "131363": 82, "131706": 82, "21012": 82, "630": [82, 86], "9000": 82, "4121": 82, "2959": 82, "8170": 82, "4949": 82, "3200": 82, "4034": 82, "8572": 82, "0224": 82, "0187": 82, "0090": 82, "0181": [82, 85], "0193": 82, "0026": 82, "0108": 82, "0153": 82, "0155": [82, 86], "734": [82, 84], "20952": 82, "703": [82, 86, 87], "6229": 82, "3916": 82, "1449": 82, "013": [82, 84, 85, 86, 87], "2842": 82, "2246": 82, "016": [82, 84, 86], "00306": 82, "551": [82, 84, 86], "2347": [82, 86], "18605": 82, "684": [82, 86], "3968": 82, "1734": [82, 83, 86], "9907": 82, "2767": 82, "1807": [82, 86], "5715": 82, "9351": 82, "1436": [82, 84, 86], "001552": 82, "7571": 82, "51841": 82, "26874": 82, "22605": 82, "1268": [82, 86], "10007": 82, "23108": 82, "097838": 82, "098106": 82, "23331": 82, "096656": 82, "096297": 82, "23343": 82, "096506": 82, "095677": 82, "23386": 82, "096504": 82, "095601": 82, "23402": 82, "095596": 82, "23403": 82, "56107": 82, "55579": 82, "46806": 82, "738": 82, "7872": 82, "8996": 82, "4114": 82, "2938": [82, 86], "8183": 82, "4940": 82, "3230": [82, 86], "4014": [82, 86], "8570": 82, "0040": 82, "0089": 82, "21029": 82, "21163": 82, "9265": 82, "04435": 82, "002579": 82, "05266": 82, "6455": 82, "04679": 82, "003802": 82, "04913": 82, "1087": 82, "05362": 82, "1561": 82, "2632": [82, 86], "18343": 82, "3699": 82, "03984": 82, "003241": 82, "05068": 82, "3939": 82, "03613": 82, "005551": 82, "04528": 82, "4172": 82, "8813": 82, "08308": 82, "05629": 82, "1488": [82, 86], "6562": 82, "080738": 82, "083417": 82, "21845": 82, "079354": 82, "082036": 82, "22074": 82, "07875": 82, "082035": 82, "2202": 82, "078446": 82, "082152": 82, "21934": 82, "078361": 82, "08228": 82, "21896": 82, "078348": 82, "082315": 82, "21889": 82, "078347": 82, "082318": 82, "45551": 82, "47859": 82, "43778": 82, "499": [82, 85, 86], "2255": [82, 85], "7863": 82, "9931": 82, "8997": 82, "4112": 82, "8184": 82, "4015": 82, "0225": 82, "0188": [82, 86], "0195": 82, "0027": 82, "21028": 82, "21054": 82, "685": [82, 86], "20974": 82, "8873": 82, "04424": 82, "00171": 82, "04794": 82, "6379": 82, "717": [82, 84, 86], "05087": 82, "001016": 82, "04519": 82, "1071": 82, "05102": 82, "1496": 82, "18246": 82, "3408": [82, 86], "03953": 82, "002804": 82, "04673": 82, "3899": [82, 86], "04049": 82, "001011": 82, "04132": 82, "412": [82, 85, 86], "8957": 82, "08015": 82, "05445": 82, "6317": 82, "0772": [82, 86], "081515": 82, "21713": 82, "076915": 82, "081075": 82, "21844": 82, "076743": 82, "081138": 82, "2184": 82, "076641": 82, "081227": 82, "21821": 82, "076606": 82, "081288": 82, "21809": 82, "0766": 82, "081303": 82, "21806": 82, "081305": 82, "44535": 82, "4727": 82, "43612": 82, "470": [82, 86], "7854": 82, "2936": 82, "3229": [82, 85], "0182": [82, 85], "711": [82, 86], "21039": 82, "04434": 82, "001314": 82, "04642": 82, "6643": 82, "0511": 82, "001655": 82, "1074": 82, "04974": 82, "662": [82, 86], "2689": 82, "18285": 82, "3321": [82, 86], "03982": 82, "002306": 82, "3082": [82, 85], "3898": 82, "04183": [82, 86], "738e": 82, "04119": 82, "4075": 82, "9054": 82, "08134": 82, "05293": 82, "1411": [82, 86], "6249": 82, "076424": 82, "081591": 82, "21765": 82, "076361": 82, "081373": 82, "21833": 82, "076313": 82, "081403": 82, "21832": 82, "076281": 82, "081442": 82, "21826": [82, 86], "076268": 82, "081466": 82, "21822": 82, "076266": 82, "081471": 82, "44341": 82, "47367": 82, "43642": 82, "2250": [82, 86], "7844": 82, "9899": 82, "21027": 82, "21033": 82, "20973": 82, "9039": 82, "001238": 82, "04604": 82, "6737": 82, "721": [82, 86], "05114": 82, "001455": 82, "04477": 82, "05018": 82, "1486": 82, "955": 82, "2679": 82, "18294": 82, "3319": 82, "03988": 82, "002168": 82, "04478": 82, "3091": [82, 86], "3894": 82, "04171": 82, "155e": 82, "04124": 82, "4076": [82, 86], "9195": 82, "08125": 82, "05369": 82, "1407": [82, 84, 86], "6192": 82, "076338": 82, "081412": 82, "21795": [82, 84], "076296": 82, "081315": 82, "081329": 82, "076252": 82, "081346": 82, "076246": 82, "081356": 82, "21831": 82, "076245": 82, "081358": 82, "44329": 82, "47301": 82, "43661": 82, "2251": 82, "7837": 82, "9895": 82, "712": [82, 86], "captur": [82, 83, 86, 87], "gone": [82, 86, 87], "why": [82, 86, 97], "256\u00b3": [82, 86, 87], "eventu": [82, 86, 87], "domin": [82, 86, 87], "unabl": [82, 86], "didn": [82, 83, 86, 87], "irrespect": 82, "0252": 82, "743": 82, "18268": 82, "259466": 82, "18292": 82, "129876": 82, "bravais_summari": [82, 86], "adher": [82, 86, 87], "propos": [82, 86, 87], "bravais_setting_n": [82, 86], "plausibl": [82, 86], "9033": 82, "04467": 82, "001113": 82, "04686": 82, "6841": 82, "05039": 82, "000498": 82, "0441": [82, 84], "1057": 82, "05334": 82, "4006": 82, "03718": 82, "002731": 82, "0445": 82, "3007": 82, "4479": 82, "03614": 82, "001424": 82, "03842": 82, "4335": 82, "8575": 82, "06504": 82, "05968": 82, "1383": [82, 86], "5736": 82, "069855": 82, "076289": 82, "21058": 82, "069841": 82, "07608": 82, "21094": 82, "069746": 82, "075965": 82, "21131": 82, "069583": 82, "075866": 82, "21178": 82, "069463": 82, "075811": 82, "21212": 82, "069424": 82, "075799": 82, "21221": 82, "069418": 82, "0758": [82, 86], "40359": 82, "4407": 82, "42443": 82, "880": 82, "0373": 82, "3455": 82, "8436": 82, "5477": [82, 84], "1745": 82, "7620": 82, "4018": [82, 86], "5079": [82, 86], "0021": [82, 84], "0231": 82, "0077": 82, "0045": 82, "0154": 82, "0078": 82, "0076": 82, "9124": 82, "0002905": 82, "04459": 82, "695": [82, 86], "05097": 82, "00175": 82, "04269": 82, "05077": 82, "4022": [], "16950": [], "3629": [82, 86], "03772": 82, "002061": [], "0421": 82, "3225": 82, "4409": 82, "03702": 82, "0001993": [], "03677": 82, "4927": 82, "8777": 82, "06567": [], "05753": 82, "1366": [82, 86], "5653": 82, "069571": [], "075489": [], "21208": 82, "058325": [], "069796": [], "18766": 82, "057132": [], "066282": 82, "17174": 82, "05548": [], "062547": 82, "1527": 82, "053552": [], "060443": 82, "13032": 82, "051597": [], "058975": [], "11425": [], "050233": [], "10841": 82, "049665": [], "057789": 86, "04951": [], "057702": 82, "049395": [], "057682": 82, "10611": [], "049289": [], "057678": 82, "10618": [], "049221": [], "057686": [], "049202": [], "057689": [], "10636": [], "057688": 82, "28606": [], "33539": 82, "21272": [], "401": [82, 83, 84, 86], "unphys": [41, 51, 54, 58, 82, 86], "shortli": [82, 86], "lack": [82, 86, 87], "mostli": [82, 86, 87], "9126": 82, "00197242": [], "999998": 82, "14122e": 82, "sensor_pad": [82, 86], "94172": 82, "21948": 82, "999994": 82, "00340502": [], "000208751": [], "00340524": [], "00105736": [], "882": [], "764": 82, "millimet": [82, 86], "t0": [82, 86], "713": [82, 86], "4077": [82, 84], "4790": [], "junk": [82, 86], "1510": 86, "198713": [], "039475": [82, 86], "329180": [], "boundari": [82, 86], "swap": [], "ulimit": [], "4641": 82, "4839": [], "4574": 82, "416": [82, 86], "2923": [82, 86], "4483": 82, "4813": [], "4556": 82, "2878": [82, 85], "im": [82, 86], "1231": [82, 84, 86], "561": [82, 85, 86], "2052": [82, 86], "526": [82, 85, 86], "1263": [82, 86], "902": 82, "2105": [82, 86], "858": 82, "759": 82, "1354": [82, 86], "1489": [82, 86], "1301": 82, "1432": [82, 86], "795": 82, "1332": [82, 86], "1273": [82, 86], "1418": [82, 86], "1305": 82, "1209": [82, 84, 86], "1338": [82, 86], "1156": 82, "1188": 82, "837": 82, "1173": 82, "1123": 82, "766": 82, "1103": [40, 82, 84, 86], "1116": 82, "1180": 82, "1078": 82, "586": [82, 86], "661": [82, 86], "618": [82, 86], "1129": [82, 84], "1035": 82, "1106": 82, "1012": 82, "517": [82, 85, 86], "566": [82, 83, 84, 86], "539": [82, 85, 86], "1051": 82, "1039": 82, "531": [82, 86], "511": [82, 86], "1073": 82, "536": [82, 86], "558": [82, 86, 95], "1195": 82, "1099": 82, "1122": 82, "559": [82, 86], "578": [82, 86], "1198": [82, 86], "1167": [82, 86], "1154": 82, "644": [82, 86], "623": [82, 85, 86], "1254": 82, "1334": [82, 83], "1227": [82, 84], "1321": [82, 86], "589": [82, 85, 86], "640": [82, 86], "1340": [82, 86], "1236": 82, "1339": [82, 86], "1298": [82, 86], "1310": 86, "1382": 86, "1269": [84, 86], "704": [86, 87], "1380": [84, 86], "1329": [], "1343": [82, 86], "1415": 86, "1292": [82, 86], "732": [], "693": [83, 86], "1400": 95, "1328": [82, 86], "1279": [], "707": [82, 86], "748": [82, 86], "1420": [82, 86], "1285": [82, 86], "716": [82, 84, 86], "1387": 82, "1451": 82, "1316": 82, "1327": [82, 86], "1391": [82, 86], "1256": [82, 84, 86], "809": 82, "762": 82, "1408": [82, 84, 86], "1491": [82, 86], "1362": [82, 86], "1335": [82, 86], "1417": [82, 86], "1288": [82, 86, 88], "803": 82, "871": [82, 83], "819": [82, 84], "1433": [82, 86], "1530": [82, 86], "1336": [82, 83], "1427": [82, 86], "806": [82, 85], "861": 82, "1425": [82, 86], "1300": [82, 86], "1389": [82, 86], "1534": [82, 86], "1445": [82, 86], "1259": [82, 86], "1385": [82, 86], "1344": [82, 86], "1422": [82, 83], "1208": [82, 84, 86], "1337": [82, 86], "1462": [82, 83, 86], "1199": 82, "1248": [82, 86], "875": 82, "855": 82, "1393": [82, 86], "1182": 82, "835": 82, "1217": [82, 85, 86], "1323": [82, 86], "1242": [82, 86], "774": 82, "1150": 82, "1255": [82, 86], "1095": 82, "1194": 82, "780": 82, "1161": 82, "727": [82, 84, 86], "1172": [82, 83], "1137": 82, "667": [82, 86], "1110": [82, 84], "1092": 82, "1083": [82, 83], "1046": [82, 83], "596": [82, 86], "659": [82, 85, 86], "587": [82, 86], "929": [82, 84, 86], "797": 82, "828": 82, "456": [82, 86], "484": [82, 86], "730": [82, 86], "783": 82, "441": [82, 84, 85, 86], "692": [82, 86], "725": [82, 84, 85], "440": [82, 86], "681": [82, 86], "52199": [], "47641": 82, "47756": 82, "51458": 82, "2535": [], "49664": 82, "47418": 82, "2483": [82, 86], "48975": 82, "xy": [82, 86], "1469": 86, "431": [82, 86], "430": [82, 86], "469": [82, 86], "466": [82, 86], "510": [82, 86], "451": [82, 86], "473": [82, 86], "443": [82, 86], "468": [82, 86], "446": [82, 86], "404": [82, 86], "501": [82, 84, 86], "474": [82, 84, 86], "420": [82, 84, 86], "449": [82, 86], "434": [82, 86], "509": [82, 86], "453": [82, 86], "445": [82, 85, 86], "502": [82, 83, 84, 86], "418": [82, 84, 86], "512": [82, 86], "415": [82, 84, 86], "462": [82, 86], "488": [82, 86], "402": [82, 86], "450": [82, 86], "479": [82, 86], "497": [82, 86], "414": [82, 86], "433": [82, 86], "530": [82, 84, 86, 88], "489": [82, 84, 86], "524": [82, 86], "542": [82, 86], "548": [82, 86], "516": [82, 86], "591": [82, 86], "567": [82, 86], "1082": 82, "1307": [82, 86], "2213": [82, 86], "1963": 82, "2049": [82, 86], "2979": [82, 86], "2473": 82, "2649": 82, "4341": 82, "3734": 82, "3944": 82, "5293": 82, "5649": [82, 83], "8672": 82, "7676": 82, "7975": 82, "9833": 82, "8693": 82, "8970": 82, "10956": 82, "9414": 82, "9838": 82, "12248": 82, "10251": [], "10730": 82, "13279": 82, "11943": 82, "12280": 82, "14619": 82, "12987": 82, "13349": 82, "16875": 82, "14610": 82, "15144": [], "17479": 82, "15719": 82, "16051": 82, "17482": 82, "14510": 82, "15067": 82, "17440": 82, "595": [82, 86], "15812": 82, "16141": [], "17610": 82, "15398": 82, "17776": 82, "570": [82, 86], "15652": 82, "16001": 82, "193373": 82, "6021": [], "52769": 82, "4243": 82, "30000": 82, "2658": 82, "169054": [], "174758": 82, "24296": [], "2309": 82, "22837": 82, "199394": [], "176557": [], "advantag": [82, 83, 86, 87], "lorentz": [82, 86, 87], "anywai": [82, 86, 87], "sigma_d": [82, 86, 87], "167255": 82, "b_cart": [82, 84, 86], "60297": [], "3888": 82, "1283": 82, "3788": 82, "7954": [], "2227": 83, "unrel": [82, 86], "sd": [82, 86, 88], "50048": [], "852": 82, "49404": [], "law": [82, 86], "macromolecul": [82, 84, 86], "illumin": [82, 84, 86, 87], "unequ": [82, 86, 87], "1875": 82, "1654": [82, 83], "176234": [], "00000": [82, 86], "02000": [82, 86], "\u00b2": [82, 84, 86], "a\u00b2": [82, 84, 86], "\u03c3\u00b2": [82, 84, 86], "bi": [82, 84, 86], "asymptot": [82, 84, 86], "2495": [], "172960": 82, "preselect": [82, 86], "174580": [], "174531": [], "173009": 82, "15286": [], "48771": [], "50054": [], "rmsd_i": [82, 84, 86], "49280": [], "88595": [], "8622": [], "71025": [], "65791": [], "62675": [], "61245": [], "57406": [], "55722": [], "55538": [], "55363": [], "55299": [], "55226": [], "55199": [], "5516": [], "55136": [], "55117": [], "55101": [], "55071": [], "55056": [], "55039": [], "55019": [], "54984": [], "54914": [], "54846": [], "54746": [], "54628": [], "54479": [], "54405": [], "54358": [], "54302": [], "54286": [], "54241": [], "54234": [], "54231": [], "99431": [], "09881": [], "99146": [], "12652": [], "99342": [], "10504": [], "3237": 82, "99428": [], "09887": [], "99406": [], "09961": [], "99283": [], "11312": [], "50021": [], "60266": [], "60082": [], "58804": [], "58752": [], "58706": [], "58663": [], "5862": [], "5859": [], "58574": [], "58567": [], "58557": [], "58551": [], "51786": [], "05512": [], "036": [84, 85, 86], "2417": [], "009": 82, "1779": [], "3567": [], "3799": [], "3030": [], "50030": [], "99941": [], "99341": [], "98782": [], "98299": [], "98074": [], "97961": [], "97892": [], "97871": [], "97868": [], "49604": [], "05454": [], "2415": [], "594": [84, 86], "841": [], "982": [84, 85], "1764": [84, 86], "3505": [], "3805": 86, "3008": [], "2510": 83, "172395": 82, "2040": 82, "1523": 86, "15831": [], "4256": 82, "030": [82, 84, 85, 87, 88], "15553": [], "4161": 82, "987": [82, 83, 84, 86], "16022": [], "4148": 82, "010": [84, 88], "14918": [], "4147": 82, "15842": 82, "4141": 82, "15070": [], "4102": 82, "742": [83, 84], "13299": 82, "4152": 82, "12281": 82, "4130": 82, "10701": [], "553": 86, "9802": 82, "4043": 82, "683": 86, "581": [86, 87], "782": [], "8951": 82, "3933": 82, "3864": 82, "024": [84, 88], "5725": 82, "3403": [82, 86], "756": [], "4011": 82, "2783": 82, "726": 86, "2773": 82, "2065": 82, "1435": [82, 86], "037": [82, 84, 85, 86, 87], "610": [82, 86], "822": [82, 86], "174268": [], "62208": 82, "093": [82, 84, 85], "006": [82, 84, 86], "121864": [], "6721": [], "4792": [], "1789": [], "1674": 86, "dials_scale_user_guid": [82, 84, 86], "disproportion": [82, 86, 87], "navig": [82, 84, 87], "happi": [82, 83, 85, 86, 87], "strictli": [82, 84, 85, 86], "globular": [82, 86, 87], "companion": [82, 86, 87], "uniform": [82, 86, 87], "complic": 83, "feasibl": 83, "sacrifici": 83, "teha": 83, "membran": 83, "crystallis": [83, 84], "room": [83, 95], "temperatur": [83, 95], "xta": 83, "annoy": 83, "happili": 83, "2711": 83, "compris": 83, "abruptli": 83, "tcsh": 83, "perl": 83, "rubi": 83, "comfort": [83, 87], "grep": 83, "process_teha": 83, "uncom": 83, "tasklist": 83, "easy_run": 83, "easy_mp": 83, "process_sequ": 83, "newdir": 83, "getcwd": 83, "sequence_": 83, "chdir": 83, "cmd": 83, "fully_buff": 83, "p1_model": 83, "isfil": 83, "dirti": 83, "got": 83, "argv": 83, "expt_path": 83, "abspath": 83, "enumer": 83, "get_process": 83, "parallel_map": 83, "func": 83, "preserve_ord": 83, "good_result": 83, "serlial": 83, "familiar": [83, 87], "feed": 83, "intervent": 83, "errant": 83, "bother": 83, "carrier": 83, "terribl": 83, "rescu": 83, "xta30_1_": 83, "xta31_1_": 83, "xtal7_1_": 83, "xtal8_1_": 83, "sequence_00": 83, "sequence_01": 83, "sequence_02": 83, "sequence_03": 83, "sequence_04": 83, "sequence_08": 83, "sequence_09": 83, "sequence_11": 83, "sequence_12": 83, "sequence_13": 83, "sequence_14": 83, "sequence_16": 83, "sequence_17": 83, "sequence_19": 83, "sequence_20": 83, "sequence_21": 83, "sequence_22": 83, "sequence_23": 83, "sequence_24": 83, "sequence_25": 83, "sequence_26": 83, "sequence_27": 83, "sequence_28": 83, "sequence_29": 83, "sequence_31": 83, "sequence_32": 83, "sequence_33": 83, "sequence_35": 83, "sequence_38": 83, "sequence_39": 83, "sequence_40": 83, "sequence_41": 83, "sequence_42": 83, "sequence_43": 83, "sequence_44": 83, "sequence_45": 83, "sequence_46": 83, "sequence_47": 83, "sequence_48": 83, "sequence_50": 83, "sequence_53": 83, "sequence_54": 83, "sequence_55": 83, "sequence_57": 83, "sequence_58": 83, "sequence_59": 83, "sequence_60": 83, "sequence_61": 83, "sequence_62": 83, "sequence_63": 83, "sequence_64": 83, "sequence_65": 83, "sequence_66": 83, "sequence_67": 83, "sequence_68": 83, "sequence_69": 83, "sequence_70": 83, "sequence_71": 83, "9m56": 83, "29m36": 83, "8m3": 83, "individual_mtz": 83, "dat": [83, 84], "echo": [83, 93], "final_list_of_fil": 83, "rerun": [83, 84, 85, 88], "corrplot_x": 83, "experiments_and_reflect": 83, "1471": [83, 86], "1381": [82, 83, 86], "1588": [83, 86], "1642": 83, "1529": [83, 86], "1261": [83, 86], "1587": [83, 86], "1727": [83, 86], "1358": [83, 86], "1049": 83, "1830": 83, "2033": 83, "1856": 83, "1048": 83, "1695": [83, 86], "2398": 83, "2173": 83, "2869": [83, 86], "3181": 83, "2810": 83, "3508": 83, "2985": 83, "2526": 83, "2453": 83, "1738": [83, 86], "1152": 83, "1331": [83, 86], "641": [83, 86], "1052": [83, 86], "1364": [83, 86], "2114": 83, "2139": 83, "1570": [83, 86], "2334": 83, "1645": [83, 86], "2376": 83, "1211": 83, "1190": [83, 85], "652": [83, 86], "unwieldi": 83, "ongo": [83, 97], "96848": 83, "8559": 83, "04029": 83, "8264": 83, "02585": 83, "4819": 83, "001499": 83, "1756": [83, 86], "9352": 83, "87496": 83, "02594": 83, "8807": 83, "5064": 83, "02297": 83, "4352": 83, "001485": 83, "6408": 83, "1569": [83, 86], "79118": 83, "0856": 83, "83106": [83, 86], "52798": 83, "91236": 83, "7085": 83, "50131": 83, "70048": 83, "54736": 83, "46902": 83, "46951": 83, "36137": 83, "40123": 83, "29632": 83, "21747": 83, "28785": 83, "20347": 83, "15376": 83, "17079": 83, "16762": 83, "13534": 83, "11626": 83, "16252": 83, "13282": [83, 88], "10889": 83, "16223": 83, "13265": 83, "16213": 83, "13258": 83, "16204": 83, "13254": 83, "10869": 83, "13252": 83, "10877": 83, "16199": 83, "10879": 83, "1438": [83, 86], "55006": 83, "36386": 83, "39245": 83, "1377": 83, "60375": 83, "35395": 83, "37074": 83, "81377": 83, "55378": 83, "74578": 83, "71331": 83, "50699": 83, "29662": 83, "7057": 83, "0768": 83, "70272": 83, "76136": 83, "54465": 83, "91579": 83, "2153": 83, "38596": 83, "1033": 83, "50161": 83, "37586": 83, "24255": 83, "49387": 83, "35304": 83, "27443": 83, "8339": 83, "58238": 83, "27862": 83, "51758": 83, "29764": 83, "26121": 83, "1297": [82, 83, 86], "0496": 83, "0934": 83, "62916": 83, "56529": 83, "41568": 83, "35943": 83, "52573": 83, "34911": 83, "2364": 83, "1581": [83, 86], "64887": 83, "3499": 83, "27855": 83, "1142": 83, "3555": [83, 86], "0016": 83, "81589": 83, "57376": 83, "46291": 83, "30225": 83, "68198": 83, "55891": 83, "48053": 83, "62128": 83, "55331": 83, "34444": 83, "1814": 83, "97204": 83, "80027": 83, "48625": 83, "82146": 83, "47213": 83, "41469": 83, "1696": [83, 86], "65721": 83, "34464": 83, "28293": 83, "1700": 83, "59074": 83, "37139": 83, "28981": 83, "1472": [83, 86], "72438": 83, "69007": 83, "39294": 83, "81814": 83, "64633": 83, "39922": 83, "1413": [83, 86], "5227": 83, "90807": 83, "2374": [83, 86], "52255": 83, "2912": 83, "24541": 83, "29952": 83, "23895": 83, "2620": [83, 86], "5181": 83, "30387": 83, "25139": 83, "2928": 83, "51628": 83, "29307": 83, "27191": 83, "51078": 83, "3342": 83, "29667": 83, "68191": 83, "38606": 83, "2856": 83, "3240": [83, 86], "80437": 83, "50846": 83, "5801": [83, 85], "2330": 83, "5782": 83, "0468": 83, "59145": 83, "2409": 83, "64632": 83, "28538": 83, "26755": 83, "2226": 83, "6115": 83, "86348": 83, "1551": [83, 86], "91913": 83, "90458": 83, "64259": 83, "75458": 83, "54531": 83, "30649": 83, "6069": 83, "0673": 83, "3176": 83, "1205": [83, 86], "2038": 83, "94187": 83, "0289": 83, "1200": [83, 84], "3346": [83, 86], "98056": 83, "46257": 83, "6651": 83, "7142": 83, "2596": 83, "5491": 83, "0847": 83, "1105": 83, "1467": [83, 86], "86945": 83, "0626": [83, 86], "1929": 83, "55025": 83, "2708": [83, 86], "25013": 83, "1786": [83, 86], "60951": 83, "27533": 83, "27842": 83, "56749": 83, "35204": 83, "33809": 83, "53203": 83, "31578": 83, "27452": 83, "2016": [83, 95], "1326": [83, 86], "2978": 83, "59713": 83, "1481": 83, "97476": 83, "0774": 83, "32288": 83, "2412": [83, 86], "54143": 83, "47678": 83, "25686": 83, "2005": 83, "0293": [83, 88], "77775": 83, "46855": 83, "924": 83, "97306": 83, "64495": 83, "28243": 83, "63827": 83, "42478": 83, "58041": 83, "2180": 83, "58521": 83, "32623": 83, "31898": 83, "63002": 83, "40298": 83, "26934": 83, "1070": 83, "3311": [83, 86], "0275": 83, "73719": 83, "3765": 83, "2727": 83, "78839": 83, "exhibit": 83, "logfil": 83, "54278": 83, "30358": 83, "2555": 83, "realiti": 83, "stabil": 83, "fair": 83, "split_00": 83, "split_57": 83, "logger": 83, "getlogg": 83, "export_al": 83, "split_": 83, "joint_export": 83, "joint_mtz": 83, "tree": [83, 87], "lcv": 83, "alcv": 83, "depict": 83, "truth": 83, "shortcut": 83, "synthesi": 83, "unsuccess": 83, "scientist": 83, "danni": 83, "nien": 83, "jen": 83, "hu": 83, "foadi": 83, "hassanul": 83, "ghani": 83, "choudhuri": 83, "iwata": 83, "konstantino": 83, "bei": 83, "pierr": 83, "aller": [83, 95], "yilmaz": 83, "alguel": 83, "inher": 84, "vmxi": 84, "autom": [84, 97], "proteinas": 84, "vmxi_proteinase_k_sweep": 84, "bag": 84, "train": [84, 86, 87], "bagtrain": 84, "integrated_fil": 84, "multi_cryst": 84, "easiest": 84, "216892": 84, "21172": 84, "20799": 84, "049": [84, 85, 86, 87], "ranom": 84, "ccano": 84, "20606": 84, "014": 84, "20449": 84, "20533": 84, "20413": 84, "1230": [84, 88], "066": [84, 85, 86], "20254": 84, "16541": 84, "12326": 84, "10344": 84, "8654": 84, "6964": 84, "5481": 84, "4333": 84, "1108": 84, "3142": [84, 86], "1028": [84, 86], "2119": 84, "0033": 84, "00087": 84, "d76": 84, "fourth": 84, "furthest": 84, "cc_": 84, "confirm": 84, "74952": 84, "54372": 84, "74323": 84, "54522": 84, "76579": 84, "54045": 84, "75406": 84, "53972": [], "57758": 84, "1774": [84, 86], "20037": 84, "12546": 84, "79283": [], "05866": [], "7432": 84, "58232": 84, "1917": 84, "19172": 84, "11927": 84, "57792": 84, "1869": 84, "14121": 84, "57424": 84, "20789": 84, "12917": 84, "multiscal": 84, "17132": 84, "203702": 84, "11465": 84, "13758": 84, "1277": [84, 86], "13392": 84, "n_group": 84, "689": [84, 86], "649": [82, 84, 86], "617": [84, 86], "912": [82, 84, 85], "832": 84, "818": [84, 85], "582": [84, 86], "614": [84, 86], "838": 84, "792": [84, 85], "52727": 84, "4603": 84, "6250": 84, "11840": 84, "4257": 84, "4759": 84, "6416": 84, "13937": 84, "3631": 84, "4673": 84, "6395": 84, "13354": 84, "3628": [84, 86], "4801": 84, "6405": 84, "13596": 84, "18836": 84, "25466": 84, "1235": 86, "1228": 86, "2925": [], "99903": [], "05534": [], "99904": 84, "06074": 84, "872": 84, "99921": 84, "05405": [], "11484": 84, "99924": [], "05421": [], "99922": [], "05394": [], "99915": [], "0572": [], "52646": 84, "0447": [], "0443": 84, "0442": 84, "75291": [], "06519": [], "10323": [], "1835": 84, "1183": [84, 86], "12300": [], "21114": [], "29070": [], "31597": [], "26284": [], "16237": [], "52644": 82, "0465": [], "0438": 84, "0436": [], "0434": [], "0433": [], "75047": [], "06534": [], "1184": 84, "825": [], "2863": [84, 86], "12375": [], "21135": [], "29032": [], "31551": [], "26165": [], "16219": 84, "4525": [], "301260": 84, "246904": 84, "2533": [84, 86], "5463": 84, "46360": 84, "21419": 84, "20916": 84, "1271": [84, 86], "20682": 84, "20830": [], "20700": 84, "21302": 84, "065": [84, 86], "20395": 84, "1197": [84, 86], "16676": 84, "12527": 84, "1213": 84, "10416": 84, "8636": 84, "6956": 84, "1147": 84, "4340": [84, 86], "3144": 84, "1029": 84, "2115": [84, 86], "967": 84, "1171": [84, 86], "962": [84, 85], "219143": [], "844": [], "varieti": 84, "mention": [84, 88], "assmann": 84, "216937": [], "815": 84, "781": 84, "delta_cchalf": 84, "warrant": 84, "answer": 84, "drawn": 84, "17133": 84, "203731": 84, "52237": 84, "4675": [84, 86], "6304": 84, "11892": 84, "4706": 84, "6334": 84, "13802": 84, "6376": 84, "13260": 84, "4831": 84, "6341": 84, "13283": 84, "18919": 84, "25355": 84, "2349": 86, "99873": 86, "05684": 84, "06057": 84, "99925": [], "05389": 84, "99909": 84, "05536": 84, "99926": 84, "05383": 84, "99916": 84, "05704": [], "52160": 84, "0418": 84, "75067": [], "06535": [], "12373": 84, "21130": [], "29043": [], "31552": [], "26175": [], "16214": [], "52161": 84, "0413": [], "0411": [], "0409": 84, "75439": [], "06472": 84, "10189": 84, "2892": 84, "12386": 84, "21127": 84, "29034": 84, "31532": [], "26136": 84, "16235": [], "9106": [], "21418": 84, "20917": 84, "20683": 84, "20831": 84, "21300": 84, "20394": 84, "16674": 84, "949": 84, "219140": 84, "845": [84, 85], "222563": 84, "166095": 84, "16534": 84, "16285": 84, "redund": [84, 85], "mea": [84, 85], "sigific": [], "screw": [84, 85], "4_1": 84, "54879": 84, "55061": 84, "54689": 84, "54511": 84, "41c": 84, "21a": [84, 85], "847": 84, "008": [84, 88], "42c": 84, "enantiomorph": 84, "french": 84, "treatment": 84, "mislead": 84, "anisotropi": 84, "u_cif": 84, "eigen": 84, "cart": 84, "eigenvector": 84, "span": 84, "behavior": 84, "gaug": 84, "induc": 84, "amplif": 84, "28e": 84, "31e": 84, "82e": 84, "72e": 84, "bernoulli": 84, "patholog": 84, "morri": 84, "synch": 84, "worrisom": 84, "z_score": 84, "iob": 84, "820": 84, "unexpect": 84, "elev": 84, "satellit": 84, "elsewher": 84, "abnorm": 84, "d55": 84, "1759": 84, "acentr": 84, "centric": 84, "06e": 84, "21e": [], "erf": 84, "n_acentr": 84, "rm": 84, "theoret": 84, "crystallin": [84, 95], "processs": 84, "669": [82, 84, 86], "750": 84, "671": [84, 86], "883": [84, 86], "\u03b4f": 84, "884": 84, "925": [84, 86], "655": 86, "21412": 84, "20908": 84, "20673": 84, "20824": 84, "20684": 84, "21289": 84, "20382": 84, "16670": 84, "12524": 84, "10412": 84, "219058": 84, "p41212": 84, "78117": 84, "2023": [], "bst": [], "hkl_base": 84, "freer_flag": 84, "979493": 84, "5534": [], "sigimean": [84, 85, 86], "q": [84, 85, 95], "20798": 84, "sigf": [84, 85], "20519": 84, "14678": 84, "3635": [84, 86], "20518": 84, "14677": 84, "14397": 84, "sigdano": 84, "semi": 85, "trypsin": 85, "semisynthetic_multilattice_data_2": 85, "semisynthetic_multilattice_data": 85, "ag": 85, "trp_ag_": 85, "formatcbfminipilatusdls6msn100": [85, 86], "tweak": 85, "46332": 85, "8863": 85, "37466": 85, "35422": 85, "41832": 85, "25232": 85, "15582": 85, "33596": 85, "17531": 85, "16636": 85, "9778": 85, "7632": 85, "6185": 85, "0427": 85, "6227": 85, "7813": 85, "9814": 85, "1725": 85, "0838": 85, "0185": 85, "0172": 85, "0150": 85, "0131": 85, "0093": 85, "0008": 85, "0107": 85, "0030": [85, 86], "17247": 85, "0060": 85, "0094": 85, "6714": 85, "7410": 85, "3813": 85, "6875": 85, "6180": 85, "9244": 85, "2768": [85, 86], "2625": 85, "0115": 85, "0111": 85, "0070": 85, "0118": 85, "0171": 85, "0048": 85, "0039": [40, 84, 85], "33883": 85, "1539": 85, "895": 85, "2490": 85, "251517": 85, "500054": 85, "499425": 85, "498876": 85, "209657": 85, "209735": 85, "209715": 85, "209787": 85, "209725": 85, "2639": 85, "740": [82, 85], "240463": 85, "709": [85, 86], "487536": 85, "472000": 85, "466492": 85, "0497": 85, "209775": 85, "209773": 85, "0453": 85, "209673": 85, "0221": 85, "209642": 85, "209577": 85, "45694": 85, "26413": 85, "16573": 85, "35593": 85, "20011": 85, "16635": 85, "2684": 85, "7630": 85, "6186": 85, "0429": 85, "6228": 85, "7812": 85, "1728": [85, 86], "0839": [85, 86], "17249": 85, "2882": [85, 86], "3810": 85, "6874": 85, "6182": 85, "9245": 85, "2621": [85, 86], "0047": [85, 86], "33884": 85, "1538": [85, 86], "similarli": 85, "079758": 85, "046104": 85, "018187": 85, "066176": 85, "042452": 85, "017411": 85, "065727": 85, "042236": 85, "016897": 85, "065412": 85, "042413": 85, "016653": 85, "065282": 85, "042591": 85, "016592": 85, "065257": 85, "042631": 85, "016585": 85, "065253": 85, "042632": 85, "13833": 85, "48806": 85, "27504": 85, "14752": 85, "35492": 85, "2951": 85, "20587": 85, "25027": 85, "1859": 85, "9850": 85, "10448": 85, "5595": 85, "29114": 85, "2208": 85, "23507": 85, "1796": 85, "11202": 85, "24816": 85, "1800": 85, "10172": 85, "9013": 85, "5147": 85, "29676": 85, "24069": 85, "1812": 85, "10754": 85, "2822": 85, "5198": 85, "21b": 85, "16592": 85, "21c": 85, "28257": 85, "46152": 85, "34551": 85, "2288": [85, 86], "3375": 85, "2366": 85, "15165": 85, "3400": 85, "2285": 85, "3369": 85, "4059": 85, "3297": 85, "2143": [85, 86], "3226": [85, 86], "1506": [85, 86], "3246": 85, "2372": 85, "1133": 85, "2387": [85, 88], "840": 85, "2481": [85, 86], "3177": [85, 86], "2480": 85, "3207": [85, 86], "2540": [85, 86], "2306": [85, 86], "1845": 85, "1293": [85, 86], "651": [85, 86], "p22121": 85, "32658": 85, "8871": 85, "06499": 85, "gf88516da7": 85, "2019": [85, 95], "gmt": [84, 85], "97949": 85, "213880": 85, "5046": 85, "24848": 85, "12695": 85, "180658": 85, "4263": [85, 86], "split_0": 85, "split_1": 85, "lactamas": [86, 87], "c2sum_1": [86, 87], "720": 86, "i03": [], "mx19576": [], "c2sum_1_": 86, "1439": 86, "1593": 86, "1663": 86, "1597": 86, "1605": 86, "1519": 86, "1504": 86, "1368": 86, "1518": 86, "1470": [82, 86], "1540": 86, "1591": 86, "1357": 86, "1350": [82, 86], "1441": 86, "1394": 86, "1304": 86, "1444": 86, "1270": 86, "1465": [86, 95], "1431": 86, "1168": 86, "1311": 86, "1333": 86, "1353": 86, "1502": 86, "1317": 86, "1295": 86, "1289": 86, "1320": 86, "1306": 86, "1456": 86, "1388": 86, "1282": 86, "1245": 86, "1355": 86, "1410": [82, 86], "1455": 86, "1405": 86, "1553": 86, "1318": 86, "1702": 86, "1526": 86, "1453": 86, "1577": 86, "1484": 86, "1497": 86, "1537": 86, "1596": 86, "1640": 86, "1461": 86, "1448": 86, "1552": 86, "1610": 86, "1617": 86, "1575": 86, "1572": 86, "1643": 86, "1601": 86, "1633": 86, "1715": 86, "1585": 86, "1622": 86, "1475": 86, "1583": [86, 88], "1582": 86, "1747": 86, "1603": 86, "1532": 86, "1760": 86, "1542": 86, "1509": [82, 86], "1437": 86, "1732": 86, "1777": 86, "1673": 86, "1559": 86, "1868": 86, "1376": 86, "1680": 86, "1658": 86, "1638": 86, "1416": 86, "1580": 86, "1501": 86, "1710": 86, "1649": 86, "1736": 86, "1770": 86, "1692": 86, "1776": 86, "1660": 86, "1628": 86, "1913": 86, "1708": 86, "1564": 86, "1744": 86, "1687": 86, "1783": 86, "1765": 86, "1612": 86, "1763": 86, "1671": 86, "1613": 86, "1712": 86, "1599": 86, "1805": 86, "1790": 86, "1740": 86, "1683": 86, "1928": 86, "1950": 86, "1641": 86, "1723": 86, "1903": 86, "1627": 86, "1664": 86, "1614": 86, "1810": 86, "1865": 86, "1717": 86, "1531": 86, "1644": 86, "1635": 86, "1694": 86, "1574": 86, "1799": 86, "1879": 86, "1682": 86, "1659": 86, "1499": 86, "1568": 86, "1679": 86, "1754": 86, "1466": 86, "1459": [86, 95], "1820": 86, "1646": 86, "1665": 86, "1480": 86, "1348": 86, "1426": 86, "1721": 86, "1403": 86, "1520": 86, "1442": 86, "1201": 86, "1409": 86, "1390": 86, "1546": 86, "1324": 86, "1545": 86, "1367": 86, "1688": 86, "1371": 86, "1460": 86, "1349": 86, "1315": 86, "1375": 86, "1267": 86, "1457": 86, "1423": 86, "1319": 86, "1406": 86, "1291": [82, 86], "1341": 86, "1290": 86, "1262": 86, "1275": [86, 88], "1265": 86, "1463": [82, 86], "1322": 86, "1352": 86, "465": [82, 86], "1346": 86, "1492": 86, "1181": 86, "1135": 86, "1369": 86, "1187": 86, "1155": 86, "1485": 86, "1434": 86, "1312": 86, "1356": 86, "1229": [84, 86], "1558": 86, "532": [82, 86], "1515": 86, "541": [84, 86], "545": [86, 95], "546": 86, "547": 86, "1294": 86, "1631": 86, "1579": 86, "552": [82, 86], "555": [82, 86], "1656": 86, "563": 86, "1374": 86, "568": 86, "1722": 86, "1629": 86, "573": 86, "574": 86, "575": 86, "1549": 86, "1398": 86, "580": 86, "1689": 86, "583": 86, "1657": 86, "585": 86, "1794": 86, "1678": 86, "590": 86, "1513": 86, "1750": 86, "1781": 86, "597": 86, "1618": 86, "1949": 86, "603": 86, "604": 86, "1594": 86, "606": 86, "1719": 86, "1711": 86, "613": [82, 86], "615": 86, "1521": 86, "620": 86, "621": 86, "1713": 86, "1896": 86, "627": [82, 86], "1904": 86, "1681": 86, "632": 86, "1937": 86, "1784": [82, 86], "1730": 86, "638": [82, 86, 95], "1894": 86, "1947": 86, "1916": 86, "1676": 86, "645": 86, "646": 86, "1606": 86, "1699": 86, "1851": 86, "653": 86, "1852": 86, "1528": 86, "1693": 86, "1716": 86, "660": [82, 86], "664": 86, "1609": 86, "665": 86, "668": 86, "1735": 86, "1650": 86, "677": 86, "1677": 86, "678": 86, "1769": 86, "1608": 86, "1707": 86, "1709": 86, "686": 86, "687": 86, "1636": 86, "690": 86, "691": 86, "694": 86, "698": 86, "702": [82, 84, 86], "1653": 86, "1482": 86, "124946": 86, "16738": 86, "108207": 86, "107999": 86, "91203": 86, "114154": 86, "94166": 86, "114243": 86, "94215": 86, "113803": 86, "93959": 86, "114214": 86, "93867": 86, "114144": 86, "94275": 86, "114123": 86, "93742": 86, "113784": 86, "93870": 86, "114124": 86, "94101": 86, "114140": 86, "94077": 86, "114518": 86, "94017": 86, "114292": 86, "93749": 86, "113958": 86, "93595": 86, "114230": 86, "114431": 86, "93838": 86, "114065": 86, "94173": 86, "114507": 86, "93960": 86, "114109": 86, "94103": 86, "114277": 86, "93862": 86, "114113": 86, "94089": 86, "114110": 86, "93890": 86, "114017": 86, "93302": 86, "113865": 86, "93126": 86, "114178": 86, "94031": 86, "114275": 86, "94063": 86, "114151": 86, "94188": 86, "113599": 86, "93047": 86, "114191": 86, "93419": 86, "113880": 86, "93138": 86, "114543": 86, "92656": 86, "114150": 86, "93970": 86, "114266": 86, "94194": 86, "114199": 86, "94373": 86, "94065": 86, "114470": 86, "93872": 86, "113637": 86, "93709": 86, "114013": 86, "94057": 86, "113621": 86, "92029": 86, "114555": 86, "91895": 86, "114816": 86, "92639": 86, "114242": 86, "93340": 86, "113913": 86, "92296": 86, "113990": 86, "93360": 86, "114207": 86, "94097": 86, "114482": 86, "93092": 86, "114024": 86, "93886": 86, "114325": 86, "93248": 86, "114060": 86, "93703": 86, "113906": 86, "92940": 86, "114265": 86, "91089": 86, "114137": 86, "93712": 86, "8417": 86, "5364": 86, "1836": [84, 86], "1751": 86, "9673": 86, "8256": 86, "2459": 86, "0246": 86, "0248": 86, "0010": 86, "0144": 86, "0227": 86, "0134": 86, "0029": 86, "0139": 86, "0097": 86, "0202": 86, "93816": 86, "2047": 86, "3707": 86, "731": [82, 86], "6009": 86, "2953": 86, "00193": 86, "08649": 86, "01357": 86, "3106": 86, "90710": 86, "6121": 86, "3087": 86, "03742": 86, "08685": 86, "01122": 86, "4516": 86, "36000": [86, 87], "56197": [86, 87], "55131": [86, 87], "13413": [86, 87], "24338": [86, 87], "26503": [86, 87], "15575": [86, 87], "10648": [86, 87], "13198": [86, 87], "13476": [86, 87], "055785": [86, 87], "059567": [86, 87], "10888": [86, 87], "051066": [86, 87], "052336": [86, 87], "10514": [86, 87], "050906": [86, 87], "052372": [86, 87], "10505": [86, 87], "050901": [86, 87], "052378": [86, 87], "29594": 86, "30452": 86, "2101": 86, "93847": [], "5519": 86, "5591": 86, "2964": 86, "9752": 86, "0783": 86, "8429": 86, "5343": 86, "0638": 86, "1841": 86, "9672": 86, "5056": 86, "8270": 86, "0247": 86, "0249": 86, "0145": 86, "0140": 86, "0098": 86, "0203": 86, "101813": 86, "102009": 86, "101460": 86, "3659": 86, "03707": 86, "002529": 86, "03158": 86, "3623": 86, "8234": 86, "03127": 86, "0002209": 86, "03123": 86, "9301": 86, "8541": 86, "0814": 86, "0005383": 86, "08299": 86, "4886": 86, "96574": 86, "03646": 86, "002887": 86, "03019": 86, "03001": 86, "000363": 86, "02939": 86, "1893": 86, "3509": 86, "08067": 86, "0001275": 86, "08135": 86, "3266": 86, "048834": 86, "046981": 86, "10531": 86, "048722": 86, "046957": 86, "10525": 86, "048696": 86, "04698": 86, "10522": 86, "048684": 86, "046993": 86, "048681": 86, "046997": 86, "28303": 86, "27324": 86, "2104": 86, "5520": 86, "5588": 86, "0189": 86, "9731": 86, "2458": 86, "105712": 86, "105724": 86, "105342": 86, "3602": 86, "03583": 86, "0009226": 86, "03338": 86, "3599": 86, "03272": 86, "0005848": 86, "03157": 86, "08148": 86, "001034": 86, "08422": 86, "5469": 86, "03485": 86, "03209": 86, "03096": 86, "0005444": 86, "02996": 86, "3535": 86, "08055": 86, "0006649": 86, "08254": 86, "3272": 86, "049172": 86, "04859": 86, "10641": 86, "049153": 86, "04854": 86, "10638": 86, "049152": 86, "048515": 86, "10639": 86, "049155": 86, "048503": 86, "1064": 86, "049156": 86, "0485": 86, "28579": 86, "28197": 86, "21281": 86, "5583": 86, "0190": 86, "9725": 86, "0761": 86, "107089": 86, "107097": 86, "723": 86, "106715": 86, "0006477": 86, "03379": 86, "3619": 86, "03302": 86, "0004506": 86, "03208": 86, "9716": 86, "08205": 86, "0008108": 86, "08438": 86, "5604": 86, "101111": 86, "03501": 86, "0007897": 86, "03243": 86, "03118": 86, "0004102": 86, "03034": 86, "1979": 86, "08096": 86, "0004804": 86, "08264": 86, "3495": 86, "049499": 86, "048536": 86, "049483": 86, "048491": 86, "10673": 86, "049474": 86, "048479": 86, "10676": 86, "049473": 86, "048472": 86, "10677": 86, "04847": 86, "28764": 86, "2818": 86, "21355": 86, "5513": 86, "5578": 86, "2911": 86, "0192": 86, "9728": 86, "107264": [86, 87], "107277": 86, "106891": 86, "03563": 86, "0001711": 86, "03425": 86, "3641": 86, "03295": 86, "0004634": 86, "0322": 86, "9614": 86, "08213": 86, "0006723": 86, "08443": 86, "5626": 86, "101265": 86, "0347": 86, "0003111": 86, "03288": 86, "1637": 86, "03122": 86, "0004946": 86, "3539": 86, "08118": 86, "0003692": 86, "08282": 86, "049518": 86, "04852": 86, "10693": 86, "049498": 86, "048528": 86, "10688": 86, "049495": 86, "048535": 86, "10686": 86, "049494": 86, "048537": 86, "28776": 86, "28219": 86, "21371": 86, "5585": 86, "2922": 86, "0198": 86, "9722": 86, "0759": 86, "733": [86, 87], "c2221": 86, "c222": 86, "0457": 86, "35999": 86, "218334": 86, "0455": 86, "218080": 86, "108857": 86, "0326": 86, "225340": 86, "112674": 86, "bravais_setting_4": 86, "bravais_setting_3": 86, "cost": 86, "worsen": 86, "03532": 86, "621e": 86, "03409": 86, "3577": 86, "03515": 86, "0003891": 86, "03422": 86, "08285": 86, "0008039": 86, "08427": 86, "11205": [], "95686": [], "1758": 86, "03395": 86, "001028": [], "03026": [], "03204": 86, "0007549": [], "02983": [], "3632": 86, "07953": 86, "0008095": [], "08144": [], "3193": 86, "046339": [], "048041": [], "10463": [86, 87], "046276": [], "047965": [], "10467": [86, 87], "046257": [], "047943": [], "10473": [], "046261": [], "04793": [], "10474": [86, 87], "046264": [], "047926": [], "10475": [86, 87], "27864": [], "2095": [], "106889": 86, "03432": [], "0006167": [], "03482": 86, "03496": [], "0001026": [], "0345": 86, "08391": [], "42e": [], "08361": [], "11450": [], "95439": [], "1802": [], "03294": 86, "0003782": [], "03065": 86, "1822": 86, "0315": [], "0003596": [], "2338": 86, "3681": 86, "08069": 86, "311e": [], "3162": 86, "046025": [], "047842": [], "10469": 86, "043161": [], "040664": [], "10341": 86, "041165": [], "039697": [], "10279": [], "04062": [], "039492": [], "10246": 86, "040505": [], "039483": [], "10225": [], "040482": [], "039479": [], "10215": 86, "040477": [], "039477": [], "10213": 86, "040476": [], "039478": [], "23532": [], "22953": [], "20426": [], "1698": 86, "2426": 86, "2883": 86, "04558": 86, "9560": 86, "0639": 86, "0114": 86, "2539": 86, "2931": 86, "9239": 86, "2460": 86, "0163": 86, "0180": 86, "0151": 86, "23985": 86, "000831581": [], "22424e": 86, "89652": 86, "999913": 86, "00556552": [], "0119317": [], "00567845": [], "999939": 86, "00945217": [], "965028": 86, "0598562": 86, "255222": 86, "128604": 86, "74028": 86, "659883": 86, "228434": 86, "669628": 86, "706694": 86, "gon_phi": 86, "gon_kappa": 86, "gon_omega": 86, "95438": [], "12561": [], "368590": 86, "95437": [], "044181": 86, "26304": [], "22778": 86, "23891": [], "22477": [], "26213": [], "22771": 86, "22402": [], "2008": 86, "2341": 86, "2815": 86, "2569": 86, "2560": 86, "3052": 86, "2733": 86, "3546": 86, "4266": 86, "3869": 86, "2654": 86, "3274": 86, "2634": 86, "3140": 86, "2788": 86, "3881": 86, "3202": 86, "2874": 86, "2843": 86, "3644": 86, "3900": [], "2562": 86, "3129": [], "2808": [], "3265": 86, "2895": 86, "4291": 86, "2446": [], "2968": [], "2687": [], "3328": [], "2946": 86, "3837": 86, "2379": [], "2867": [], "2875": 86, "3404": [], "2988": 86, "3630": 86, "4267": [], "3816": [], "2303": [], "2764": [], "2501": [], "3538": [], "3075": 86, "3675": [], "4329": [], "3833": 86, "2245": [], "2704": [], "2429": 86, "3137": 86, "4370": [], "3863": 86, "2172": [], "2403": 86, "3145": [], "3750": 86, "3231": [], "3744": [], "4443": [], "3906": [], "2161": [], "2642": 86, "2396": [], "3175": [], "3786": [], "3751": [], "4451": [], "3927": 86, "2131": [], "2603": [], "3277": 86, "3889": 86, "3348": 86, "4492": 86, "3929": 86, "2150": 86, "2605": 86, "2354": 86, "3825": [], "3261": [], "3716": [], "3789": [], "2133": [], "2574": 86, "2307": [], "3775": [], "4290": [], "3682": [], "2142": [], "2572": [], "2281": [], "3112": 86, "3658": 86, "3104": 86, "4165": 86, "3586": 86, "2149": 86, "3047": 86, "3578": 86, "3061": 86, "3493": 86, "4087": 86, "3549": 86, "2583": 86, "2302": 86, "3024": 86, "3019": 86, "3479": 86, "4061": 86, "3515": 86, "2950": 86, "3464": 86, "3394": 86, "3961": 86, "3423": 86, "2188": 86, "2626": 86, "2894": 86, "3330": 86, "3883": 86, "3358": 86, "2215": 86, "2647": 86, "2796": [82, 86], "3295": 86, "2816": 86, "3221": 86, "3767": 86, "3273": 86, "2667": 86, "3184": 86, "2719": 86, "3107": 86, "3647": 86, "3163": 86, "2660": 86, "2329": 86, "2631": 86, "3588": 86, "2230": 86, "2670": 86, "2530": 86, "2982": 86, "2525": 86, "2966": 86, "3496": 86, "3016": 86, "2198": 86, "2637": 86, "2296": 86, "2567": 86, "2543": 86, "3048": 86, "3572": 86, "3084": 86, "2282": 86, "2716": 86, "2367": 86, "2548": 86, "2524": 86, "3057": 86, "3582": 86, "3080": 86, "2744": 86, "2380": 86, "2591": 86, "3157": 86, "3693": 86, "3182": 86, "2834": 86, "2452": 86, "2616": 86, "3037": 86, "3211": 86, "3731": 86, "3187": 86, "2443": 86, "2619": 86, "3771": 86, "3215": 86, "2498": 86, "2482": 86, "2939": 86, "3286": 86, "3760": 86, "3194": 86, "2554": 86, "2981": 86, "2491": 86, "2500": 86, "2896": 86, "2464": 86, "3777": 86, "3014": 86, "2467": 86, "2871": 86, "3298": 86, "3817": 86, "3088": 86, "2457": 86, "3327": 86, "2662": 86, "2408": 86, "2825": 86, "2436": 86, "3302": 86, "2680": 86, "3148": 86, "2358": 86, "2791": 86, "2420": 86, "3317": 86, "3870": 86, "2676": 86, "2633": 86, "2357": 86, "2461": 86, "3347": 86, "3407": 86, "2697": 86, "3188": 86, "2879": 86, "2546": 86, "3428": 86, "4021": 86, "3532": 86, "2722": 86, "3218": 86, "2766": 86, "2434": 86, "2934": 86, "2618": 86, "3439": 86, "4052": 86, "3601": 86, "2681": 86, "2961": 86, "2657": 86, "3465": 86, "4071": 86, "3620": 86, "2650": 86, "3132": 86, "2472": 86, "2688": 86, "3435": 86, "4047": 86, "3609": 86, "2558": 86, "3033": 86, "2646": 86, "2519": 86, "3053": 86, "3477": 86, "4101": 86, "2529": 86, "3000": 86, "2622": 86, "2553": [], "2803": 86, "3447": [], "4080": [], "3670": [], "2593": 86, "2881": 86, "3431": 86, "4094": 86, "2356": 86, "2812": 86, "2507": 86, "3242": 86, "4078": 82, "2441": [], "2673": 86, "3310": [], "3364": 86, "4062": [], "3703": [], "2192": [], "3363": [], "3044": [], "3324": 86, "3649": [], "2112": [], "2804": [], "3482": [], "3154": [], "3360": [], "2085": 86, "2469": [], "2224": [], "3552": [], "3205": [], "3390": [], "3712": [], "2430": 86, "2186": 86, "2891": [], "3344": [], "4064": [], "3679": [], "2147": 86, "2828": 86, "3512": 86, "3164": 86, "3220": 86, "3923": 86, "1940": 86, "2311": 86, "2077": 86, "2759": 86, "3450": 86, "3109": 86, "3819": 86, "3449": 86, "1900": 86, "2278": 86, "3100": 86, "3790": 86, "3430": 86, "1932": 86, "2308": 86, "2701": 86, "3345": 86, "3023": 86, "3021": 86, "3692": 86, "1914": 86, "2301": 86, "2053": 86, "2683": 86, "3011": 86, "2973": 86, "3304": 86, "1897": 86, "2039": 86, "2598": 86, "3253": 86, "2888": 86, "3564": [82, 86], "3239": 86, "2295": 86, "2044": 86, "2590": 86, "2972": 86, "2859": 86, "3554": 86, "1887": 86, "2066": 86, "3191": 86, "2907": 86, "3502": 86, "2127": 86, "3101": 86, "2819": 86, "2745": [], "3421": [], "1921": 95, "2375": [], "2116": [], "3072": 86, "2793": 86, "3468": [], "3143": 86, "2212": [], "2395": 86, "3491": [], "3172": [], "2534": [], "2435": 86, "2817": 86, "2905": 86, "3622": 86, "2123": 86, "2664": 86, "3063": 86, "2795": 86, "2940": 86, "3662": 86, "3349": 86, "2185": 86, "2730": 86, "2462": 86, "2479": 86, "2800": 86, "3732": 86, "3383": 86, "2811": 86, "2516": 86, "2427": 86, "3012": 86, "2700": 86, "2962": 86, "3655": 86, "2263": 86, "2517": 86, "2577": 86, "3526": 86, "3180": 86, "2790": 86, "2492": 86, "2801": 86, "3192": 86, "2315": 86, "2571": 86, "2827": 86, "2508": 86, "3676": 86, "3296": 86, "2411": 86, "3018": 86, "2551": 86, "2807": 86, "2344": 86, "2884": 86, "2559": 86, "3123": 86, "3868": 86, "3463": 86, "2570": 86, "2845": 86, "2839": 86, "3159": 86, "3877": 86, "3472": 86, "2615": 86, "2877": 86, "3199": 86, "3954": 86, "3534": 86, "3293": 86, "2814": 86, "3309": 86, "4074": 86, "3648": 86, "3386": 86, "1566": 86, "1818": 86, "2294": 86, "2045": 86, "91596": 86, "92165": 86, "92093": 86, "91556": 86, "91153": 86, "90889": 86, "1177": 86, "2606": 86, "2965": 86, "5312": 86, "4368": 86, "4822": 86, "7648": 86, "6425": 86, "6912": 86, "11094": 86, "9253": 86, "9881": 86, "15371": 86, "12970": 86, "13814": 86, "20779": 86, "17869": 86, "18839": 86, "23748": 86, "20760": 86, "21529": 86, "24455": 86, "20311": 86, "21238": 86, "24341": 86, "20604": 86, "21460": 86, "24576": 86, "21432": 86, "22117": 86, "24712": 86, "21140": 86, "21781": 86, "25045": 86, "21339": [], "21958": [], "25192": 86, "22294": 86, "25082": 86, "21759": 86, "22206": 86, "25616": 86, "22282": 86, "22785": 86, "25697": 86, "22620": 86, "23008": 86, "26130": 86, "22429": 86, "22949": 86, "26279": 86, "22938": 86, "23278": 86, "366022": 86, "2677": 86, "95698": [], "5239": 86, "3548": 86, "313908": [], "325383": [], "42883": [], "3208": 86, "41623": [], "368699": 86, "327076": [], "312215": [], "155107": [], "5515": 86, "9961": 86, "0721": 86, "150956": [], "150228": [], "327038": [], "6490": 86, "325072": [], "325379": 86, "325378": [], "325073": 86, "7479": 86, "48533": 86, "50269": [], "49244": [], "0492": 82, "98314": [], "88497": [], "83685": [], "83191": [], "81492": [], "80985": [], "80038": [], "79666": [], "79613": [], "79537": [], "7952": [], "79495": [], "79486": [], "79475": [], "79465": 86, "79458": [], "99897": 86, "06033": [], "99888": [], "06695": [], "99899": 86, "06025": [], "39733": 86, "06032": 86, "3973": 86, "06017": [], "99892": [], "06294": 86, "50239": [], "83161": 86, "83107": [], "82989": 86, "82981": 86, "70557": [], "03885": [], "9939": [], "2075": [], "5974": [], "9786": [], "14802": [], "19577": [], "20600": [], "12910": [], "50244": [], "0456": [], "0415": [], "0375": 86, "0372": 86, "0371": [], "67892": [], "9949": 86, "1933": 86, "2097": 86, "5993": 86, "9810": 86, "14768": 86, "19581": 86, "20450": 86, "12834": 86, "5938": [], "324979": [], "23046": 86, "22762": 86, "22907": 86, "3267": 86, "22699": 86, "3258": 86, "21992": 86, "098": 86, "22185": 86, "3190": 86, "21825": [], "3167": 86, "985": [86, 88], "21507": 86, "3115": 86, "22177": 86, "3126": 86, "21416": 86, "3095": 86, "20945": 86, "21449": 86, "19024": 86, "3010": 86, "14334": 86, "9982": 86, "6959": 86, "5117": 86, "3119": 86, "325189": [], "49118": 86, "nativig": 86, "trough": [86, 87], "colin": 86, "driven": 87, "resiz": 87, "layout": 87, "wildcard": 87, "branch": 87, "steadi": 87, "drop": 87, "cyan": 87, "cursor": 87, "heat": 87, "pop": 87, "heurist": 87, "polish": 87, "rougher": 87, "fifth": 87, "demand": 87, "tight": 87, "hypothesi": 87, "revis": [87, 95], "283277": 87, "15064": 87, "11794": 87, "41136": 87, "1935": 87, "understood": 87, "untick": 87, "fresh": 87, "cloud": 87, "ccp4i2": 87, "51405": 88, "cyst_0": 88, "unconstrain": 88, "yield": 88, "unlik": 88, "substanti": 88, "metal": 88, "12198": 88, "perspect": [88, 97], "42183": 88, "02218": 88, "6983": 88, "6749": 88, "5789": 88, "7429": 88, "3362": 88, "4212": 88, "6254": 88, "6569": 88, "1844": 88, "0832": 88, "0561": 88, "0913": 88, "0280": 88, "0777": 88, "0769": 88, "0546": 88, "3e": 88, "0222": 88, "00356": 88, "And": 88, "jiffi": 88, "lcy": 88, "reflections_": [88, 93], "experiments_": [88, 93], "ssx": 89, "ssx_index": 89, "ssx_integr": 89, "biologi": [90, 97, 98], "year": [90, 97], "deliv": 90, "micron": 90, "xfel": 90, "endeavour": 90, "bug": 90, "east": 90, "west": [90, 99], "employe": 90, "stfc": [90, 94], "218270": 90, "biomed": 90, "research": [90, 92], "pkg": 91, "dev20150903": 91, "platform": 91, "diamond_build": 91, "conda3": 91, "macosx": 91, "xzf": 91, "sudo": 91, "copyright": 92, "2012": [92, 95, 99], "kingdom": 92, "innov": 92, "reserv": 92, "redistribut": 92, "binari": 92, "permit": 92, "met": 92, "disclaim": 92, "neither": 92, "holder": 92, "nor": 92, "endors": 92, "promot": 92, "BY": 92, "THE": 92, "AS": [92, 95], "OR": 92, "warranti": 92, "BUT": 92, "TO": 92, "OF": 92, "merchant": 92, "FOR": 92, "IN": 92, "NO": 92, "event": 92, "owner": 92, "BE": 92, "liabl": 92, "indirect": 92, "incident": 92, "exemplari": 92, "consequenti": 92, "procur": 92, "profit": 92, "busi": 92, "interrupt": [47, 54, 63, 66, 69, 72, 92], "ON": 92, "liabil": 92, "strict": 92, "tort": 92, "aris": 92, "IF": 92, "SUCH": 92, "blah_": 93, "sorri": 93, "recombin": 93, "mere": 93, "reli": 93, "ada": 94, "lovelac": 94, "scientif": 94, "isi": 94, "muon": 94, "flight": [16, 94], "tof": 94, "sxd": 94, "diffus": [94, 95], "spallat": 94, "plan": 94, "futur": [94, 97, 98], "rj": 95, "horrel": 95, "sandi": 95, "sanchez": 95, "weatherbi": 95, "owen": 95, "lukacik": 95, "strain": 95, "damerel": 95, "rl": 95, "walsh": 95, "ma": [95, 99], "35647922": 95, "pmc9159281": 95, "mcdonagh": 95, "pascal": 95, "bh": 95, "34747533": 95, "pmc8740827": 95, "32254063": 95, "pmc7137103": 95, "paterson": 95, "ng": 95, "beal": 95, "vollmar": 95, "mcaulei": 95, "ke": 95, "flaig": 95, "aw": 95, "mar": [11, 95], "30950396": 95, "pmc6450062": 95, "lj": 95, "yano": 95, "nk": 95, "sep": 95, "30198898": 95, "pmc6130462": 95, "29717711": 95, "pmc5930348": 95, "feb": 95, "29533234": 95, "pmc5947772": 95, "thorn": 95, "iucrj": 95, "28989718": 95, "pmc5619854": 95, "dec": 95, "27980508": 95, "pmc5139990": 95, "27050135": 95, "pmc4822564": 95, "oct": 95, "25286849": 95, "pmc4188007": 95, "aug": 95, "25242914": 95, "pmc4119952": 95, "motion": 95, "wall": 95, "me": 95, "pd": 95, "fraser": 95, "24507780": 95, "pmc4070675": 95, "rw": 95, "1274": 95, "jul": 95, "2013": [95, 99], "23793153": 95, "pmc3689530": 95, "fortran": 95, "convers": 95, "fabl": 95, "terwillig": 95, "tc": 95, "22640868": 95, "pmc3448510": 95, "toxic": 95, "synuclein": 95, "invis": 95, "rodriguez": 95, "ja": 95, "ivanova": 95, "sawaya": 95, "mr": 95, "cascio": 95, "rey": 95, "fe": 95, "shi": 95, "sangwan": 95, "guenther": 95, "el": 95, "johnson": 95, "zhang": 95, "jiang": 95, "arb": 95, "nannenga": 95, "bl": 95, "whitelegg": 95, "messerschmidt": 95, "boutet": 95, "gonen": 95, "eisenberg": 95, "2015": [95, 99], "26352473": 95, "pmc4791177": 95, "architectur": 95, "synaptotagmin": 95, "snare": 95, "machineri": 95, "neuron": 95, "exocytosi": 95, "zhou": 95, "lai": 95, "bacaj": 95, "lyubimov": 95, "ai": 95, "uervirojnangkoorn": 95, "cohen": 95, "ae": 95, "solti": 95, "sm": 95, "alonso": 95, "mori": 95, "chollet": 95, "lemk": 95, "ht": 95, "pfuetzner": 95, "ra": 95, "choi": 95, "wei": 95, "wi": 95, "diao": 95, "s\u00fcdhof": 95, "brunger": 95, "AT": 95, "26280336": 95, "pmc4607316": 95, "laser": [95, 97], "ginn": 95, "hm": 95, "wagner": 95, "grime": 95, "26057680": 95, "pmc4461207": 95, "biolog": 95, "elif": 95, "25781634": 95, "pmc4397907": 95, "cpv17": 95, "polyhedrin": 95, "ji": 95, "6435": 95, "25751308": 95, "pmc4403592": 95, "25723925": 95, "pmc4344359": 95, "amyloid": 95, "peptid": 95, "mcfarlan": 95, "25664747": 95, "pmc4321489": 95, "25664746": 95, "pmc4321488": 95, "zwart": 95, "ph": 95, "3299": 95, "25478847": 95, "pmc4257623": 95, "gonz\u00e1lez": 95, "aguila": 95, "barn": 95, "baxter": 95, "brehmer": 95, "calero": 95, "ehrensberg": 95, "eriksson": 95, "tl": 95, "feng": 95, "hedman": 95, "hollenbeck": 95, "holton": 95, "keabl": 95, "kobilka": 95, "bk": 95, "kovaleva": 95, "eg": 95, "kruse": 95, "lin": 95, "manglik": 95, "mathew": 95, "ii": 95, "mcphillip": 95, "se": 95, "nelson": 95, "peter": 95, "jw": 95, "smith": 95, "ca": [95, 99], "song": 95, "stevenson": 95, "tsai": 95, "vinetski": 95, "wakatsuki": 95, "zadvornyi": 95, "oa": 95, "zhu": 95, "hodgson": 95, "ko": 95, "acad": 95, "17122": 95, "25362050": 95, "pmc4260607": 95, "bacteri": 95, "gingeri": 95, "goldschmidt": 95, "colleti": 95, "koglin": 95, "je": 95, "gj": 95, "nass": 95, "botha": 95, "doak": 95, "rb": 95, "shoeman": 95, "depont": 95, "park": 95, "hw": 95, "federici": 95, "ba": 95, "schlicht": 95, "12769": 95, "25136092": 95, "pmc4156696": 95, "spectroscopi": 95, "metalloenzym": 95, "kern": 95, "tran": 95, "laksmono": 95, "gul": 95, "sierra": 95, "rg": 95, "rehanek": 95, "erko": 95, "mitzner": 95, "wernet": 95, "bergmann": 95, "yachandra": 95, "philo": 95, "soc": 95, "lond": 95, "20130590": 95, "24914169": 95, "pmc4052878": 95, "mn\u2084ca": 95, "photosynthet": 95, "water": 95, "oxid": 95, "catalyst": 95, "koroidov": 95, "hellmich": 95, "messing": 95, "zouni": 95, "vk": 95, "20130324": 95, "24914152": 95, "pmc4052861": 95, "ibrahim": 95, "han": 95, "lassal": 95, "kaiser": 95, "chatterje": 95, "stan": 95, "gl\u00f6ckner": 95, "lamp": 95, "difior": 95, "milathianaki": 95, "fry": 95, "seibert": 95, "gallo": 95, "uhlig": 95, "sokara": 95, "weng": 95, "skinner": 95, "bogan": 95, "mj": 95, "glatzel": 95, "4371": 95, "25006873": 95, "pmc4151126": 95, "miahnahri": 95, "schafer": 95, "dw": 95, "sellberg": 95, "latim": 95, "24633409": 95, "pmc4008696": 95, "photosystem": 95, "23413188": 95, "pmc3732582": 95, "mcqueen": 95, "ta": 95, "9721": 95, "22665786": 95, "pmc3382516": 95, "conform": 95, "microsecond": 95, "simul": 95, "benschoten": 95, "ah": 95, "17887": 95, "25453071": 95, "pmc4273327": 95, "tightli": 95, "jbluic": 95, "pothineni": 95, "sb": 95, "venugopalan": 95, "ogata": 95, "cm": 95, "hilgart": 95, "stepanov": 95, "sanishvili": 95, "becker": 95, "jl": 95, "fischetti": 95, "rf": 95, "25484844": 95, "pmc4248568": 95, "imagecif": 95, "hj": 95, "deliver": 95, "biostruct": [95, 97], "month": 95, "stepwis": 96, "simplic": 96, "cluster_2": 96, "vv": 96, "underli": 96, "batch_siz": 96, "integrated_0": 96, "technolog": 97, "brilliant": 97, "3rd": 97, "tandem": 97, "microfocu": 97, "optic": 97, "brought": 97, "fel": 97, "nano": 97, "tantalis": 97, "prospect": 97, "era": 97, "concomit": 97, "methodologi": 97, "shutterless": 97, "utilis": 97, "techniqu": 97, "gpu": 97, "comprehens": 97, "wp6": 97, "forum": 97, "technic": 97, "survei": 97, "scene": 97, "emphasi": 97, "formal": 97, "todai": 97, "learnt": 97, "trek": 97, "adventur": 97, "wolfgang": 97, "retrospect": 97, "kai": 97, "beaten": 97, "miniut": 97, "tom": 97, "crystfel": 97, "anastassi": 97, "tasso": 97, "perraki": 97, "tbc": 97, "frank": 97, "vondelft": 97, "nick": 97, "individualist": 97, "bullet": 97, "wast": 97, "1976": 97, "loe": 97, "kroon": 97, "batenburg": 97, "eval": 97, "mrc": 98, "dai": 98, "parametr": 98, "12th": 99, "13th": 99, "june": 99, "committe": 99, "juli": 99, "boston": 99, "februari": 99, "22nd": 99, "attende": 99, "4a": 99, "septemb": 99, "4b": 99, "octob": 99, "novemb": 99, "g484c773cc": [], "8905": [], "4228": [], "8486": [], "betalactamase_sum": 86, "11207": 86, "95684": [86, 87], "00103": 86, "03025": 86, "0007586": 86, "02982": 86, "0008083": 86, "08143": 86, "046337": [86, 87], "048039": [86, 87], "046274": [86, 87], "047964": [86, 87], "046255": [86, 87], "047941": [86, 87], "10472": [86, 87], "046259": [86, 87], "047928": [86, 87], "046263": [86, 87], "047924": [86, 87], "26897": 86, "27863": 86, "03433": 86, "0006215": 86, "03495": 86, "53e": 86, "781e": 86, "08362": 86, "11457": 86, "95432": 86, "000379": 86, "03149": 86, "0003546": 86, "365e": 86, "08057": 86, "04602": 86, "047837": 86, "043154": 86, "040661": 86, "041158": 86, "039695": 86, "040613": 86, "039489": 86, "040498": 86, "03948": 86, "10226": 86, "040475": 86, "039476": 86, "040471": 86, "10214": 86, "040469": 86, "23529": 86, "22951": 86, "20427": 86, "000831161": 86, "00556579": 86, "011931": 86, "00567871": 86, "00945197": 86, "11833": 86, "95431": 86, "12568": 86, "95430": 86, "26302": 86, "23887": 86, "22476": 86, "26211": 86, "23877": 86, "22401": 86, "3128": 86, "3264": 86, "4289": 86, "3867": 86, "2445": 86, "2685": 86, "2945": 86, "2378": 86, "2865": [84, 86], "2987": 86, "3815": 86, "2984": 86, "3537": 86, "3674": 86, "2244": 86, "2703": 86, "3028": 86, "3618": 86, "3680": 86, "4369": 86, "2171": 86, "2648": 86, "3748": 86, "3742": 86, "4441": 86, "3905": 86, "2159": 86, "2640": 86, "3174": 86, "3785": 86, "3280": 86, "4450": 86, "3926": 86, "2130": 86, "2602": 86, "3234": 86, "3826": 86, "3262": 86, "3717": 86, "2134": 86, "2575": 86, "3210": 86, "3660": 86, "2573": 86, "2552": 86, "3103": 86, "2802": 86, "3446": 86, "4079": 86, "3669": 86, "2638": 86, "3241": [40, 84, 86], "2949": 86, "3402": 86, "3714": 86, "2269": 86, "3013": 86, "4060": 86, "3701": 86, "2191": 86, "2355": 86, "2710": 86, "3361": 86, "3042": 86, "3323": 86, "3646": 86, "2504": 86, "3480": 86, "3152": 86, "3359": 86, "4073": 86, "2468": 86, "2223": 86, "3551": 86, "3204": 86, "3389": 86, "4100": 86, "3711": 86, "2890": 86, "3580": 86, "3343": 86, "4063": 86, "3678": 86, "3420": 86, "2782": 86, "3467": 86, "2211": 86, "3171": 86, "21338": 86, "21959": 86, "95699": 86, "54359": 86, "313907": 86, "325384": 86, "42882": 86, "41622": 86, "327077": 86, "312214": 86, "155114": [], "150962": [], "150234": [], "327039": 86, "325380": 86, "325074": 86, "50270": 86, "49246": 86, "2242": 86, "1753": 86, "0494": 86, "98356": 86, "88594": 86, "83668": 86, "83299": 86, "8151": 86, "81007": 86, "80047": 86, "79677": 86, "7962": 86, "79545": 86, "79528": 86, "79502": 86, "79494": 86, "79482": 86, "79473": 86, "99893": 86, "06694": 86, "06024": 86, "06016": 86, "99889": 86, "50240": 86, "70559": 86, "03884": 86, "9938": 86, "2076": 86, "5976": 86, "9783": 86, "14804": 86, "20596": 86, "12908": 86, "50245": 86, "0416": 86, "67891": 86, "5582": [], "324980": 86, "325190": 86, "7035": [], "2037": [], "g0ab5c7d9a": [], "4001": [], "0852": [], "9381": [], "0737": [], "g71877ce00": [], "4322": [], "0910": [], "6887": [], "g7cbc05313": [], "3065": [], "7174": [], "8773": [], "ge9cce9605": [], "exclude_images_multipl": [47, 54, 63, 66, 69, 72], "shorthand": [47, 54, 63, 69, 72], "cred": [47, 54, 63, 66, 69, 72], "20th": [47, 54, 63, 66, 69, 72], "1443": [], "8655": [], "4901": [], "5033": [], "mosaicity_max_limit": [41, 51, 54, 58], "1044": [], "g103ed65a1": [], "4237": [], "0123": [], "5488": [], "5110": [], "max_cell_volume_change_fract": [41, 51, 54, 58], "8530": [], "0498": [], "3069": [], "4405": [], "0162": [], "7397": [], "2753": [], "2279": [], "unindexed_reflect": 11, "median_unit_cel": [18, 19], "change_of_basis_op_to_best_cel": [18, 19], "best_subgroup": 18, "make_scan_from_properti": 29, "log_summari": [32, 33], "gemmi": 33, "148799": [40, 84], "7478": [40, 84], "8545": [40, 84], "5975": [40, 84], "9222": [40, 84], "8896": [40, 84], "8325": [40, 84], "g2e18ef586": [], "0042": [40, 84], "8e": [40, 84], "4023": 82, "16949": 82, "002058": 82, "0001998": 82, "0656": 82, "069573": 82, "075491": 82, "058323": 82, "069797": 82, "05713": 82, "055477": 82, "053549": 82, "051594": 82, "058974": 82, "11424": 82, "050231": 82, "058126": 82, "049663": 82, "057788": 82, "10679": 82, "049507": 82, "10619": 82, "049393": 82, "049287": 82, "10617": 82, "049219": 82, "057685": 82, "10635": 82, "057687": 82, "28605": 82, "21271": 82, "00196911": 82, "00340589": 82, "000205118": 82, "00340611": 82, "00105738": 82, "765": 82, "58327e": 82, "4791": 82, "198714": 82, "329174": 82, "4812": 82, "1342": 82, "52200": 82, "2536": 82, "10252": 82, "15145": 82, "16140": 82, "6022": 82, "169055": 82, "24297": 82, "199395": 82, "176558": 82, "61803": 82, "51318": 82, "853": 82, "50628": 82, "176235": 82, "2493": 82, "174581": 82, "174532": 82, "15287": 82, "48772": 82, "49961": 82, "49195": 82, "86962": 82, "84699": 82, "68902": 82, "64811": 82, "61143": 82, "59561": 82, "55316": 82, "53633": 82, "53407": 82, "53263": 82, "53176": 82, "53061": 82, "52974": 82, "52887": 82, "52842": 82, "52804": 82, "52761": 82, "52734": 82, "52714": 82, "52701": 82, "52687": 82, "52596": 82, "52554": 82, "5247": 82, "52445": 82, "52397": 82, "52345": 82, "52311": 82, "52264": 82, "52191": 82, "52119": 82, "52074": 82, "52026": 82, "51956": 82, "51878": 82, "51862": 82, "51821": 82, "51811": 82, "51795": 82, "5179": 82, "99453": 82, "09768": 82, "99161": 82, "12619": 82, "99366": 82, "9945": 82, "09771": 82, "99429": 82, "09844": 82, "99298": 82, "11241": 82, "49935": 82, "58133": 82, "57988": 82, "57059": 82, "56975": 82, "56933": 82, "56899": 82, "56849": 82, "56838": 82, "56826": 82, "56809": 82, "56798": 82, "56787": 82, "56777": 82, "5677": 82, "56765": 82, "52354": 82, "05329": 82, "2425": 82, "3774": 82, "3045": 82, "49941": 82, "97255": 82, "96614": 82, "95999": 82, "95478": 82, "95249": 82, "95156": 82, "95093": 82, "95067": 82, "95064": 82, "49883": 82, "05341": 82, "2416": 82, "1755": 82, "848": 82, "3503": 82, "3773": 82, "2993": 82, "6346": [], "1524": 82, "15826": 82, "15548": 82, "16023": 82, "14920": 82, "15071": 82, "10702": 82, "821": 82, "174263": 82, "121474": 82, "6705": 82, "4777": 82, "34173": 82, "53976": 84, "79369": 84, "05853": 84, "1224": 84, "2920": 84, "99898": 84, "05535": 84, "9992": 84, "05406": 84, "05422": 84, "05395": 84, "99914": 84, "05721": 84, "0444": 84, "0439": 84, "75377": 84, "06501": 84, "10312": 84, "12311": 84, "21115": 84, "754": 84, "29054": 84, "31598": 84, "26252": 84, "16240": 84, "52645": 84, "0467": 84, "0448": 84, "75085": 84, "06528": 84, "10220": 84, "21137": 84, "31547": 84, "26167": 84, "16217": 84, "6989": [], "219144": 84, "216938": 84, "2350": 84, "99874": 84, "05703": 84, "0417": 84, "75074": 84, "06533": 84, "21128": 84, "29046": 84, "26174": 84, "0414": 84, "0412": 84, "75442": 84, "29035": 84, "31531": 84, "16236": 84, "2083": [], "20e": 84, "2024": 84, "5535": 84, "46307e": 86, "156242": 86, "151988": 86, "151254": 86, "warn_if_setting_unused_refinement_protocol_param": 11, "gfc4c37a26": [], "6427": [], "8076": [], "pinkindex": 11, "gevorkov": 11, "s2053273319015559": 11, "mono": [11, 53], "g245dd443d": [], "pink_index": 53, "max_refl": 53, "percent_bandwidth": 53, "bandwidth": 53, "rotogram_grid_point": 53, "voxel_grid_point": 53, "voxel": 53, "rotogram": 53, "min_lattic": 53, "6239": [], "5769": [], "9793": [], "tofspotfind": [16, 19], "tailor": 16, "1098": [], "gd2f8e5f5c": [], "9515": [], "1882": [], "8565": [], "2942": [], "6445": [], "1494": [], "0588": [], "gea4fc09a8": [40, 82, 84, 86], "7450": 82, "6759": 84, "1889": 84, "wavelength_rang": [21, 52]}, "objects": {"dials.algorithms": [[10, 0, 0, "-", "background"], [11, 0, 0, "-", "indexing"], [13, 0, 0, "-", "profile_model"], [15, 0, 0, "-", "scaling"], [18, 0, 0, "-", "symmetry"]], "dials.algorithms.background": [[10, 1, 1, "", "RadialAverage"], [10, 3, 1, "", "set_shoebox_background_value"]], "dials.algorithms.background.RadialAverage": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "add"], [10, 2, 1, "", "inv_d2"], [10, 2, 1, "", "mean"], [10, 2, 1, "", "weight"]], "dials.algorithms.indexing": [[11, 4, 1, "", "DialsIndexError"], [11, 4, 1, "", "DialsIndexRefineError"], [11, 0, 0, "-", "assign_indices"], [11, 0, 0, "-", "basis_vector_search"], [11, 0, 0, "-", "compare_orientation_matrices"], [11, 0, 0, "-", "indexer"], [11, 0, 0, "-", "lattice_search"], [11, 0, 0, "-", "max_cell"], [11, 0, 0, "-", "model_evaluation"], [11, 0, 0, "-", "nearest_neighbor"], [11, 0, 0, "-", "refinement"], [11, 0, 0, "-", "stills_indexer"], [11, 0, 0, "-", "symmetry"]], "dials.algorithms.indexing.assign_indices": [[11, 1, 1, "", "AssignIndicesGlobal"], [11, 1, 1, "", "AssignIndicesLocal"], [11, 1, 1, "", "AssignIndicesStrategy"]], "dials.algorithms.indexing.assign_indices.AssignIndicesGlobal": [[11, 2, 1, "", "__init__"]], "dials.algorithms.indexing.assign_indices.AssignIndicesLocal": [[11, 2, 1, "", "__init__"]], "dials.algorithms.indexing.assign_indices.AssignIndicesStrategy": [[11, 2, 1, "", "__init__"]], "dials.algorithms.indexing.basis_vector_search": [[11, 1, 1, "", "FFT1D"], [11, 1, 1, "", "FFT3D"], [11, 1, 1, "", "RealSpaceGridSearch"], [11, 1, 1, "", "Strategy"], [11, 0, 0, "-", "combinations"], [11, 0, 0, "-", "optimise"]], "dials.algorithms.indexing.basis_vector_search.FFT1D": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_basis_vectors"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.basis_vector_search.FFT3D": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_basis_vectors"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "compute_functional"], [11, 2, 1, "", "find_basis_vectors"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"], [11, 2, 1, "", "score_vectors"], [11, 6, 1, "", "search_directions"], [11, 6, 1, "", "search_vectors"]], "dials.algorithms.indexing.basis_vector_search.Strategy": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_basis_vectors"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.basis_vector_search.combinations": [[11, 3, 1, "", "candidate_orientation_matrices"], [11, 3, 1, "", "filter_known_symmetry"], [11, 3, 1, "", "filter_similar_orientations"]], "dials.algorithms.indexing.basis_vector_search.optimise": [[11, 1, 1, "", "BasisVectorMinimiser"], [11, 1, 1, "", "BasisVectorTarget"], [11, 3, 1, "", "optimise_basis_vectors"]], "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorMinimiser": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "compute_functional_and_gradients"]], "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "compute_functional"], [11, 2, 1, "", "compute_functional_and_gradients"]], "dials.algorithms.indexing.compare_orientation_matrices": [[11, 3, 1, "", "difference_rotation_matrix_axis_angle"], [11, 3, 1, "", "rotation_matrix_differences"]], "dials.algorithms.indexing.indexer": [[11, 1, 1, "", "Indexer"], [11, 3, 1, "", "apply_hkl_offset"]], "dials.algorithms.indexing.indexer.Indexer": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "export_as_json"], [11, 2, 1, "", "export_reflections"], [11, 2, 1, "", "find_lattices"], [11, 2, 1, "", "find_max_cell"], [11, 2, 1, "", "from_parameters"], [11, 2, 1, "", "index"], [11, 2, 1, "", "index_reflections"], [11, 2, 1, "", "refine"], [11, 2, 1, "", "setup_indexing"], [11, 2, 1, "", "show_experiments"]], "dials.algorithms.indexing.lattice_search": [[11, 1, 1, "", "LowResSpotMatch"], [11, 1, 1, "", "PinkIndexer"], [11, 1, 1, "", "Strategy"]], "dials.algorithms.indexing.lattice_search.LowResSpotMatch": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_crystal_models"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.lattice_search.PinkIndexer": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_crystal_models"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.lattice_search.Strategy": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_crystal_models"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.max_cell": [[11, 3, 1, "", "find_max_cell"]], "dials.algorithms.indexing.model_evaluation": [[11, 1, 1, "", "ModelEvaluation"], [11, 1, 1, "", "ModelRank"], [11, 1, 1, "", "ModelRankFilter"], [11, 1, 1, "", "ModelRankWeighted"], [11, 1, 1, "", "Result"], [11, 1, 1, "", "Strategy"], [11, 3, 1, "", "filter_doubled_cell"]], "dials.algorithms.indexing.model_evaluation.ModelEvaluation": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "evaluate"]], "dials.algorithms.indexing.model_evaluation.ModelRank": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "append"], [11, 2, 1, "", "best_model"], [11, 2, 1, "", "extend"]], "dials.algorithms.indexing.model_evaluation.ModelRankFilter": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "append"], [11, 2, 1, "", "best_model"], [11, 2, 1, "", "extend"], [11, 2, 1, "", "filter_by_likelihood"], [11, 2, 1, "", "filter_by_n_indexed"], [11, 2, 1, "", "filter_by_volume"], [11, 2, 1, "", "update_analysis"]], "dials.algorithms.indexing.model_evaluation.ModelRankWeighted": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "best_model"], [11, 2, 1, "", "combined_scores"], [11, 2, 1, "", "score_by_fraction_indexed"], [11, 2, 1, "", "score_by_rmsd_xy"], [11, 2, 1, "", "score_by_volume"]], "dials.algorithms.indexing.model_evaluation.Result": [[11, 5, 1, "", "crystal"], [11, 5, 1, "", "fraction_indexed"], [11, 5, 1, "", "hkl_offset"], [11, 5, 1, "", "model_likelihood"], [11, 5, 1, "", "n_indexed"], [11, 5, 1, "", "rmsds"]], "dials.algorithms.indexing.model_evaluation.Strategy": [[11, 2, 1, "", "evaluate"]], "dials.algorithms.indexing.nearest_neighbor": [[11, 1, 1, "", "NeighborAnalysis"]], "dials.algorithms.indexing.nearest_neighbor.NeighborAnalysis": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "plot_histogram"]], "dials.algorithms.indexing.refinement": [[11, 3, 1, "", "refine"]], "dials.algorithms.indexing.stills_indexer": [[11, 1, 1, "", "StillsIndexer"], [11, 1, 1, "", "StillsIndexerBasisVectorSearch"], [11, 1, 1, "", "StillsIndexerKnownOrientation"], [11, 1, 1, "", "StillsIndexerLatticeSearch"], [11, 3, 1, "", "calc_2D_rmsd_and_displacements"], [11, 3, 1, "", "e_refine"], [11, 3, 1, "", "plot_displacements"]], "dials.algorithms.indexing.stills_indexer.StillsIndexer": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "choose_best_orientation_matrix"], [11, 2, 1, "", "experiment_list_for_crystal"], [11, 2, 1, "", "identify_outliers"], [11, 2, 1, "", "index"], [11, 2, 1, "", "refine"], [11, 2, 1, "", "warn_if_setting_unused_refinement_protocol_params"]], "dials.algorithms.indexing.symmetry": [[11, 1, 1, "", "SymmetryHandler"], [11, 3, 1, "", "calc_acentric_subgroups"], [11, 3, 1, "", "find_matching_symmetry"], [11, 3, 1, "", "groups_cache"], [11, 3, 1, "", "metric_supergroup"]], "dials.algorithms.indexing.symmetry.SymmetryHandler": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "apply_symmetry"]], "dials.algorithms.integration": [[12, 0, 0, "-", "integrator"]], "dials.algorithms.integration.integrator": [[12, 1, 1, "", "Executor"], [12, 1, 1, "", "Integrator"], [12, 1, 1, "", "Integrator2D"], [12, 1, 1, "", "Integrator3D"], [12, 1, 1, "", "Integrator3DThreaded"], [12, 1, 1, "", "IntegratorExecutor"], [12, 1, 1, "", "IntegratorFlat3D"], [12, 1, 1, "", "IntegratorSingle2D"], [12, 1, 1, "", "IntegratorStills"], [12, 1, 1, "", "JobList"], [12, 1, 1, "", "Parameters"], [12, 1, 1, "", "Processor2D"], [12, 1, 1, "", "Processor3D"], [12, 1, 1, "", "ProcessorFlat3D"], [12, 1, 1, "", "ProcessorSingle2D"], [12, 1, 1, "", "ProcessorStills"], [12, 1, 1, "", "ProfileModellerExecutor"], [12, 1, 1, "", "ProfileValidatorExecutor"], [12, 1, 1, "", "ReflectionManager"], [12, 3, 1, "", "frame_hist"], [12, 3, 1, "", "generate_phil_scope"], [12, 3, 1, "", "hist"], [12, 3, 1, "", "nframes_hist"]], "dials.algorithms.integration.integrator.Executor": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "process"]], "dials.algorithms.integration.integrator.Integrator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "fit_profiles"], [12, 2, 1, "", "integrate"], [12, 2, 1, "", "report"], [12, 2, 1, "", "summary"]], "dials.algorithms.integration.integrator.Integrator2D": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.Integrator3D": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.Integrator3DThreaded": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "finalise"], [12, 2, 1, "", "initialise"], [12, 2, 1, "", "integrate"], [12, 2, 1, "", "report"], [12, 2, 1, "", "summary"]], "dials.algorithms.integration.integrator.IntegratorExecutor": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "data"], [12, 2, 1, "", "finalize"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "process"]], "dials.algorithms.integration.integrator.IntegratorFlat3D": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.IntegratorSingle2D": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.IntegratorStills": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.JobList": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "add"], [12, 2, 1, "", "shoebox_memory"], [12, 2, 1, "", "split"]], "dials.algorithms.integration.integrator.Parameters": [[12, 1, 1, "", "Filter"], [12, 1, 1, "", "Profile"], [12, 2, 1, "", "__init__"], [12, 2, 1, "", "from_phil"]], "dials.algorithms.integration.integrator.Parameters.Filter": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.Parameters.Profile": [[12, 1, 1, "", "Validation"], [12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.Parameters.Profile.Validation": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.Processor2D": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.Processor3D": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.ProcessorFlat3D": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.ProcessorSingle2D": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.ProcessorStills": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.ProfileModellerExecutor": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "data"], [12, 2, 1, "", "finalize"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "process"]], "dials.algorithms.integration.integrator.ProfileValidatorExecutor": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "data"], [12, 2, 1, "", "finalize"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "process"]], "dials.algorithms.integration.integrator.ReflectionManager": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "accumulate"], [12, 2, 1, "", "data"], [12, 2, 1, "", "finished"], [12, 2, 1, "", "job"], [12, 2, 1, "", "num_reflections"], [12, 2, 1, "", "split"]], "dials.algorithms.refinement": [[14, 0, 0, "-", "engine"], [14, 0, 0, "-", "refiner"], [14, 0, 0, "-", "reflection_manager"], [14, 0, 0, "-", "target"], [14, 0, 0, "-", "target_stills"], [14, 0, 0, "-", "weighting_strategies"]], "dials.algorithms.refinement.engine": [[14, 1, 1, "", "AdaptLbfgs"], [14, 1, 1, "", "AdaptLstbx"], [14, 1, 1, "", "DisableMPmixin"], [14, 1, 1, "", "GaussNewtonIterations"], [14, 1, 1, "", "Journal"], [14, 1, 1, "", "LBFGScurvs"], [14, 1, 1, "", "LevenbergMarquardtIterations"], [14, 1, 1, "", "Refinery"], [14, 1, 1, "", "SimpleLBFGS"]], "dials.algorithms.refinement.engine.AdaptLbfgs": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "callback_after_step"], [14, 2, 1, "", "compute_functional_and_gradients"], [14, 2, 1, "", "compute_functional_gradients_and_curvatures"], [14, 2, 1, "", "run_lbfgs"]], "dials.algorithms.refinement.engine.AdaptLstbx": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "build_up"], [14, 2, 1, "", "calculate_esds"], [14, 2, 1, "", "parameter_vector_norm"], [14, 2, 1, "", "restart"], [14, 2, 1, "", "set_cholesky_factor"], [14, 2, 1, "", "step_backward"], [14, 2, 1, "", "step_forward"]], "dials.algorithms.refinement.engine.DisableMPmixin": [[14, 2, 1, "", "set_nproc"]], "dials.algorithms.refinement.engine.GaussNewtonIterations": [[14, 2, 1, "", "__init__"], [14, 5, 1, "", "convergence_as_shift_over_esd"], [14, 5, 1, "", "damping_value"], [14, 5, 1, "", "gradient_threshold"], [14, 5, 1, "", "max_shift_over_esd"], [14, 2, 1, "", "run"], [14, 5, 1, "", "step_threshold"]], "dials.algorithms.refinement.engine.Journal": [[14, 2, 1, "", "add_column"], [14, 2, 1, "", "add_row"], [14, 2, 1, "", "del_last_row"], [14, 2, 1, "", "from_json_file"], [14, 2, 1, "", "get_nrows"], [14, 5, 1, "", "reason_for_termination"], [14, 2, 1, "", "set_last_cell"], [14, 2, 1, "", "to_json_file"]], "dials.algorithms.refinement.engine.LBFGScurvs": [[14, 2, 1, "", "compute_functional_gradients_diag"], [14, 2, 1, "", "run"]], "dials.algorithms.refinement.engine.LevenbergMarquardtIterations": [[14, 2, 1, "", "add_constant_to_diagonal"], [14, 6, 1, "", "mu"], [14, 2, 1, "", "report_progress"], [14, 2, 1, "", "run"], [14, 2, 1, "", "setup_mu"], [14, 5, 1, "", "tau"]], "dials.algorithms.refinement.engine.Refinery": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "get_correlation_matrix_for_step"], [14, 2, 1, "", "get_num_steps"], [14, 2, 1, "", "jacobian_condition_number"], [14, 2, 1, "", "prepare_for_step"], [14, 2, 1, "", "run"], [14, 2, 1, "", "set_nproc"], [14, 2, 1, "", "split_jacobian_into_blocks"], [14, 2, 1, "", "test_for_termination"], [14, 2, 1, "", "test_objective_increasing_but_not_nref"], [14, 2, 1, "", "test_rmsd_convergence"], [14, 2, 1, "", "update_journal"]], "dials.algorithms.refinement.engine.SimpleLBFGS": [[14, 2, 1, "", "run"]], "dials.algorithms.refinement.refiner": [[14, 1, 1, "", "Refiner"], [14, 1, 1, "", "RefinerFactory"], [14, 1, 1, "", "ScanVaryingRefiner"]], "dials.algorithms.refinement.refiner.Refiner": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "calc_exp_rmsd_table"], [14, 2, 1, "", "get_experiments"], [14, 2, 1, "", "get_free_reflections"], [14, 2, 1, "", "get_matches"], [14, 2, 1, "", "get_param_reporter"], [14, 2, 1, "", "get_parameter_correlation_matrix"], [14, 6, 1, "", "history"], [14, 2, 1, "", "predict_for_indexed"], [14, 2, 1, "", "predict_for_reflection_table"], [14, 2, 1, "", "print_exp_rmsd_table"], [14, 2, 1, "", "print_out_of_sample_rmsd_table"], [14, 2, 1, "", "print_panel_rmsd_table"], [14, 2, 1, "", "print_step_table"], [14, 2, 1, "", "rmsds"], [14, 2, 1, "", "rmsds_for_reflection_table"], [14, 2, 1, "", "run"], [14, 2, 1, "", "selection_used_for_refinement"]], "dials.algorithms.refinement.refiner.RefinerFactory": [[14, 2, 1, "", "config_refinery"], [14, 2, 1, "", "config_restraints"], [14, 2, 1, "", "config_sparse"], [14, 2, 1, "", "config_target"], [14, 2, 1, "", "from_parameters_data_experiments"], [14, 2, 1, "", "reflections_after_outlier_rejection"]], "dials.algorithms.refinement.reflection_manager": [[14, 1, 1, "", "BlockCalculator"], [14, 1, 1, "", "ReflectionManager"], [14, 1, 1, "", "ReflectionManagerFactory"], [14, 1, 1, "", "StillsReflectionManager"]], "dials.algorithms.refinement.reflection_manager.BlockCalculator": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "per_image"], [14, 2, 1, "", "per_width"]], "dials.algorithms.refinement.reflection_manager.ReflectionManager": [[14, 2, 1, "", "__init__"], [14, 5, 1, "", "experiment_type"], [14, 2, 1, "", "filter_obs"], [14, 2, 1, "", "finalise"], [14, 2, 1, "", "get_accepted_refs_size"], [14, 2, 1, "", "get_centroid_analyser"], [14, 2, 1, "", "get_free_reflections"], [14, 2, 1, "", "get_indexed"], [14, 2, 1, "", "get_matches"], [14, 2, 1, "", "get_obs"], [14, 2, 1, "", "get_sample_size"], [14, 2, 1, "", "print_stats_on_matches"], [14, 2, 1, "", "reset_accepted_reflections"]], "dials.algorithms.refinement.reflection_manager.ReflectionManagerFactory": [[14, 2, 1, "", "from_parameters_reflections_experiments"]], "dials.algorithms.refinement.reflection_manager.StillsReflectionManager": [[14, 5, 1, "", "experiment_type"], [14, 2, 1, "", "print_stats_on_matches"]], "dials.algorithms.refinement.target": [[14, 1, 1, "", "LeastSquaresPositionalResidualWithRmsdCutoff"], [14, 1, 1, "", "LeastSquaresPositionalResidualWithRmsdCutoffSparse"], [14, 1, 1, "", "SparseGradientsMixin"], [14, 1, 1, "", "Target"], [14, 1, 1, "", "TargetFactory"]], "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoff": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "achieved"]], "dials.algorithms.refinement.target.Target": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "achieved"], [14, 2, 1, "", "calculate_gradients"], [14, 2, 1, "", "compute_functional_gradients_and_curvatures"], [14, 2, 1, "", "compute_residuals"], [14, 2, 1, "", "compute_residuals_and_gradients"], [14, 2, 1, "", "compute_restraints_functional_gradients_and_curvatures"], [14, 2, 1, "", "compute_restraints_residuals_and_gradients"], [14, 6, 1, "", "dim"], [14, 2, 1, "", "get_num_matches"], [14, 2, 1, "", "get_num_matches_for_experiment"], [14, 2, 1, "", "get_num_matches_for_panel"], [14, 2, 1, "", "predict"], [14, 2, 1, "", "predict_for_free_reflections"], [14, 2, 1, "", "predict_for_reflection_table"], [14, 5, 1, "", "rmsd_names"], [14, 5, 1, "", "rmsd_units"], [14, 2, 1, "", "rmsds"], [14, 2, 1, "", "rmsds_for_experiment"], [14, 2, 1, "", "rmsds_for_panel"], [14, 2, 1, "", "rmsds_for_reflection_table"], [14, 2, 1, "", "split_matches_into_blocks"], [14, 2, 1, "", "update_matches"]], "dials.algorithms.refinement.target.TargetFactory": [[14, 2, 1, "", "from_parameters_and_experiments"]], "dials.algorithms.refinement.target_stills": [[14, 1, 1, "", "LeastSquaresStillsResidualWithRmsdCutoff"], [14, 1, 1, "", "LeastSquaresStillsResidualWithRmsdCutoffSparse"]], "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "achieved"], [14, 2, 1, "", "predict_for_reflection_table"], [14, 5, 1, "", "rmsd_names"], [14, 5, 1, "", "rmsd_units"]], "dials.algorithms.refinement.weighting_strategies": [[14, 1, 1, "", "ConstantWeightingStrategy"], [14, 1, 1, "", "ExternalDelPsiWeightingStrategy"], [14, 1, 1, "", "StatisticalWeightingStrategy"], [14, 1, 1, "", "StillsWeightingStrategy"]], "dials.algorithms.refinement.weighting_strategies.ConstantWeightingStrategy": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "calculate_weights"]], "dials.algorithms.refinement.weighting_strategies.ExternalDelPsiWeightingStrategy": [[14, 2, 1, "", "calculate_weights"]], "dials.algorithms.refinement.weighting_strategies.StatisticalWeightingStrategy": [[14, 2, 1, "", "calculate_weights"]], "dials.algorithms.refinement.weighting_strategies.StillsWeightingStrategy": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "calculate_weights"]], "dials.algorithms.scaling.model": [[15, 0, 0, "-", "model"]], "dials.algorithms.scaling.model.model": [[15, 1, 1, "", "ArrayScalingModel"], [15, 1, 1, "", "DoseDecay"], [15, 1, 1, "", "KBScalingModel"], [15, 1, 1, "", "PhysicalScalingModel"], [15, 1, 1, "", "ScalingModelBase"], [15, 3, 1, "", "calc_n_param_from_bins"], [15, 3, 1, "", "calculate_new_offset"], [15, 3, 1, "", "determine_auto_absorption_params"], [15, 3, 1, "", "initialise_smooth_input"], [15, 3, 1, "", "make_combined_plots"], [15, 3, 1, "", "plot_scaling_models"]], "dials.algorithms.scaling.model.model.ArrayScalingModel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "configure_components"], [15, 6, 1, "", "consecutive_refinement_order"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 5, 1, "", "id_"], [15, 2, 1, "", "limit_image_range"], [15, 5, 1, "", "phil_scope"], [15, 2, 1, "", "plot_model_components"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling.model.model.DoseDecay": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "configure_components"], [15, 6, 1, "", "consecutive_refinement_order"], [15, 2, 1, "", "fix_initial_parameter"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "get_shared_components"], [15, 5, 1, "", "id_"], [15, 2, 1, "", "limit_image_range"], [15, 5, 1, "", "phil_scope"], [15, 2, 1, "", "plot_model_components"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling.model.model.KBScalingModel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "configure_components"], [15, 6, 1, "", "consecutive_refinement_order"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 5, 1, "", "id_"], [15, 5, 1, "", "phil_scope"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling.model.model.PhysicalScalingModel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "configure_components"], [15, 6, 1, "", "consecutive_refinement_order"], [15, 2, 1, "", "fix_initial_parameter"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "get_shared_components"], [15, 5, 1, "", "id_"], [15, 2, 1, "", "limit_image_range"], [15, 5, 1, "", "phil_scope"], [15, 2, 1, "", "plot_model_components"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling.model.model.ScalingModelBase": [[15, 2, 1, "", "__init__"], [15, 6, 1, "", "components"], [15, 6, 1, "", "configdict"], [15, 2, 1, "", "configure_components"], [15, 2, 1, "", "consecutive_refinement_order"], [15, 6, 1, "", "error_model"], [15, 2, 1, "", "fix_initial_parameter"], [15, 6, 1, "", "fixed_components"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "get_shared_components"], [15, 5, 1, "", "id_"], [15, 6, 1, "", "is_scaled"], [15, 2, 1, "", "limit_image_range"], [15, 2, 1, "", "load_error_model"], [15, 6, 1, "", "n_params"], [15, 2, 1, "", "plot_model_components"], [15, 2, 1, "", "record_intensity_combination_Imid"], [15, 2, 1, "", "set_error_model"], [15, 2, 1, "", "set_scaling_model_as_scaled"], [15, 2, 1, "", "set_scaling_model_as_unscaled"], [15, 2, 1, "", "set_valid_image_range"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling": [[15, 0, 0, "-", "outlier_rejection"]], "dials.algorithms.scaling.outlier_rejection": [[15, 1, 1, "", "NormDevOutlierRejection"], [15, 1, 1, "", "OutlierRejectionBase"], [15, 1, 1, "", "SimpleNormDevOutlierRejection"], [15, 1, 1, "", "TargetedOutlierRejection"], [15, 3, 1, "", "determine_Esq_outlier_index_arrays"], [15, 3, 1, "", "determine_outlier_index_arrays"], [15, 3, 1, "", "reject_outliers"]], "dials.algorithms.scaling.outlier_rejection.NormDevOutlierRejection": [[15, 2, 1, "", "__init__"]], "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase": [[15, 2, 1, "", "__init__"], [15, 5, 1, "", "final_outlier_arrays"], [15, 2, 1, "", "run"]], "dials.algorithms.scaling.outlier_rejection.SimpleNormDevOutlierRejection": [[15, 2, 1, "", "__init__"]], "dials.algorithms.scaling.outlier_rejection.TargetedOutlierRejection": [[15, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding": [[16, 0, 0, "-", "factory"], [16, 0, 0, "-", "finder"]], "dials.algorithms.spot_finding.factory": [[16, 1, 1, "", "BackgroundGradientFilter"], [16, 1, 1, "", "FilterRunner"], [16, 1, 1, "", "PeakCentroidDistanceFilter"], [16, 1, 1, "", "SpotDensityFilter"], [16, 1, 1, "", "SpotFinderFactory"], [16, 3, 1, "", "generate_phil_scope"]], "dials.algorithms.spot_finding.factory.BackgroundGradientFilter": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "run"]], "dials.algorithms.spot_finding.factory.FilterRunner": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "check_flags"]], "dials.algorithms.spot_finding.factory.PeakCentroidDistanceFilter": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "run"]], "dials.algorithms.spot_finding.factory.SpotDensityFilter": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "run"]], "dials.algorithms.spot_finding.factory.SpotFinderFactory": [[16, 2, 1, "", "configure_filter"], [16, 2, 1, "", "configure_threshold"], [16, 2, 1, "", "from_parameters"], [16, 2, 1, "", "load_image"]], "dials.algorithms.spot_finding.finder": [[16, 1, 1, "", "ExtractPixelsFromImage"], [16, 1, 1, "", "ExtractPixelsFromImage2DNoShoeboxes"], [16, 1, 1, "", "ExtractSpots"], [16, 1, 1, "", "ExtractSpotsParallelTask"], [16, 1, 1, "", "SpotFinder"], [16, 1, 1, "", "TOFSpotFinder"], [16, 3, 1, "", "pixel_list_to_reflection_table"], [16, 3, 1, "", "pixel_list_to_shoeboxes"], [16, 3, 1, "", "shoeboxes_to_reflection_table"]], "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage2DNoShoeboxes": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding.finder.ExtractSpots": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding.finder.ExtractSpotsParallelTask": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding.finder.SpotFinder": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "find_spots"]], "dials.algorithms.spot_finding.finder.TOFSpotFinder": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_prediction": [[17, 0, 0, "-", "reflection_predictor"]], "dials.algorithms.spot_prediction.reflection_predictor": [[17, 1, 1, "", "ReflectionPredictor"]], "dials.algorithms.spot_prediction.reflection_predictor.ReflectionPredictor": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "predictor"]], "dials.algorithms.symmetry": [[18, 0, 0, "-", "cosym"], [18, 0, 0, "-", "laue_group"], [18, 3, 1, "", "median_unit_cell"], [18, 0, 0, "-", "reindex_to_reference"], [18, 3, 1, "", "resolution_filter_from_array"], [18, 3, 1, "", "resolution_filter_from_reflections_experiments"], [18, 1, 1, "", "symmetry_base"]], "dials.algorithms.symmetry.cosym": [[18, 1, 1, "", "CosymAnalysis"], [18, 1, 1, "", "ScoreSubGroup"], [18, 1, 1, "", "ScoreSymmetryElement"], [18, 1, 1, "", "SymmetryAnalysis"], [18, 3, 1, "", "change_of_basis_op_to_best_cell"], [18, 0, 0, "-", "engine"], [18, 3, 1, "", "extract_reference_intensities"], [18, 0, 0, "-", "target"]], "dials.algorithms.symmetry.cosym.CosymAnalysis": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 2, 1, "", "as_json"], [18, 2, 1, "", "run"]], "dials.algorithms.symmetry.cosym.ScoreSubGroup": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 6, 1, "", "stars"]], "dials.algorithms.symmetry.cosym.ScoreSymmetryElement": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 6, 1, "", "stars"]], "dials.algorithms.symmetry.cosym.SymmetryAnalysis": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 2, 1, "", "subgroups_table"], [18, 2, 1, "", "summary_table"], [18, 2, 1, "", "sym_ops_table"]], "dials.algorithms.symmetry.cosym.engine": [[18, 1, 1, "", "lbfgs_with_curvs"], [18, 3, 1, "", "minimize_scipy"], [18, 3, 1, "", "minimize_scitbx_lbfgs"]], "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "callback_after_step"], [18, 2, 1, "", "compute_functional_and_gradients"], [18, 2, 1, "", "compute_functional_gradients_and_curvatures"], [18, 2, 1, "", "compute_functional_gradients_diag"]], "dials.algorithms.symmetry.cosym.target": [[18, 1, 1, "", "Target"]], "dials.algorithms.symmetry.cosym.target.Target": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "compute_functional"], [18, 2, 1, "", "compute_gradients"], [18, 2, 1, "", "compute_gradients_fd"], [18, 2, 1, "", "curvatures"], [18, 2, 1, "", "curvatures_fd"], [18, 5, 1, "", "dim"], [18, 2, 1, "", "set_dimensions"]], "dials.algorithms.symmetry.laue_group": [[18, 1, 1, "", "CorrelationCoefficientAccumulator"], [18, 1, 1, "", "LaueGroupAnalysis"], [18, 1, 1, "", "ScoreCorrelationCoefficient"], [18, 1, 1, "", "ScoreSubGroup"], [18, 1, 1, "", "ScoreSymmetryElement"], [18, 3, 1, "", "trunccauchy_pdf"]], "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "accumulate"], [18, 2, 1, "", "coefficient"], [18, 2, 1, "", "denominator"], [18, 2, 1, "", "n"], [18, 2, 1, "", "numerator"]], "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 2, 1, "", "as_json"]], "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient": [[18, 2, 1, "", "__init__"], [18, 6, 1, "", "p_cc_given_not_s"], [18, 6, 1, "", "p_cc_given_s"], [18, 6, 1, "", "p_s_given_cc"]], "dials.algorithms.symmetry.laue_group.ScoreSubGroup": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"]], "dials.algorithms.symmetry.laue_group.ScoreSymmetryElement": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"]], "dials.algorithms.symmetry.reindex_to_reference": [[18, 3, 1, "", "determine_reindex_operator_against_reference"]], "dials.algorithms.symmetry.symmetry_base": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "kernel_normalisation"], [18, 2, 1, "", "ml_aniso_normalisation"], [18, 2, 1, "", "ml_iso_normalisation"]], "dials.array_family": [[20, 0, 0, "-", "flex"]], "dials.extensions": [[31, 0, 0, "-", "dispersion_spotfinder_threshold_ext"], [31, 0, 0, "-", "gaussian_rs_profile_model_ext"], [31, 0, 0, "-", "null_background_ext"], [31, 0, 0, "-", "simple_background_ext"], [31, 0, 0, "-", "simple_centroid_ext"]], "dials.extensions.dispersion_spotfinder_threshold_ext": [[31, 1, 1, "", "DispersionSpotFinderThresholdExt"], [31, 3, 1, "", "estimate_global_threshold"]], "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "compute_threshold"], [31, 5, 1, "", "name"], [31, 2, 1, "", "phil"]], "dials.extensions.gaussian_rs_profile_model_ext": [[31, 1, 1, "", "GaussianRSProfileModelExt"]], "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt": [[31, 2, 1, "", "algorithm"], [31, 5, 1, "", "default"], [31, 2, 1, "", "from_dict"], [31, 5, 1, "", "name"], [31, 2, 1, "", "phil"]], "dials.extensions.null_background_ext": [[31, 1, 1, "", "NullBackgroundExt"]], "dials.extensions.null_background_ext.NullBackgroundExt": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "compute_background"], [31, 5, 1, "", "name"]], "dials.extensions.simple_background_ext": [[31, 1, 1, "", "SimpleBackgroundExt"]], "dials.extensions.simple_background_ext.SimpleBackgroundExt": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "compute_background"], [31, 5, 1, "", "name"], [31, 2, 1, "", "phil"]], "dials.extensions.simple_centroid_ext": [[31, 1, 1, "", "SimpleCentroidExt"]], "dials.extensions.simple_centroid_ext.SimpleCentroidExt": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "compute_centroid"], [31, 5, 1, "", "default"], [31, 5, 1, "", "name"]], "dials.util": [[33, 0, 0, "-", "command_line"], [33, 0, 0, "-", "export_mtz"], [33, 0, 0, "-", "export_text"], [33, 0, 0, "-", "image"], [33, 0, 0, "-", "installer"], [33, 0, 0, "-", "ioutil"], [33, 0, 0, "-", "nexus"], [33, 0, 0, "-", "options"]], "dials.util.command_line": [[33, 1, 1, "", "Command"], [33, 1, 1, "", "ProgressBar"], [33, 1, 1, "", "ProgressBarTimer"], [33, 3, 1, "", "coloured"], [33, 3, 1, "", "heading"]], "dials.util.command_line.Command": [[33, 2, 1, "", "end"], [33, 5, 1, "", "indent"], [33, 5, 1, "", "max_length"], [33, 5, 1, "", "print_time"], [33, 2, 1, "", "start"]], "dials.util.command_line.ProgressBar": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "finished"], [33, 2, 1, "", "update"]], "dials.util.command_line.ProgressBarTimer": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "get_elapsed_time"], [33, 2, 1, "", "update"]], "dials.util.export_mtz": [[33, 1, 1, "", "MADMergedMTZWriter"], [33, 1, 1, "", "MTZWriterBase"], [33, 1, 1, "", "MergedMTZWriter"], [33, 1, 1, "", "WavelengthGroup"], [33, 3, 1, "", "add_batch_list"], [33, 3, 1, "", "convert_to_cambridge"], [33, 3, 1, "", "export_mtz"], [33, 3, 1, "", "log_summary"], [33, 3, 1, "", "match_wavelengths"], [33, 3, 1, "", "rotate_crystal"], [33, 3, 1, "", "write_columns"]], "dials.util.export_mtz.MADMergedMTZWriter": [[33, 2, 1, "", "add_dataset"]], "dials.util.export_mtz.MTZWriterBase": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "add_crystal"], [33, 2, 1, "", "add_empty_dataset"]], "dials.util.export_mtz.MergedMTZWriter": [[33, 2, 1, "", "add_dataset"]], "dials.util.export_mtz.WavelengthGroup": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "add_experiment"], [33, 2, 1, "", "calculate_weighted_mean"], [33, 5, 1, "", "exp_nos"], [33, 5, 1, "", "identifiers"], [33, 5, 1, "", "max_possible_wl"], [33, 5, 1, "", "min_wl"], [33, 5, 1, "", "wavelengths"], [33, 5, 1, "", "weighted_mean"]], "dials.util.export_text": [[33, 3, 1, "", "export_text"]], "dials.util.image": [[33, 1, 1, "", "reader"]], "dials.util.image.reader": [[33, 2, 1, "", "get_data"], [33, 2, 1, "", "read_file"]], "dials.util.installer": [[33, 1, 1, "", "installer"]], "dials.util.installer.installer": [[33, 5, 1, "", "base_package_options"], [33, 5, 1, "", "configure_modules"], [33, 5, 1, "", "dest_dir_prefix"], [33, 5, 1, "", "include_gui_packages"], [33, 5, 1, "", "installer_dir"], [33, 5, 1, "", "make_apps"], [33, 5, 1, "", "product_name"], [33, 2, 1, "", "product_specific_finalize_install"], [33, 5, 1, "", "remove_sources_default"], [33, 5, 1, "", "source_packages"]], "dials.util.ioutil": [[33, 3, 1, "", "get_inverse_ub_matrix_from_xparm"], [33, 3, 1, "", "get_space_group_type_from_xparm"]], "dials.util.nexus": [[33, 3, 1, "", "dump"], [33, 3, 1, "", "get_entry"], [33, 3, 1, "", "load"]], "dials.util.options": [[33, 1, 1, "", "ArgumentHandlingErrorInfo"], [33, 1, 1, "", "ArgumentParser"], [33, 1, 1, "", "ArgumentParserBase"], [33, 1, 1, "", "Importer"], [33, 4, 1, "", "InvalidPhilError"], [33, 1, 1, "", "OptionParser"], [33, 1, 1, "", "PhilCommandParser"], [33, 3, 1, "", "flatten_experiments"], [33, 3, 1, "", "flatten_reflections"], [33, 3, 1, "", "reflections_and_experiments_from_files"]], "dials.util.options.ArgumentHandlingErrorInfo": [[33, 5, 1, "", "exception"], [33, 5, 1, "", "message"], [33, 5, 1, "", "name"], [33, 5, 1, "", "traceback"], [33, 5, 1, "", "type"], [33, 5, 1, "", "validation"]], "dials.util.options.ArgumentParser": [[33, 2, 1, "", "__init__"], [33, 6, 1, "", "diff_phil"], [33, 2, 1, "", "format_help"], [33, 2, 1, "", "parse_args"], [33, 6, 1, "", "phil"], [33, 6, 1, "", "system_phil"]], "dials.util.options.ArgumentParserBase": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "format_epilog"], [33, 2, 1, "", "parse_known_args"]], "dials.util.options.Importer": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "try_read_experiments"], [33, 2, 1, "", "try_read_experiments_from_images"], [33, 2, 1, "", "try_read_reflections"]], "dials.util.options.OptionParser": [[33, 2, 1, "", "__init__"]], "dials.util.options.PhilCommandParser": [[33, 2, 1, "", "__init__"], [33, 6, 1, "", "diff_phil"], [33, 2, 1, "", "parse_args"], [33, 6, 1, "", "phil"], [33, 6, 1, "", "system_phil"]], "dxtbx": [[26, 0, 0, "-", "imageset"]], "dxtbx.imageset": [[26, 1, 1, "", "ExternalLookup"], [26, 1, 1, "", "ExternalLookupItemBool"], [26, 1, 1, "", "ExternalLookupItemDouble"], [26, 1, 1, "", "ImageGrid"], [26, 1, 1, "", "ImageSequence"], [26, 1, 1, "", "ImageSet"], [26, 1, 1, "", "ImageSetData"], [26, 1, 1, "", "ImageSetFactory"], [26, 1, 1, "", "ImageSetLazy"], [26, 1, 1, "", "MemReader"]], "dxtbx.imageset.ExternalLookup": [[26, 2, 1, "", "__init__"], [26, 6, 1, "", "dx"], [26, 6, 1, "", "dy"], [26, 6, 1, "", "gain"], [26, 6, 1, "", "mask"], [26, 6, 1, "", "pedestal"]], "dxtbx.imageset.ExternalLookupItemBool": [[26, 2, 1, "", "__init__"], [26, 6, 1, "", "data"], [26, 6, 1, "", "filename"]], "dxtbx.imageset.ExternalLookupItemDouble": [[26, 2, 1, "", "__init__"], [26, 6, 1, "", "data"], [26, 6, 1, "", "filename"]], "dxtbx.imageset.ImageGrid": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "from_imageset"], [26, 2, 1, "", "get_grid_size"]], "dxtbx.imageset.ImageSequence": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "complete_set"], [26, 2, 1, "", "get_array_range"], [26, 2, 1, "", "get_beam"], [26, 2, 1, "", "get_detector"], [26, 2, 1, "", "get_goniometer"], [26, 2, 1, "", "get_scan"], [26, 2, 1, "", "get_template"], [26, 2, 1, "", "partial_set"], [26, 2, 1, "", "set_beam"], [26, 2, 1, "", "set_detector"], [26, 2, 1, "", "set_goniometer"], [26, 2, 1, "", "set_scan"], [26, 2, 1, "", "update_detector_px_mm_data"]], "dxtbx.imageset.ImageSet": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "as_imageset"], [26, 2, 1, "", "clear_cache"], [26, 2, 1, "", "complete_set"], [26, 2, 1, "", "data"], [26, 6, 1, "", "external_lookup"], [26, 2, 1, "", "get_beam"], [26, 2, 1, "", "get_corrected_data"], [26, 2, 1, "", "get_detector"], [26, 2, 1, "", "get_detectorbase"], [26, 2, 1, "", "get_format_class"], [26, 2, 1, "", "get_gain"], [26, 2, 1, "", "get_goniometer"], [26, 2, 1, "", "get_image_identifier"], [26, 2, 1, "", "get_mask"], [26, 2, 1, "", "get_path"], [26, 2, 1, "", "get_pedestal"], [26, 2, 1, "", "get_raw_data"], [26, 2, 1, "", "get_scan"], [26, 2, 1, "", "get_spectrum"], [26, 2, 1, "", "get_vendortype"], [26, 2, 1, "", "has_dynamic_mask"], [26, 2, 1, "", "indices"], [26, 2, 1, "", "is_marked_for_rejection"], [26, 2, 1, "", "mark_for_rejection"], [26, 2, 1, "", "masker"], [26, 2, 1, "", "params"], [26, 2, 1, "", "partial_set"], [26, 2, 1, "", "paths"], [26, 2, 1, "", "reader"], [26, 2, 1, "", "set_beam"], [26, 2, 1, "", "set_detector"], [26, 2, 1, "", "set_goniometer"], [26, 2, 1, "", "set_scan"], [26, 2, 1, "", "size"], [26, 2, 1, "", "update_detector_px_mm_data"]], "dxtbx.imageset.ImageSetData": [[26, 2, 1, "", "__init__"], [26, 6, 1, "", "external_lookup"], [26, 2, 1, "", "get_beam"], [26, 2, 1, "", "get_data"], [26, 2, 1, "", "get_detector"], [26, 2, 1, "", "get_format_class"], [26, 2, 1, "", "get_goniometer"], [26, 2, 1, "", "get_image_identifier"], [26, 2, 1, "", "get_master_path"], [26, 2, 1, "", "get_params"], [26, 2, 1, "", "get_path"], [26, 2, 1, "", "get_scan"], [26, 2, 1, "", "get_template"], [26, 2, 1, "", "get_vendor"], [26, 2, 1, "", "has_single_file_reader"], [26, 2, 1, "", "is_marked_for_rejection"], [26, 2, 1, "", "mark_for_rejection"], [26, 2, 1, "", "masker"], [26, 2, 1, "", "partial_data"], [26, 2, 1, "", "reader"], [26, 2, 1, "", "set_beam"], [26, 2, 1, "", "set_detector"], [26, 2, 1, "", "set_format_class"], [26, 2, 1, "", "set_goniometer"], [26, 2, 1, "", "set_params"], [26, 2, 1, "", "set_scan"], [26, 2, 1, "", "set_template"], [26, 2, 1, "", "set_vendor"]], "dxtbx.imageset.ImageSetFactory": [[26, 2, 1, "", "from_template"], [26, 2, 1, "", "imageset_from_anyset"], [26, 2, 1, "", "make_imageset"], [26, 2, 1, "", "make_sequence"], [26, 2, 1, "", "new"]], "dxtbx.imageset.ImageSetLazy": [[26, 2, 1, "", "get_beam"], [26, 2, 1, "", "get_corrected_data"], [26, 2, 1, "", "get_detector"], [26, 2, 1, "", "get_gain"], [26, 2, 1, "", "get_goniometer"], [26, 2, 1, "", "get_mask"], [26, 2, 1, "", "get_scan"]], "dxtbx.imageset.MemReader": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "identifiers"], [26, 2, 1, "", "is_single_file_reader"], [26, 2, 1, "", "master_path"], [26, 2, 1, "", "paths"], [26, 2, 1, "", "read"]], "dxtbx.model": [[22, 1, 1, "", "Crystal"], [23, 1, 1, "", "Detector"], [24, 1, 1, "", "ExperimentList"], [22, 1, 1, "", "MosaicCrystalKabsch2010"], [22, 1, 1, "", "MosaicCrystalSauter2014"], [21, 0, 0, "-", "beam"], [22, 0, 0, "-", "crystal"], [23, 0, 0, "-", "detector"], [24, 0, 0, "-", "experiment_list"], [25, 0, 0, "-", "goniometer"], [28, 0, 0, "-", "profile"], [29, 0, 0, "-", "scan"]], "dxtbx.model.Crystal": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "as_str"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_crystal_symmetry"], [22, 2, 1, "", "show"], [22, 2, 1, "", "to_dict"]], "dxtbx.model.Detector": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "add_group"], [23, 2, 1, "", "add_panel"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "get_max_inscribed_resolution"], [23, 2, 1, "", "get_max_resolution"], [23, 2, 1, "", "get_names"], [23, 2, 1, "", "get_panel_intersection"], [23, 2, 1, "", "get_ray_intersection"], [23, 2, 1, "", "has_projection_2d"], [23, 2, 1, "", "hierarchy"], [23, 2, 1, "", "is_similar_to"], [23, 2, 1, "", "iter_levelorder"], [23, 2, 1, "", "iter_panels"], [23, 2, 1, "", "iter_preorder"], [23, 2, 1, "", "rotate_around_origin"], [23, 2, 1, "", "to_dict"]], "dxtbx.model.ExperimentList": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "all_sequences"], [24, 2, 1, "", "all_stills"], [24, 2, 1, "", "append"], [24, 2, 1, "", "as_file"], [24, 2, 1, "", "as_json"], [24, 2, 1, "", "beams"], [24, 2, 1, "", "change_basis"], [24, 2, 1, "", "clear"], [24, 2, 1, "", "crystals"], [24, 2, 1, "", "detectors"], [24, 2, 1, "", "empty"], [24, 2, 1, "", "extend"], [24, 2, 1, "", "find"], [24, 2, 1, "", "from_file"], [24, 2, 1, "", "from_templates"], [24, 2, 1, "", "goniometers"], [24, 2, 1, "", "identifiers"], [24, 2, 1, "", "imagesets"], [24, 2, 1, "", "indices"], [24, 2, 1, "", "is_consistent"], [24, 2, 1, "", "nullify_all_single_file_reader_format_instances"], [24, 2, 1, "", "profiles"], [24, 2, 1, "", "remove_on_experiment_identifiers"], [24, 2, 1, "", "replace"], [24, 2, 1, "", "scaling_models"], [24, 2, 1, "", "scans"], [24, 2, 1, "", "select_on_experiment_identifiers"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "where"]], "dxtbx.model.MosaicCrystalKabsch2010": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "as_str"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_mosaicity"], [22, 2, 1, "", "is_similar_to"], [22, 2, 1, "", "set_mosaicity"], [22, 2, 1, "", "to_dict"]], "dxtbx.model.MosaicCrystalSauter2014": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "as_str"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_A_as_sqr"], [22, 2, 1, "", "get_A_inverse_as_sqr"], [22, 2, 1, "", "get_domain_size_ang"], [22, 2, 1, "", "get_half_mosaicity_deg"], [22, 2, 1, "", "is_similar_to"], [22, 2, 1, "", "set_domain_size_ang"], [22, 2, 1, "", "set_half_mosaicity_deg"], [22, 2, 1, "", "to_dict"]], "dxtbx.model.beam": [[21, 1, 1, "", "BeamFactory"]], "dxtbx.model.beam.BeamFactory": [[21, 2, 1, "", "complex"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_phil"], [21, 2, 1, "", "imgCIF"], [21, 2, 1, "", "imgCIF_H"], [21, 2, 1, "", "make_beam"], [21, 2, 1, "", "make_polarized_beam"], [21, 2, 1, "", "make_polychromatic_beam"], [21, 2, 1, "", "simple"], [21, 2, 1, "", "simple_directional"]], "dxtbx.model.crystal": [[22, 1, 1, "", "CrystalFactory"]], "dxtbx.model.crystal.CrystalFactory": [[22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_mosflm_matrix"]], "dxtbx.model.detector": [[23, 1, 1, "", "DetectorFactory"], [23, 3, 1, "", "merge_panel_scope_extracts_by_id"]], "dxtbx.model.detector.DetectorFactory": [[23, 2, 1, "", "complex"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "from_phil"], [23, 2, 1, "", "generate_from_phil"], [23, 2, 1, "", "imgCIF"], [23, 2, 1, "", "imgCIF_H"], [23, 2, 1, "", "make_detector"], [23, 2, 1, "", "overwrite_from_phil"], [23, 2, 1, "", "sensor"], [23, 2, 1, "", "simple"], [23, 2, 1, "", "two_theta"]], "dxtbx.model.experiment_list": [[24, 1, 1, "", "BeamComparison"], [24, 1, 1, "", "DetectorComparison"], [24, 1, 1, "", "ExperimentListFactory"], [24, 1, 1, "", "GoniometerComparison"]], "dxtbx.model.experiment_list.BeamComparison": [[24, 2, 1, "", "__init__"]], "dxtbx.model.experiment_list.DetectorComparison": [[24, 2, 1, "", "__init__"]], "dxtbx.model.experiment_list.ExperimentListFactory": [[24, 2, 1, "", "from_args"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_filenames"], [24, 2, 1, "", "from_imageset_and_crystal"], [24, 2, 1, "", "from_json"], [24, 2, 1, "", "from_json_file"], [24, 2, 1, "", "from_pickle_file"], [24, 2, 1, "", "from_sequence_and_crystal"], [24, 2, 1, "", "from_serialized_format"], [24, 2, 1, "", "from_stills_and_crystal"], [24, 2, 1, "", "from_templates"], [24, 2, 1, "", "from_xds"]], "dxtbx.model.experiment_list.GoniometerComparison": [[24, 2, 1, "", "__init__"]], "dxtbx.model.goniometer": [[25, 1, 1, "", "Goniometer"], [25, 1, 1, "", "GoniometerFactory"], [25, 1, 1, "", "KappaGoniometer"], [25, 1, 1, "", "MultiAxisGoniometer"]], "dxtbx.model.goniometer.Goniometer": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_fixed_rotation"], [25, 2, 1, "", "get_num_scan_points"], [25, 2, 1, "", "get_rotation_axis"], [25, 2, 1, "", "get_rotation_axis_datum"], [25, 2, 1, "", "get_setting_rotation"], [25, 2, 1, "", "get_setting_rotation_at_scan_point"], [25, 2, 1, "", "get_setting_rotation_at_scan_points"], [25, 2, 1, "", "is_similar_to"], [25, 6, 1, "", "num_scan_points"], [25, 2, 1, "", "reset_scan_points"], [25, 2, 1, "", "rotate_around_origin"], [25, 2, 1, "", "set_fixed_rotation"], [25, 2, 1, "", "set_rotation_axis"], [25, 2, 1, "", "set_rotation_axis_datum"], [25, 2, 1, "", "set_setting_rotation"], [25, 2, 1, "", "set_setting_rotation_at_scan_points"], [25, 2, 1, "", "to_dict"]], "dxtbx.model.goniometer.GoniometerFactory": [[25, 2, 1, "", "from_dict"], [25, 2, 1, "", "from_phil"], [25, 2, 1, "", "imgCIF"], [25, 2, 1, "", "imgCIF_H"], [25, 2, 1, "", "kappa"], [25, 2, 1, "", "known_axis"], [25, 2, 1, "", "make_goniometer"], [25, 2, 1, "", "make_kappa_goniometer"], [25, 2, 1, "", "make_multi_axis_goniometer"], [25, 2, 1, "", "multi_axis"], [25, 2, 1, "", "multi_axis_goniometer_from_phil"], [25, 2, 1, "", "single_axis"], [25, 2, 1, "", "single_axis_goniometer_from_phil"], [25, 2, 1, "", "single_axis_reverse"]], "dxtbx.model.goniometer.KappaGoniometer": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "get_alpha_angle"], [25, 2, 1, "", "get_direction"], [25, 2, 1, "", "get_kappa_angle"], [25, 2, 1, "", "get_kappa_axis"], [25, 2, 1, "", "get_omega_angle"], [25, 2, 1, "", "get_omega_axis"], [25, 2, 1, "", "get_phi_angle"], [25, 2, 1, "", "get_phi_axis"], [25, 2, 1, "", "get_scan_axis"]], "dxtbx.model.goniometer.MultiAxisGoniometer": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_angles"], [25, 2, 1, "", "get_axes"], [25, 2, 1, "", "get_names"], [25, 2, 1, "", "get_scan_axis"], [25, 2, 1, "", "set_angles"], [25, 2, 1, "", "set_axes"], [25, 2, 1, "", "to_dict"]], "dxtbx.model.profile": [[28, 1, 1, "", "ProfileModelFactory"]], "dxtbx.model.profile.ProfileModelFactory": [[28, 2, 1, "", "from_dict"]], "dxtbx.model.scan": [[29, 1, 1, "", "ScanFactory"]], "dxtbx.model.scan.ScanFactory": [[29, 2, 1, "", "add"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "from_phil"], [29, 2, 1, "", "imgCIF"], [29, 2, 1, "", "imgCIF_H"], [29, 2, 1, "", "make_scan"], [29, 2, 1, "", "make_scan_from_properties"], [29, 2, 1, "", "search"], [29, 2, 1, "", "single_file"]], "dxtbx.serialize": [[30, 0, 0, "-", "imageset"], [30, 0, 0, "-", "load"], [30, 0, 0, "-", "xds"]], "dxtbx.serialize.imageset": [[30, 3, 1, "", "basic_imageset_from_dict"], [30, 3, 1, "", "basic_imageset_to_dict"], [30, 3, 1, "", "filename_or_none"], [30, 3, 1, "", "filename_to_absolute"], [30, 3, 1, "", "imagesequence_from_dict"], [30, 3, 1, "", "imagesequence_to_dict"], [30, 3, 1, "", "imageset_from_dict"], [30, 3, 1, "", "imageset_to_dict"]], "dxtbx.serialize.load": [[30, 3, 1, "", "crystal"], [30, 3, 1, "", "experiment_list"], [30, 3, 1, "", "imageset"]], "dxtbx.serialize.xds": [[30, 3, 1, "", "to_crystal"], [30, 3, 1, "", "to_imageset"], [30, 1, 1, "", "to_xds"], [30, 3, 1, "", "xds_detector_name"]], "dxtbx.serialize.xds.to_xds": [[30, 2, 1, "", "XDS_INP"], [30, 2, 1, "", "__init__"], [30, 2, 1, "", "get_beam"], [30, 2, 1, "", "get_detector"], [30, 2, 1, "", "get_goniometer"], [30, 2, 1, "", "get_scan"], [30, 2, 1, "", "get_template"], [30, 2, 1, "", "xparm_xds"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:exception", "5": "py:attribute", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "titleterms": {"about": [0, 73], "develop": [0, 5, 9, 91], "team": 0, "dial": [0, 1, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 79, 81, 83, 84, 89, 90, 91, 92, 94, 95, 96, 97, 98], "east": 0, "west": 0, "acknowledg": [0, 77, 78, 81, 83], "user": 1, "guid": [1, 89, 96], "scale": [1, 4, 15, 63, 73, 74, 75, 82, 84, 85, 86, 87, 88], "data": [1, 3, 6, 9, 73, 74, 75, 76, 82, 86, 87, 88, 96], "common": 1, "option": [1, 73], "practic": 1, "larg": 1, "dataset": [1, 73, 75, 83], "against": 1, "refer": [1, 32], "advanc": [1, 90], "us": [1, 43, 72, 79], "control": 1, "model": [1, 2, 4, 15, 21, 22, 23, 24, 25, 28, 29, 75, 78], "choos": 1, "reflect": [1, 3], "minimis": 1, "convent": 2, "coordin": 2, "frame": [2, 73], "The": 2, "diffractomet": 2, "equat": 2, "orthogonalis": 2, "orient": [2, 74, 76], "matrix": 2, "laboratori": 2, "summari": 2, "dxtbx": [2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "goniomet": [2, 25], "file": 3, "experi": [3, 6, 76], "list": 3, "extend": 4, "content": [4, 20, 31], "entri": 4, "point": 4, "ad": 4, "new": 4, "format": 4, "class": 4, "write": 4, "understand": 4, "static": [4, 75], "method": 4, "index": [4, 11, 53, 73, 74, 75, 78, 82, 85, 86, 87, 88, 96], "basi": 4, "vector": 4, "search": 4, "strategi": 4, "lattic": [4, 73, 74, 77, 82, 85, 86, 87, 88], "profil": [4, 28], "defin": 4, "exampl": [5, 40, 43, 72], "read": 6, "get": 7, "start": 7, "instal": [7, 9, 91], "sourc": [7, 79, 90, 97], "environ": [7, 9], "built": 7, "help": 7, "paramet": [7, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72], "next": [7, 81, 83], "step": 7, "document": [8, 71], "set": [9, 76], "up": 9, "linux": [9, 91], "mac": [9, 91], "modulenotfounderror": 9, "No": 9, "modul": 9, "name": 9, "gltbx_gl_ext": 9, "download": 9, "regress": 9, "test": [9, 48], "keep": 9, "current": 9, "algorithm": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "background": 10, "stills_index": 11, "basis_vector_search": 11, "lattice_search": 11, "model_evalu": 11, "max_cel": 11, "integr": [12, 54, 73, 74, 75, 82, 85, 86, 87, 88, 90, 96], "profile_model": 13, "refin": [14, 59, 73, 74, 75, 81, 82, 83, 85, 86, 87, 88, 93], "outlier_reject": 15, "spot_find": 16, "spot_predict": 17, "symmetri": [18, 69, 73, 74, 77, 78, 82, 84, 85, 86, 87, 88], "cosym": [18, 40], "arrai": 20, "famili": 20, "tabl": [20, 31], "beam": [21, 73, 78], "crystal": [22, 76, 83, 84], "detector": [23, 74, 81], "experiment_list": 24, "imageset": 26, "scan": [29, 75], "serial": 30, "extens": 31, "librari": 32, "util": 33, "align_cryst": 34, "introduct": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88], "basic": [34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72], "full": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72], "definit": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72], "anvil_correct": 35, "detail": [35, 86, 87], "apply_mask": 36, "check_indexing_symmetri": 37, "combine_experi": 38, "compare_orientation_matric": 39, "create_profile_model": 41, "estimate_gain": 42, "estimate_resolut": 43, "case": [43, 72], "export": [44, 73, 82, 86, 87, 88, 93], "export_bitmap": 45, "filter_reflect": 46, "find_spot": 47, "distl": 48, "apach": 48, "server": 48, "build": [48, 91], "instruct": 48, "find_spots_serv": 49, "client": 49, "generate_mask": 50, "image_view": 51, "import": [52, 73, 75, 78, 82, 85, 86, 87, 88, 93], "merge_cbf": 55, "missing_reflect": 56, "plot_scan_varying_model": 57, "predict": 58, "reciprocal_lattice_view": [], "refine_bravais_set": 60, "reindex": 61, "report": [62, 82, 86, 95], "search_beam_posit": 64, "show": 65, "slice_sequ": 66, "spot_counts_per_imag": 67, "stereographic_project": 68, "two_theta_refin": 70, "program": [71, 97, 98], "xia2": [72, 76, 79, 84], "multiplex": [72, 76, 84], "process": [73, 74, 76, 83, 86, 87, 93, 96], "small": [73, 74, 88], "molecul": [73, 88], "micro": 73, "3ded": 73, "biotin": 73, "gener": [73, 79], "note": 73, "collect": 73, "video": 73, "pedest": 73, "offset": 73, "imag": [73, 93], "find": [73, 74, 75, 78, 82, 86, 87, 88], "centr": [73, 77, 78], "re": 73, "correct": [73, 78, 81], "center": 73, "mask": 73, "spot": [73, 74, 75, 78, 82, 86, 87, 88], "bravai": [73, 82, 86, 87, 88], "geometri": [73, 78], "other": 73, "multi": [73, 76, 81, 83, 84, 85], "determin": [73, 74, 88], "exclud": 73, "bad": 73, "togeth": 73, "solv": 73, "structur": 73, "myd88tir": 74, "wedg": 74, "exploratori": 74, "analysi": [74, 76, 82, 83, 84, 86], "distanc": 74, "tilt": 74, "axi": 74, "further": 74, "script": 74, "lysozym": 75, "nanocryst": 75, "1": [75, 78, 97], "2": [75, 77, 82], "3": [75, 91, 98], "4": 75, "5": 75, "6": 75, "7": 75, "vari": 75, "merg": [75, 82, 85, 86], "bookkeep": 76, "0": [76, 91], "9": 76, "10": 76, "19": 76, "20": 76, "29": 76, "explor": 76, "reciproc": 76, "space": 76, "post": 76, "preferenti": 76, "unit": [76, 88], "cell": [76, 88], "comparison": 76, "delta": 76, "cc": 76, "half": 76, "intens": 76, "cluster": 76, "dpf3": [77, 78], "part": [77, 78], "A": 77, "question": 77, "convert": 77, "pseudocentr": 77, "conclus": [77, 78], "poor": 78, "initi": 78, "check": [78, 87], "discov": 78, "better": 78, "experiment": 78, "diamond": [79, 97], "light": [79, 90, 97], "feedback": 79, "tutori": [80, 82, 85, 86, 87, 88], "tile": 81, "metrologi": 81, "prepar": 81, "appli": 81, "what": [81, 83], "do": [81, 83], "sar": 82, "cov": 82, "main": 82, "proteas": 82, "mpro": 82, "html": [82, 86], "unmerg": [82, 86], "mtz": [82, 86, 87], "blend": 83, "individu": 83, "v": 83, "joint": 83, "jointli": 83, "manual": 84, "reprocess": 84, "almost": 84, "spotfind": 85, "dui": 87, "inspect": 87, "result": 87, "reduct": 88, "output": 88, "sadab": 88, "altern": 88, "path": 88, "how": 89, "To": 89, "diffract": [90, 94], "contact": 90, "fund": 90, "stabl": 91, "releas": 91, "16": [], "graphic": 91, "binari": 91, "licens": 92, "sequenc": 93, "miss": 93, "project": 94, "neutron": 94, "public": 95, "journal": 95, "articl": 95, "applic": 95, "xfel": 95, "crystallographi": 95, "synchrotron": 95, "newslett": 95, "ssx": 96, "ssx_index": 96, "ssx_integr": 96, "12th": 97, "13th": 97, "june": 97, "2012": 97, "uk": [97, 98], "organis": 97, "committe": 97, "present": [97, 98], "22nd": 98, "mai": 98, "2013": 98, "cambridg": 98, "attende": 98, "workshop": 99, "17": [], "18": 91}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"]], "Development Teams": [[0, "development-teams"]], "DIALS East": [[0, "dials-east"]], "DIALS West": [[0, "dials-west"]], "Acknowledgements": [[0, "acknowledgements"], [77, "acknowledgements"], [78, "acknowledgements"], [81, "acknowledgements"], [83, "acknowledgements"]], "User guide for scaling data with DIALS": [[1, "user-guide-for-scaling-data-with-dials"]], "Guide to common scaling options": [[1, "guide-to-common-scaling-options"]], "Practicalities for large datasets": [[1, "practicalities-for-large-datasets"]], "Scaling against a reference dataset": [[1, "scaling-against-a-reference-dataset"]], "Advanced use - Controlling the scaling models": [[1, "advanced-use-controlling-the-scaling-models"]], "Advanced use - Choosing reflections to use for minimisation": [[1, "advanced-use-choosing-reflections-to-use-for-minimisation"]], "Conventions": [[2, "conventions"]], "Coordinate frames": [[2, "coordinate-frames"]], "The diffractometer equation": [[2, "the-diffractometer-equation"]], "Orthogonalisation convention": [[2, "orthogonalisation-convention"]], "Orientation matrix": [[2, "orientation-matrix"]], "The laboratory frame": [[2, "the-laboratory-frame"]], "Summary of coordinate frames": [[2, "summary-of-coordinate-frames"]], "The DXTBX goniometer model": [[2, "the-dxtbx-goniometer-model"]], "Data files": [[3, "data-files"]], "Experiment list files": [[3, "experiment-list-files"]], "Reflection files": [[3, "reflection-files"]], "Extending DIALS": [[4, "extending-dials"]], "Contents": [[4, "contents"]], "Entry points": [[4, "entry-points"]], "Adding new format classes": [[4, "adding-new-format-classes"]], "Writing a new format class": [[4, "writing-a-new-format-class"]], "understand Static Method": [[4, "understand-static-method"]], "Class Methods": [[4, "class-methods"]], "Extending dials.index": [[4, "extending-dials-index"]], "Basis vector search strategies": [[4, "basis-vector-search-strategies"]], "Lattice search strategies": [[4, "lattice-search-strategies"]], "Extending profile models": [[4, "extending-profile-models"]], "Extending dials.scale": [[4, "extending-dials-scale"]], "Defining a scaling model": [[4, "defining-a-scaling-model"]], "Developer Examples": [[5, "developer-examples"]], "Reading experiment and data": [[6, "reading-experiment-and-data"]], "Getting started": [[7, "getting-started"]], "Installation": [[7, "installation"], [91, "installation"], [91, "id1"]], "Sourcing the DIALS environment": [[7, "sourcing-the-dials-environment"]], "Built-in help": [[7, "built-in-help"]], "Parameters": [[7, "parameters"]], "Next steps": [[7, "next-steps"]], "Documentation": [[8, "documentation"]], "Installation for Developers": [[9, "installation-for-developers"]], "Setting up a Development Environment on Linux or Mac": [[9, "setting-up-a-development-environment-on-linux-or-mac"]], "ModuleNotFoundError: No module named \u2018gltbx_gl_ext\u2019": [[9, "modulenotfounderror-no-module-named-gltbx-gl-ext"]], "Downloading the DIALS regression test data": [[9, "downloading-the-dials-regression-test-data"]], "Keeping a Development Environment current": [[9, "keeping-a-development-environment-current"]], "dials.algorithms.background": [[10, "module-dials.algorithms.background"]], "dials.algorithms.indexing": [[11, "module-dials.algorithms.indexing"]], "dials.algorithms.indexing.indexer": [[11, "module-dials.algorithms.indexing.indexer"]], "dials.algorithms.indexing.stills_indexer": [[11, "module-dials.algorithms.indexing.stills_indexer"]], "dials.algorithms.indexing.basis_vector_search": [[11, "module-dials.algorithms.indexing.basis_vector_search"]], "dials.algorithms.indexing.lattice_search": [[11, "module-dials.algorithms.indexing.lattice_search"]], "dials.algorithms.indexing.model_evaluation": [[11, "module-dials.algorithms.indexing.model_evaluation"]], "dials.algorithms.indexing.max_cell": [[11, "module-dials.algorithms.indexing.max_cell"]], "dials.algorithms.integration": [[12, "module-dials.algorithms.integration.integrator"]], "dials.algorithms.profile_model": [[13, "module-dials.algorithms.profile_model"]], "dials.algorithms.refinement": [[14, "module-dials.algorithms.refinement.reflection_manager"]], "dials.algorithms.scaling": [[15, "module-dials.algorithms.scaling"]], "model.model": [[15, "module-dials.algorithms.scaling.model.model"]], "outlier_rejection": [[15, "module-dials.algorithms.scaling.outlier_rejection"]], "dials.algorithms.spot_finding": [[16, "module-dials.algorithms.spot_finding.finder"]], "dials.algorithms.spot_prediction": [[17, "module-dials.algorithms.spot_prediction.reflection_predictor"]], "dials.algorithms.symmetry": [[18, "module-dials.algorithms.symmetry"]], "dials.algorithms.symmetry.cosym": [[18, "module-dials.algorithms.symmetry.cosym"]], "Algorithms": [[19, "algorithms"]], "Array Family": [[20, "array-family"]], "Table of Contents": [[20, "table-of-contents"], [31, "table-of-contents"]], "dxtbx.model.beam": [[21, "module-dxtbx.model.beam"]], "dxtbx.model.crystal": [[22, "dxtbx-model-crystal"]], "dxtbx.model.detector": [[23, "dxtbx-model-detector"]], "dxtbx.model.experiment_list": [[24, "dxtbx-model-experiment-list"]], "dxtbx.model.goniometer": [[25, "module-dxtbx.model.goniometer"]], "dxtbx.imageset": [[26, "module-dxtbx.imageset"]], "dxtbx": [[27, "dxtbx"]], "dxtbx.model.profile": [[28, "module-dxtbx.model.profile"]], "dxtbx.model.scan": [[29, "module-dxtbx.model.scan"]], "dxtbx.serialize": [[30, "module-dxtbx.serialize.imageset"]], "Extensions": [[31, "extensions"]], "Library Reference": [[32, "library-reference"]], "Util": [[33, "util"]], "dials.align_crystal": [[34, "dials-align-crystal"]], "Introduction": [[34, "introduction"], [35, "introduction"], [36, "introduction"], [37, "introduction"], [38, "introduction"], [39, "introduction"], [40, "introduction"], [41, "introduction"], [42, "introduction"], [43, "introduction"], [44, "introduction"], [45, "introduction"], [46, "introduction"], [47, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [52, "introduction"], [53, "introduction"], [54, "introduction"], [55, "introduction"], [56, "introduction"], [57, "introduction"], [58, "introduction"], [59, "introduction"], [60, "introduction"], [61, "introduction"], [62, "introduction"], [63, "introduction"], [64, "introduction"], [65, "introduction"], [66, "introduction"], [67, "introduction"], [68, "introduction"], [69, "introduction"], [70, "introduction"], [72, "introduction"], [74, "introduction"], [75, "introduction"], [76, "introduction"], [77, "introduction"], [78, "introduction"], [81, "introduction"], [82, "introduction"], [83, "introduction"], [84, "introduction"], [85, "introduction"], [86, "introduction"], [87, "introduction"], [88, "introduction"]], "Basic parameters": [[34, "basic-parameters"], [36, "basic-parameters"], [37, "basic-parameters"], [38, "basic-parameters"], [39, "basic-parameters"], [40, "basic-parameters"], [41, "basic-parameters"], [42, "basic-parameters"], [43, "basic-parameters"], [44, "basic-parameters"], [45, "basic-parameters"], [46, "basic-parameters"], [47, "basic-parameters"], [49, "basic-parameters"], [50, "basic-parameters"], [51, "basic-parameters"], [52, "basic-parameters"], [53, "basic-parameters"], [54, "basic-parameters"], [55, "basic-parameters"], [57, "basic-parameters"], [58, "basic-parameters"], [59, "basic-parameters"], [60, "basic-parameters"], [61, "basic-parameters"], [62, "basic-parameters"], [63, "basic-parameters"], [64, "basic-parameters"], [65, "basic-parameters"], [66, "basic-parameters"], [67, "basic-parameters"], [68, "basic-parameters"], [69, "basic-parameters"], [70, "basic-parameters"], [72, "basic-parameters"]], "Full parameter definitions": [[34, "full-parameter-definitions"], [35, "full-parameter-definitions"], [36, "full-parameter-definitions"], [37, "full-parameter-definitions"], [38, "full-parameter-definitions"], [39, "full-parameter-definitions"], [40, "full-parameter-definitions"], [41, "full-parameter-definitions"], [42, "full-parameter-definitions"], [43, "full-parameter-definitions"], [44, "full-parameter-definitions"], [45, "full-parameter-definitions"], [46, "full-parameter-definitions"], [47, "full-parameter-definitions"], [49, "full-parameter-definitions"], [50, "full-parameter-definitions"], [51, "full-parameter-definitions"], [52, "full-parameter-definitions"], [53, "full-parameter-definitions"], [54, "full-parameter-definitions"], [55, "full-parameter-definitions"], [56, "full-parameter-definitions"], [57, "full-parameter-definitions"], [58, "full-parameter-definitions"], [59, "full-parameter-definitions"], [60, "full-parameter-definitions"], [61, "full-parameter-definitions"], [62, "full-parameter-definitions"], [63, "full-parameter-definitions"], [64, "full-parameter-definitions"], [65, "full-parameter-definitions"], [66, "full-parameter-definitions"], [67, "full-parameter-definitions"], [68, "full-parameter-definitions"], [69, "full-parameter-definitions"], [70, "full-parameter-definitions"], [72, "full-parameter-definitions"]], "dials.anvil_correction": [[35, "dials-anvil-correction"]], "Details": [[35, "details"]], "dials.apply_mask": [[36, "dials-apply-mask"]], "dials.check_indexing_symmetry": [[37, "dials-check-indexing-symmetry"]], "dials.combine_experiments": [[38, "dials-combine-experiments"]], "dials.compare_orientation_matrices": [[39, "dials-compare-orientation-matrices"]], "dials.cosym": [[40, "dials-cosym"]], "Example": [[40, "example"]], "dials.create_profile_model": [[41, "dials-create-profile-model"]], "dials.estimate_gain": [[42, "dials-estimate-gain"]], "dials.estimate_resolution": [[43, "dials-estimate-resolution"]], "Example use cases": [[43, "example-use-cases"]], "dials.export": [[44, "dials-export"]], "dials.export_bitmaps": [[45, "dials-export-bitmaps"]], "dials.filter_reflections": [[46, "dials-filter-reflections"]], "dials.find_spots": [[47, "dials-find-spots"]], "distl/dials apache server": [[48, "distl-dials-apache-server"]], "Build instructions": [[48, "build-instructions"]], "Testing the server": [[48, "testing-the-server"]], "Distl parameters": [[48, "distl-parameters"]], "Dials parameters": [[48, "dials-parameters"]], "dials.find_spots_server/client": [[49, "dials-find-spots-server-client"]], "dials.generate_mask": [[50, "dials-generate-mask"]], "dials.image_viewer": [[51, "dials-image-viewer"]], "dials.import": [[52, "dials-import"]], "dials.index": [[53, "dials-index"]], "dials.integrate": [[54, "dials-integrate"]], "dials.merge_cbf": [[55, "dials-merge-cbf"]], "dials.missing_reflections": [[56, "dials-missing-reflections"]], "dials.plot_scan_varying_model": [[57, "dials-plot-scan-varying-model"]], "dials.predict": [[58, "dials-predict"]], "dials.refine": [[59, "dials-refine"]], "dials.refine_bravais_settings": [[60, "dials-refine-bravais-settings"]], "dials.reindex": [[61, "dials-reindex"]], "dials.report": [[62, "dials-report"]], "dials.scale": [[63, "dials-scale"]], "dials.search_beam_position": [[64, "dials-search-beam-position"]], "dials.show": [[65, "dials-show"]], "dials.slice_sequence": [[66, "dials-slice-sequence"]], "dials.spot_counts_per_image": [[67, "dials-spot-counts-per-image"]], "dials.stereographic_projection": [[68, "dials-stereographic-projection"]], "dials.symmetry": [[69, "dials-symmetry"]], "dials.two_theta_refine": [[70, "dials-two-theta-refine"]], "Program documentation": [[71, "program-documentation"]], "xia2.multiplex": [[72, "xia2-multiplex"], [84, "xia2-multiplex"]], "Examples use cases": [[72, "examples-use-cases"]], "Processing Small Molecule MicroED/3DED: Biotin": [[73, "processing-small-molecule-microed-3ded-biotin"]], "General Notes": [[73, "general-notes"]], "Data collection videos": [[73, "data-collection-videos"]], "Note about pedestal and offset": [[73, "note-about-pedestal-and-offset"]], "Import images": [[73, "import-images"]], "Find the beam centre": [[73, "find-the-beam-centre"]], "Re-import with the correct beam center": [[73, "re-import-with-the-correct-beam-center"]], "Generate a mask for the beam center (optional)": [[73, "generate-a-mask-for-the-beam-center-optional"]], "Find spots": [[73, "find-spots"]], "Indexing": [[73, "indexing"], [74, "indexing"], [75, "indexing"], [78, "indexing"], [82, "indexing"], [85, "indexing"], [86, "indexing"], [87, "indexing"], [88, "indexing"]], "Find the Bravais lattice (optional)": [[73, "find-the-bravais-lattice-optional"]], "Refine the geometry": [[73, "refine-the-geometry"]], "Integration": [[73, "integration"], [74, "integration"], [75, "integration"], [82, "integration"], [86, "integration"], [87, "integration"], [88, "integration"]], "Scaling": [[73, "scaling"], [74, "scaling"], [87, "scaling"], [88, "scaling"]], "Other datasets": [[73, "other-datasets"]], "Multi-dataset symmetry determination": [[73, "multi-dataset-symmetry-determination"]], "Excluding bad frames": [[73, "excluding-bad-frames"]], "Scale the data together": [[73, "scale-the-data-together"]], "Export the data": [[73, "export-the-data"]], "Solve the structure": [[73, "solve-the-structure"]], "MyD88TIR small wedges": [[74, "myd88tir-small-wedges"]], "Data": [[74, "data"], [75, "data"], [76, "data"], [88, "data"]], "Exploratory analysis": [[74, "exploratory-analysis"]], "Detector distance": [[74, "detector-distance"]], "Spot-finding": [[74, "spot-finding"], [75, "spot-finding"]], "Tilt axis orientation": [[74, "tilt-axis-orientation"]], "Determining lattice symmetry": [[74, "determining-lattice-symmetry"]], "Refining the detector distance": [[74, "refining-the-detector-distance"]], "Further refinement": [[74, "further-refinement"]], "Scripted processing": [[74, "scripted-processing"]], "Further processing": [[74, "further-processing"]], "Lysozyme nanocrystals": [[75, "lysozyme-nanocrystals"]], "Import": [[75, "import"], [78, "import"], [82, "import"], [86, "import"], [87, "import"], [88, "import"]], "Dataset 1": [[75, "dataset-1"], [75, "id1"], [75, "id11"]], "Dataset 2": [[75, "dataset-2"], [75, "id2"], [75, "id12"]], "Dataset 3": [[75, "dataset-3"], [75, "id3"], [75, "id13"]], "Dataset 4": [[75, "dataset-4"], [75, "id4"], [75, "id14"]], "Dataset 5": [[75, "dataset-5"], [75, "id5"], [75, "id15"]], "Dataset 6": [[75, "dataset-6"], [75, "id6"], [75, "id8"], [75, "id10"], [75, "id16"]], "Dataset 7": [[75, "dataset-7"], [75, "id7"], [75, "id17"]], "Datasets 1-5 & 7": [[75, "datasets-1-5-7"], [75, "id9"]], "Static model refinement": [[75, "static-model-refinement"]], "Scan-varying refinement": [[75, "scan-varying-refinement"]], "Scaling and merging": [[75, "scaling-and-merging"]], "Multi-crystal analysis with DIALS and xia2.multiplex": [[76, "multi-crystal-analysis-with-dials-and-xia2-multiplex"]], "Bookkeeping": [[76, "bookkeeping"]], "Process": [[76, "process"]], "Sets 0-9": [[76, "sets-0-9"]], "Sets 10-19": [[76, "sets-10-19"]], "Sets 20-29": [[76, "sets-20-29"]], "Explorations of Reciprocal Space": [[76, "explorations-of-reciprocal-space"]], "Post Experiment Processing": [[76, "post-experiment-processing"]], "Preferential Orientation": [[76, "preferential-orientation"]], "Unit Cell Comparisons": [[76, "unit-cell-comparisons"]], "Delta CC-half": [[76, "delta-cc-half"]], "Intensity Clustering": [[76, "intensity-clustering"]], "Cluster Comparisons": [[76, "cluster-comparisons"]], "DPF3 Part 2: A question of centring": [[77, "dpf3-part-2-a-question-of-centring"]], "Questioning the lattice symmetry": [[77, "questioning-the-lattice-symmetry"]], "Converting to a centred lattice": [[77, "converting-to-a-centred-lattice"]], "Centred or pseudocentred?": [[77, "centred-or-pseudocentred"]], "Conclusions": [[77, "conclusions"], [78, "conclusions"]], "DPF3 Part 1: Correcting poor initial geometry": [[78, "dpf3-part-1-correcting-poor-initial-geometry"]], "Find Spots": [[78, "find-spots"], [82, "find-spots"], [86, "find-spots"], [87, "find-spots"]], "Check indexing symmetry": [[78, "check-indexing-symmetry"]], "Discover a better experimental model": [[78, "discover-a-better-experimental-model"]], "Indexing with the corrected beam centre": [[78, "indexing-with-the-corrected-beam-centre"]], "Using DIALS at Diamond Light Source": [[79, "using-dials-at-diamond-light-source"]], "General": [[79, "general"]], "Using DIALS with xia2": [[79, "using-dials-with-xia2"]], "Feedback": [[79, "feedback"]], "Tutorials": [[80, "tutorials"]], "Refining multi-tile detector metrology with DIALS": [[81, "refining-multi-tile-detector-metrology-with-dials"]], "Preparing for multi-tile refinement": [[81, "preparing-for-multi-tile-refinement"]], "Multi-tile refinement": [[81, "multi-tile-refinement"]], "Applying the corrected metrology": [[81, "applying-the-corrected-metrology"]], "What to do next": [[81, "what-to-do-next"]], "SARS-CoV-2 main protease (Mpro)": [[82, "sars-cov-2-main-protease-mpro"]], "Tutorial data": [[82, "tutorial-data"], [86, "tutorial-data"], [87, "tutorial-data"]], "Bravais Lattice Refinement": [[82, "bravais-lattice-refinement"], [86, "bravais-lattice-refinement"], [87, "bravais-lattice-refinement"]], "Refinement": [[82, "refinement"], [86, "refinement"], [87, "refinement"], [88, "refinement"], [93, "refinement"]], "Symmetry analysis": [[82, "symmetry-analysis"], [86, "symmetry-analysis"]], "Scaling and Merging": [[82, "scaling-and-merging"], [86, "scaling-and-merging"]], "HTML report": [[82, "html-report"], [86, "html-report"]], "Exporting to unmerged MTZ": [[82, "exporting-to-unmerged-mtz"], [86, "exporting-to-unmerged-mtz"]], "Multi-crystal analysis with DIALS and BLEND: individual vs joint refinement": [[83, "multi-crystal-analysis-with-dials-and-blend-individual-vs-joint-refinement"]], "Individual processing": [[83, "individual-processing"]], "Analysis of individually processed datasets": [[83, "analysis-of-individually-processed-datasets"]], "Joint refinement": [[83, "joint-refinement"]], "Analysis of jointly refined datasets": [[83, "analysis-of-jointly-refined-datasets"]], "What to do next?": [[83, "what-to-do-next"]], "Multi-crystal symmetry analysis and scaling with DIALS": [[84, "multi-crystal-symmetry-analysis-and-scaling-with-dials"]], "Manual reprocessing": [[84, "manual-reprocessing"]], "Almost there": [[84, "almost-there"]], "Multi-lattice Tutorial": [[85, "multi-lattice-tutorial"]], "Import and Spotfinding": [[85, "import-and-spotfinding"]], "Refinement and Integration": [[85, "refinement-and-integration"]], "Symmetry, Scaling and Merging": [[85, "symmetry-scaling-and-merging"]], "Processing in Detail": [[86, "processing-in-detail"]], "Processing in Detail with DUI": [[87, "processing-in-detail-with-dui"]], "Checking the symmetry": [[87, "checking-the-symmetry"]], "Inspecting the results": [[87, "inspecting-the-results"]], "Exporting as MTZ": [[87, "exporting-as-mtz"]], "Small-molecule data reduction tutorial": [[88, "small-molecule-data-reduction-tutorial"]], "Spot finding": [[88, "spot-finding"]], "Bravais lattice determination": [[88, "bravais-lattice-determination"]], "Symmetry Determination": [[88, "symmetry-determination"]], "Unit cell refinement": [[88, "unit-cell-refinement"]], "Exporting": [[88, "exporting"]], "Output for SADABS (alternate path)": [[88, "output-for-sadabs-alternate-path"]], "DIALS How-To guides": [[89, "dials-how-to-guides"]], "DIALS: Diffraction Integration for Advanced Light Sources": [[90, "dials-diffraction-integration-for-advanced-light-sources"]], "Contact": [[90, "contact"]], "Funding": [[90, "funding"]], "Stable Release: DIALS 3.18.0": [[91, "stable-release-dials-3-18-0"]], "Development Builds": [[91, "development-builds"]], "Mac graphical binary installers": [[91, "mac-graphical-binary-installers"]], "Mac and Linux binary installers": [[91, "mac-and-linux-binary-installers"]], "DIALS License": [[92, "dials-license"]], "Processing Sequences with Missing Images": [[93, "processing-sequences-with-missing-images"]], "Importing": [[93, "importing"]], "Export": [[93, "export"]], "Projects": [[94, "projects"]], "DIALS for neutron diffraction": [[94, "dials-for-neutron-diffraction"]], "Publications": [[95, "publications"]], "DIALS Journal Articles": [[95, "dials-journal-articles"]], "DIALS Application to XFEL Crystallography": [[95, "dials-application-to-xfel-crystallography"]], "DIALS Synchrotron Applications": [[95, "dials-synchrotron-applications"]], "DIALS Newsletter Articles": [[95, "dials-newsletter-articles"]], "DIALS Reports": [[95, "dials-reports"]], "SSX processing guide": [[96, "ssx-processing-guide"]], "Indexing SSX data with dials.ssx_index": [[96, "indexing-ssx-data-with-dials-ssx-index"]], "Integrating SSX data with dials.ssx_integrate": [[96, "integrating-ssx-data-with-dials-ssx-integrate"]], "DIALS 1: 12th-13th June 2012 (Diamond Light Source, UK)": [[97, "dials-1-12th-13th-june-2012-diamond-light-source-uk"]], "Organising committee": [[97, "organising-committee"]], "Program and presentations": [[97, "program-and-presentations"], [98, "program-and-presentations"]], "DIALS-3: 22nd May 2013 (Cambridge, UK)": [[98, "dials-3-22nd-may-2013-cambridge-uk"]], "Attendees": [[98, "attendees"]], "Workshops": [[99, "workshops"]]}, "indexentries": {"radialaverage (class in dials.algorithms.background)": [[10, "dials.algorithms.background.RadialAverage"]], "__init__() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.__init__"]], "add() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.add"]], "dials.algorithms.background": [[10, "module-dials.algorithms.background"]], "inv_d2() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.inv_d2"]], "mean() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.mean"]], "module": [[10, "module-dials.algorithms.background"], [11, "module-dials.algorithms.indexing"], [11, "module-dials.algorithms.indexing.assign_indices"], [11, "module-dials.algorithms.indexing.basis_vector_search"], [11, "module-dials.algorithms.indexing.basis_vector_search.combinations"], [11, "module-dials.algorithms.indexing.basis_vector_search.optimise"], [11, "module-dials.algorithms.indexing.compare_orientation_matrices"], [11, "module-dials.algorithms.indexing.indexer"], [11, "module-dials.algorithms.indexing.lattice_search"], [11, "module-dials.algorithms.indexing.max_cell"], [11, "module-dials.algorithms.indexing.model_evaluation"], [11, "module-dials.algorithms.indexing.nearest_neighbor"], [11, "module-dials.algorithms.indexing.refinement"], [11, "module-dials.algorithms.indexing.stills_indexer"], [11, "module-dials.algorithms.indexing.symmetry"], [12, "module-dials.algorithms.integration.integrator"], [13, "module-dials.algorithms.profile_model"], [14, "module-dials.algorithms.refinement.engine"], [14, "module-dials.algorithms.refinement.refiner"], [14, "module-dials.algorithms.refinement.reflection_manager"], [14, "module-dials.algorithms.refinement.target"], [14, "module-dials.algorithms.refinement.target_stills"], [14, "module-dials.algorithms.refinement.weighting_strategies"], [15, "module-dials.algorithms.scaling"], [15, "module-dials.algorithms.scaling.model.model"], [15, "module-dials.algorithms.scaling.outlier_rejection"], [16, "module-dials.algorithms.spot_finding.factory"], [16, "module-dials.algorithms.spot_finding.finder"], [17, "module-dials.algorithms.spot_prediction.reflection_predictor"], [18, "module-dials.algorithms.symmetry"], [18, "module-dials.algorithms.symmetry.cosym"], [18, "module-dials.algorithms.symmetry.cosym.engine"], [18, "module-dials.algorithms.symmetry.cosym.target"], [18, "module-dials.algorithms.symmetry.laue_group"], [18, "module-dials.algorithms.symmetry.reindex_to_reference"], [20, "module-dials.array_family.flex"], [21, "module-dxtbx.model.beam"], [22, "module-dxtbx.model.crystal"], [23, "module-dxtbx.model.detector"], [24, "module-dxtbx.model.experiment_list"], [25, "module-dxtbx.model.goniometer"], [26, "module-dxtbx.imageset"], [28, "module-dxtbx.model.profile"], [29, "module-dxtbx.model.scan"], [30, "module-dxtbx.serialize.imageset"], [30, "module-dxtbx.serialize.load"], [30, "module-dxtbx.serialize.xds"], [31, "module-dials.extensions.dispersion_spotfinder_threshold_ext"], [31, "module-dials.extensions.gaussian_rs_profile_model_ext"], [31, "module-dials.extensions.null_background_ext"], [31, "module-dials.extensions.simple_background_ext"], [31, "module-dials.extensions.simple_centroid_ext"], [33, "module-dials.util.command_line"], [33, "module-dials.util.export_mtz"], [33, "module-dials.util.export_text"], [33, "module-dials.util.image"], [33, "module-dials.util.installer"], [33, "module-dials.util.ioutil"], [33, "module-dials.util.nexus"], [33, "module-dials.util.options"]], "set_shoebox_background_value() (in module dials.algorithms.background)": [[10, "dials.algorithms.background.set_shoebox_background_value"]], "weight() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.weight"]], "assignindicesglobal (class in dials.algorithms.indexing.assign_indices)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesGlobal"]], "assignindiceslocal (class in dials.algorithms.indexing.assign_indices)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesLocal"]], "assignindicesstrategy (class in dials.algorithms.indexing.assign_indices)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesStrategy"]], "basisvectorminimiser (class in dials.algorithms.indexing.basis_vector_search.optimise)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorMinimiser"]], "basisvectortarget (class in dials.algorithms.indexing.basis_vector_search.optimise)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget"]], "dialsindexerror": [[11, "dials.algorithms.indexing.DialsIndexError"]], "dialsindexrefineerror": [[11, "dials.algorithms.indexing.DialsIndexRefineError"]], "fft1d (class in dials.algorithms.indexing.basis_vector_search)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D"]], "fft3d (class in dials.algorithms.indexing.basis_vector_search)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D"]], "indexer (class in dials.algorithms.indexing.indexer)": [[11, "dials.algorithms.indexing.indexer.Indexer"]], "lowresspotmatch (class in dials.algorithms.indexing.lattice_search)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch"]], "modelevaluation (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.ModelEvaluation"]], "modelrank (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank"]], "modelrankfilter (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter"]], "modelrankweighted (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted"]], "neighboranalysis (class in dials.algorithms.indexing.nearest_neighbor)": [[11, "dials.algorithms.indexing.nearest_neighbor.NeighborAnalysis"]], "pinkindexer (class in dials.algorithms.indexing.lattice_search)": [[11, "dials.algorithms.indexing.lattice_search.PinkIndexer"]], "realspacegridsearch (class in dials.algorithms.indexing.basis_vector_search)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch"]], "result (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.Result"]], "stillsindexer (class in dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer"]], "stillsindexerbasisvectorsearch (class in dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexerBasisVectorSearch"]], "stillsindexerknownorientation (class in dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexerKnownOrientation"]], "stillsindexerlatticesearch (class in dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexerLatticeSearch"]], "strategy (class in dials.algorithms.indexing.basis_vector_search)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy"]], "strategy (class in dials.algorithms.indexing.lattice_search)": [[11, "dials.algorithms.indexing.lattice_search.Strategy"]], "strategy (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.Strategy"]], "symmetryhandler (class in dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.SymmetryHandler"]], "__init__() (dials.algorithms.indexing.assign_indices.assignindicesglobal method)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesGlobal.__init__"]], "__init__() (dials.algorithms.indexing.assign_indices.assignindiceslocal method)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesLocal.__init__"]], "__init__() (dials.algorithms.indexing.assign_indices.assignindicesstrategy method)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesStrategy.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.fft1d method)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.fft3d method)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.realspacegridsearch method)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.strategy method)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectorminimiser method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorMinimiser.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectortarget method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget.__init__"]], "__init__() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.__init__"]], "__init__() (dials.algorithms.indexing.lattice_search.lowresspotmatch method)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch.__init__"]], "__init__() (dials.algorithms.indexing.lattice_search.pinkindexer method)": [[11, "dials.algorithms.indexing.lattice_search.PinkIndexer.__init__"]], "__init__() (dials.algorithms.indexing.lattice_search.strategy method)": [[11, "dials.algorithms.indexing.lattice_search.Strategy.__init__"]], "__init__() (dials.algorithms.indexing.model_evaluation.modelevaluation method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelEvaluation.__init__"]], "__init__() (dials.algorithms.indexing.model_evaluation.modelrank method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank.__init__"]], "__init__() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.__init__"]], "__init__() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.__init__"]], "__init__() (dials.algorithms.indexing.nearest_neighbor.neighboranalysis method)": [[11, "dials.algorithms.indexing.nearest_neighbor.NeighborAnalysis.__init__"]], "__init__() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.__init__"]], "__init__() (dials.algorithms.indexing.symmetry.symmetryhandler method)": [[11, "dials.algorithms.indexing.symmetry.SymmetryHandler.__init__"]], "append() (dials.algorithms.indexing.model_evaluation.modelrank method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank.append"]], "append() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.append"]], "apply_hkl_offset() (in module dials.algorithms.indexing.indexer)": [[11, "dials.algorithms.indexing.indexer.apply_hkl_offset"]], "apply_symmetry() (dials.algorithms.indexing.symmetry.symmetryhandler method)": [[11, "dials.algorithms.indexing.symmetry.SymmetryHandler.apply_symmetry"]], "best_model() (dials.algorithms.indexing.model_evaluation.modelrank method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank.best_model"]], "best_model() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.best_model"]], "best_model() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.best_model"]], "calc_2d_rmsd_and_displacements() (in module dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.calc_2D_rmsd_and_displacements"]], "calc_acentric_subgroups() (in module dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.calc_acentric_subgroups"]], "candidate_orientation_matrices() (in module dials.algorithms.indexing.basis_vector_search.combinations)": [[11, "dials.algorithms.indexing.basis_vector_search.combinations.candidate_orientation_matrices"]], "choose_best_orientation_matrix() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.choose_best_orientation_matrix"]], "combined_scores() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.combined_scores"]], "compute_functional() (dials.algorithms.indexing.basis_vector_search.realspacegridsearch static method)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.compute_functional"]], "compute_functional() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectortarget method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget.compute_functional"]], "compute_functional_and_gradients() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectorminimiser method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorMinimiser.compute_functional_and_gradients"]], "compute_functional_and_gradients() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectortarget method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget.compute_functional_and_gradients"]], "crystal (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.crystal"]], "dials.algorithms.indexing": [[11, "module-dials.algorithms.indexing"]], "dials.algorithms.indexing.assign_indices": [[11, "module-dials.algorithms.indexing.assign_indices"]], "dials.algorithms.indexing.basis_vector_search": [[11, "module-dials.algorithms.indexing.basis_vector_search"]], "dials.algorithms.indexing.basis_vector_search.combinations": [[11, "module-dials.algorithms.indexing.basis_vector_search.combinations"]], "dials.algorithms.indexing.basis_vector_search.optimise": [[11, "module-dials.algorithms.indexing.basis_vector_search.optimise"]], "dials.algorithms.indexing.compare_orientation_matrices": [[11, "module-dials.algorithms.indexing.compare_orientation_matrices"]], "dials.algorithms.indexing.indexer": [[11, "module-dials.algorithms.indexing.indexer"]], "dials.algorithms.indexing.lattice_search": [[11, "module-dials.algorithms.indexing.lattice_search"]], "dials.algorithms.indexing.max_cell": [[11, "module-dials.algorithms.indexing.max_cell"]], "dials.algorithms.indexing.model_evaluation": [[11, "module-dials.algorithms.indexing.model_evaluation"]], "dials.algorithms.indexing.nearest_neighbor": [[11, "module-dials.algorithms.indexing.nearest_neighbor"]], "dials.algorithms.indexing.refinement": [[11, "module-dials.algorithms.indexing.refinement"]], "dials.algorithms.indexing.stills_indexer": [[11, "module-dials.algorithms.indexing.stills_indexer"]], "dials.algorithms.indexing.symmetry": [[11, "module-dials.algorithms.indexing.symmetry"]], "difference_rotation_matrix_axis_angle() (in module dials.algorithms.indexing.compare_orientation_matrices)": [[11, "dials.algorithms.indexing.compare_orientation_matrices.difference_rotation_matrix_axis_angle"]], "e_refine() (in module dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.e_refine"]], "evaluate() (dials.algorithms.indexing.model_evaluation.modelevaluation method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelEvaluation.evaluate"]], "evaluate() (dials.algorithms.indexing.model_evaluation.strategy method)": [[11, "dials.algorithms.indexing.model_evaluation.Strategy.evaluate"]], "experiment_list_for_crystal() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.experiment_list_for_crystal"]], "export_as_json() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.export_as_json"]], "export_reflections() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.export_reflections"]], "extend() (dials.algorithms.indexing.model_evaluation.modelrank method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank.extend"]], "extend() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.extend"]], "filter_by_likelihood() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.filter_by_likelihood"]], "filter_by_n_indexed() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.filter_by_n_indexed"]], "filter_by_volume() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.filter_by_volume"]], "filter_doubled_cell() (in module dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.filter_doubled_cell"]], "filter_known_symmetry() (in module dials.algorithms.indexing.basis_vector_search.combinations)": [[11, "dials.algorithms.indexing.basis_vector_search.combinations.filter_known_symmetry"]], "filter_similar_orientations() (in module dials.algorithms.indexing.basis_vector_search.combinations)": [[11, "dials.algorithms.indexing.basis_vector_search.combinations.filter_similar_orientations"]], "find_basis_vectors() (dials.algorithms.indexing.basis_vector_search.fft1d method)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D.find_basis_vectors"]], "find_basis_vectors() (dials.algorithms.indexing.basis_vector_search.fft3d method)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D.find_basis_vectors"]], "find_basis_vectors() (dials.algorithms.indexing.basis_vector_search.realspacegridsearch method)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.find_basis_vectors"]], "find_basis_vectors() (dials.algorithms.indexing.basis_vector_search.strategy method)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy.find_basis_vectors"]], "find_crystal_models() (dials.algorithms.indexing.lattice_search.lowresspotmatch method)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch.find_crystal_models"]], "find_crystal_models() (dials.algorithms.indexing.lattice_search.pinkindexer method)": [[11, "dials.algorithms.indexing.lattice_search.PinkIndexer.find_crystal_models"]], "find_crystal_models() (dials.algorithms.indexing.lattice_search.strategy method)": [[11, "dials.algorithms.indexing.lattice_search.Strategy.find_crystal_models"]], "find_lattices() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.find_lattices"]], "find_matching_symmetry() (in module dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.find_matching_symmetry"]], "find_max_cell() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.find_max_cell"]], "find_max_cell() (in module dials.algorithms.indexing.max_cell)": [[11, "dials.algorithms.indexing.max_cell.find_max_cell"]], "fraction_indexed (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.fraction_indexed"]], "from_parameters() (dials.algorithms.indexing.indexer.indexer static method)": [[11, "dials.algorithms.indexing.indexer.Indexer.from_parameters"]], "groups_cache() (in module dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.groups_cache"]], "hkl_offset (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.hkl_offset"]], "identify_outliers() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.identify_outliers"]], "index() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.index"]], "index() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.index"]], "index_reflections() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.index_reflections"]], "metric_supergroup() (in module dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.metric_supergroup"]], "model_likelihood (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.model_likelihood"]], "n_indexed (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.n_indexed"]], "optimise_basis_vectors() (in module dials.algorithms.indexing.basis_vector_search.optimise)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.optimise_basis_vectors"]], "phil_help (dials.algorithms.indexing.basis_vector_search.fft1d attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D.phil_help"]], "phil_help (dials.algorithms.indexing.basis_vector_search.fft3d attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D.phil_help"]], "phil_help (dials.algorithms.indexing.basis_vector_search.realspacegridsearch attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.phil_help"]], "phil_help (dials.algorithms.indexing.basis_vector_search.strategy attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy.phil_help"]], "phil_help (dials.algorithms.indexing.lattice_search.lowresspotmatch attribute)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch.phil_help"]], "phil_help (dials.algorithms.indexing.lattice_search.pinkindexer attribute)": [[11, "dials.algorithms.indexing.lattice_search.PinkIndexer.phil_help"]], "phil_help (dials.algorithms.indexing.lattice_search.strategy attribute)": [[11, "dials.algorithms.indexing.lattice_search.Strategy.phil_help"]], "phil_scope (dials.algorithms.indexing.basis_vector_search.fft1d attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D.phil_scope"]], "phil_scope (dials.algorithms.indexing.basis_vector_search.fft3d attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D.phil_scope"]], "phil_scope (dials.algorithms.indexing.basis_vector_search.realspacegridsearch attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.phil_scope"]], "phil_scope (dials.algorithms.indexing.basis_vector_search.strategy attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy.phil_scope"]], "phil_scope (dials.algorithms.indexing.lattice_search.lowresspotmatch attribute)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch.phil_scope"]], "phil_scope (dials.algorithms.indexing.lattice_search.pinkindexer attribute)": [[11, "dials.algorithms.indexing.lattice_search.PinkIndexer.phil_scope"]], "phil_scope (dials.algorithms.indexing.lattice_search.strategy attribute)": [[11, "dials.algorithms.indexing.lattice_search.Strategy.phil_scope"]], "plot_displacements() (in module dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.plot_displacements"]], "plot_histogram() (dials.algorithms.indexing.nearest_neighbor.neighboranalysis method)": [[11, "dials.algorithms.indexing.nearest_neighbor.NeighborAnalysis.plot_histogram"]], "refine() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.refine"]], "refine() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.refine"]], "refine() (in module dials.algorithms.indexing.refinement)": [[11, "dials.algorithms.indexing.refinement.refine"]], "rmsds (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.rmsds"]], "rotation_matrix_differences() (in module dials.algorithms.indexing.compare_orientation_matrices)": [[11, "dials.algorithms.indexing.compare_orientation_matrices.rotation_matrix_differences"]], "score_by_fraction_indexed() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.score_by_fraction_indexed"]], "score_by_rmsd_xy() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.score_by_rmsd_xy"]], "score_by_volume() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.score_by_volume"]], "score_vectors() (dials.algorithms.indexing.basis_vector_search.realspacegridsearch method)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.score_vectors"]], "search_directions (dials.algorithms.indexing.basis_vector_search.realspacegridsearch property)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.search_directions"]], "search_vectors (dials.algorithms.indexing.basis_vector_search.realspacegridsearch property)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.search_vectors"]], "setup_indexing() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.setup_indexing"]], "show_experiments() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.show_experiments"]], "update_analysis() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.update_analysis"]], "warn_if_setting_unused_refinement_protocol_params() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.warn_if_setting_unused_refinement_protocol_params"]], "executor (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Executor"]], "integrator (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Integrator"]], "integrator2d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Integrator2D"]], "integrator3d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Integrator3D"]], "integrator3dthreaded (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded"]], "integratorexecutor (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor"]], "integratorflat3d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.IntegratorFlat3D"]], "integratorsingle2d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.IntegratorSingle2D"]], "integratorstills (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.IntegratorStills"]], "joblist (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.JobList"]], "parameters (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Parameters"]], "parameters.filter (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Parameters.Filter"]], "parameters.profile (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Parameters.Profile"]], "parameters.profile.validation (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Parameters.Profile.Validation"]], "processor2d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Processor2D"]], "processor3d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Processor3D"]], "processorclass (dials.algorithms.integration.integrator.integrator2d attribute)": [[12, "dials.algorithms.integration.integrator.Integrator2D.ProcessorClass"]], "processorclass (dials.algorithms.integration.integrator.integrator3d attribute)": [[12, "dials.algorithms.integration.integrator.Integrator3D.ProcessorClass"]], "processorclass (dials.algorithms.integration.integrator.integratorflat3d attribute)": [[12, "dials.algorithms.integration.integrator.IntegratorFlat3D.ProcessorClass"]], "processorclass (dials.algorithms.integration.integrator.integratorsingle2d attribute)": [[12, "dials.algorithms.integration.integrator.IntegratorSingle2D.ProcessorClass"]], "processorclass (dials.algorithms.integration.integrator.integratorstills attribute)": [[12, "dials.algorithms.integration.integrator.IntegratorStills.ProcessorClass"]], "processorflat3d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProcessorFlat3D"]], "processorsingle2d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProcessorSingle2D"]], "processorstills (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProcessorStills"]], "profilemodellerexecutor (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor"]], "profilevalidatorexecutor (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor"]], "reflectionmanager (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ReflectionManager"]], "__init__() (dials.algorithms.integration.integrator.executor method)": [[12, "dials.algorithms.integration.integrator.Executor.__init__"]], "__init__() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.__init__"]], "__init__() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.__init__"]], "__init__() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.__init__"]], "__init__() (dials.algorithms.integration.integrator.joblist method)": [[12, "dials.algorithms.integration.integrator.JobList.__init__"]], "__init__() (dials.algorithms.integration.integrator.parameters method)": [[12, "dials.algorithms.integration.integrator.Parameters.__init__"]], "__init__() (dials.algorithms.integration.integrator.parameters.filter method)": [[12, "dials.algorithms.integration.integrator.Parameters.Filter.__init__"]], "__init__() (dials.algorithms.integration.integrator.parameters.profile method)": [[12, "dials.algorithms.integration.integrator.Parameters.Profile.__init__"]], "__init__() (dials.algorithms.integration.integrator.parameters.profile.validation method)": [[12, "dials.algorithms.integration.integrator.Parameters.Profile.Validation.__init__"]], "__init__() (dials.algorithms.integration.integrator.processor2d method)": [[12, "dials.algorithms.integration.integrator.Processor2D.__init__"]], "__init__() (dials.algorithms.integration.integrator.processor3d method)": [[12, "dials.algorithms.integration.integrator.Processor3D.__init__"]], "__init__() (dials.algorithms.integration.integrator.processorflat3d method)": [[12, "dials.algorithms.integration.integrator.ProcessorFlat3D.__init__"]], "__init__() (dials.algorithms.integration.integrator.processorsingle2d method)": [[12, "dials.algorithms.integration.integrator.ProcessorSingle2D.__init__"]], "__init__() (dials.algorithms.integration.integrator.processorstills method)": [[12, "dials.algorithms.integration.integrator.ProcessorStills.__init__"]], "__init__() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.__init__"]], "__init__() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.__init__"]], "__init__() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.__init__"]], "accumulate() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.accumulate"]], "add() (dials.algorithms.integration.integrator.joblist method)": [[12, "dials.algorithms.integration.integrator.JobList.add"]], "data() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.data"]], "data() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.data"]], "data() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.data"]], "data() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.data"]], "dials.algorithms.integration.integrator": [[12, "module-dials.algorithms.integration.integrator"]], "finalise() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.finalise"]], "finalize() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.finalize"]], "finalize() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.finalize"]], "finalize() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.finalize"]], "finalize_reflections() (dials.algorithms.integration.integrator.integrator2d static method)": [[12, "dials.algorithms.integration.integrator.Integrator2D.finalize_reflections"]], "finalize_reflections() (dials.algorithms.integration.integrator.integrator3d static method)": [[12, "dials.algorithms.integration.integrator.Integrator3D.finalize_reflections"]], "finalize_reflections() (dials.algorithms.integration.integrator.integratorflat3d static method)": [[12, "dials.algorithms.integration.integrator.IntegratorFlat3D.finalize_reflections"]], "finalize_reflections() (dials.algorithms.integration.integrator.integratorsingle2d static method)": [[12, "dials.algorithms.integration.integrator.IntegratorSingle2D.finalize_reflections"]], "finalize_reflections() (dials.algorithms.integration.integrator.integratorstills static method)": [[12, "dials.algorithms.integration.integrator.IntegratorStills.finalize_reflections"]], "finished() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.finished"]], "fit_profiles() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.fit_profiles"]], "frame_hist() (in module dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.frame_hist"]], "from_phil() (dials.algorithms.integration.integrator.parameters static method)": [[12, "dials.algorithms.integration.integrator.Parameters.from_phil"]], "generate_phil_scope() (in module dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.generate_phil_scope"]], "hist() (in module dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.hist"]], "initialise() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.initialise"]], "initialize() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.initialize"]], "initialize() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.initialize"]], "initialize() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.initialize"]], "initialize_reflections() (dials.algorithms.integration.integrator.integrator2d static method)": [[12, "dials.algorithms.integration.integrator.Integrator2D.initialize_reflections"]], "initialize_reflections() (dials.algorithms.integration.integrator.integrator3d static method)": [[12, "dials.algorithms.integration.integrator.Integrator3D.initialize_reflections"]], "initialize_reflections() (dials.algorithms.integration.integrator.integratorflat3d static method)": [[12, "dials.algorithms.integration.integrator.IntegratorFlat3D.initialize_reflections"]], "initialize_reflections() (dials.algorithms.integration.integrator.integratorsingle2d static method)": [[12, "dials.algorithms.integration.integrator.IntegratorSingle2D.initialize_reflections"]], "initialize_reflections() (dials.algorithms.integration.integrator.integratorstills static method)": [[12, "dials.algorithms.integration.integrator.IntegratorStills.initialize_reflections"]], "integrate() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.integrate"]], "integrate() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.integrate"]], "job() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.job"]], "nframes_hist() (in module dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.nframes_hist"]], "num_reflections() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.num_reflections"]], "process() (dials.algorithms.integration.integrator.executor method)": [[12, "dials.algorithms.integration.integrator.Executor.process"]], "process() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.process"]], "process() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.process"]], "process() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.process"]], "report() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.report"]], "report() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.report"]], "shoebox_memory() (dials.algorithms.integration.integrator.joblist method)": [[12, "dials.algorithms.integration.integrator.JobList.shoebox_memory"]], "split() (dials.algorithms.integration.integrator.joblist method)": [[12, "dials.algorithms.integration.integrator.JobList.split"]], "split() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.split"]], "summary() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.summary"]], "summary() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.summary"]], "dials.algorithms.profile_model": [[13, "module-dials.algorithms.profile_model"]], "adaptlbfgs (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs"]], "adaptlstbx (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx"]], "blockcalculator (class in dials.algorithms.refinement.reflection_manager)": [[14, "dials.algorithms.refinement.reflection_manager.BlockCalculator"]], "constantweightingstrategy (class in dials.algorithms.refinement.weighting_strategies)": [[14, "dials.algorithms.refinement.weighting_strategies.ConstantWeightingStrategy"]], "disablempmixin (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.DisableMPmixin"]], "externaldelpsiweightingstrategy (class in dials.algorithms.refinement.weighting_strategies)": [[14, "dials.algorithms.refinement.weighting_strategies.ExternalDelPsiWeightingStrategy"]], "gaussnewtoniterations (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations"]], "journal (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.Journal"]], "lbfgscurvs (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.LBFGScurvs"]], "leastsquarespositionalresidualwithrmsdcutoff (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoff"]], "leastsquarespositionalresidualwithrmsdcutoffsparse (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoffSparse"]], "leastsquaresstillsresidualwithrmsdcutoff (class in dials.algorithms.refinement.target_stills)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff"]], "leastsquaresstillsresidualwithrmsdcutoffsparse (class in dials.algorithms.refinement.target_stills)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoffSparse"]], "levenbergmarquardtiterations (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations"]], "refiner (class in dials.algorithms.refinement.refiner)": [[14, "dials.algorithms.refinement.refiner.Refiner"]], "refinerfactory (class in dials.algorithms.refinement.refiner)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory"]], "refinery (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.Refinery"]], "reflectionmanager (class in dials.algorithms.refinement.reflection_manager)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager"]], "reflectionmanagerfactory (class in dials.algorithms.refinement.reflection_manager)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManagerFactory"]], "scanvaryingrefiner (class in dials.algorithms.refinement.refiner)": [[14, "dials.algorithms.refinement.refiner.ScanVaryingRefiner"]], "simplelbfgs (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.SimpleLBFGS"]], "sparsegradientsmixin (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.SparseGradientsMixin"]], "statisticalweightingstrategy (class in dials.algorithms.refinement.weighting_strategies)": [[14, "dials.algorithms.refinement.weighting_strategies.StatisticalWeightingStrategy"]], "stillsreflectionmanager (class in dials.algorithms.refinement.reflection_manager)": [[14, "dials.algorithms.refinement.reflection_manager.StillsReflectionManager"]], "stillsweightingstrategy (class in dials.algorithms.refinement.weighting_strategies)": [[14, "dials.algorithms.refinement.weighting_strategies.StillsWeightingStrategy"]], "target (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.Target"]], "targetfactory (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.TargetFactory"]], "__init__() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.__init__"]], "__init__() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.__init__"]], "__init__() (dials.algorithms.refinement.engine.gaussnewtoniterations method)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.__init__"]], "__init__() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.__init__"]], "__init__() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.__init__"]], "__init__() (dials.algorithms.refinement.reflection_manager.blockcalculator method)": [[14, "dials.algorithms.refinement.reflection_manager.BlockCalculator.__init__"]], "__init__() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.__init__"]], "__init__() (dials.algorithms.refinement.target.leastsquarespositionalresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoff.__init__"]], "__init__() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.__init__"]], "__init__() (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.__init__"]], "__init__() (dials.algorithms.refinement.weighting_strategies.constantweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.ConstantWeightingStrategy.__init__"]], "__init__() (dials.algorithms.refinement.weighting_strategies.stillsweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.StillsWeightingStrategy.__init__"]], "achieved() (dials.algorithms.refinement.target.leastsquarespositionalresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoff.achieved"]], "achieved() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.achieved"]], "achieved() (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.achieved"]], "add_column() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.add_column"]], "add_constant_to_diagonal() (dials.algorithms.refinement.engine.levenbergmarquardtiterations method)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.add_constant_to_diagonal"]], "add_row() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.add_row"]], "build_up() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.build_up"]], "calc_exp_rmsd_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.calc_exp_rmsd_table"]], "calculate_esds() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.calculate_esds"]], "calculate_gradients() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.calculate_gradients"]], "calculate_weights() (dials.algorithms.refinement.weighting_strategies.constantweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.ConstantWeightingStrategy.calculate_weights"]], "calculate_weights() (dials.algorithms.refinement.weighting_strategies.externaldelpsiweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.ExternalDelPsiWeightingStrategy.calculate_weights"]], "calculate_weights() (dials.algorithms.refinement.weighting_strategies.statisticalweightingstrategy static method)": [[14, "dials.algorithms.refinement.weighting_strategies.StatisticalWeightingStrategy.calculate_weights"]], "calculate_weights() (dials.algorithms.refinement.weighting_strategies.stillsweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.StillsWeightingStrategy.calculate_weights"]], "callback_after_step() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.callback_after_step"]], "compute_functional_and_gradients() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.compute_functional_and_gradients"]], "compute_functional_gradients_and_curvatures() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.compute_functional_gradients_and_curvatures"]], "compute_functional_gradients_and_curvatures() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_functional_gradients_and_curvatures"]], "compute_functional_gradients_diag() (dials.algorithms.refinement.engine.lbfgscurvs method)": [[14, "dials.algorithms.refinement.engine.LBFGScurvs.compute_functional_gradients_diag"]], "compute_residuals() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_residuals"]], "compute_residuals_and_gradients() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_residuals_and_gradients"]], "compute_restraints_functional_gradients_and_curvatures() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_restraints_functional_gradients_and_curvatures"]], "compute_restraints_residuals_and_gradients() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_restraints_residuals_and_gradients"]], "config_refinery() (dials.algorithms.refinement.refiner.refinerfactory static method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.config_refinery"]], "config_restraints() (dials.algorithms.refinement.refiner.refinerfactory static method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.config_restraints"]], "config_sparse() (dials.algorithms.refinement.refiner.refinerfactory static method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.config_sparse"]], "config_target() (dials.algorithms.refinement.refiner.refinerfactory static method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.config_target"]], "convergence_as_shift_over_esd (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.convergence_as_shift_over_esd"]], "damping_value (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.damping_value"]], "del_last_row() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.del_last_row"]], "dials.algorithms.refinement.engine": [[14, "module-dials.algorithms.refinement.engine"]], "dials.algorithms.refinement.refiner": [[14, "module-dials.algorithms.refinement.refiner"]], "dials.algorithms.refinement.reflection_manager": [[14, "module-dials.algorithms.refinement.reflection_manager"]], "dials.algorithms.refinement.target": [[14, "module-dials.algorithms.refinement.target"]], "dials.algorithms.refinement.target_stills": [[14, "module-dials.algorithms.refinement.target_stills"]], "dials.algorithms.refinement.weighting_strategies": [[14, "module-dials.algorithms.refinement.weighting_strategies"]], "dim (dials.algorithms.refinement.target.target property)": [[14, "dials.algorithms.refinement.target.Target.dim"]], "experiment_type (dials.algorithms.refinement.reflection_manager.reflectionmanager attribute)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.experiment_type"]], "experiment_type (dials.algorithms.refinement.reflection_manager.stillsreflectionmanager attribute)": [[14, "dials.algorithms.refinement.reflection_manager.StillsReflectionManager.experiment_type"]], "filter_obs() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.filter_obs"]], "finalise() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.finalise"]], "from_json_file() (dials.algorithms.refinement.engine.journal class method)": [[14, "dials.algorithms.refinement.engine.Journal.from_json_file"]], "from_parameters_and_experiments() (dials.algorithms.refinement.target.targetfactory static method)": [[14, "dials.algorithms.refinement.target.TargetFactory.from_parameters_and_experiments"]], "from_parameters_data_experiments() (dials.algorithms.refinement.refiner.refinerfactory class method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.from_parameters_data_experiments"]], "from_parameters_reflections_experiments() (dials.algorithms.refinement.reflection_manager.reflectionmanagerfactory static method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManagerFactory.from_parameters_reflections_experiments"]], "get_accepted_refs_size() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_accepted_refs_size"]], "get_centroid_analyser() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_centroid_analyser"]], "get_correlation_matrix_for_step() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.get_correlation_matrix_for_step"]], "get_experiments() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_experiments"]], "get_free_reflections() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_free_reflections"]], "get_free_reflections() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_free_reflections"]], "get_indexed() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_indexed"]], "get_matches() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_matches"]], "get_matches() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_matches"]], "get_nrows() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.get_nrows"]], "get_num_matches() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.get_num_matches"]], "get_num_matches_for_experiment() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.get_num_matches_for_experiment"]], "get_num_matches_for_panel() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.get_num_matches_for_panel"]], "get_num_steps() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.get_num_steps"]], "get_obs() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_obs"]], "get_param_reporter() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_param_reporter"]], "get_parameter_correlation_matrix() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_parameter_correlation_matrix"]], "get_sample_size() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_sample_size"]], "gradient_threshold (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.gradient_threshold"]], "history (dials.algorithms.refinement.refiner.refiner property)": [[14, "dials.algorithms.refinement.refiner.Refiner.history"]], "jacobian_condition_number() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.jacobian_condition_number"]], "max_shift_over_esd (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.max_shift_over_esd"]], "mu (dials.algorithms.refinement.engine.levenbergmarquardtiterations property)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.mu"]], "parameter_vector_norm() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.parameter_vector_norm"]], "per_image() (dials.algorithms.refinement.reflection_manager.blockcalculator method)": [[14, "dials.algorithms.refinement.reflection_manager.BlockCalculator.per_image"]], "per_width() (dials.algorithms.refinement.reflection_manager.blockcalculator method)": [[14, "dials.algorithms.refinement.reflection_manager.BlockCalculator.per_width"]], "predict() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.predict"]], "predict_for_free_reflections() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.predict_for_free_reflections"]], "predict_for_indexed() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.predict_for_indexed"]], "predict_for_reflection_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.predict_for_reflection_table"]], "predict_for_reflection_table() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.predict_for_reflection_table"]], "predict_for_reflection_table() (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.predict_for_reflection_table"]], "prepare_for_step() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.prepare_for_step"]], "print_exp_rmsd_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.print_exp_rmsd_table"]], "print_out_of_sample_rmsd_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.print_out_of_sample_rmsd_table"]], "print_panel_rmsd_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.print_panel_rmsd_table"]], "print_stats_on_matches() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.print_stats_on_matches"]], "print_stats_on_matches() (dials.algorithms.refinement.reflection_manager.stillsreflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.StillsReflectionManager.print_stats_on_matches"]], "print_step_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.print_step_table"]], "reason_for_termination (dials.algorithms.refinement.engine.journal attribute)": [[14, "dials.algorithms.refinement.engine.Journal.reason_for_termination"]], "reflections_after_outlier_rejection() (dials.algorithms.refinement.refiner.refinerfactory class method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.reflections_after_outlier_rejection"]], "report_progress() (dials.algorithms.refinement.engine.levenbergmarquardtiterations method)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.report_progress"]], "reset_accepted_reflections() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.reset_accepted_reflections"]], "restart() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.restart"]], "rmsd_names (dials.algorithms.refinement.target.target attribute)": [[14, "dials.algorithms.refinement.target.Target.rmsd_names"]], "rmsd_names (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff attribute)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.rmsd_names"]], "rmsd_units (dials.algorithms.refinement.target.target attribute)": [[14, "dials.algorithms.refinement.target.Target.rmsd_units"]], "rmsd_units (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff attribute)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.rmsd_units"]], "rmsds() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.rmsds"]], "rmsds() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.rmsds"]], "rmsds_for_experiment() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.rmsds_for_experiment"]], "rmsds_for_panel() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.rmsds_for_panel"]], "rmsds_for_reflection_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.rmsds_for_reflection_table"]], "rmsds_for_reflection_table() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.rmsds_for_reflection_table"]], "run() (dials.algorithms.refinement.engine.gaussnewtoniterations method)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.run"]], "run() (dials.algorithms.refinement.engine.lbfgscurvs method)": [[14, "dials.algorithms.refinement.engine.LBFGScurvs.run"]], "run() (dials.algorithms.refinement.engine.levenbergmarquardtiterations method)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.run"]], "run() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.run"]], "run() (dials.algorithms.refinement.engine.simplelbfgs method)": [[14, "dials.algorithms.refinement.engine.SimpleLBFGS.run"]], "run() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.run"]], "run_lbfgs() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.run_lbfgs"]], "selection_used_for_refinement() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.selection_used_for_refinement"]], "set_cholesky_factor() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.set_cholesky_factor"]], "set_last_cell() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.set_last_cell"]], "set_nproc() (dials.algorithms.refinement.engine.disablempmixin method)": [[14, "dials.algorithms.refinement.engine.DisableMPmixin.set_nproc"]], "set_nproc() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.set_nproc"]], "setup_mu() (dials.algorithms.refinement.engine.levenbergmarquardtiterations method)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.setup_mu"]], "split_jacobian_into_blocks() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.split_jacobian_into_blocks"]], "split_matches_into_blocks() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.split_matches_into_blocks"]], "step_backward() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.step_backward"]], "step_forward() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.step_forward"]], "step_threshold (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.step_threshold"]], "tau (dials.algorithms.refinement.engine.levenbergmarquardtiterations attribute)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.tau"]], "test_for_termination() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.test_for_termination"]], "test_objective_increasing_but_not_nref() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.test_objective_increasing_but_not_nref"]], "test_rmsd_convergence() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.test_rmsd_convergence"]], "to_json_file() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.to_json_file"]], "update_journal() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.update_journal"]], "update_matches() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.update_matches"]], "arrayscalingmodel (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel"]], "dosedecay (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.DoseDecay"]], "kbscalingmodel (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel"]], "normdevoutlierrejection (class in dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.NormDevOutlierRejection"]], "outlierrejectionbase (class in dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase"]], "physicalscalingmodel (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel"]], "scalingmodelbase (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase"]], "simplenormdevoutlierrejection (class in dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.SimpleNormDevOutlierRejection"]], "targetedoutlierrejection (class in dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.TargetedOutlierRejection"]], "__init__() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.__init__"]], "__init__() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.__init__"]], "__init__() (dials.algorithms.scaling.model.model.kbscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.__init__"]], "__init__() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.__init__"]], "__init__() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.__init__"]], "__init__() (dials.algorithms.scaling.outlier_rejection.normdevoutlierrejection method)": [[15, "dials.algorithms.scaling.outlier_rejection.NormDevOutlierRejection.__init__"]], "__init__() (dials.algorithms.scaling.outlier_rejection.outlierrejectionbase method)": [[15, "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase.__init__"]], "__init__() (dials.algorithms.scaling.outlier_rejection.simplenormdevoutlierrejection method)": [[15, "dials.algorithms.scaling.outlier_rejection.SimpleNormDevOutlierRejection.__init__"]], "__init__() (dials.algorithms.scaling.outlier_rejection.targetedoutlierrejection method)": [[15, "dials.algorithms.scaling.outlier_rejection.TargetedOutlierRejection.__init__"]], "calc_n_param_from_bins() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.calc_n_param_from_bins"]], "calculate_new_offset() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.calculate_new_offset"]], "components (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.components"]], "configdict (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.configdict"]], "configure_components() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.configure_components"]], "configure_components() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.configure_components"]], "configure_components() (dials.algorithms.scaling.model.model.kbscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.configure_components"]], "configure_components() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.configure_components"]], "configure_components() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.configure_components"]], "consecutive_refinement_order (dials.algorithms.scaling.model.model.arrayscalingmodel property)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.consecutive_refinement_order"]], "consecutive_refinement_order (dials.algorithms.scaling.model.model.dosedecay property)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.consecutive_refinement_order"]], "consecutive_refinement_order (dials.algorithms.scaling.model.model.kbscalingmodel property)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.consecutive_refinement_order"]], "consecutive_refinement_order (dials.algorithms.scaling.model.model.physicalscalingmodel property)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.consecutive_refinement_order"]], "consecutive_refinement_order() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.consecutive_refinement_order"]], "determine_esq_outlier_index_arrays() (in module dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.determine_Esq_outlier_index_arrays"]], "determine_auto_absorption_params() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.determine_auto_absorption_params"]], "determine_outlier_index_arrays() (in module dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.determine_outlier_index_arrays"]], "dials.algorithms.scaling": [[15, "module-dials.algorithms.scaling"]], "dials.algorithms.scaling.model.model": [[15, "module-dials.algorithms.scaling.model.model"]], "dials.algorithms.scaling.outlier_rejection": [[15, "module-dials.algorithms.scaling.outlier_rejection"]], "error_model (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.error_model"]], "final_outlier_arrays (dials.algorithms.scaling.outlier_rejection.outlierrejectionbase attribute)": [[15, "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase.final_outlier_arrays"]], "fix_initial_parameter() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.fix_initial_parameter"]], "fix_initial_parameter() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.fix_initial_parameter"]], "fix_initial_parameter() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.fix_initial_parameter"]], "fixed_components (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.fixed_components"]], "from_data() (dials.algorithms.scaling.model.model.arrayscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.from_data"]], "from_data() (dials.algorithms.scaling.model.model.dosedecay class method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.from_data"]], "from_data() (dials.algorithms.scaling.model.model.kbscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.from_data"]], "from_data() (dials.algorithms.scaling.model.model.physicalscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.from_data"]], "from_data() (dials.algorithms.scaling.model.model.scalingmodelbase class method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.from_data"]], "from_dict() (dials.algorithms.scaling.model.model.arrayscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.from_dict"]], "from_dict() (dials.algorithms.scaling.model.model.dosedecay class method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.from_dict"]], "from_dict() (dials.algorithms.scaling.model.model.kbscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.from_dict"]], "from_dict() (dials.algorithms.scaling.model.model.physicalscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.from_dict"]], "from_dict() (dials.algorithms.scaling.model.model.scalingmodelbase class method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.from_dict"]], "get_shared_components() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.get_shared_components"]], "get_shared_components() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.get_shared_components"]], "get_shared_components() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.get_shared_components"]], "id_ (dials.algorithms.scaling.model.model.arrayscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.id_"]], "id_ (dials.algorithms.scaling.model.model.dosedecay attribute)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.id_"]], "id_ (dials.algorithms.scaling.model.model.kbscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.id_"]], "id_ (dials.algorithms.scaling.model.model.physicalscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.id_"]], "id_ (dials.algorithms.scaling.model.model.scalingmodelbase attribute)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.id_"]], "initialise_smooth_input() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.initialise_smooth_input"]], "is_scaled (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.is_scaled"]], "limit_image_range() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.limit_image_range"]], "limit_image_range() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.limit_image_range"]], "limit_image_range() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.limit_image_range"]], "limit_image_range() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.limit_image_range"]], "load_error_model() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.load_error_model"]], "make_combined_plots() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.make_combined_plots"]], "n_params (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.n_params"]], "phil_scope (dials.algorithms.scaling.model.model.arrayscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.phil_scope"]], "phil_scope (dials.algorithms.scaling.model.model.dosedecay attribute)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.phil_scope"]], "phil_scope (dials.algorithms.scaling.model.model.kbscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.phil_scope"]], "phil_scope (dials.algorithms.scaling.model.model.physicalscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.phil_scope"]], "plot_model_components() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.plot_model_components"]], "plot_model_components() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.plot_model_components"]], "plot_model_components() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.plot_model_components"]], "plot_model_components() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.plot_model_components"]], "plot_scaling_models() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.plot_scaling_models"]], "record_intensity_combination_imid() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.record_intensity_combination_Imid"]], "reject_outliers() (in module dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.reject_outliers"]], "run() (dials.algorithms.scaling.outlier_rejection.outlierrejectionbase method)": [[15, "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase.run"]], "set_error_model() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.set_error_model"]], "set_scaling_model_as_scaled() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.set_scaling_model_as_scaled"]], "set_scaling_model_as_unscaled() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.set_scaling_model_as_unscaled"]], "set_valid_image_range() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.set_valid_image_range"]], "to_dict() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.to_dict"]], "update() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.update"]], "update() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.update"]], "update() (dials.algorithms.scaling.model.model.kbscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.update"]], "update() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.update"]], "update() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.update"]], "backgroundgradientfilter (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.BackgroundGradientFilter"]], "extractpixelsfromimage (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage"]], "extractpixelsfromimage2dnoshoeboxes (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage2DNoShoeboxes"]], "extractspots (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.ExtractSpots"]], "extractspotsparalleltask (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.ExtractSpotsParallelTask"]], "filterrunner (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.FilterRunner"]], "peakcentroiddistancefilter (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.PeakCentroidDistanceFilter"]], "spotdensityfilter (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.SpotDensityFilter"]], "spotfinder (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.SpotFinder"]], "spotfinderfactory (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory"]], "tofspotfinder (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.TOFSpotFinder"]], "__init__() (dials.algorithms.spot_finding.factory.backgroundgradientfilter method)": [[16, "dials.algorithms.spot_finding.factory.BackgroundGradientFilter.__init__"]], "__init__() (dials.algorithms.spot_finding.factory.filterrunner method)": [[16, "dials.algorithms.spot_finding.factory.FilterRunner.__init__"]], "__init__() (dials.algorithms.spot_finding.factory.peakcentroiddistancefilter method)": [[16, "dials.algorithms.spot_finding.factory.PeakCentroidDistanceFilter.__init__"]], "__init__() (dials.algorithms.spot_finding.factory.spotdensityfilter method)": [[16, "dials.algorithms.spot_finding.factory.SpotDensityFilter.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.extractpixelsfromimage method)": [[16, "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.extractpixelsfromimage2dnoshoeboxes method)": [[16, "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage2DNoShoeboxes.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.extractspots method)": [[16, "dials.algorithms.spot_finding.finder.ExtractSpots.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.extractspotsparalleltask method)": [[16, "dials.algorithms.spot_finding.finder.ExtractSpotsParallelTask.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.spotfinder method)": [[16, "dials.algorithms.spot_finding.finder.SpotFinder.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.tofspotfinder method)": [[16, "dials.algorithms.spot_finding.finder.TOFSpotFinder.__init__"]], "check_flags() (dials.algorithms.spot_finding.factory.filterrunner method)": [[16, "dials.algorithms.spot_finding.factory.FilterRunner.check_flags"]], "configure_filter() (dials.algorithms.spot_finding.factory.spotfinderfactory static method)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory.configure_filter"]], "configure_threshold() (dials.algorithms.spot_finding.factory.spotfinderfactory static method)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory.configure_threshold"]], "dials.algorithms.spot_finding.factory": [[16, "module-dials.algorithms.spot_finding.factory"]], "dials.algorithms.spot_finding.finder": [[16, "module-dials.algorithms.spot_finding.finder"]], "find_spots() (dials.algorithms.spot_finding.finder.spotfinder method)": [[16, "dials.algorithms.spot_finding.finder.SpotFinder.find_spots"]], "from_parameters() (dials.algorithms.spot_finding.factory.spotfinderfactory static method)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory.from_parameters"]], "generate_phil_scope() (in module dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.generate_phil_scope"]], "load_image() (dials.algorithms.spot_finding.factory.spotfinderfactory static method)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory.load_image"]], "pixel_list_to_reflection_table() (in module dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.pixel_list_to_reflection_table"]], "pixel_list_to_shoeboxes() (in module dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.pixel_list_to_shoeboxes"]], "run() (dials.algorithms.spot_finding.factory.backgroundgradientfilter method)": [[16, "dials.algorithms.spot_finding.factory.BackgroundGradientFilter.run"]], "run() (dials.algorithms.spot_finding.factory.peakcentroiddistancefilter method)": [[16, "dials.algorithms.spot_finding.factory.PeakCentroidDistanceFilter.run"]], "run() (dials.algorithms.spot_finding.factory.spotdensityfilter method)": [[16, "dials.algorithms.spot_finding.factory.SpotDensityFilter.run"]], "shoeboxes_to_reflection_table() (in module dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.shoeboxes_to_reflection_table"]], "reflectionpredictor (class in dials.algorithms.spot_prediction.reflection_predictor)": [[17, "dials.algorithms.spot_prediction.reflection_predictor.ReflectionPredictor"]], "__init__() (dials.algorithms.spot_prediction.reflection_predictor.reflectionpredictor method)": [[17, "dials.algorithms.spot_prediction.reflection_predictor.ReflectionPredictor.__init__"]], "dials.algorithms.spot_prediction.reflection_predictor": [[17, "module-dials.algorithms.spot_prediction.reflection_predictor"]], "predictor() (dials.algorithms.spot_prediction.reflection_predictor.reflectionpredictor method)": [[17, "dials.algorithms.spot_prediction.reflection_predictor.ReflectionPredictor.predictor"]], "correlationcoefficientaccumulator (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator"]], "cosymanalysis (class in dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis"]], "lauegroupanalysis (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis"]], "scorecorrelationcoefficient (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient"]], "scoresubgroup (class in dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.ScoreSubGroup"]], "scoresubgroup (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSubGroup"]], "scoresymmetryelement (class in dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.ScoreSymmetryElement"]], "scoresymmetryelement (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSymmetryElement"]], "symmetryanalysis (class in dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis"]], "target (class in dials.algorithms.symmetry.cosym.target)": [[18, "dials.algorithms.symmetry.cosym.target.Target"]], "__init__() (dials.algorithms.symmetry.cosym.cosymanalysis method)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.scoresubgroup method)": [[18, "dials.algorithms.symmetry.cosym.ScoreSubGroup.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.scoresymmetryelement method)": [[18, "dials.algorithms.symmetry.cosym.ScoreSymmetryElement.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.symmetryanalysis method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.lauegroupanalysis method)": [[18, "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.scorecorrelationcoefficient method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.scoresubgroup method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSubGroup.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.scoresymmetryelement method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSymmetryElement.__init__"]], "__init__() (dials.algorithms.symmetry.symmetry_base method)": [[18, "dials.algorithms.symmetry.symmetry_base.__init__"]], "accumulate() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.accumulate"]], "as_dict() (dials.algorithms.symmetry.cosym.cosymanalysis method)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis.as_dict"]], "as_dict() (dials.algorithms.symmetry.cosym.scoresubgroup method)": [[18, "dials.algorithms.symmetry.cosym.ScoreSubGroup.as_dict"]], "as_dict() (dials.algorithms.symmetry.cosym.scoresymmetryelement method)": [[18, "dials.algorithms.symmetry.cosym.ScoreSymmetryElement.as_dict"]], "as_dict() (dials.algorithms.symmetry.cosym.symmetryanalysis method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.as_dict"]], "as_dict() (dials.algorithms.symmetry.laue_group.lauegroupanalysis method)": [[18, "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis.as_dict"]], "as_dict() (dials.algorithms.symmetry.laue_group.scoresubgroup method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSubGroup.as_dict"]], "as_dict() (dials.algorithms.symmetry.laue_group.scoresymmetryelement method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSymmetryElement.as_dict"]], "as_json() (dials.algorithms.symmetry.cosym.cosymanalysis method)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis.as_json"]], "as_json() (dials.algorithms.symmetry.laue_group.lauegroupanalysis method)": [[18, "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis.as_json"]], "callback_after_step() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.callback_after_step"]], "change_of_basis_op_to_best_cell() (in module dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.change_of_basis_op_to_best_cell"]], "coefficient() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.coefficient"]], "compute_functional() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.compute_functional"]], "compute_functional_and_gradients() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.compute_functional_and_gradients"]], "compute_functional_gradients_and_curvatures() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.compute_functional_gradients_and_curvatures"]], "compute_functional_gradients_diag() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.compute_functional_gradients_diag"]], "compute_gradients() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.compute_gradients"]], "compute_gradients_fd() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.compute_gradients_fd"]], "curvatures() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.curvatures"]], "curvatures_fd() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.curvatures_fd"]], "denominator() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.denominator"]], "determine_reindex_operator_against_reference() (in module dials.algorithms.symmetry.reindex_to_reference)": [[18, "dials.algorithms.symmetry.reindex_to_reference.determine_reindex_operator_against_reference"]], "dials.algorithms.symmetry": [[18, "module-dials.algorithms.symmetry"]], "dials.algorithms.symmetry.cosym": [[18, "module-dials.algorithms.symmetry.cosym"]], "dials.algorithms.symmetry.cosym.engine": [[18, "module-dials.algorithms.symmetry.cosym.engine"]], "dials.algorithms.symmetry.cosym.target": [[18, "module-dials.algorithms.symmetry.cosym.target"]], "dials.algorithms.symmetry.laue_group": [[18, "module-dials.algorithms.symmetry.laue_group"]], "dials.algorithms.symmetry.reindex_to_reference": [[18, "module-dials.algorithms.symmetry.reindex_to_reference"]], "dim (dials.algorithms.symmetry.cosym.target.target attribute)": [[18, "dials.algorithms.symmetry.cosym.target.Target.dim"]], "extract_reference_intensities() (in module dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.extract_reference_intensities"]], "kernel_normalisation() (dials.algorithms.symmetry.symmetry_base static method)": [[18, "dials.algorithms.symmetry.symmetry_base.kernel_normalisation"]], "lbfgs_with_curvs (class in dials.algorithms.symmetry.cosym.engine)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs"]], "median_unit_cell() (in module dials.algorithms.symmetry)": [[18, "dials.algorithms.symmetry.median_unit_cell"]], "minimize_scipy() (in module dials.algorithms.symmetry.cosym.engine)": [[18, "dials.algorithms.symmetry.cosym.engine.minimize_scipy"]], "minimize_scitbx_lbfgs() (in module dials.algorithms.symmetry.cosym.engine)": [[18, "dials.algorithms.symmetry.cosym.engine.minimize_scitbx_lbfgs"]], "ml_aniso_normalisation() (dials.algorithms.symmetry.symmetry_base static method)": [[18, "dials.algorithms.symmetry.symmetry_base.ml_aniso_normalisation"]], "ml_iso_normalisation() (dials.algorithms.symmetry.symmetry_base static method)": [[18, "dials.algorithms.symmetry.symmetry_base.ml_iso_normalisation"]], "n() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.n"]], "numerator() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.numerator"]], "p_cc_given_not_s (dials.algorithms.symmetry.laue_group.scorecorrelationcoefficient property)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient.p_cc_given_not_s"]], "p_cc_given_s (dials.algorithms.symmetry.laue_group.scorecorrelationcoefficient property)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient.p_cc_given_s"]], "p_s_given_cc (dials.algorithms.symmetry.laue_group.scorecorrelationcoefficient property)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient.p_s_given_cc"]], "resolution_filter_from_array() (in module dials.algorithms.symmetry)": [[18, "dials.algorithms.symmetry.resolution_filter_from_array"]], "resolution_filter_from_reflections_experiments() (in module dials.algorithms.symmetry)": [[18, "dials.algorithms.symmetry.resolution_filter_from_reflections_experiments"]], "run() (dials.algorithms.symmetry.cosym.cosymanalysis method)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis.run"]], "set_dimensions() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.set_dimensions"]], "stars (dials.algorithms.symmetry.cosym.scoresubgroup property)": [[18, "dials.algorithms.symmetry.cosym.ScoreSubGroup.stars"]], "stars (dials.algorithms.symmetry.cosym.scoresymmetryelement property)": [[18, "dials.algorithms.symmetry.cosym.ScoreSymmetryElement.stars"]], "subgroups_table() (dials.algorithms.symmetry.cosym.symmetryanalysis static method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.subgroups_table"]], "summary_table() (dials.algorithms.symmetry.cosym.symmetryanalysis static method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.summary_table"]], "sym_ops_table() (dials.algorithms.symmetry.cosym.symmetryanalysis static method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.sym_ops_table"]], "symmetry_base (class in dials.algorithms.symmetry)": [[18, "dials.algorithms.symmetry.symmetry_base"]], "trunccauchy_pdf() (in module dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.trunccauchy_pdf"]], "dials.array_family.flex": [[20, "module-dials.array_family.flex"]], "beamfactory (class in dxtbx.model.beam)": [[21, "dxtbx.model.beam.BeamFactory"]], "complex() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.complex"]], "dxtbx.model.beam": [[21, "module-dxtbx.model.beam"]], "from_dict() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.from_dict"]], "from_phil() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.from_phil"]], "imgcif() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.imgCIF"]], "imgcif_h() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.imgCIF_H"]], "make_beam() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.make_beam"]], "make_polarized_beam() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.make_polarized_beam"]], "make_polychromatic_beam() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.make_polychromatic_beam"]], "simple() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.simple"]], "simple_directional() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.simple_directional"]], "crystal (class in dxtbx.model)": [[22, "dxtbx.model.Crystal"]], "crystalfactory (class in dxtbx.model.crystal)": [[22, "dxtbx.model.crystal.CrystalFactory"]], "mosaiccrystalkabsch2010 (class in dxtbx.model)": [[22, "dxtbx.model.MosaicCrystalKabsch2010"]], "mosaiccrystalsauter2014 (class in dxtbx.model)": [[22, "dxtbx.model.MosaicCrystalSauter2014"]], "__init__() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.__init__"]], "__init__() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.__init__"]], "__init__() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.__init__"]], "as_str() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.as_str"]], "as_str() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.as_str"]], "as_str() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.as_str"]], "dxtbx.model.crystal": [[22, "module-dxtbx.model.crystal"]], "from_dict() (dxtbx.model.crystal static method)": [[22, "dxtbx.model.Crystal.from_dict"]], "from_dict() (dxtbx.model.mosaiccrystalkabsch2010 class method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.from_dict"]], "from_dict() (dxtbx.model.mosaiccrystalsauter2014 class method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.from_dict"]], "from_dict() (dxtbx.model.crystal.crystalfactory static method)": [[22, "dxtbx.model.crystal.CrystalFactory.from_dict"]], "from_mosflm_matrix() (dxtbx.model.crystal.crystalfactory static method)": [[22, "dxtbx.model.crystal.CrystalFactory.from_mosflm_matrix"]], "get_a_as_sqr() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.get_A_as_sqr"]], "get_a_inverse_as_sqr() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.get_A_inverse_as_sqr"]], "get_crystal_symmetry() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.get_crystal_symmetry"]], "get_domain_size_ang() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.get_domain_size_ang"]], "get_half_mosaicity_deg() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.get_half_mosaicity_deg"]], "get_mosaicity() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.get_mosaicity"]], "is_similar_to() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.is_similar_to"]], "is_similar_to() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.is_similar_to"]], "set_domain_size_ang() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.set_domain_size_ang"]], "set_half_mosaicity_deg() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.set_half_mosaicity_deg"]], "set_mosaicity() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.set_mosaicity"]], "show() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.show"]], "to_dict() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.to_dict"]], "to_dict() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.to_dict"]], "to_dict() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.to_dict"]], "detector (class in dxtbx.model)": [[23, "dxtbx.model.Detector"]], "detectorfactory (class in dxtbx.model.detector)": [[23, "dxtbx.model.detector.DetectorFactory"]], "__init__() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.__init__"]], "add_group() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.add_group"]], "add_panel() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.add_panel"]], "complex() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.complex"]], "dxtbx.model.detector": [[23, "module-dxtbx.model.detector"]], "from_dict() (dxtbx.model.detector static method)": [[23, "dxtbx.model.Detector.from_dict"]], "from_dict() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.from_dict"]], "from_phil() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.from_phil"]], "generate_from_phil() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.generate_from_phil"]], "get_max_inscribed_resolution() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.get_max_inscribed_resolution"]], "get_max_resolution() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.get_max_resolution"]], "get_names() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.get_names"]], "get_panel_intersection() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.get_panel_intersection"]], "get_ray_intersection() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.get_ray_intersection"]], "has_projection_2d() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.has_projection_2d"]], "hierarchy() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.hierarchy"]], "imgcif() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.imgCIF"]], "imgcif_h() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.imgCIF_H"]], "is_similar_to() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.is_similar_to"]], "iter_levelorder() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.iter_levelorder"]], "iter_panels() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.iter_panels"]], "iter_preorder() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.iter_preorder"]], "make_detector() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.make_detector"]], "merge_panel_scope_extracts_by_id() (in module dxtbx.model.detector)": [[23, "dxtbx.model.detector.merge_panel_scope_extracts_by_id"]], "overwrite_from_phil() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.overwrite_from_phil"]], "rotate_around_origin() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.rotate_around_origin"]], "sensor() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.sensor"]], "simple() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.simple"]], "to_dict() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.to_dict"]], "two_theta() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.two_theta"]], "beamcomparison (class in dxtbx.model.experiment_list)": [[24, "dxtbx.model.experiment_list.BeamComparison"]], "detectorcomparison (class in dxtbx.model.experiment_list)": [[24, "dxtbx.model.experiment_list.DetectorComparison"]], "experimentlist (class in dxtbx.model)": [[24, "dxtbx.model.ExperimentList"]], "experimentlistfactory (class in dxtbx.model.experiment_list)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory"]], "goniometercomparison (class in dxtbx.model.experiment_list)": [[24, "dxtbx.model.experiment_list.GoniometerComparison"]], "__init__() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.__init__"]], "__init__() (dxtbx.model.experiment_list.beamcomparison method)": [[24, "dxtbx.model.experiment_list.BeamComparison.__init__"]], "__init__() (dxtbx.model.experiment_list.detectorcomparison method)": [[24, "dxtbx.model.experiment_list.DetectorComparison.__init__"]], "__init__() (dxtbx.model.experiment_list.goniometercomparison method)": [[24, "dxtbx.model.experiment_list.GoniometerComparison.__init__"]], "all_sequences() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.all_sequences"]], "all_stills() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.all_stills"]], "append() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.append"]], "as_file() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.as_file"]], "as_json() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.as_json"]], "beams() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.beams"]], "change_basis() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.change_basis"]], "clear() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.clear"]], "crystals() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.crystals"]], "detectors() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.detectors"]], "dxtbx.model.experiment_list": [[24, "module-dxtbx.model.experiment_list"]], "empty() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.empty"]], "extend() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.extend"]], "find() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.find"]], "from_args() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_args"]], "from_dict() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_dict"]], "from_file() (dxtbx.model.experimentlist static method)": [[24, "dxtbx.model.ExperimentList.from_file"]], "from_filenames() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_filenames"]], "from_imageset_and_crystal() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_imageset_and_crystal"]], "from_json() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_json"]], "from_json_file() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_json_file"]], "from_pickle_file() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_pickle_file"]], "from_sequence_and_crystal() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_sequence_and_crystal"]], "from_serialized_format() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_serialized_format"]], "from_stills_and_crystal() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_stills_and_crystal"]], "from_templates() (dxtbx.model.experimentlist static method)": [[24, "dxtbx.model.ExperimentList.from_templates"]], "from_templates() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_templates"]], "from_xds() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_xds"]], "goniometers() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.goniometers"]], "identifiers() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.identifiers"]], "imagesets() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.imagesets"]], "indices() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.indices"]], "is_consistent() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.is_consistent"]], "nullify_all_single_file_reader_format_instances() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.nullify_all_single_file_reader_format_instances"]], "profiles() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.profiles"]], "remove_on_experiment_identifiers() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.remove_on_experiment_identifiers"]], "replace() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.replace"]], "scaling_models() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.scaling_models"]], "scans() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.scans"]], "select_on_experiment_identifiers() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.select_on_experiment_identifiers"]], "to_dict() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.to_dict"]], "where() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.where"]], "goniometer (class in dxtbx.model.goniometer)": [[25, "dxtbx.model.goniometer.Goniometer"]], "goniometerfactory (class in dxtbx.model.goniometer)": [[25, "dxtbx.model.goniometer.GoniometerFactory"]], "kappagoniometer (class in dxtbx.model.goniometer)": [[25, "dxtbx.model.goniometer.KappaGoniometer"]], "multiaxisgoniometer (class in dxtbx.model.goniometer)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer"]], "__init__() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.__init__"]], "__init__() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.__init__"]], "__init__() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.__init__"]], "dxtbx.model.goniometer": [[25, "module-dxtbx.model.goniometer"]], "from_dict() (dxtbx.model.goniometer.goniometer static method)": [[25, "dxtbx.model.goniometer.Goniometer.from_dict"]], "from_dict() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.from_dict"]], "from_dict() (dxtbx.model.goniometer.multiaxisgoniometer static method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.from_dict"]], "from_phil() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.from_phil"]], "get_alpha_angle() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_alpha_angle"]], "get_angles() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.get_angles"]], "get_axes() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.get_axes"]], "get_direction() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_direction"]], "get_fixed_rotation() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_fixed_rotation"]], "get_kappa_angle() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_kappa_angle"]], "get_kappa_axis() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_kappa_axis"]], "get_names() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.get_names"]], "get_num_scan_points() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_num_scan_points"]], "get_omega_angle() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_omega_angle"]], "get_omega_axis() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_omega_axis"]], "get_phi_angle() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_phi_angle"]], "get_phi_axis() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_phi_axis"]], "get_rotation_axis() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_rotation_axis"]], "get_rotation_axis_datum() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_rotation_axis_datum"]], "get_scan_axis() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_scan_axis"]], "get_scan_axis() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.get_scan_axis"]], "get_setting_rotation() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_setting_rotation"]], "get_setting_rotation_at_scan_point() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_setting_rotation_at_scan_point"]], "get_setting_rotation_at_scan_points() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_setting_rotation_at_scan_points"]], "imgcif() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.imgCIF"]], "imgcif_h() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.imgCIF_H"]], "is_similar_to() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.is_similar_to"]], "kappa() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.kappa"]], "known_axis() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.known_axis"]], "make_goniometer() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.make_goniometer"]], "make_kappa_goniometer() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.make_kappa_goniometer"]], "make_multi_axis_goniometer() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.make_multi_axis_goniometer"]], "multi_axis() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.multi_axis"]], "multi_axis_goniometer_from_phil() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.multi_axis_goniometer_from_phil"]], "num_scan_points (dxtbx.model.goniometer.goniometer property)": [[25, "dxtbx.model.goniometer.Goniometer.num_scan_points"]], "reset_scan_points() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.reset_scan_points"]], "rotate_around_origin() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.rotate_around_origin"]], "set_angles() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.set_angles"]], "set_axes() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.set_axes"]], "set_fixed_rotation() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.set_fixed_rotation"]], "set_rotation_axis() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.set_rotation_axis"]], "set_rotation_axis_datum() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.set_rotation_axis_datum"]], "set_setting_rotation() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.set_setting_rotation"]], "set_setting_rotation_at_scan_points() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.set_setting_rotation_at_scan_points"]], "single_axis() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.single_axis"]], "single_axis_goniometer_from_phil() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.single_axis_goniometer_from_phil"]], "single_axis_reverse() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.single_axis_reverse"]], "to_dict() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.to_dict"]], "to_dict() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.to_dict"]], "externallookup (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ExternalLookup"]], "externallookupitembool (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ExternalLookupItemBool"]], "externallookupitemdouble (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ExternalLookupItemDouble"]], "imagegrid (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ImageGrid"]], "imagesequence (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ImageSequence"]], "imageset (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ImageSet"]], "imagesetdata (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ImageSetData"]], "imagesetfactory (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ImageSetFactory"]], "imagesetlazy (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ImageSetLazy"]], "memreader (class in dxtbx.imageset)": [[26, "dxtbx.imageset.MemReader"]], "__init__() (dxtbx.imageset.externallookup method)": [[26, "dxtbx.imageset.ExternalLookup.__init__"]], "__init__() (dxtbx.imageset.externallookupitembool method)": [[26, "dxtbx.imageset.ExternalLookupItemBool.__init__"]], "__init__() (dxtbx.imageset.externallookupitemdouble method)": [[26, "dxtbx.imageset.ExternalLookupItemDouble.__init__"]], "__init__() (dxtbx.imageset.imagegrid method)": [[26, "dxtbx.imageset.ImageGrid.__init__"]], "__init__() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.__init__"]], "__init__() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.__init__"]], "__init__() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.__init__"]], "__init__() (dxtbx.imageset.memreader method)": [[26, "dxtbx.imageset.MemReader.__init__"]], "as_imageset() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.as_imageset"]], "clear_cache() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.clear_cache"]], "complete_set() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.complete_set"]], "complete_set() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.complete_set"]], "copy() (dxtbx.imageset.memreader method)": [[26, "dxtbx.imageset.MemReader.copy"]], "data (dxtbx.imageset.externallookupitembool property)": [[26, "dxtbx.imageset.ExternalLookupItemBool.data"]], "data (dxtbx.imageset.externallookupitemdouble property)": [[26, "dxtbx.imageset.ExternalLookupItemDouble.data"]], "data() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.data"]], "dx (dxtbx.imageset.externallookup property)": [[26, "dxtbx.imageset.ExternalLookup.dx"]], "dxtbx.imageset": [[26, "module-dxtbx.imageset"]], "dy (dxtbx.imageset.externallookup property)": [[26, "dxtbx.imageset.ExternalLookup.dy"]], "external_lookup (dxtbx.imageset.imageset property)": [[26, "dxtbx.imageset.ImageSet.external_lookup"]], "external_lookup (dxtbx.imageset.imagesetdata property)": [[26, "dxtbx.imageset.ImageSetData.external_lookup"]], "filename (dxtbx.imageset.externallookupitembool property)": [[26, "dxtbx.imageset.ExternalLookupItemBool.filename"]], "filename (dxtbx.imageset.externallookupitemdouble property)": [[26, "dxtbx.imageset.ExternalLookupItemDouble.filename"]], "from_imageset() (dxtbx.imageset.imagegrid static method)": [[26, "dxtbx.imageset.ImageGrid.from_imageset"]], "from_template() (dxtbx.imageset.imagesetfactory static method)": [[26, "dxtbx.imageset.ImageSetFactory.from_template"]], "gain (dxtbx.imageset.externallookup property)": [[26, "dxtbx.imageset.ExternalLookup.gain"]], "get_array_range() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.get_array_range"]], "get_beam() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.get_beam"]], "get_beam() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_beam"]], "get_beam() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_beam"]], "get_beam() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_beam"]], "get_corrected_data() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_corrected_data"]], "get_corrected_data() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_corrected_data"]], "get_data() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_data"]], "get_detector() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.get_detector"]], "get_detector() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_detector"]], "get_detector() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_detector"]], "get_detector() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_detector"]], "get_detectorbase() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_detectorbase"]], "get_format_class() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_format_class"]], "get_format_class() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_format_class"]], "get_gain() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_gain"]], "get_gain() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_gain"]], "get_goniometer() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.get_goniometer"]], "get_goniometer() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_goniometer"]], "get_goniometer() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_goniometer"]], "get_goniometer() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_goniometer"]], "get_grid_size() (dxtbx.imageset.imagegrid method)": [[26, "dxtbx.imageset.ImageGrid.get_grid_size"]], "get_image_identifier() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_image_identifier"]], "get_image_identifier() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_image_identifier"]], "get_mask() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_mask"]], "get_mask() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_mask"]], "get_master_path() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_master_path"]], "get_params() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_params"]], "get_path() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_path"]], "get_path() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_path"]], "get_pedestal() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_pedestal"]], "get_raw_data() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_raw_data"]], "get_scan() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.get_scan"]], "get_scan() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_scan"]], "get_scan() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_scan"]], "get_scan() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_scan"]], "get_spectrum() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_spectrum"]], "get_template() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.get_template"]], "get_template() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_template"]], "get_vendor() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_vendor"]], "get_vendortype() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_vendortype"]], "has_dynamic_mask() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.has_dynamic_mask"]], "has_single_file_reader() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.has_single_file_reader"]], "identifiers() (dxtbx.imageset.memreader method)": [[26, "dxtbx.imageset.MemReader.identifiers"]], "imageset_from_anyset() (dxtbx.imageset.imagesetfactory static method)": [[26, "dxtbx.imageset.ImageSetFactory.imageset_from_anyset"]], "indices() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.indices"]], "is_marked_for_rejection() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.is_marked_for_rejection"]], "is_marked_for_rejection() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.is_marked_for_rejection"]], "is_single_file_reader() (dxtbx.imageset.memreader static method)": [[26, "dxtbx.imageset.MemReader.is_single_file_reader"]], "make_imageset() (dxtbx.imageset.imagesetfactory static method)": [[26, "dxtbx.imageset.ImageSetFactory.make_imageset"]], "make_sequence() (dxtbx.imageset.imagesetfactory static method)": [[26, "dxtbx.imageset.ImageSetFactory.make_sequence"]], "mark_for_rejection() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.mark_for_rejection"]], "mark_for_rejection() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.mark_for_rejection"]], "mask (dxtbx.imageset.externallookup property)": [[26, "dxtbx.imageset.ExternalLookup.mask"]], "masker() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.masker"]], "masker() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.masker"]], "master_path() (dxtbx.imageset.memreader static method)": [[26, "dxtbx.imageset.MemReader.master_path"]], "new() (dxtbx.imageset.imagesetfactory static method)": [[26, "dxtbx.imageset.ImageSetFactory.new"]], "params() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.params"]], "partial_data() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.partial_data"]], "partial_set() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.partial_set"]], "partial_set() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.partial_set"]], "paths() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.paths"]], "paths() (dxtbx.imageset.memreader method)": [[26, "dxtbx.imageset.MemReader.paths"]], "pedestal (dxtbx.imageset.externallookup property)": [[26, "dxtbx.imageset.ExternalLookup.pedestal"]], "read() (dxtbx.imageset.memreader method)": [[26, "dxtbx.imageset.MemReader.read"]], "reader() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.reader"]], "reader() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.reader"]], "set_beam() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.set_beam"]], "set_beam() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.set_beam"]], "set_beam() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_beam"]], "set_detector() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.set_detector"]], "set_detector() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.set_detector"]], "set_detector() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_detector"]], "set_format_class() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_format_class"]], "set_goniometer() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.set_goniometer"]], "set_goniometer() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.set_goniometer"]], "set_goniometer() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_goniometer"]], "set_params() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_params"]], "set_scan() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.set_scan"]], "set_scan() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.set_scan"]], "set_scan() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_scan"]], "set_template() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_template"]], "set_vendor() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_vendor"]], "size() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.size"]], "update_detector_px_mm_data() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.update_detector_px_mm_data"]], "update_detector_px_mm_data() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.update_detector_px_mm_data"]], "profilemodelfactory (class in dxtbx.model.profile)": [[28, "dxtbx.model.profile.ProfileModelFactory"]], "dxtbx.model.profile": [[28, "module-dxtbx.model.profile"]], "from_dict() (dxtbx.model.profile.profilemodelfactory static method)": [[28, "dxtbx.model.profile.ProfileModelFactory.from_dict"]], "scanfactory (class in dxtbx.model.scan)": [[29, "dxtbx.model.scan.ScanFactory"]], "add() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.add"]], "dxtbx.model.scan": [[29, "module-dxtbx.model.scan"]], "from_dict() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.from_dict"]], "from_phil() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.from_phil"]], "imgcif() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.imgCIF"]], "imgcif_h() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.imgCIF_H"]], "make_scan() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.make_scan"]], "make_scan_from_properties() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.make_scan_from_properties"]], "search() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.search"]], "single_file() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.single_file"]], "xds_inp() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.XDS_INP"]], "__init__() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.__init__"]], "basic_imageset_from_dict() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.basic_imageset_from_dict"]], "basic_imageset_to_dict() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.basic_imageset_to_dict"]], "crystal() (in module dxtbx.serialize.load)": [[30, "dxtbx.serialize.load.crystal"]], "dxtbx.serialize.imageset": [[30, "module-dxtbx.serialize.imageset"]], "dxtbx.serialize.load": [[30, "module-dxtbx.serialize.load"]], "dxtbx.serialize.xds": [[30, "module-dxtbx.serialize.xds"]], "experiment_list() (in module dxtbx.serialize.load)": [[30, "dxtbx.serialize.load.experiment_list"]], "filename_or_none() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.filename_or_none"]], "filename_to_absolute() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.filename_to_absolute"]], "get_beam() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.get_beam"]], "get_detector() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.get_detector"]], "get_goniometer() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.get_goniometer"]], "get_scan() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.get_scan"]], "get_template() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.get_template"]], "imagesequence_from_dict() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.imagesequence_from_dict"]], "imagesequence_to_dict() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.imagesequence_to_dict"]], "imageset() (in module dxtbx.serialize.load)": [[30, "dxtbx.serialize.load.imageset"]], "imageset_from_dict() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.imageset_from_dict"]], "imageset_to_dict() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.imageset_to_dict"]], "to_crystal() (in module dxtbx.serialize.xds)": [[30, "dxtbx.serialize.xds.to_crystal"]], "to_imageset() (in module dxtbx.serialize.xds)": [[30, "dxtbx.serialize.xds.to_imageset"]], "to_xds (class in dxtbx.serialize.xds)": [[30, "dxtbx.serialize.xds.to_xds"]], "xds_detector_name() (in module dxtbx.serialize.xds)": [[30, "dxtbx.serialize.xds.xds_detector_name"]], "xparm_xds() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.xparm_xds"]], "dispersionspotfinderthresholdext (class in dials.extensions.dispersion_spotfinder_threshold_ext)": [[31, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt"]], "gaussianrsprofilemodelext (class in dials.extensions.gaussian_rs_profile_model_ext)": [[31, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt"]], "nullbackgroundext (class in dials.extensions.null_background_ext)": [[31, "dials.extensions.null_background_ext.NullBackgroundExt"]], "simplebackgroundext (class in dials.extensions.simple_background_ext)": [[31, "dials.extensions.simple_background_ext.SimpleBackgroundExt"]], "simplecentroidext (class in dials.extensions.simple_centroid_ext)": [[31, "dials.extensions.simple_centroid_ext.SimpleCentroidExt"]], "__init__() (dials.extensions.dispersion_spotfinder_threshold_ext.dispersionspotfinderthresholdext method)": [[31, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt.__init__"]], "__init__() (dials.extensions.null_background_ext.nullbackgroundext method)": [[31, "dials.extensions.null_background_ext.NullBackgroundExt.__init__"]], "__init__() (dials.extensions.simple_background_ext.simplebackgroundext method)": [[31, "dials.extensions.simple_background_ext.SimpleBackgroundExt.__init__"]], "__init__() (dials.extensions.simple_centroid_ext.simplecentroidext method)": [[31, "dials.extensions.simple_centroid_ext.SimpleCentroidExt.__init__"]], "algorithm() (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext static method)": [[31, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.algorithm"]], "compute_background() (dials.extensions.null_background_ext.nullbackgroundext method)": [[31, "dials.extensions.null_background_ext.NullBackgroundExt.compute_background"]], "compute_background() (dials.extensions.simple_background_ext.simplebackgroundext method)": [[31, "dials.extensions.simple_background_ext.SimpleBackgroundExt.compute_background"]], "compute_centroid() (dials.extensions.simple_centroid_ext.simplecentroidext method)": [[31, "dials.extensions.simple_centroid_ext.SimpleCentroidExt.compute_centroid"]], "compute_threshold() (dials.extensions.dispersion_spotfinder_threshold_ext.dispersionspotfinderthresholdext method)": [[31, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt.compute_threshold"]], "default (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext attribute)": [[31, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.default"]], "default (dials.extensions.simple_centroid_ext.simplecentroidext attribute)": [[31, "dials.extensions.simple_centroid_ext.SimpleCentroidExt.default"]], "dials.extensions.dispersion_spotfinder_threshold_ext": [[31, "module-dials.extensions.dispersion_spotfinder_threshold_ext"]], "dials.extensions.gaussian_rs_profile_model_ext": [[31, "module-dials.extensions.gaussian_rs_profile_model_ext"]], "dials.extensions.null_background_ext": [[31, "module-dials.extensions.null_background_ext"]], "dials.extensions.simple_background_ext": [[31, "module-dials.extensions.simple_background_ext"]], "dials.extensions.simple_centroid_ext": [[31, "module-dials.extensions.simple_centroid_ext"]], "estimate_global_threshold() (in module dials.extensions.dispersion_spotfinder_threshold_ext)": [[31, "dials.extensions.dispersion_spotfinder_threshold_ext.estimate_global_threshold"]], "from_dict() (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext class method)": [[31, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.from_dict"]], "name (dials.extensions.dispersion_spotfinder_threshold_ext.dispersionspotfinderthresholdext attribute)": [[31, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt.name"]], "name (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext attribute)": [[31, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.name"]], "name (dials.extensions.null_background_ext.nullbackgroundext attribute)": [[31, "dials.extensions.null_background_ext.NullBackgroundExt.name"]], "name (dials.extensions.simple_background_ext.simplebackgroundext attribute)": [[31, "dials.extensions.simple_background_ext.SimpleBackgroundExt.name"]], "name (dials.extensions.simple_centroid_ext.simplecentroidext attribute)": [[31, "dials.extensions.simple_centroid_ext.SimpleCentroidExt.name"]], "phil() (dials.extensions.dispersion_spotfinder_threshold_ext.dispersionspotfinderthresholdext static method)": [[31, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt.phil"]], "phil() (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext static method)": [[31, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.phil"]], "phil() (dials.extensions.simple_background_ext.simplebackgroundext static method)": [[31, "dials.extensions.simple_background_ext.SimpleBackgroundExt.phil"]], "argumenthandlingerrorinfo (class in dials.util.options)": [[33, "dials.util.options.ArgumentHandlingErrorInfo"]], "argumentparser (class in dials.util.options)": [[33, "dials.util.options.ArgumentParser"]], "argumentparserbase (class in dials.util.options)": [[33, "dials.util.options.ArgumentParserBase"]], "command (class in dials.util.command_line)": [[33, "dials.util.command_line.Command"]], "importer (class in dials.util.options)": [[33, "dials.util.options.Importer"]], "invalidphilerror": [[33, "dials.util.options.InvalidPhilError"]], "madmergedmtzwriter (class in dials.util.export_mtz)": [[33, "dials.util.export_mtz.MADMergedMTZWriter"]], "mtzwriterbase (class in dials.util.export_mtz)": [[33, "dials.util.export_mtz.MTZWriterBase"]], "mergedmtzwriter (class in dials.util.export_mtz)": [[33, "dials.util.export_mtz.MergedMTZWriter"]], "optionparser (class in dials.util.options)": [[33, "dials.util.options.OptionParser"]], "philcommandparser (class in dials.util.options)": [[33, "dials.util.options.PhilCommandParser"]], "progressbar (class in dials.util.command_line)": [[33, "dials.util.command_line.ProgressBar"]], "progressbartimer (class in dials.util.command_line)": [[33, "dials.util.command_line.ProgressBarTimer"]], "wavelengthgroup (class in dials.util.export_mtz)": [[33, "dials.util.export_mtz.WavelengthGroup"]], "__init__() (dials.util.command_line.progressbar method)": [[33, "dials.util.command_line.ProgressBar.__init__"]], "__init__() (dials.util.command_line.progressbartimer method)": [[33, "dials.util.command_line.ProgressBarTimer.__init__"]], "__init__() (dials.util.export_mtz.mtzwriterbase method)": [[33, "dials.util.export_mtz.MTZWriterBase.__init__"]], "__init__() (dials.util.export_mtz.wavelengthgroup method)": [[33, "dials.util.export_mtz.WavelengthGroup.__init__"]], "__init__() (dials.util.options.argumentparser method)": [[33, "dials.util.options.ArgumentParser.__init__"]], "__init__() (dials.util.options.argumentparserbase method)": [[33, "dials.util.options.ArgumentParserBase.__init__"]], "__init__() (dials.util.options.importer method)": [[33, "dials.util.options.Importer.__init__"]], "__init__() (dials.util.options.optionparser method)": [[33, "dials.util.options.OptionParser.__init__"]], "__init__() (dials.util.options.philcommandparser method)": [[33, "dials.util.options.PhilCommandParser.__init__"]], "add_batch_list() (in module dials.util.export_mtz)": [[33, "dials.util.export_mtz.add_batch_list"]], "add_crystal() (dials.util.export_mtz.mtzwriterbase method)": [[33, "dials.util.export_mtz.MTZWriterBase.add_crystal"]], "add_dataset() (dials.util.export_mtz.madmergedmtzwriter method)": [[33, "dials.util.export_mtz.MADMergedMTZWriter.add_dataset"]], "add_dataset() (dials.util.export_mtz.mergedmtzwriter method)": [[33, "dials.util.export_mtz.MergedMTZWriter.add_dataset"]], "add_empty_dataset() (dials.util.export_mtz.mtzwriterbase method)": [[33, "dials.util.export_mtz.MTZWriterBase.add_empty_dataset"]], "add_experiment() (dials.util.export_mtz.wavelengthgroup method)": [[33, "dials.util.export_mtz.WavelengthGroup.add_experiment"]], "base_package_options (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.base_package_options"]], "calculate_weighted_mean() (dials.util.export_mtz.wavelengthgroup method)": [[33, "dials.util.export_mtz.WavelengthGroup.calculate_weighted_mean"]], "coloured() (in module dials.util.command_line)": [[33, "dials.util.command_line.coloured"]], "configure_modules (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.configure_modules"]], "convert_to_cambridge() (in module dials.util.export_mtz)": [[33, "dials.util.export_mtz.convert_to_cambridge"]], "dest_dir_prefix (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.dest_dir_prefix"]], "dials.util.command_line": [[33, "module-dials.util.command_line"]], "dials.util.export_mtz": [[33, "module-dials.util.export_mtz"]], "dials.util.export_text": [[33, "module-dials.util.export_text"]], "dials.util.image": [[33, "module-dials.util.image"]], "dials.util.installer": [[33, "module-dials.util.installer"]], "dials.util.ioutil": [[33, "module-dials.util.ioutil"]], "dials.util.nexus": [[33, "module-dials.util.nexus"]], "dials.util.options": [[33, "module-dials.util.options"]], "diff_phil (dials.util.options.argumentparser property)": [[33, "dials.util.options.ArgumentParser.diff_phil"]], "diff_phil (dials.util.options.philcommandparser property)": [[33, "dials.util.options.PhilCommandParser.diff_phil"]], "dump() (in module dials.util.nexus)": [[33, "dials.util.nexus.dump"]], "end() (dials.util.command_line.command class method)": [[33, "dials.util.command_line.Command.end"]], "exception (dials.util.options.argumenthandlingerrorinfo attribute)": [[33, "dials.util.options.ArgumentHandlingErrorInfo.exception"]], "exp_nos (dials.util.export_mtz.wavelengthgroup attribute)": [[33, "dials.util.export_mtz.WavelengthGroup.exp_nos"]], "export_mtz() (in module dials.util.export_mtz)": [[33, "dials.util.export_mtz.export_mtz"]], "export_text() (in module dials.util.export_text)": [[33, "dials.util.export_text.export_text"]], "finished() (dials.util.command_line.progressbar method)": [[33, "dials.util.command_line.ProgressBar.finished"]], "flatten_experiments() (in module dials.util.options)": [[33, "dials.util.options.flatten_experiments"]], "flatten_reflections() (in module dials.util.options)": [[33, "dials.util.options.flatten_reflections"]], "format_epilog() (dials.util.options.argumentparserbase method)": [[33, "dials.util.options.ArgumentParserBase.format_epilog"]], "format_help() (dials.util.options.argumentparser method)": [[33, "dials.util.options.ArgumentParser.format_help"]], "get_data() (dials.util.image.reader method)": [[33, "dials.util.image.reader.get_data"]], "get_elapsed_time() (dials.util.command_line.progressbartimer method)": [[33, "dials.util.command_line.ProgressBarTimer.get_elapsed_time"]], "get_entry() (in module dials.util.nexus)": [[33, "dials.util.nexus.get_entry"]], "get_inverse_ub_matrix_from_xparm() (in module dials.util.ioutil)": [[33, "dials.util.ioutil.get_inverse_ub_matrix_from_xparm"]], "get_space_group_type_from_xparm() (in module dials.util.ioutil)": [[33, "dials.util.ioutil.get_space_group_type_from_xparm"]], "heading() (in module dials.util.command_line)": [[33, "dials.util.command_line.heading"]], "identifiers (dials.util.export_mtz.wavelengthgroup attribute)": [[33, "dials.util.export_mtz.WavelengthGroup.identifiers"]], "include_gui_packages (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.include_gui_packages"]], "indent (dials.util.command_line.command attribute)": [[33, "dials.util.command_line.Command.indent"]], "installer (class in dials.util.installer)": [[33, "dials.util.installer.installer"]], "installer_dir (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.installer_dir"]], "load() (in module dials.util.nexus)": [[33, "dials.util.nexus.load"]], "log_summary() (in module dials.util.export_mtz)": [[33, "dials.util.export_mtz.log_summary"]], "make_apps (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.make_apps"]], "match_wavelengths() (in module dials.util.export_mtz)": [[33, "dials.util.export_mtz.match_wavelengths"]], "max_length (dials.util.command_line.command attribute)": [[33, "dials.util.command_line.Command.max_length"]], "max_possible_wl (dials.util.export_mtz.wavelengthgroup attribute)": [[33, "dials.util.export_mtz.WavelengthGroup.max_possible_wl"]], "message (dials.util.options.argumenthandlingerrorinfo attribute)": [[33, "dials.util.options.ArgumentHandlingErrorInfo.message"]], "min_wl (dials.util.export_mtz.wavelengthgroup attribute)": [[33, "dials.util.export_mtz.WavelengthGroup.min_wl"]], "name (dials.util.options.argumenthandlingerrorinfo attribute)": [[33, "dials.util.options.ArgumentHandlingErrorInfo.name"]], "parse_args() (dials.util.options.argumentparser method)": [[33, "dials.util.options.ArgumentParser.parse_args"]], "parse_args() (dials.util.options.philcommandparser method)": [[33, "dials.util.options.PhilCommandParser.parse_args"]], "parse_known_args() (dials.util.options.argumentparserbase method)": [[33, "dials.util.options.ArgumentParserBase.parse_known_args"]], "phil (dials.util.options.argumentparser property)": [[33, "dials.util.options.ArgumentParser.phil"]], "phil (dials.util.options.philcommandparser property)": [[33, "dials.util.options.PhilCommandParser.phil"]], "print_time (dials.util.command_line.command attribute)": [[33, "dials.util.command_line.Command.print_time"]], "product_name (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.product_name"]], "product_specific_finalize_install() (dials.util.installer.installer method)": [[33, "dials.util.installer.installer.product_specific_finalize_install"]], "read_file() (dials.util.image.reader method)": [[33, "dials.util.image.reader.read_file"]], "reader (class in dials.util.image)": [[33, "dials.util.image.reader"]], "reflections_and_experiments_from_files() (in module dials.util.options)": [[33, "dials.util.options.reflections_and_experiments_from_files"]], "remove_sources_default (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.remove_sources_default"]], "rotate_crystal() (in module dials.util.export_mtz)": [[33, "dials.util.export_mtz.rotate_crystal"]], "source_packages (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.source_packages"]], "start() (dials.util.command_line.command class method)": [[33, "dials.util.command_line.Command.start"]], "system_phil (dials.util.options.argumentparser property)": [[33, "dials.util.options.ArgumentParser.system_phil"]], "system_phil (dials.util.options.philcommandparser property)": [[33, "dials.util.options.PhilCommandParser.system_phil"]], "traceback (dials.util.options.argumenthandlingerrorinfo attribute)": [[33, "dials.util.options.ArgumentHandlingErrorInfo.traceback"]], "try_read_experiments() (dials.util.options.importer method)": [[33, "dials.util.options.Importer.try_read_experiments"]], "try_read_experiments_from_images() (dials.util.options.importer method)": [[33, "dials.util.options.Importer.try_read_experiments_from_images"]], "try_read_reflections() (dials.util.options.importer method)": [[33, "dials.util.options.Importer.try_read_reflections"]], "type (dials.util.options.argumenthandlingerrorinfo attribute)": [[33, "dials.util.options.ArgumentHandlingErrorInfo.type"]], "update() (dials.util.command_line.progressbar method)": [[33, "dials.util.command_line.ProgressBar.update"]], "update() (dials.util.command_line.progressbartimer method)": [[33, "dials.util.command_line.ProgressBarTimer.update"]], "validation (dials.util.options.argumenthandlingerrorinfo attribute)": [[33, "dials.util.options.ArgumentHandlingErrorInfo.validation"]], "wavelengths (dials.util.export_mtz.wavelengthgroup attribute)": [[33, "dials.util.export_mtz.WavelengthGroup.wavelengths"]], "weighted_mean (dials.util.export_mtz.wavelengthgroup attribute)": [[33, "dials.util.export_mtz.WavelengthGroup.weighted_mean"]], "write_columns() (in module dials.util.export_mtz)": [[33, "dials.util.export_mtz.write_columns"]]}})