Search.setIndex({"docnames": ["about", "dials_scale_user_guide", "documentation/conventions", "documentation/data_files", "documentation/developer_examples/extending_dials", "documentation/developer_examples/index", "documentation/developer_examples/read_experiment_and_data", "documentation/getting_started", "documentation/index", "documentation/installation_developer", "documentation/library_reference/algorithms/dials.algorithms.background", "documentation/library_reference/algorithms/dials.algorithms.indexing", "documentation/library_reference/algorithms/dials.algorithms.integration", "documentation/library_reference/algorithms/dials.algorithms.profile_model", "documentation/library_reference/algorithms/dials.algorithms.refinement", "documentation/library_reference/algorithms/dials.algorithms.scaling", "documentation/library_reference/algorithms/dials.algorithms.spot_finding", "documentation/library_reference/algorithms/dials.algorithms.spot_prediction", "documentation/library_reference/algorithms/dials.algorithms.symmetry", "documentation/library_reference/algorithms/index", "documentation/library_reference/array_family/index", "documentation/library_reference/dxtbx/beam", "documentation/library_reference/dxtbx/crystal", "documentation/library_reference/dxtbx/datablock", "documentation/library_reference/dxtbx/detector", "documentation/library_reference/dxtbx/experiment_list", "documentation/library_reference/dxtbx/goniometer", "documentation/library_reference/dxtbx/imageset", "documentation/library_reference/dxtbx/index", "documentation/library_reference/dxtbx/profile", "documentation/library_reference/dxtbx/scan", "documentation/library_reference/dxtbx/serialize", "documentation/library_reference/extensions/index", "documentation/library_reference/index", "documentation/library_reference/util/index", "documentation/programs/dials_align_crystal", "documentation/programs/dials_anvil_correction", "documentation/programs/dials_apply_mask", "documentation/programs/dials_check_indexing_symmetry", "documentation/programs/dials_combine_experiments", "documentation/programs/dials_compare_orientation_matrices", "documentation/programs/dials_cosym", "documentation/programs/dials_create_profile_model", "documentation/programs/dials_estimate_gain", "documentation/programs/dials_estimate_resolution", "documentation/programs/dials_export", "documentation/programs/dials_export_bitmaps", "documentation/programs/dials_filter_reflections", "documentation/programs/dials_find_spots", "documentation/programs/dials_find_spots_apache_server", "documentation/programs/dials_find_spots_server", "documentation/programs/dials_generate_mask", "documentation/programs/dials_image_viewer", "documentation/programs/dials_import", "documentation/programs/dials_index", "documentation/programs/dials_integrate", "documentation/programs/dials_merge_cbf", "documentation/programs/dials_missing_reflections", "documentation/programs/dials_plot_scan_varying_model", "documentation/programs/dials_predict", "documentation/programs/dials_reciprocal_lattice_viewer", "documentation/programs/dials_refine", "documentation/programs/dials_refine_bravais_settings", "documentation/programs/dials_reindex", "documentation/programs/dials_report", "documentation/programs/dials_scale", "documentation/programs/dials_search_beam_position", "documentation/programs/dials_show", "documentation/programs/dials_slice_sequence", "documentation/programs/dials_spot_counts_per_image", "documentation/programs/dials_stereographic_projection", "documentation/programs/dials_symmetry", "documentation/programs/dials_two_theta_refine", "documentation/programs/index", "documentation/programs/xia2_multiplex", "documentation/tutorials/3DED/Biotin", "documentation/tutorials/3DED/MyD88", "documentation/tutorials/3DED/lysozyme_nanocrystals", "documentation/tutorials/br_lyso_multi", "documentation/tutorials/centring_vs_pseudocentring", "documentation/tutorials/correcting_poor_initial_geometry_tutorial", "documentation/tutorials/diamond", "documentation/tutorials/index", "documentation/tutorials/metrology_corrections", "documentation/tutorials/mpro_x0692", "documentation/tutorials/multi_crystal_analysis", "documentation/tutorials/multi_crystal_symmetry_and_scaling", "documentation/tutorials/multi_lattice_tutorial", "documentation/tutorials/processing_in_detail_betalactamase", "documentation/tutorials/processing_in_detail_betalactamase_dui", "documentation/tutorials/small_molecule_tutorial", "howto", "index", "installation", "license", "missing-images", "projects", "publications", "ssx_processing_guide", "workshops/DIALS-1", "workshops/dials3d", "workshops/index"], "filenames": ["about.rst", "dials_scale_user_guide.rst", "documentation/conventions.rst", "documentation/data_files.rst", "documentation/developer_examples/extending_dials.rst", "documentation/developer_examples/index.rst", "documentation/developer_examples/read_experiment_and_data.rst", "documentation/getting_started.rst", "documentation/index.rst", "documentation/installation_developer.rst", "documentation/library_reference/algorithms/dials.algorithms.background.rst", "documentation/library_reference/algorithms/dials.algorithms.indexing.rst", "documentation/library_reference/algorithms/dials.algorithms.integration.rst", "documentation/library_reference/algorithms/dials.algorithms.profile_model.rst", "documentation/library_reference/algorithms/dials.algorithms.refinement.rst", "documentation/library_reference/algorithms/dials.algorithms.scaling.rst", "documentation/library_reference/algorithms/dials.algorithms.spot_finding.rst", "documentation/library_reference/algorithms/dials.algorithms.spot_prediction.rst", "documentation/library_reference/algorithms/dials.algorithms.symmetry.rst", "documentation/library_reference/algorithms/index.rst", "documentation/library_reference/array_family/index.rst", "documentation/library_reference/dxtbx/beam.rst", "documentation/library_reference/dxtbx/crystal.rst", "documentation/library_reference/dxtbx/datablock.rst", "documentation/library_reference/dxtbx/detector.rst", "documentation/library_reference/dxtbx/experiment_list.rst", "documentation/library_reference/dxtbx/goniometer.rst", "documentation/library_reference/dxtbx/imageset.rst", "documentation/library_reference/dxtbx/index.rst", "documentation/library_reference/dxtbx/profile.rst", "documentation/library_reference/dxtbx/scan.rst", "documentation/library_reference/dxtbx/serialize.rst", "documentation/library_reference/extensions/index.rst", "documentation/library_reference/index.rst", "documentation/library_reference/util/index.rst", "documentation/programs/dials_align_crystal.rst", "documentation/programs/dials_anvil_correction.rst", "documentation/programs/dials_apply_mask.rst", "documentation/programs/dials_check_indexing_symmetry.rst", "documentation/programs/dials_combine_experiments.rst", "documentation/programs/dials_compare_orientation_matrices.rst", "documentation/programs/dials_cosym.rst", "documentation/programs/dials_create_profile_model.rst", "documentation/programs/dials_estimate_gain.rst", "documentation/programs/dials_estimate_resolution.rst", "documentation/programs/dials_export.rst", "documentation/programs/dials_export_bitmaps.rst", "documentation/programs/dials_filter_reflections.rst", "documentation/programs/dials_find_spots.rst", "documentation/programs/dials_find_spots_apache_server.rst", "documentation/programs/dials_find_spots_server.rst", "documentation/programs/dials_generate_mask.rst", "documentation/programs/dials_image_viewer.rst", "documentation/programs/dials_import.rst", "documentation/programs/dials_index.rst", "documentation/programs/dials_integrate.rst", "documentation/programs/dials_merge_cbf.rst", "documentation/programs/dials_missing_reflections.rst", "documentation/programs/dials_plot_scan_varying_model.rst", "documentation/programs/dials_predict.rst", "documentation/programs/dials_reciprocal_lattice_viewer.rst", "documentation/programs/dials_refine.rst", "documentation/programs/dials_refine_bravais_settings.rst", "documentation/programs/dials_reindex.rst", "documentation/programs/dials_report.rst", "documentation/programs/dials_scale.rst", "documentation/programs/dials_search_beam_position.rst", "documentation/programs/dials_show.rst", "documentation/programs/dials_slice_sequence.rst", "documentation/programs/dials_spot_counts_per_image.rst", "documentation/programs/dials_stereographic_projection.rst", "documentation/programs/dials_symmetry.rst", "documentation/programs/dials_two_theta_refine.rst", "documentation/programs/index.rst", "documentation/programs/xia2_multiplex.rst", "documentation/tutorials/3DED/Biotin.rst", "documentation/tutorials/3DED/MyD88.rst", "documentation/tutorials/3DED/lysozyme_nanocrystals.rst", "documentation/tutorials/br_lyso_multi.rst", "documentation/tutorials/centring_vs_pseudocentring.rst", "documentation/tutorials/correcting_poor_initial_geometry_tutorial.rst", "documentation/tutorials/diamond.rst", "documentation/tutorials/index.rst", "documentation/tutorials/metrology_corrections.rst", "documentation/tutorials/mpro_x0692.rst", "documentation/tutorials/multi_crystal_analysis.rst", "documentation/tutorials/multi_crystal_symmetry_and_scaling.rst", "documentation/tutorials/multi_lattice_tutorial.rst", "documentation/tutorials/processing_in_detail_betalactamase.rst", "documentation/tutorials/processing_in_detail_betalactamase_dui.rst", "documentation/tutorials/small_molecule_tutorial.rst", "howto.rst", "index.rst", "installation.rst", "license.rst", "missing-images.rst", "projects.rst", "publications.rst", "ssx_processing_guide.rst", "workshops/DIALS-1.rst", "workshops/dials3d.rst", "workshops/index.rst"], "titles": ["About", "User guide for scaling data with DIALS", "Conventions", "Data files", "Extending DIALS", "Developer Examples", "Reading experiment and data", "Getting started", "Documentation", "Installation for Developers", "dials.algorithms.background", "dials.algorithms.indexing", "dials.algorithms.integration", "dials.algorithms.profile_model", "dials.algorithms.refinement", "dials.algorithms.scaling", "dials.algorithms.spot_finding", "dials.algorithms.spot_prediction", "dials.algorithms.symmetry", "Algorithms", "Array Family", "dxtbx.model.beam", "dxtbx.model.crystal", "dxtbx.datablock", "dxtbx.model.detector", "dxtbx.model.experiment_list", "dxtbx.model.goniometer", "dxtbx.imageset", "dxtbx", "dxtbx.model.profile", "dxtbx.model.scan", "dxtbx.serialize", "Extensions", "Library Reference", "Util", "dials.align_crystal", "dials.anvil_correction", "dials.apply_mask", "dials.check_indexing_symmetry", "dials.combine_experiments", "dials.compare_orientation_matrices", "dials.cosym", "dials.create_profile_model", "dials.estimate_gain", "dials.estimate_resolution", "dials.export", "dials.export_bitmaps", "dials.filter_reflections", "dials.find_spots", "distl/dials apache server", "dials.find_spots_server/client", "dials.generate_mask", "dials.image_viewer", "dials.import", "dials.index", "dials.integrate", "dials.merge_cbf", "dials.missing_reflections", "dials.plot_scan_varying_model", "dials.predict", "dials.reciprocal_lattice_viewer", "dials.refine", "dials.refine_bravais_settings", "dials.reindex", "dials.report", "dials.scale", "dials.search_beam_position", "dials.show", "dials.slice_sequence", "dials.spot_counts_per_image", "dials.stereographic_projection", "dials.symmetry", "dials.two_theta_refine", "Program documentation", "xia2.multiplex", "Processing Small Molecule MicroED/3DED: Biotin", "MyD88<sup>TIR</sup> small wedges", "Lysozyme nanocrystals", "Multi-crystal analysis with DIALS and xia2.multiplex", "DPF3 Part 2: A question of centring", "DPF3 Part 1: Correcting poor initial geometry", "Using DIALS at Diamond Light Source", "Tutorials", "Refining multi-tile detector metrology with DIALS", "SARS-CoV-2 main protease (Mpro)", "Multi-crystal analysis with DIALS and BLEND: individual vs joint refinement", "Multi-crystal symmetry analysis and scaling with DIALS", "Multi-lattice Tutorial", "Processing in Detail", "Processing in Detail with DUI", "Small-molecule data reduction tutorial", "DIALS How-To guides", "DIALS: Diffraction Integration for Advanced Light Sources", "Installation", "DIALS License", "Processing Sequences with Missing Images", "Projects", "Publications", "SSX processing guide", "DIALS 1: 12th-13th June 2012 (Diamond Light Source, UK)", "DIALS-3: 22nd May 2013 (Cambridge, UK)", "Workshops"], "terms": {"The": [0, 1, 3, 4, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 30, 31, 32, 34, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100], "softwar": [0, 2, 7, 11, 77, 84, 86, 87, 88, 92, 94, 96, 97, 99], "i": [0, 1, 2, 3, 4, 6, 7, 9, 11, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 30, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99], "fulli": [0, 2, 45, 47, 55, 76, 83, 84, 87, 88], "open": [0, 52, 73, 75, 76, 78, 84, 86, 88, 89, 93], "sourc": [0, 4, 9, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 36, 45, 53, 80, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 96, 97, 101], "collabor": [0, 92, 99, 100], "environ": [0, 4, 49, 77, 81, 83, 93], "main": [0, 3, 9, 14, 24, 35, 65, 73, 81, 82, 88, 98], "ar": [0, 1, 2, 3, 4, 7, 9, 11, 14, 15, 16, 18, 22, 24, 25, 26, 27, 34, 36, 39, 41, 44, 45, 47, 48, 49, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 67, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99], "base": [0, 1, 4, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 39, 44, 47, 54, 61, 62, 65, 66, 72, 81, 84, 85, 86, 88, 89, 90, 97, 99], "diamond": [0, 36, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 100, 101], "light": [0, 36, 82, 83, 84, 85, 86, 87, 88, 89, 94, 101], "ccp4": [0, 74, 75, 77, 78, 79, 81, 85, 86, 88, 89, 92, 97, 99, 100], "uk": [0, 93, 101], "lawrenc": [0, 92, 94], "berkelei": [0, 92, 94, 101], "nation": [0, 36, 92, 94], "laboratori": [0, 11, 21, 36, 70, 76, 77, 85, 92, 94, 100], "usa": [0, 2, 36], "howev": [0, 1, 2, 14, 42, 43, 45, 55, 63, 70, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 98], "spirit": 0, "movement": 0, "we": [0, 2, 4, 7, 11, 14, 16, 21, 26, 27, 34, 36, 38, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99], "welcom": [0, 85], "from": [0, 1, 2, 3, 4, 6, 7, 9, 11, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 30, 31, 34, 36, 39, 41, 42, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 68, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100], "anyon": 0, "who": [0, 7], "wish": [0, 90], "contribut": [0, 18, 54, 61, 62, 78, 85], "project": [0, 2, 11, 45, 46, 52, 65, 70, 78, 81, 85, 86, 87, 92, 97, 99, 100], "To": [0, 1, 2, 4, 7, 11, 14, 48, 50, 76, 77, 79, 80, 84, 85, 86, 87, 88, 89, 93, 95, 98, 99], "avoid": [0, 14, 34, 54, 61, 62, 74, 76, 83, 84, 85, 88], "reinvent": 0, "wheel": 0, "much": [0, 9, 75, 76, 80, 83, 84, 85, 86, 88, 89, 90], "possibl": [0, 1, 2, 4, 11, 18, 23, 34, 35, 41, 54, 57, 61, 62, 71, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 94], "build": [0, 9, 14, 81], "knowledg": [0, 2, 36], "accumul": [0, 12, 18], "over": [0, 1, 11, 16, 18, 23, 41, 53, 54, 61, 62, 71, 74, 75, 76, 78, 83, 84, 86, 88, 89], "mani": [0, 2, 4, 16, 39, 41, 49, 75, 76, 78, 79, 80, 81, 84, 85, 86, 88, 89], "decad": 0, "field": [0, 11, 34, 89, 99], "crystallograph": [0, 1, 2, 72, 74, 78, 79, 84, 97], "data": [0, 4, 5, 7, 8, 11, 12, 14, 15, 16, 18, 23, 25, 27, 34, 36, 41, 42, 44, 45, 49, 50, 53, 54, 55, 56, 61, 62, 64, 65, 72, 74, 79, 80, 81, 82, 83, 85, 86, 87, 91, 92, 94, 95, 96, 97, 99, 100], "process": [0, 1, 3, 7, 12, 14, 16, 32, 39, 45, 48, 49, 53, 54, 55, 61, 62, 65, 73, 77, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 97, 99], "benefit": [0, 92, 99], "greatli": [0, 92, 99], "altruism": 0, "expert": [0, 89], "idea": [0, 78], "advic": [0, 79], "either": [0, 1, 2, 4, 25, 41, 45, 48, 49, 52, 53, 54, 59, 61, 62, 65, 70, 72, 75, 76, 81, 84, 88, 89, 98], "directli": [0, 3, 49, 75, 80, 81, 83, 84, 85, 88, 89, 98], "via": [0, 2, 4, 9, 46, 56, 78, 89, 90, 92], "detail": [0, 1, 3, 4, 7, 14, 49, 65, 73, 74, 76, 78, 79, 80, 82, 83, 84, 86, 87, 90], "public": [0, 14, 76, 77], "exist": [0, 1, 4, 9, 15, 18, 24, 53, 74, 84, 85, 86, 88, 89, 99], "algorithm": [0, 1, 2, 4, 32, 33, 39, 41, 42, 43, 48, 51, 52, 54, 55, 59, 61, 62, 65, 73, 76, 80, 83, 84, 85, 86, 87, 88, 89, 92, 96, 97, 98, 100], "packag": [0, 2, 4, 9, 93, 97, 99], "xd": [0, 22, 25, 31, 45, 54, 80, 83, 84, 88, 89, 99], "2": [0, 1, 2, 3, 4, 7, 11, 14, 16, 18, 22, 34, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 74, 75, 76, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 97, 98, 101], "mosflm": [0, 2, 22, 45, 53, 55, 99], "3": [0, 1, 2, 3, 6, 11, 15, 18, 22, 34, 36, 38, 40, 41, 42, 44, 46, 48, 49, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 70, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 101], "At": [0, 2, 7, 54, 61, 62, 76, 79, 80, 83, 84, 85, 88, 89, 90, 99], "heart": 0, "framework": [0, 2, 4, 6, 92, 97], "li": [0, 2, 54, 61, 62], "design": [0, 2, 11, 24, 26, 54, 96, 97, 99], "philosophi": 0, "hardwar": 0, "abstract": [0, 2, 14, 15], "generalis": 0, "model": [0, 3, 6, 10, 11, 12, 14, 18, 19, 23, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 98, 99], "experi": [0, 1, 2, 4, 5, 11, 12, 14, 15, 16, 17, 18, 23, 24, 25, 31, 32, 34, 36, 37, 38, 39, 41, 42, 45, 47, 48, 51, 53, 54, 55, 56, 59, 61, 62, 63, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 97, 98, 99], "inspir": [0, 79, 80, 86], "materi": [0, 24, 36, 53, 84, 88, 94], "publish": [0, 76, 84], "semin": 0, "workshop": [0, 11, 88, 89], "posit": [0, 1, 2, 3, 11, 14, 15, 34, 54, 55, 61, 62, 65, 66, 75, 76, 77, 78, 80, 81, 83, 84, 86, 87, 88, 89, 90], "sensit": [0, 11, 41, 86], "detector": [0, 1, 2, 3, 4, 6, 10, 11, 14, 21, 23, 25, 27, 28, 31, 33, 39, 42, 43, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 61, 62, 65, 75, 77, 78, 80, 82, 84, 85, 86, 88, 89, 90, 92, 95, 97, 99], "1": [0, 1, 2, 3, 4, 6, 11, 14, 16, 17, 18, 22, 25, 30, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 101], "continu": [0, 54, 61, 62, 75, 76, 79, 80, 84, 85, 87, 88, 89, 95], "held": [0, 2], "our": [0, 2, 4, 76, 83, 84, 85, 88, 89, 90, 95, 100], "own": [0, 4, 54, 61, 62, 65, 76, 77, 78, 85], "seri": [0, 11, 54, 85, 99], "meet": [0, 92, 99, 100], "talk": 0, "invit": 0, "speaker": 0, "code": [0, 2, 4, 6, 9, 52, 76, 85, 94, 97, 98], "camp": 0, "which": [0, 1, 2, 4, 7, 11, 14, 15, 18, 21, 22, 24, 26, 30, 34, 36, 38, 39, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 58, 61, 62, 64, 65, 67, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 98], "specif": [0, 2, 4, 7, 54, 55, 61, 72, 76, 77, 78, 84, 85, 88, 89, 94], "problem": [0, 14, 23, 76, 79, 80, 81, 84, 85, 86, 88, 89, 95], "address": [0, 80, 86, 99], "intens": [0, 1, 3, 11, 15, 18, 34, 36, 38, 41, 44, 45, 47, 48, 50, 54, 55, 65, 74, 75, 76, 79, 80, 84, 85, 86, 87, 88, 89, 90, 96, 98, 99], "effort": [0, 83, 85], "across": [0, 1, 44, 54, 61, 62, 65, 74, 76, 77, 84, 86, 90, 98], "summari": [0, 12, 67, 78, 83, 84, 85, 86, 87, 88, 89, 90, 98], "copi": [0, 14, 25, 27, 51, 76, 77, 79, 83, 85, 95], "slide": 0, "given": [0, 1, 2, 4, 11, 14, 15, 16, 17, 18, 22, 23, 24, 26, 29, 31, 36, 40, 45, 47, 48, 50, 53, 54, 55, 56, 64, 65, 66, 69, 70, 71, 74, 76, 80, 84, 85, 86, 88, 89, 98], "present": [0, 14, 15, 18, 34, 41, 45, 47, 54, 61, 62, 68, 73, 74, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 92, 101], "avail": [0, 1, 4, 9, 14, 21, 27, 36, 48, 55, 65, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 93, 96, 98], "here": [0, 2, 6, 14, 41, 49, 53, 58, 64, 65, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97], "written": [0, 2, 7, 46, 53, 76, 84, 85, 87, 88, 94], "us": [0, 2, 3, 4, 7, 9, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 30, 34, 35, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "python": [0, 3, 4, 7, 9, 22, 24, 25, 26, 27, 81, 85, 97], "c": [0, 1, 2, 7, 10, 12, 14, 22, 24, 25, 26, 27, 36, 41, 54, 62, 63, 66, 68, 75, 76, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 94, 97], "make": [0, 2, 4, 9, 15, 24, 26, 46, 54, 55, 56, 61, 62, 65, 72, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 92, 95], "heavi": [0, 65, 78], "cctbx": [0, 1, 2, 4, 9, 11, 14, 18, 22, 25, 49, 81, 85, 97], "4": [0, 1, 2, 3, 11, 16, 18, 22, 34, 36, 41, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 62, 65, 66, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97, 99], "core": [0, 83, 85, 90, 97, 98], "calcul": [0, 1, 2, 6, 11, 12, 14, 15, 18, 35, 36, 38, 40, 41, 42, 44, 48, 52, 54, 55, 59, 61, 62, 65, 70, 74, 76, 78, 80, 84, 86, 87, 88, 89, 90, 97], "infrastructur": 0, "includ": [0, 1, 4, 11, 14, 18, 25, 34, 44, 45, 48, 49, 50, 54, 55, 58, 61, 62, 63, 65, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 92, 94], "complet": [0, 7, 14, 21, 44, 49, 54, 57, 61, 62, 65, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99], "system": [0, 2, 7, 34, 55, 76, 77, 78, 81, 84, 88, 97], "seamless": 0, "interact": [0, 65, 76, 77, 89, 90], "between": [0, 1, 2, 3, 11, 14, 15, 18, 21, 36, 38, 40, 41, 42, 45, 46, 48, 52, 53, 54, 55, 59, 60, 61, 62, 63, 65, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 95], "compon": [0, 1, 2, 4, 15, 26, 41, 48, 57, 65, 78, 84, 85, 86, 88, 89], "thi": [0, 1, 2, 3, 4, 6, 7, 9, 11, 14, 15, 16, 18, 21, 23, 24, 25, 26, 30, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 65, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99], "hybrid": 0, "enabl": [0, 4, 39, 46, 52, 53, 55, 85, 86, 96, 97, 98, 99], "boost": [0, 22, 24, 25, 26, 27, 36, 75], "provid": [0, 1, 4, 7, 11, 14, 15, 18, 23, 24, 25, 34, 37, 39, 41, 44, 51, 52, 53, 54, 63, 68, 72, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 93, 94, 98, 99], "ground": 0, "rapid": [0, 98, 99], "prototyp": 0, "after": [0, 1, 14, 18, 36, 40, 45, 49, 54, 55, 61, 62, 63, 65, 74, 75, 76, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98], "structur": [0, 7, 14, 23, 25, 54, 61, 62, 65, 76, 77, 78, 79, 80, 84, 86, 87, 88, 89, 90, 92, 97, 99], "mai": [0, 1, 2, 3, 4, 7, 9, 11, 12, 14, 15, 18, 35, 36, 41, 42, 43, 47, 48, 49, 50, 52, 53, 54, 55, 61, 62, 64, 65, 72, 74, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 93, 94, 97, 98, 101], "transfer": 0, "speed": [0, 23, 46, 54, 55, 61, 62, 75, 83, 84, 88, 89, 98, 99], "high": [0, 1, 11, 18, 23, 36, 38, 39, 41, 47, 48, 49, 51, 52, 54, 55, 65, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 98, 99], "level": [0, 1, 4, 12, 18, 23, 39, 44, 46, 48, 54, 61, 62, 65, 74, 76, 83, 85, 89, 90, 98], "interfac": [0, 14, 16, 18, 42, 52, 55, 59, 76, 82, 85, 89], "remain": [0, 2, 11, 14, 39, 54, 55, 61, 62, 76, 77, 80, 84, 87, 88, 89], "facilit": [0, 99], "further": [0, 1, 4, 7, 15, 49, 65, 74, 79, 83, 84, 87, 88, 89, 90, 93, 98], "reus": [0, 96], "both": [0, 2, 18, 36, 53, 54, 61, 62, 65, 72, 74, 75, 76, 80, 84, 86, 87, 88, 89], "within": [0, 1, 2, 4, 7, 14, 38, 48, 51, 52, 53, 54, 59, 61, 62, 65, 68, 74, 76, 81, 83, 84, 85, 86, 88, 89, 90, 92, 99], "third": [0, 1, 9, 53, 75], "parti": [0, 9], "fund": [0, 96], "wellcom": [0, 92], "trust": [0, 48, 51, 53, 76, 80], "led": 0, "dr": [0, 54, 61, 62, 97], "gwyndaf": [0, 85, 99, 100], "evan": [0, 11, 18, 71, 85, 97, 99, 100], "nichola": 0, "sauter": [0, 2, 11, 49, 54, 61, 62, 66, 97, 99], "support": [0, 4, 7, 23, 44, 45, 46, 52, 53, 54, 56, 61, 62, 72, 73, 81, 92], "institut": [0, 36, 92], "health": [0, 92], "gener": [0, 1, 3, 4, 11, 12, 18, 25, 26, 30, 34, 36, 47, 48, 51, 52, 53, 54, 55, 57, 58, 62, 64, 65, 68, 69, 70, 74, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 92, 96, 98, 99], "medic": [0, 92], "scienc": [0, 34, 81, 84, 92, 97], "grant": [0, 92], "r01": [0, 92], "gm117126": [0, 92], "new": [0, 1, 2, 7, 9, 14, 15, 16, 24, 27, 49, 54, 61, 62, 65, 73, 75, 76, 77, 79, 80, 83, 84, 85, 86, 88, 89, 92, 93, 96, 97, 99], "comput": [0, 1, 2, 11, 18, 32, 40, 42, 45, 48, 52, 55, 59, 66, 69, 78, 81, 84, 86, 96, 97, 98], "method": [0, 1, 2, 7, 11, 14, 15, 16, 18, 23, 26, 27, 30, 41, 42, 44, 48, 50, 52, 54, 55, 59, 61, 62, 65, 66, 71, 74, 75, 76, 80, 84, 85, 86, 88, 89, 97, 98], "challeng": [0, 75, 76, 79, 80, 89, 97, 99], "work": [0, 2, 4, 7, 9, 11, 14, 21, 26, 34, 54, 55, 61, 62, 65, 75, 76, 78, 79, 80, 81, 83, 85, 86, 88, 89, 90, 92, 95, 96, 99], "lbnl": [0, 92], "perform": [0, 2, 6, 9, 11, 14, 15, 18, 38, 41, 42, 44, 45, 54, 55, 57, 61, 62, 65, 70, 74, 75, 76, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 98], "under": [0, 7, 15, 48, 49, 84, 85, 88, 89, 92], "depart": [0, 92, 96], "energi": [0, 36, 92], "contract": [0, 92, 94], "de": [0, 92, 97], "ac02": [0, 92], "05ch11231": [0, 92], "grate": 0, "all": [0, 1, 2, 3, 4, 7, 11, 14, 15, 18, 23, 24, 25, 26, 27, 34, 36, 39, 41, 45, 46, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 64, 65, 66, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 94, 98], "those": [0, 7, 9, 14, 34, 41, 50, 54, 61, 62, 68, 72, 75, 76, 78, 79, 84, 85, 86, 88, 89, 90], "have": [0, 1, 2, 4, 7, 18, 26, 36, 37, 41, 43, 45, 48, 53, 54, 55, 61, 62, 65, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98, 99], "contributor": [0, 94], "aaron": 0, "brewster": [0, 97], "ammaar": 0, "saeed": 0, "asmit": 0, "bhowmick": 0, "benjamin": 0, "william": [0, 97], "billi": 0, "poon": [0, 54, 61, 62], "daniel": 0, "palei": 0, "david": [0, 99, 100], "waterman": [0, 11, 75, 77, 97, 99, 100], "derek": 0, "mendez": 0, "graem": [0, 99, 100], "winter": [0, 11, 18, 41, 81, 86, 97, 99, 100], "huw": 0, "jenkin": 0, "ian": 0, "ree": 0, "iri": 0, "young": [0, 97], "jame": [0, 85, 100], "beilsten": [0, 86, 97], "edmand": [0, 86, 97], "parkhurst": [0, 11, 77, 97, 100], "johan": 0, "hattn": [0, 97], "katrin": 0, "leinweb": 0, "kevin": 0, "dalton": 0, "lee": 0, "o": [0, 2, 4, 22, 23, 75, 77, 81, 85, 93, 97], "riordan": [0, 97], "lui": [0, 100], "fuent": [0, 97, 100], "montero": [0, 97, 100], "marcin": 0, "wojdyr": 0, "marku": 0, "gerstel": [0, 97], "nathaniel": 0, "echol": [0, 97], "devenish": [0, 97], "nigel": 0, "moriarti": [0, 2], "oliv": 0, "zeldin": [0, 97], "richard": 0, "gildea": [0, 11, 18, 41, 74, 86, 97], "robert": 0, "bolotovski": [0, 11], "stef": 0, "smeet": 0, "takanori": 0, "nakan": 0, "tara": 0, "michel": [0, 97], "clark": [0, 97], "tarik": 0, "drevon": 0, "In": [0, 1, 2, 4, 7, 11, 14, 15, 21, 24, 41, 48, 53, 54, 55, 61, 62, 63, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99], "addit": [0, 1, 7, 14, 15, 27, 34, 42, 44, 45, 47, 48, 50, 54, 55, 61, 62, 65, 77, 83, 84, 86, 88, 89, 90, 96, 98], "guidanc": 0, "gain": [0, 24, 27, 34, 43, 46, 48, 52, 53, 75, 76, 77, 80, 84, 88], "through": [0, 1, 14, 24, 36, 65, 75, 76, 78, 79, 80, 84, 85, 86, 88, 89, 90, 99], "numer": [0, 1, 14, 18], "intellectu": 0, "discuss": [0, 78, 84, 87, 88, 89, 99], "follow": [0, 1, 2, 3, 6, 7, 9, 14, 18, 41, 44, 47, 49, 53, 54, 55, 66, 68, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 98, 99], "alun": [0, 99], "ashton": [0, 97, 99], "gleb": 0, "bourenkov": 0, "gerard": [0, 99], "bricogn": [0, 11, 99], "phil": [0, 3, 4, 6, 7, 11, 12, 14, 15, 18, 21, 24, 26, 30, 32, 34, 52, 55, 65, 76, 77, 85, 100], "andrew": [0, 41, 86, 99, 100], "lesli": [0, 55, 99, 100], "garib": [0, 100], "murshudov": [0, 97, 100], "jim": [0, 99], "pflugrath": [0, 99], "harri": [0, 100], "powel": [0, 100], "jon": 0, "schuermann": 0, "matthew": 0, "webber": 0, "g": [0, 1, 2, 3, 6, 7, 11, 14, 15, 18, 23, 31, 41, 48, 50, 53, 54, 55, 61, 62, 65, 66, 68, 71, 74, 75, 78, 79, 81, 84, 85, 86, 87, 88, 90, 93, 97], "1987": 0, "proceed": [0, 11, 76, 78, 79], "daresburi": 0, "studi": [0, 97], "weekend": 0, "pp": 0, "120": [0, 1, 47, 48, 51, 52, 80, 84, 86, 88, 89, 98], "145": [0, 75, 78, 83, 84, 86, 88], "kabsch": [0, 99], "w": [0, 2, 11, 14, 15, 97], "2010": [0, 54, 61, 62, 81], "acta": [0, 2, 11, 18, 41, 71, 74, 77, 81, 86, 97], "cryst": [0, 11, 18, 41, 66, 71, 74, 79, 81, 86], "d66": 0, "125": [0, 75, 78, 80, 83, 84, 86, 87, 88], "132": [0, 78, 80, 83, 84, 86, 87, 88], "A": [0, 1, 2, 3, 4, 6, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 36, 41, 44, 48, 50, 53, 54, 55, 61, 62, 65, 72, 74, 75, 76, 77, 80, 82, 83, 84, 86, 87, 88, 90, 94, 95, 96, 97, 98, 99], "h": [0, 2, 36, 38, 54, 63, 75, 76, 77, 79, 80, 84, 85, 86, 87, 88, 97], "r": [0, 1, 2, 6, 11, 15, 18, 36, 41, 44, 48, 51, 52, 65, 71, 74, 75, 78, 79, 86, 87, 95, 97], "2007": 0, "evolv": 0, "macromolecular": [0, 1, 72, 96, 97], "crystallographi": [0, 1, 2, 75, 76, 92, 96, 98, 99], "245": [0, 84, 86, 87, 88], "41": [0, 75, 77, 80, 81, 83, 84, 85, 86, 88, 90], "51": [0, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88], "isbn": 0, "978": [0, 84, 86, 87, 88], "4020": 0, "6314": 0, "5": [0, 1, 2, 3, 6, 11, 34, 41, 42, 45, 46, 47, 48, 49, 51, 52, 54, 55, 59, 61, 62, 65, 68, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97, 99, 101], "gross": [0, 2, 11, 97], "kunstlev": [0, 2, 11, 97], "n": [0, 2, 3, 4, 6, 11, 18, 21, 22, 34, 36, 55, 59, 75, 84, 86, 87, 88, 89, 97], "k": [0, 2, 11, 18, 38, 41, 54, 63, 77, 80, 84, 86, 87, 88, 97], "adam": [0, 2, 11, 97], "p": [0, 2, 3, 11, 18, 41, 49, 71, 72, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98], "d": [0, 1, 2, 4, 11, 18, 21, 22, 24, 26, 30, 31, 32, 41, 45, 47, 48, 51, 52, 54, 59, 65, 75, 76, 77, 80, 81, 83, 84, 85, 86, 88, 97, 99], "2002": [0, 2, 84], "journal": [0, 14, 19, 54, 61, 62], "appli": [0, 1, 3, 4, 11, 14, 15, 18, 21, 25, 47, 53, 54, 55, 61, 62, 63, 65, 74, 75, 77, 78, 80, 84, 85, 86, 88, 89, 90], "35": [0, 2, 3, 75, 76, 79, 83, 84, 85, 86, 87, 88], "126": [0, 2, 75, 80, 84, 86, 88], "136": [0, 2, 75, 80, 84, 86, 87, 88, 98], "document": [1, 55, 65, 81, 94], "aim": [1, 78, 90], "variou": [1, 2, 11, 14, 44, 45, 53, 54, 62, 64, 65, 74, 76, 77, 84, 88, 89, 93, 96], "depth": [1, 4, 24], "encourag": 1, "read": [1, 2, 3, 4, 5, 24, 25, 26, 27, 30, 34, 41, 56, 75, 76, 80, 84, 85, 86, 87, 88, 89], "symmetri": [1, 11, 15, 19, 33, 38, 41, 54, 61, 62, 65, 70, 72, 73, 74, 77, 78, 82, 83, 85, 97], "section": [1, 3, 76, 78, 79, 84, 88, 89], "tutori": [1, 7, 8, 76, 77, 78, 79, 80, 81, 83, 85, 86, 95], "quick": [1, 50, 65, 76, 83, 85], "overview": 1, "For": [1, 2, 7, 9, 11, 14, 15, 23, 39, 42, 43, 45, 48, 49, 52, 53, 54, 55, 56, 59, 61, 62, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 90, 92, 93, 98], "most": [1, 2, 4, 7, 11, 15, 18, 34, 36, 39, 54, 55, 73, 75, 76, 78, 81, 84, 85, 86, 88, 89, 90, 98, 99], "like": [1, 2, 4, 7, 11, 14, 23, 27, 55, 75, 76, 78, 80, 81, 83, 84, 85, 86, 88, 89, 90], "suffici": [1, 7, 41, 80, 85, 87, 89], "onli": [1, 2, 6, 7, 11, 14, 18, 27, 34, 37, 39, 45, 46, 47, 48, 54, 55, 56, 57, 61, 62, 65, 71, 72, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98], "below": [1, 3, 11, 36, 39, 41, 45, 48, 53, 54, 55, 61, 62, 65, 74, 75, 80, 84, 85, 86, 88, 89, 90], "return": [1, 4, 6, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 50, 54, 61, 62, 76, 85, 89], "rest": [1, 11, 41, 76, 86], "help": [1, 4, 6, 18, 21, 25, 30, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 80, 83, 84, 88, 89, 90, 98, 99], "need": [1, 2, 4, 9, 14, 16, 21, 25, 26, 41, 42, 48, 52, 55, 59, 62, 65, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 93, 99], "As": [1, 2, 4, 7, 36, 41, 48, 76, 80, 81, 83, 84, 85, 86, 87, 88, 89, 98, 99], "remind": [1, 83], "how": [1, 4, 6, 11, 14, 15, 48, 54, 58, 61, 62, 64, 75, 76, 78, 80, 83, 84, 85, 86, 88, 89, 90, 97, 98, 99], "run": [1, 4, 6, 7, 9, 14, 15, 16, 18, 39, 41, 44, 45, 49, 54, 56, 61, 62, 65, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 98], "routin": [1, 65, 90], "integr": [1, 3, 15, 19, 31, 33, 36, 41, 42, 45, 47, 48, 51, 52, 57, 60, 62, 64, 65, 71, 72, 73, 74, 78, 79, 80, 81, 83, 85, 86, 91, 95, 96, 97, 99, 100], "obtain": [1, 2, 4, 9, 14, 15, 41, 54, 61, 62, 77, 79, 80, 84, 86, 97], "merg": [1, 34, 44, 45, 54, 56, 61, 62, 65, 74, 75, 76, 78, 85, 86, 89, 90], "mtz": [1, 34, 41, 44, 45, 65, 75, 76, 77, 78, 81, 83, 85, 86, 87, 90, 95], "file": [1, 4, 7, 8, 21, 23, 24, 25, 26, 30, 31, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 98], "refl": [1, 3, 6, 36, 38, 39, 41, 42, 44, 45, 47, 48, 52, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 95, 98], "expt": [1, 3, 6, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 95, 98], "symmetr": [1, 41, 71, 75, 78, 84, 86, 87, 88, 90], "also": [1, 2, 3, 4, 7, 9, 11, 14, 15, 18, 21, 22, 24, 26, 27, 34, 38, 45, 49, 54, 61, 62, 63, 65, 70, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 98], "advis": [1, 94], "familiaris": 1, "themselv": [1, 24], "standard": [1, 2, 15, 21, 24, 26, 36, 41, 48, 55, 65, 72, 74, 76, 77, 78, 81, 83, 85, 86, 87, 90, 98], "program": [1, 3, 7, 8, 35, 36, 37, 38, 41, 42, 43, 45, 47, 48, 51, 52, 53, 54, 55, 56, 59, 62, 63, 64, 65, 71, 74, 75, 76, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 98, 101], "output": [1, 3, 6, 7, 14, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 98], "contain": [1, 3, 4, 9, 11, 14, 15, 16, 18, 23, 25, 35, 39, 41, 45, 47, 48, 53, 54, 55, 61, 62, 64, 65, 72, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 98, 100], "inform": [1, 2, 7, 9, 14, 15, 18, 24, 27, 42, 45, 48, 49, 53, 54, 61, 62, 72, 75, 78, 79, 84, 85, 86, 87, 88, 89, 90, 92], "html": [1, 41, 44, 49, 64, 65, 71, 75, 76, 78, 86, 87, 98], "report": [1, 12, 14, 41, 43, 49, 55, 65, 69, 71, 72, 73, 76, 78, 80, 86, 87, 89, 92, 98], "plot": [1, 12, 15, 32, 58, 61, 64, 65, 69, 70, 72, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 98], "relat": [1, 2, 14, 38, 40, 54, 61, 62, 75, 78, 79, 80, 84, 85, 86, 88, 89], "statist": [1, 14, 43, 44, 45, 48, 49, 54, 61, 62, 65, 67, 69, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 98], "These": [1, 2, 3, 4, 14, 15, 34, 39, 49, 54, 62, 65, 76, 77, 78, 80, 82, 84, 85, 86, 88, 89, 98], "cover": [1, 48, 55, 78, 84, 88, 89], "commonli": [1, 14, 76, 78, 79, 89], "exampl": [1, 2, 3, 4, 6, 7, 8, 21, 23, 24, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 98], "valu": [1, 3, 7, 10, 11, 14, 15, 18, 34, 36, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 65, 67, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 98], "cut": [1, 45, 54, 61, 62, 65, 76, 99], "back": [1, 55, 65, 75, 76, 78, 83, 85, 89], "inspect": [1, 4, 61, 72, 78, 80, 83, 84, 85, 87, 88], "v": [1, 2, 7, 44, 54, 61, 62, 74, 75, 82, 84, 88, 89, 97, 98, 99], "batch": [1, 34, 45, 53, 65, 74, 75, 78, 81, 86, 90, 98], "often": [1, 2, 4, 11, 36, 54, 76], "case": [1, 2, 4, 7, 11, 14, 15, 21, 24, 26, 36, 41, 48, 53, 54, 55, 61, 62, 63, 65, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98, 99], "suitabl": [1, 15, 45, 54, 61, 62, 65, 74, 76, 77, 84, 87, 88, 89, 90, 98], "perhap": [1, 45, 80], "due": [1, 14, 15, 65, 75, 84, 86, 88, 89, 90], "radiat": [1, 74, 75, 76, 80, 83, 84, 86, 88, 89, 97], "damag": [1, 74, 75, 76, 80, 83, 84, 86, 88, 89, 94], "nonisomorph": 1, "can": [1, 2, 3, 4, 7, 9, 11, 14, 16, 21, 24, 25, 34, 36, 38, 39, 41, 43, 45, 46, 48, 49, 52, 53, 54, 55, 56, 61, 62, 63, 65, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 97, 98, 99], "singl": [1, 2, 4, 11, 12, 14, 15, 16, 18, 25, 26, 30, 39, 41, 42, 46, 49, 52, 53, 54, 55, 56, 59, 61, 62, 65, 68, 72, 74, 76, 78, 79, 83, 84, 85, 87, 88, 89, 90, 95, 97], "sweep": [1, 15, 65, 74, 78, 81, 84, 85, 87, 88, 90, 91, 98], "multipl": [1, 3, 4, 11, 16, 34, 35, 37, 39, 40, 44, 46, 48, 51, 52, 53, 54, 55, 61, 62, 65, 66, 68, 70, 71, 72, 74, 75, 76, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98, 99, 100], "multi": [1, 2, 15, 16, 18, 34, 39, 41, 43, 45, 46, 49, 52, 53, 54, 55, 61, 62, 65, 74, 82, 84, 88, 89, 97], "crystal": [1, 2, 3, 4, 6, 11, 15, 18, 25, 28, 31, 33, 34, 35, 39, 41, 45, 49, 53, 54, 55, 58, 61, 62, 64, 65, 67, 70, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 95, 97, 98], "d_min": [1, 11, 18, 34, 38, 39, 41, 42, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 65, 66, 71, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 90], "0": [1, 2, 3, 4, 6, 11, 12, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 30, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98], "resolut": [1, 11, 17, 18, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 62, 65, 69, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97], "cutoff": [1, 11, 18, 39, 41, 44, 45, 54, 55, 61, 62, 65, 74, 75, 78, 84, 86, 88, 89], "angstrom": [1, 11, 48, 51, 52, 54, 79, 80, 83, 84, 85, 86, 88, 89], "exclude_imag": [1, 48, 55, 65, 71, 74, 75, 86], "100": [1, 18, 41, 44, 46, 48, 51, 52, 54, 55, 56, 61, 62, 65, 74, 75, 78, 81, 83, 84, 86, 87, 88, 89, 90], "remov": [1, 4, 36, 41, 51, 54, 55, 61, 62, 65, 68, 72, 74, 75, 76, 78, 84, 85, 86, 87, 88, 89, 95], "imag": [1, 2, 3, 4, 6, 11, 12, 14, 15, 16, 23, 24, 25, 27, 30, 31, 32, 34, 39, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 99], "command": [1, 4, 7, 9, 33, 34, 49, 53, 65, 73, 75, 76, 77, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 98], "exclud": [1, 14, 15, 34, 45, 48, 50, 54, 55, 61, 62, 65, 71, 74, 76, 78, 79, 84, 85, 86, 88], "rang": [1, 15, 16, 27, 48, 51, 52, 53, 54, 55, 61, 62, 65, 66, 68, 71, 74, 76, 81, 84, 85, 86, 87, 88, 89], "one": [1, 2, 6, 11, 14, 15, 16, 25, 37, 39, 41, 45, 48, 54, 55, 61, 62, 63, 65, 71, 72, 74, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98], "must": [1, 2, 4, 7, 14, 15, 34, 37, 53, 54, 55, 61, 62, 65, 66, 68, 76, 77, 78, 84, 86, 88, 89, 94], "id": [1, 3, 16, 34, 45, 47, 53, 54, 61, 62, 65, 68, 69, 74, 75, 76, 80, 84, 85, 86, 87, 88, 97], "exclus": [1, 52, 78, 86], "should": [1, 2, 4, 7, 14, 15, 18, 26, 39, 45, 51, 55, 65, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95], "syntax": [1, 76], "b": [1, 2, 14, 15, 18, 21, 22, 41, 54, 61, 62, 63, 65, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 97], "where": [1, 2, 4, 7, 11, 14, 15, 18, 21, 23, 24, 25, 26, 27, 30, 36, 39, 44, 45, 48, 50, 53, 54, 55, 56, 61, 62, 65, 76, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 93], "number": [1, 2, 4, 7, 11, 12, 14, 15, 16, 17, 18, 23, 34, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 61, 62, 65, 66, 67, 68, 69, 72, 74, 75, 76, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 97, 98], "start": [1, 2, 8, 15, 18, 24, 26, 34, 48, 49, 54, 55, 61, 62, 65, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 93, 100], "initi": [1, 11, 12, 14, 15, 21, 24, 26, 30, 54, 55, 61, 62, 65, 74, 76, 77, 79, 82, 84, 85, 88, 89, 99], "final": [1, 12, 14, 61, 65, 72, 74, 75, 76, 78, 83, 84, 85, 86, 88, 89, 90, 92], "exclude_dataset": [1, 65, 78], "10": [1, 14, 15, 41, 42, 43, 44, 48, 52, 54, 55, 56, 57, 59, 61, 62, 65, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 90, 97, 98], "50": [1, 16, 41, 42, 51, 52, 54, 55, 56, 59, 75, 80, 83, 84, 85, 86, 87, 88], "79": [1, 54, 75, 78, 81, 83, 84, 85, 86, 87, 88], "whole": [1, 4, 48, 51, 52, 54, 61, 62, 65, 74, 78, 80, 83, 84, 85, 88, 89], "anomal": [1, 34, 44, 65, 74, 76, 78, 81, 84, 86, 88, 89, 90], "dure": [1, 2, 4, 14, 15, 42, 49, 50, 51, 54, 55, 61, 62, 65, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 98], "true": [1, 2, 4, 6, 11, 14, 15, 16, 18, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 79, 83, 84, 85, 86, 88, 89, 95], "fals": [1, 4, 6, 11, 14, 15, 16, 17, 22, 23, 24, 25, 27, 32, 34, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 67, 69, 70, 72, 74, 75, 76, 77, 84, 85], "determin": [1, 2, 3, 4, 11, 14, 15, 18, 22, 39, 41, 45, 48, 52, 53, 54, 55, 58, 61, 62, 63, 64, 65, 71, 74, 77, 78, 80, 84, 85, 86, 88, 89, 97], "whether": [1, 4, 14, 15, 18, 34, 39, 48, 52, 54, 55, 58, 61, 62, 64, 65, 67, 71, 74, 84, 85, 88, 89, 94], "pair": [1, 2, 14, 18, 24, 35, 41, 44, 49, 54, 56, 65, 68, 74, 75, 77, 78, 80, 84, 86, 88], "combin": [1, 2, 11, 15, 18, 39, 41, 45, 47, 48, 52, 54, 55, 61, 62, 65, 72, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 90, 95], "outlier": [1, 14, 15, 41, 54, 55, 60, 61, 62, 65, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89], "reject": [1, 14, 15, 44, 47, 48, 51, 52, 54, 55, 61, 62, 65, 74, 75, 83, 84, 85, 86, 87, 88, 89], "By": [1, 2, 7, 35, 53, 54, 56, 61, 62, 63, 65, 68, 70, 72, 76, 78, 83, 84, 85, 86, 87, 88, 89, 90], "default": [1, 7, 11, 14, 15, 18, 23, 25, 32, 34, 35, 36, 44, 45, 46, 49, 53, 54, 56, 61, 62, 63, 65, 66, 68, 70, 72, 74, 76, 77, 80, 81, 83, 84, 87, 88, 89, 90, 98], "some": [1, 2, 3, 4, 6, 7, 9, 14, 23, 26, 34, 42, 54, 61, 62, 65, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 95, 96], "signal": [1, 76, 97], "strongli": [1, 65, 86], "strength": [1, 76, 78, 90, 97], "enhanc": 1, "when": [1, 2, 9, 11, 14, 15, 18, 26, 27, 34, 36, 39, 45, 48, 51, 52, 53, 54, 55, 61, 62, 65, 68, 71, 72, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 88, 89, 95, 98], "absorpt": [1, 15, 36, 55, 65, 74, 84, 86, 88, 89, 90], "correct": [1, 2, 3, 4, 15, 18, 23, 24, 31, 36, 45, 48, 51, 52, 53, 55, 65, 67, 74, 76, 77, 78, 79, 82, 84, 85, 86, 88, 89, 90], "physic": [1, 2, 4, 15, 36, 65, 74, 84, 86, 88, 89, 90, 97, 99], "rel": [1, 11, 15, 18, 48, 54, 58, 64, 65, 74, 78, 83, 84, 85, 86, 88, 89, 90], "incom": [1, 84, 88, 89], "outgo": 1, "scatter": [1, 2, 48, 54, 61, 62, 65, 76, 84, 88, 89, 97], "vector": [1, 2, 3, 6, 11, 14, 18, 21, 24, 35, 36, 41, 53, 54, 79, 84, 85, 86, 88, 89], "account": [1, 2, 36, 48, 51, 52, 84, 86, 88, 89, 90], "differ": [1, 2, 4, 6, 14, 18, 34, 39, 40, 41, 43, 51, 54, 55, 65, 71, 76, 77, 78, 79, 83, 84, 85, 86, 88, 89, 90, 99], "path": [1, 4, 7, 27, 35, 36, 37, 38, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 76, 83, 85, 86, 93], "rather": [1, 2, 7, 65, 76, 77, 78, 80, 83, 84, 85, 88, 89, 90, 99], "than": [1, 2, 7, 11, 18, 21, 39, 47, 48, 54, 55, 57, 61, 62, 65, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 95, 98, 99], "absolut": [1, 18, 31, 54, 61, 62, 85, 86], "beam": [1, 2, 3, 4, 6, 11, 22, 23, 24, 25, 27, 28, 33, 34, 35, 36, 38, 39, 42, 48, 52, 53, 54, 55, 58, 59, 60, 61, 62, 66, 70, 76, 77, 78, 79, 83, 84, 85, 86, 88, 89, 95, 96, 97, 99], "constrain": [1, 11, 54, 61, 62, 65, 84, 88, 89], "constraint": [1, 11, 14, 54, 61, 62, 72, 76, 84, 85, 87, 88, 89, 90], "parameteris": [1, 2, 14, 15, 54, 61, 62, 75, 76, 77, 83, 84, 85, 88, 98], "chang": [1, 2, 9, 18, 25, 34, 40, 54, 62, 63, 65, 74, 75, 76, 77, 78, 79, 83, 84, 87, 88, 89, 97, 98, 99], "absorption_level": [1, 65, 74, 90], "low": [1, 11, 38, 48, 51, 52, 54, 65, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90], "medium": [1, 65, 74, 90], "give": [1, 2, 7, 14, 18, 41, 46, 47, 54, 61, 62, 63, 68, 71, 74, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 98], "around": [1, 18, 35, 48, 51, 52, 54, 61, 62, 76, 78, 80, 85, 89, 99], "25": [1, 11, 44, 48, 54, 65, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88], "depend": [1, 2, 14, 36, 45, 49, 61, 64, 65, 78, 83, 84, 88, 89, 90], "see": [1, 2, 7, 9, 11, 18, 48, 49, 54, 55, 61, 62, 65, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 93, 98], "extent": [1, 74, 84, 86, 88], "check": [1, 4, 7, 9, 16, 18, 25, 27, 34, 38, 39, 54, 65, 71, 76, 78, 81, 83, 84, 85, 86, 88, 95], "conveni": [1, 2, 3], "invok": 1, "export": [1, 18, 31, 34, 46, 65, 73, 76, 77, 83, 85, 86, 91], "unmerg": [1, 44, 45, 74, 75, 76, 81, 85, 86, 89, 100], "you": [1, 4, 7, 9, 23, 24, 41, 49, 55, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 93, 99], "want": [1, 49, 75, 76, 79, 80, 83, 84, 85, 86, 88, 89, 90], "individu": [1, 9, 41, 45, 65, 67, 70, 75, 76, 77, 78, 82, 83, 84, 86, 87, 88, 90, 95], "more": [1, 3, 4, 7, 9, 11, 18, 34, 37, 39, 47, 48, 49, 54, 55, 61, 62, 65, 71, 73, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 95, 98, 99], "extens": [1, 4, 33, 42, 46, 48, 52, 55, 59, 61, 72, 76, 77, 92, 96], "merged_mtz": [1, 65], "creat": [1, 4, 7, 9, 14, 15, 16, 22, 23, 24, 25, 27, 29, 34, 39, 49, 51, 54, 55, 61, 62, 65, 72, 76, 77, 78, 84, 85, 88, 89, 90, 98], "unmerged_mtz": [1, 65], "format": [1, 2, 3, 18, 23, 24, 25, 27, 31, 34, 45, 46, 48, 52, 53, 55, 56, 58, 65, 71, 74, 75, 76, 77, 81, 83, 84, 85, 87, 88, 89, 90, 98, 100], "One": [1, 39, 76, 77, 78, 80, 85], "choic": [1, 2, 15, 18, 35, 39, 40, 41, 42, 44, 45, 46, 48, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65, 70, 71, 74, 75, 78, 79, 84, 86, 88, 89, 90], "made": [1, 2, 15, 24, 34, 36, 39, 41, 54, 61, 62, 76, 84, 85, 86, 88, 89, 90], "automat": [1, 9, 11, 18, 34, 41, 49, 54, 61, 62, 68, 74, 76, 77, 81, 84, 85, 86, 87, 88, 89, 90, 97], "summat": [1, 36, 41, 55, 65, 76, 83, 84, 85, 86, 87, 88], "profil": [1, 3, 12, 25, 28, 32, 33, 36, 41, 42, 45, 48, 52, 55, 59, 65, 74, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 96], "seem": [1, 45, 76, 83, 85], "best": [1, 2, 4, 11, 18, 41, 45, 46, 54, 61, 62, 65, 72, 74, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 97], "estim": [1, 11, 18, 41, 43, 44, 49, 50, 54, 55, 61, 62, 65, 69, 72, 74, 78, 81, 84, 86, 88, 89, 90], "two": [1, 2, 3, 4, 15, 18, 23, 24, 36, 40, 53, 54, 61, 62, 66, 68, 75, 76, 78, 79, 80, 84, 88, 89, 90], "result": [1, 2, 11, 14, 15, 18, 36, 38, 39, 40, 41, 43, 44, 45, 52, 54, 58, 61, 62, 65, 66, 69, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 90, 95, 98], "tabl": [1, 2, 3, 4, 14, 15, 16, 34, 36, 39, 47, 48, 55, 58, 61, 62, 65, 67, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89], "log": [1, 11, 14, 18, 34, 36, 38, 41, 44, 45, 48, 51, 53, 54, 55, 61, 62, 65, 66, 71, 72, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 98], "score": [1, 11, 18, 41, 65, 71, 75, 78, 79, 81, 84, 86, 87, 88, 89, 90], "set": [1, 2, 3, 6, 7, 11, 12, 14, 15, 16, 18, 23, 27, 30, 31, 34, 35, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 65, 67, 70, 71, 74, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 97, 98, 99], "imid": [1, 15, 65, 84, 86, 88], "rpim": [1, 76, 78, 81, 84, 86, 88, 89, 90], "cc1": [1, 18, 75, 84, 86, 87, 88], "specifi": [1, 2, 11, 14, 15, 34, 35, 37, 39, 44, 47, 48, 51, 52, 53, 54, 55, 61, 62, 63, 65, 66, 70, 71, 72, 74, 76, 83, 85, 86, 93, 98], "coupl": [1, 85], "intensity_choic": [1, 34, 65], "sum": [1, 3, 6, 18, 30, 41, 45, 52, 55, 56, 65, 76, 83, 84, 85, 86, 87, 88, 89], "700": [1, 81, 84, 88], "crossov": [1, 83], "adjust": [1, 75, 76, 77, 84, 86, 88, 89, 90], "uncertainti": [1, 77, 84, 86, 88, 89, 90], "error": [1, 9, 14, 15, 18, 23, 36, 45, 53, 54, 61, 62, 65, 72, 74, 76, 77, 84, 86, 88, 89, 95], "sigma": [1, 18, 42, 52, 54, 55, 59, 61, 62, 65, 71, 74, 76, 77, 78, 81, 84, 86, 87, 88, 89, 90], "systemat": [1, 41, 70, 71, 74, 79, 80, 81, 83, 84, 86, 88, 89], "suffient": 1, "refin": [1, 3, 4, 11, 15, 18, 19, 33, 39, 42, 45, 47, 52, 54, 55, 58, 59, 62, 64, 65, 72, 73, 74, 78, 79, 80, 81, 82, 86, 91, 97, 98, 100], "while": [1, 2, 9, 14, 39, 54, 76, 77, 83, 84, 85, 86, 88, 89, 90], "an": [1, 2, 3, 4, 7, 9, 11, 14, 15, 16, 18, 21, 23, 24, 25, 26, 27, 30, 31, 32, 34, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 69, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 92, 95, 97, 98, 99], "import": [1, 2, 3, 4, 6, 7, 23, 25, 33, 34, 43, 48, 54, 60, 66, 69, 73, 76, 78, 79, 83, 85, 91, 98], "improv": [1, 65, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98], "qualiti": [1, 46, 49, 50, 75, 76, 80, 83, 84, 86, 87, 88, 89, 97, 99], "typic": [1, 2, 7, 11, 36, 49, 54, 55, 61, 62, 65, 74, 76, 80, 83, 84, 88, 89, 90], "poorer": [1, 86], "paramet": [1, 2, 4, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 30, 31, 32, 34, 75, 76, 77, 83, 84, 85, 86, 87, 88, 89, 90, 98], "becom": [1, 2, 14, 65, 78, 80, 85], "overinfl": 1, "If": [1, 4, 7, 9, 11, 14, 15, 16, 18, 22, 25, 34, 35, 36, 39, 41, 44, 45, 47, 48, 49, 51, 53, 54, 55, 61, 62, 65, 66, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 98], "so": [1, 2, 4, 11, 14, 16, 25, 27, 36, 41, 45, 54, 61, 62, 65, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90], "error_model": [1, 15, 65], "none": [1, 4, 6, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 80, 85, 86, 98], "don": [1, 34, 36, 39, 73, 83, 85], "t": [1, 2, 15, 21, 22, 23, 24, 26, 27, 30, 34, 36, 39, 41, 73, 75, 76, 77, 78, 83, 84, 85, 88, 89, 97], "basic": [1, 2, 7, 14, 78, 84, 86, 88, 89], "Will": 1, "keep": [1, 14, 39, 44, 45, 54, 61, 62, 72, 74, 75, 78, 83, 89, 99], "pre": [1, 12, 84, 88, 89], "02": [1, 14, 41, 42, 52, 54, 55, 59, 61, 62, 76, 78, 81, 83, 84, 86, 87, 88, 97, 98], "first": [1, 4, 12, 15, 18, 23, 24, 26, 27, 35, 39, 41, 46, 47, 53, 54, 55, 57, 61, 62, 70, 72, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 99], "assumpt": [1, 24, 36, 78, 80, 85], "similar": [1, 4, 15, 18, 41, 48, 53, 54, 76, 78, 79, 84, 85, 86, 87, 88, 89, 98], "affect": [1, 43, 54, 61, 62, 74, 76, 77, 80, 84, 85, 86, 88, 89], "approach": [1, 11, 78, 97], "optim": [1, 18, 76, 84, 86, 88, 89, 97], "altern": [1, 4, 7, 11, 53, 54, 61, 62, 63, 65, 79, 81, 84], "separ": [1, 14, 15, 23, 39, 41, 44, 48, 54, 55, 61, 62, 65, 72, 74, 75, 76, 77, 83, 84, 85, 87, 88, 95], "group": [1, 2, 4, 11, 15, 18, 22, 23, 24, 34, 38, 41, 44, 47, 48, 51, 52, 53, 54, 61, 62, 63, 65, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98], "chosen": [1, 2, 4, 11, 14, 15, 18, 36, 39, 44, 54, 58, 61, 62, 64, 65, 76, 78, 79, 84, 86, 87, 88, 89], "error_model_group": [1, 65], "e": [1, 2, 3, 4, 6, 7, 11, 14, 15, 18, 23, 26, 36, 41, 44, 48, 50, 53, 54, 55, 61, 62, 65, 66, 68, 71, 74, 75, 76, 78, 79, 84, 85, 86, 87, 88, 89, 90, 93, 95, 97], "partial": [1, 3, 18, 41, 45, 47, 54, 61, 62, 65, 71, 72, 74, 76, 79, 83, 84, 86, 87, 88, 97], "abov": [1, 4, 9, 38, 39, 41, 45, 48, 55, 65, 71, 72, 75, 76, 78, 84, 86, 88, 89, 90, 94], "threshold": [1, 15, 16, 32, 38, 39, 41, 42, 45, 46, 48, 52, 55, 59, 71, 72, 74, 75, 76, 77, 80, 84, 86, 88, 89], "partiality_threshold": [1, 34, 41, 45, 71, 72], "95": [1, 38, 41, 46, 55, 65, 71, 75, 78, 83, 84, 86, 87, 88], "disregard": 1, "measur": [1, 2, 3, 11, 14, 62, 65, 74, 76, 78, 84, 85, 86, 87, 88, 89, 97], "resourc": 1, "million": 1, "slow": [1, 24, 39, 45, 48, 51, 52, 53, 60, 65, 74, 75, 76, 77], "memori": [1, 11, 14, 23, 27, 39, 54, 55, 65, 83, 84, 88], "There": [1, 2, 7, 9, 76, 77, 78, 79, 80, 83, 84, 85, 88, 89, 92, 99], "sever": [1, 9, 50, 78, 79, 84, 85, 86, 88, 89], "manag": [1, 12, 14, 54, 61, 62, 65, 84, 88, 100], "allow": [1, 3, 11, 14, 16, 18, 24, 25, 35, 39, 45, 47, 49, 53, 54, 61, 62, 63, 65, 75, 76, 77, 78, 79, 83, 84, 85, 88, 89, 90, 92, 95, 96, 98], "blockwis": 1, "parallel": [1, 2, 16, 25, 36, 39, 49, 83, 84, 85, 88, 89, 97, 99], "nproc": [1, 14, 16, 48, 50, 54, 55, 61, 62, 65, 66, 74, 75, 84, 85, 88], "8": [1, 2, 11, 22, 41, 45, 48, 50, 54, 65, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97], "probabl": [1, 11, 18, 41, 42, 52, 54, 55, 59, 61, 62, 75, 78, 84, 86, 87, 88], "reason": [1, 2, 54, 61, 62, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 90], "computation": [1, 89, 99], "part": [1, 2, 14, 48, 54, 61, 62, 75, 76, 82, 83, 84, 85, 86, 88, 89, 98], "round": [1, 65, 74, 75, 76, 80, 81, 84, 86, 88], "full": [1, 3, 4, 14, 21, 24, 76, 78, 83, 84, 85, 88, 89, 98], "matrix": [1, 6, 14, 18, 22, 40, 41, 45, 53, 54, 58, 61, 62, 64, 65, 72, 74, 76, 83, 84, 85, 87, 88, 90], "full_matrix": [1, 65], "turn": [1, 2, 11, 26, 54, 55, 61, 62, 65, 75, 78, 80, 83, 84, 85, 88, 89], "off": [1, 18, 54, 55, 61, 62, 65, 75, 76, 80, 84, 85, 88, 89], "factor": [1, 3, 14, 15, 36, 41, 54, 65, 66, 68, 74, 75, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90], "compromis": 1, "full_matrix_max_iter": [1, 65], "do": [1, 6, 7, 9, 11, 12, 14, 16, 21, 32, 34, 39, 42, 48, 52, 54, 55, 59, 61, 62, 65, 74, 75, 76, 77, 78, 79, 81, 84, 86, 88, 89, 90, 95, 99], "least": [1, 14, 54, 61, 62, 76, 84, 86, 88, 89], "iter": [1, 11, 14, 16, 23, 24, 41, 54, 61, 62, 65, 66, 74, 80, 85], "reduc": [1, 2, 14, 15, 36, 41, 46, 48, 52, 54, 61, 62, 68, 75, 78, 84, 85, 88, 89, 90], "reflection_select": [1, 65, 74], "auto": [1, 11, 18, 41, 45, 46, 48, 50, 52, 53, 54, 55, 60, 61, 62, 64, 65, 66, 71, 74, 84, 85, 88, 89], "even": [1, 2, 14, 45, 76, 79, 80, 84, 85, 86, 89, 94], "veri": [1, 36, 75, 76, 78, 80, 83, 84, 85, 86, 88, 89, 90], "alwai": [1, 9, 48, 55, 79, 80, 85, 89], "get": [1, 8, 14, 16, 17, 23, 24, 25, 26, 27, 30, 31, 34, 55, 76, 78, 83, 84, 85, 86, 88, 89], "ce2": [1, 98], "try": [1, 4, 7, 23, 25, 34, 65, 75, 76, 78, 79, 80, 81, 83, 84, 85, 88, 98], "quasi_random": [1, 65, 74], "alongsid": [1, 75, 95], "function": [1, 2, 7, 11, 12, 14, 15, 16, 18, 23, 27, 37, 41, 44, 54, 55, 61, 62, 65, 76, 83, 84, 85, 86, 88, 89, 96], "target": [1, 11, 14, 15, 18, 19, 54, 61, 62, 65, 72, 75, 76, 83, 84, 86, 88, 89], "ha": [1, 4, 7, 11, 14, 15, 21, 24, 26, 30, 36, 41, 54, 61, 62, 75, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 92, 95, 98, 99], "alreadi": [1, 4, 14, 16, 21, 24, 26, 27, 30, 54, 61, 62, 65, 74, 76, 78, 80, 84, 86, 88, 89, 90], "been": [1, 15, 24, 26, 30, 41, 48, 53, 54, 61, 62, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 98], "anoth": [1, 54, 63, 76, 77, 80, 84, 86, 88, 98], "datafil": [1, 81, 84, 85, 87, 88], "only_target": [1, 65], "agre": [1, 2, 78], "close": [1, 14, 25, 54, 61, 62, 68, 75, 76, 77, 79, 83, 84, 85, 88, 89], "els": [1, 6, 23, 24, 89], "togeth": [1, 2, 65, 74, 76, 77, 78, 83, 85, 99], "joint": [1, 3, 54, 61, 62, 65, 82, 83], "assum": [1, 2, 7, 14, 21, 22, 24, 25, 26, 30, 36, 38, 47, 49, 76, 77, 81, 83, 85, 86, 90], "varianc": [1, 3, 15, 41, 46, 48, 52, 55, 65, 78, 84, 86, 88, 89], "column": [1, 3, 6, 14, 34, 54, 55, 61, 62, 65, 72, 79, 80, 86, 87], "would": [1, 7, 15, 54, 61, 62, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 95, 99], "same": [1, 2, 11, 14, 24, 25, 37, 45, 55, 61, 63, 72, 75, 76, 77, 78, 80, 83, 84, 85, 86, 88, 89, 98], "regardless": 1, "type": [1, 3, 4, 6, 7, 11, 14, 15, 17, 18, 22, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 81, 84, 85, 86, 87, 88, 89, 93], "three": [1, 2, 3, 11, 54, 58, 61, 62, 64, 75, 76, 78, 84, 86, 88, 89, 92, 99], "access": [1, 9, 14, 21, 49, 83, 85, 89, 92], "line": [1, 7, 9, 12, 34, 53, 65, 73, 75, 76, 79, 81, 82, 83, 84, 85, 88, 89, 90, 98], "arrai": [1, 4, 11, 14, 15, 18, 33, 34, 43, 55, 56, 65, 74, 92, 99], "kb": [1, 4, 15, 65, 74], "aimless": [1, 45, 77, 84, 86, 88, 89], "taken": [1, 36, 54, 58, 61, 62, 64, 77, 78, 84, 85, 86, 88, 89, 90], "xscale": [1, 45], "simpl": [1, 4, 14, 15, 21, 23, 24, 25, 32, 34, 48, 51, 52, 54, 55, 65, 74, 83, 85, 89], "still": [1, 3, 9, 11, 12, 14, 16, 23, 25, 53, 54, 55, 61, 62, 75, 76, 77, 78, 80, 83, 84, 85, 87, 88, 89, 97, 98], "small": [1, 2, 11, 54, 61, 62, 78, 79, 80, 82, 83, 84, 86, 88, 89], "rotat": [1, 2, 4, 6, 11, 14, 22, 26, 34, 35, 36, 39, 40, 48, 53, 54, 55, 58, 61, 62, 64, 65, 70, 74, 75, 76, 77, 78, 80, 83, 84, 86, 87, 88, 89, 95, 98, 99], "degre": [1, 2, 11, 15, 24, 26, 36, 42, 52, 54, 55, 59, 61, 62, 65, 68, 70, 74, 76, 79, 83, 84, 85, 86, 87, 88, 89, 90], "sensibl": [1, 78, 84, 88, 89, 90], "oscil": [1, 3, 12, 15, 30, 39, 53, 54, 61, 62, 65, 77, 79, 84, 88], "unless": [1, 7, 21, 34, 54, 61, 62, 65, 74, 76], "60": [1, 41, 65, 75, 77, 80, 81, 84, 86, 87, 88, 98], "disabl": [1, 14, 39, 48, 51, 52, 54, 86], "poorli": [1, 48, 54, 61, 62, 75, 76, 78, 86, 89], "space": [1, 2, 4, 7, 11, 14, 15, 18, 22, 32, 34, 38, 41, 42, 44, 45, 47, 48, 51, 52, 54, 55, 59, 60, 61, 62, 63, 65, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 98], "down": [1, 75, 76, 79, 84, 88, 89], "90": [1, 41, 47, 48, 51, 52, 54, 55, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 97, 98], "consist": [1, 2, 11, 14, 18, 23, 41, 54, 62, 63, 65, 76, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 99], "up": [1, 7, 11, 14, 15, 23, 25, 41, 43, 54, 55, 61, 62, 68, 70, 75, 76, 77, 79, 83, 84, 85, 86, 88, 89, 93, 98, 99], "smoothli": [1, 76, 84, 88, 89, 90, 95], "vari": [1, 14, 17, 42, 45, 52, 54, 55, 58, 59, 61, 62, 75, 76, 83, 84, 85, 87, 88, 89, 90, 95], "surfac": [1, 15, 36, 83, 84, 88, 89, 90], "scale_correct": 1, "decay_correct": [1, 65, 89], "absorption_correct": [1, 55, 65], "term": [1, 2, 14, 54, 61, 62, 65, 75, 84, 88, 89, 90], "regular": [1, 65, 78, 80, 83, 87, 98], "interv": [1, 15, 54, 61, 62, 65, 74, 84, 88], "scale_interv": [1, 65, 89], "decay_interv": [1, 65], "highest": [1, 11, 39, 41, 55, 63, 80, 83, 84, 86, 87, 88, 89], "order": [1, 4, 9, 11, 14, 15, 24, 34, 37, 39, 53, 54, 55, 56, 61, 62, 65, 76, 80, 83, 84, 85, 86, 88, 89, 90], "spheric": [1, 54, 61, 62, 65, 74, 90], "harmon": [1, 65, 74, 90], "lmax": [1, 65, 74], "recommend": [1, 3, 7, 54, 61, 62, 65, 75, 76, 77, 84, 86, 87, 88], "higher": [1, 4, 11, 65, 75, 76, 80, 84, 85, 86, 88, 89], "6": [1, 2, 3, 15, 18, 39, 41, 45, 46, 48, 52, 54, 61, 62, 65, 70, 71, 74, 75, 76, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 101], "weak": [1, 77, 79, 80, 81, 86, 98], "decay_restraint": [1, 65], "strong": [1, 3, 16, 45, 48, 50, 52, 54, 55, 60, 64, 66, 69, 72, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 98], "surface_weight": [1, 65], "restrain": [1, 54, 61, 62, 65, 77], "decai": [1, 15, 65, 75, 84, 86, 88, 90], "toward": [1, 75, 76, 83, 99], "zero": [1, 2, 11, 36, 48, 54, 55, 61, 62, 65, 68, 71, 72, 75, 83], "although": [1, 39, 62, 75, 77, 79, 80, 83, 84, 85, 88, 89, 95], "reciproc": [1, 2, 3, 4, 11, 14, 18, 22, 32, 35, 42, 45, 52, 54, 55, 59, 60, 76, 79, 80, 84, 86, 88, 89, 90], "coverag": [1, 83], "decay_term": 1, "thin": [1, 18, 74], "wedg": [1, 11, 54, 82, 85, 89], "necessari": [1, 2, 11, 15, 41, 55, 75, 77, 78, 83, 84, 88, 90, 95], "unstabl": [1, 65], "per": [1, 14, 15, 25, 36, 37, 39, 41, 44, 48, 54, 55, 61, 62, 65, 69, 74, 75, 76, 78, 81, 84, 85, 87, 88, 89, 95, 98], "2d": [1, 2, 12, 14, 48, 55, 65, 100], "grid": [1, 11, 38, 42, 50, 52, 53, 54, 55, 59, 65, 66, 80, 83, 84, 88, 89, 98], "bin": [1, 15, 38, 39, 44, 46, 48, 49, 52, 54, 55, 62, 65, 74, 75, 76, 81, 83, 84, 85, 86, 87, 88, 89], "n_resolution_bin": [1, 65], "second": [1, 18, 35, 75, 79, 80, 84, 85, 88, 89], "3d": [1, 11, 12, 48, 53, 54, 65, 76, 84, 85, 88, 89, 98, 100], "x": [1, 2, 14, 18, 21, 22, 24, 26, 34, 36, 41, 44, 48, 51, 52, 53, 54, 61, 62, 63, 65, 75, 76, 77, 78, 80, 83, 84, 85, 86, 88, 89, 92, 93, 96, 97, 99], "y": [1, 2, 14, 18, 21, 22, 24, 26, 41, 44, 48, 51, 52, 53, 54, 61, 62, 63, 65, 75, 76, 77, 78, 80, 83, 84, 85, 86, 88, 89, 97], "begin": [1, 2, 54, 75, 84, 88, 89], "n_absorption_bin": [1, 65], "modulation_correct": [1, 65], "smooth": [1, 84, 85, 88, 89], "n_modulation_bin": [1, 65], "wide": [1, 7, 48, 52, 54, 66, 76, 78, 86], "test": [1, 11, 14, 15, 18, 34, 38, 54, 63, 65, 71, 74, 77, 78, 80, 85, 86, 87, 89, 90], "lead": [1, 54, 61, 62, 79, 80, 84, 85, 88, 89], "overparameteris": [1, 86], "subset": [1, 14, 39, 47, 54, 55, 61, 62, 65, 66, 74, 78, 80, 83, 84, 86, 88, 89], "effici": [1, 3, 14], "four": [1, 75, 78, 86, 90], "intensity_rang": [1, 65, 74], "use_al": [1, 65, 74], "select": [1, 6, 11, 14, 15, 39, 41, 42, 44, 47, 52, 54, 55, 59, 61, 62, 65, 74, 76, 78, 80, 84, 86, 88, 89, 90], "properti": [1, 2, 11, 14, 15, 18, 26, 27, 34, 36, 48, 97], "20k": 1, "each": [1, 2, 11, 12, 14, 17, 18, 34, 36, 39, 41, 43, 48, 53, 54, 55, 61, 62, 65, 67, 68, 69, 70, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 98], "connected": [1, 65, 74], "area": [1, 48, 76, 86, 88, 89, 99], "shell": [1, 7, 44, 48, 74, 75, 76, 77, 78, 86, 90], "find": [1, 4, 9, 11, 16, 25, 39, 43, 46, 48, 51, 52, 53, 54, 55, 66, 78, 79, 83, 85, 87, 93, 95], "averag": [1, 39, 43, 56, 65, 84, 88, 89], "therefor": [1, 4, 14, 54, 61, 62, 75, 84, 85, 86, 88, 90], "explicitli": [1, 55, 76], "min_per_area": 1, "multi_dataset": [1, 65], "min_per_dataset": 1, "isigma_cutoff": [1, 65], "size": [1, 4, 11, 18, 24, 27, 36, 39, 40, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 74, 75, 76, 83, 84, 86, 87, 88, 89, 98], "normalis": [1, 15, 18, 36, 38, 41, 44, 65, 71, 74, 84, 86, 88], "e2_rang": [1, 65, 74], "isigma_rang": [1, 65, 74], "d_rang": [1, 65, 74], "simpli": [1, 2, 7, 14, 36, 41, 84, 85, 88, 89, 95], "prohibit": 1, "vec": 2, "describ": [2, 3, 7, 18, 49, 54, 61, 62, 76, 77, 79, 84, 85, 86, 87, 88, 89, 90, 97], "fraction": [2, 3, 11, 16, 21, 39, 47, 48, 53, 54, 55, 61, 62, 74, 84, 86, 88], "lattic": [2, 3, 11, 18, 41, 45, 54, 74, 77, 78, 80, 82, 86, 97, 98, 100], "basi": [2, 11, 18, 25, 40, 54, 62, 63, 75, 76, 78, 79, 84, 85, 86, 87, 88, 90], "pmatrix": 2, "l": [2, 14, 18, 38, 54, 63, 76, 77, 78, 79, 80, 84, 86, 87, 88, 90, 95, 97], "end": [2, 14, 15, 34, 47, 48, 55, 61, 65, 71, 74, 75, 76, 79, 80, 83, 84, 85, 86, 88, 89, 90, 92, 98, 100], "special": [2, 4, 11, 52, 54, 61, 62, 65, 75, 76, 77, 78, 89, 94], "integ": [2, 54, 55, 63, 68, 85, 86, 87, 98], "defin": [2, 14, 15, 18, 44, 47, 48, 51, 52, 55, 65, 75, 76, 77, 90], "point": [2, 3, 7, 11, 14, 18, 39, 41, 45, 55, 67, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95], "hkl": [2, 17, 31, 40, 45, 70, 80, 90], "miller": [2, 3, 18, 34, 40, 52, 54, 57, 70, 78, 79, 86, 87, 89], "indic": [2, 3, 4, 11, 14, 15, 23, 25, 27, 40, 46, 49, 50, 52, 54, 55, 57, 61, 62, 65, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89], "r_": [2, 18, 78], "phi": [2, 14, 22, 26, 53, 54, 61, 62, 65, 70, 77, 80, 83, 84, 85, 88, 89], "cartesian": [2, 11], "its": [2, 14, 34, 36, 49, 54, 61, 62, 65, 72, 76, 77, 79, 84, 88, 89, 94, 96], "ax": [2, 14, 26, 35, 36, 53, 58, 64, 76, 77, 78, 80, 86], "coincid": [2, 26], "distinct": [2, 78, 86], "becaus": [2, 11, 43, 75, 76, 80, 83, 84, 85, 88, 89], "distanc": [2, 11, 16, 24, 41, 52, 53, 54, 55, 61, 62, 75, 77, 83, 84, 85, 86, 87, 88], "unit": [2, 11, 18, 22, 34, 41, 45, 47, 48, 51, 52, 54, 55, 57, 58, 61, 62, 65, 72, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 94, 98], "unicod": [2, 77], "x212b": [2, 77], "accept": [2, 7, 14, 48, 51, 52, 54, 75, 84, 86, 88, 89], "refer": [2, 8, 14, 18, 21, 24, 26, 30, 38, 39, 41, 42, 44, 52, 53, 55, 58, 59, 63, 64, 65, 68, 73, 74, 77, 83, 84, 88, 89, 91, 98], "real": [2, 4, 11, 78, 79, 80, 83, 84, 85, 88, 89, 97, 98], "lab": [2, 46, 52], "clear": [2, 25, 41, 79, 80, 83, 85, 86, 89, 90, 95, 99], "context": [2, 96], "mathbf": [2, 36], "goniostat": 2, "invers": [2, 3, 14, 80, 84, 86, 88], "index": [2, 3, 6, 14, 15, 17, 18, 19, 27, 33, 34, 38, 41, 42, 45, 46, 47, 48, 52, 55, 59, 60, 61, 62, 63, 64, 65, 66, 70, 72, 73, 74, 78, 79, 81, 83, 85, 86, 91, 95, 97], "product": [2, 11, 94], "r_0": 2, "axi": [2, 4, 6, 21, 22, 24, 26, 34, 35, 39, 53, 54, 61, 62, 74, 75, 77, 78, 79, 80, 84, 86, 87, 88, 89], "angl": [2, 6, 11, 18, 21, 24, 26, 34, 40, 41, 53, 55, 62, 65, 70, 71, 72, 74, 75, 76, 78, 84, 86, 88, 89, 90], "doe": [2, 7, 14, 17, 37, 52, 53, 54, 56, 64, 75, 76, 83, 84, 85, 86, 88, 89], "cours": [2, 84, 89, 90], "notwithstand": [2, 80, 83], "misset": [2, 84, 88, 89], "about": [2, 4, 7, 14, 15, 24, 26, 48, 49, 58, 64, 76, 78, 80, 83, 84, 85, 86, 87, 88, 89, 100], "actual": [2, 14, 15, 75, 78, 83, 85, 88], "effect": [2, 14, 36, 48, 54, 61, 62, 65, 76, 78, 83, 84, 85, 86, 88, 89], "label": [2, 14, 44, 48, 61, 70, 72, 74, 86, 87], "sampl": [2, 11, 14, 18, 24, 36, 53, 54, 55, 61, 62, 75, 76, 78, 83, 84, 88, 89, 90], "equip": 2, "omega": [2, 26, 53], "deal": [2, 77, 83, 89], "might": [2, 4, 14, 36, 76, 79, 80, 83, 84, 85, 86, 88, 89], "redefin": 2, "outsid": [2, 14, 39, 68], "modul": [2, 14, 15, 18, 34, 65, 79, 81, 85, 86, 88, 89], "definit": [2, 14, 15, 21, 34, 76, 77, 80, 85], "decompos": [2, 58, 64], "matric": [2, 40, 86, 87], "convention": 2, "u": [2, 4, 36, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 97], "name": [2, 3, 4, 6, 7, 14, 15, 23, 24, 25, 26, 27, 31, 32, 34, 36, 37, 43, 45, 46, 49, 51, 52, 53, 54, 61, 62, 64, 65, 68, 72, 80, 81, 83, 84, 86, 87, 88, 89, 90, 94], "common": [2, 18, 30, 41, 65, 75, 80, 91], "univers": 2, "particular": [2, 4, 27, 48, 54, 61, 62, 76, 78, 89, 94, 98], "text": [2, 25, 34, 36, 75, 76, 84, 85, 88, 89], "Of": 2, "pure": [2, 14], "whilst": [2, 3, 23, 54, 61, 62, 85], "fix": [2, 14, 15, 26, 36, 39, 42, 52, 53, 54, 55, 59, 61, 62, 65, 75, 76, 77, 79, 80, 81, 83, 84, 85, 88], "orthogon": [2, 36, 54, 61, 62], "infinit": [2, 14], "wai": [2, 34, 75, 76, 79, 80, 81, 83, 84, 85, 86, 94, 95, 96, 98], "symbol": [2, 12, 54, 86, 87], "express": [2, 47, 90, 94], "simplifi": [2, 21], "align": [2, 11, 21, 24, 26, 35, 77, 78, 79, 80, 90], "j": [2, 11, 18, 36, 41, 48, 54, 66, 68, 74, 76, 78, 81, 86, 87, 97], "lie": [2, 79], "plane": [2, 21, 35, 54, 55, 61, 62, 70, 76, 77], "unfortun": [2, 80, 83, 85, 86], "disconnect": 2, "usual": [2, 14, 42, 43, 48, 74, 75, 76, 80, 81, 83, 84, 85, 88, 89, 90, 95], "call": [2, 14, 16, 23, 36, 41, 48, 49, 54, 55, 74, 76, 78, 84, 85, 88, 89, 98], "pdb": [2, 41, 45, 52, 65, 76, 79, 84, 86], "7": [2, 3, 38, 41, 47, 48, 49, 51, 52, 75, 76, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98], "essenti": [2, 14, 75, 78, 84, 85, 88, 89], "transform": [2, 11, 40, 54, 62, 87, 89, 90], "state": [2, 14, 54, 61, 62, 84, 88], "element": [2, 14, 15, 18, 26, 41, 78, 80, 84, 85, 86, 88, 89], "explicit": [2, 54, 61, 62, 84, 88, 89], "compact": [2, 11, 18, 25, 45, 53, 83], "form": [2, 7, 14, 23, 31, 44, 48, 54, 55, 61, 62, 76, 78, 79, 80, 84, 85, 88, 89, 94], "co": [2, 36, 78, 86, 97], "gamma": [2, 18, 41, 86, 90], "beta": [2, 18, 41, 62, 71, 74, 84, 86, 88, 89, 90], "sin": 2, "alpha": [2, 26, 41, 54, 61, 62, 86, 90], "It": [2, 3, 11, 14, 36, 38, 41, 42, 51, 54, 55, 61, 62, 65, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89], "desir": [2, 9, 42, 65, 74, 84, 87, 88, 90], "deriv": [2, 4, 6, 14, 22, 86, 89, 90, 94], "relationship": [2, 3, 53], "interest": [2, 16, 48, 75, 83, 85], "eqnarrai": 2, "m": [2, 11, 36, 41, 47, 75, 76, 78, 81, 84, 86, 87, 88, 89, 97, 98], "mathsf": 2, "prime": 2, "nonumb": 2, "analogi": 2, "left": [2, 36, 80, 89], "right": [2, 4, 36, 75, 76, 80, 83, 85, 94], "f": [2, 6, 18, 76, 77, 78, 84, 86, 87, 88, 89, 90], "fractionalis": 2, "easili": [2, 4, 76], "uctbx": [2, 11, 22], "unit_cel": [2, 11, 22, 34, 42, 45, 47, 48, 51, 52, 54, 55, 59, 61, 62, 65, 74, 75, 76, 77, 79, 80, 83, 84, 87, 88, 98], "object": [2, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 53, 54, 61, 62, 68, 83, 85, 99, 100], "cell": [2, 11, 14, 18, 22, 34, 36, 41, 45, 47, 48, 51, 52, 54, 58, 61, 62, 65, 66, 71, 72, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 97, 98], "frac": [2, 36, 83, 84, 88, 89], "bc": 2, "ac": [2, 93, 97], "ab": [2, 84, 86, 88], "abc": 2, "sqrt": [2, 18, 84, 86, 88], "implicit": [2, 55], "orthonorm": 2, "scale": [2, 3, 18, 19, 22, 25, 33, 36, 41, 44, 45, 46, 49, 57, 73, 74, 78, 80, 81, 82, 85, 91, 96, 97], "Its": [2, 37], "clearli": [2, 76, 80, 83, 84, 85, 88, 89], "mutual": [2, 52], "think": [2, 80, 85, 99], "sequenc": [2, 3, 15, 16, 23, 25, 27, 31, 37, 48, 53, 54, 55, 61, 62, 65, 68, 80, 81, 83, 84, 85, 87, 88, 90, 98], "practic": [2, 14, 75, 76, 79, 84, 86, 88, 89, 91], "time": [2, 4, 27, 34, 47, 65, 75, 77, 78, 79, 83, 84, 85, 86, 87, 88, 89, 96, 97, 99], "slippag": 2, "unknown": [2, 27, 45], "expect": [2, 7, 14, 18, 36, 65, 75, 76, 77, 79, 80, 83, 84, 85, 86, 88, 89, 99], "inadequaci": 2, "other": [2, 4, 7, 14, 22, 24, 26, 39, 41, 43, 48, 54, 55, 61, 62, 65, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 92, 94, 95, 98, 99], "aspect": [2, 77], "experiment": [2, 3, 4, 7, 11, 27, 39, 53, 54, 61, 62, 63, 65, 66, 72, 76, 77, 78, 79, 84, 86, 88, 89, 90, 91, 98, 99], "descript": [2, 3, 4, 7, 21, 24, 48, 65, 76, 84, 85, 88, 89, 98], "reconcil": 2, "current": [2, 4, 7, 14, 18, 25, 34, 45, 54, 56, 61, 62, 65, 71, 77, 79, 80, 83, 85, 89, 93, 95, 96, 98, 99], "expand": [2, 70, 77], "datum": [2, 36], "variabl": [2, 53, 65, 76, 77, 83, 89], "That": [2, 14, 76, 85], "psi": [2, 14], "u_0": 2, "psi_x": 2, "psi_i": 2, "psi_z": 2, "convert": [2, 12, 14, 16, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 53, 54, 72, 75, 90], "equival": [2, 14, 15, 50, 53, 62, 65, 70, 80, 84, 86, 88, 89], "stage": [2, 36, 75, 76, 77, 79, 84, 88, 89, 90], "unclear": 2, "goal": [2, 92], "dial": [2, 3, 5, 6, 8, 19, 32, 33, 34, 73, 74, 75, 76, 77, 79, 80, 82, 84, 87, 88, 89, 90, 95, 101], "vectori": 2, "mean": [2, 10, 15, 23, 37, 43, 46, 48, 52, 54, 61, 62, 65, 74, 76, 78, 79, 83, 84, 86, 87, 88, 89], "arbitrarili": 2, "appropri": [2, 7, 11, 12, 14, 15, 24, 41, 44, 54, 61, 62, 65, 76, 77, 78, 81, 83, 85, 86, 89, 90], "nevertheless": [2, 79, 83], "adopt": 2, "meaning": 2, "comparison": [2, 11, 23, 25, 38, 39, 40, 54, 65, 83, 85], "commun": [2, 76, 97], "what": [2, 14, 24, 74, 76, 78, 79, 80, 84, 87, 88, 89, 99], "incompat": 2, "argu": [2, 86], "standardis": 2, "choos": [2, 18, 39, 45, 54, 61, 62, 65, 74, 75, 76, 79, 83, 84, 88, 89, 91], "cif": [2, 41, 45, 65, 72, 78], "imgcif": [2, 21, 24, 26, 30], "ub": [2, 76, 83, 84, 87, 88, 90, 97], "rub": 2, "wrt": 2, "diffract": [2, 3, 11, 21, 36, 38, 43, 45, 46, 48, 52, 54, 55, 61, 75, 76, 77, 79, 80, 83, 84, 85, 86, 88, 89, 97, 98, 99, 100], "geometri": [2, 3, 4, 11, 34, 45, 53, 54, 61, 62, 76, 77, 79, 82, 83, 84, 88, 89, 90, 97, 98, 100], "direct": [2, 3, 4, 11, 21, 24, 26, 35, 39, 45, 53, 54, 61, 62, 71, 75, 76, 78, 79, 80, 84, 86, 88, 89, 94], "": [2, 3, 4, 6, 14, 18, 36, 44, 50, 52, 54, 55, 61, 62, 65, 72, 74, 75, 76, 78, 80, 83, 84, 85, 86, 88, 89, 90, 97], "along": [2, 11, 24, 34, 35, 41, 53, 54, 76, 77, 79, 83, 86], "impact": [2, 14, 75, 90], "sensor": [2, 24], "reflect": [2, 4, 6, 10, 11, 12, 14, 15, 16, 17, 18, 32, 34, 36, 38, 39, 41, 42, 44, 45, 47, 48, 52, 54, 55, 57, 59, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 100], "pixel": [2, 3, 16, 24, 32, 37, 42, 43, 46, 48, 51, 52, 53, 54, 55, 60, 61, 62, 64, 75, 76, 80, 81, 83, 84, 87, 88, 89, 92, 98, 99], "origin": [2, 3, 4, 24, 39, 47, 53, 54, 66, 68, 74, 76, 77, 78, 80, 81, 84, 85, 88, 89, 96], "develop": [2, 4, 7, 8, 48, 92, 96, 97, 99, 100], "sinc": [2, 11, 36, 54, 55, 84, 88, 89, 90], "concern": [2, 80], "intern": [2, 27, 61, 65, 74, 78], "represent": [2, 15, 18, 53, 86], "oper": [2, 4, 14, 18, 25, 38, 40, 41, 47, 48, 49, 62, 63, 75, 76, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90], "wa": [2, 7, 14, 15, 23, 48, 54, 61, 62, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90], "introduc": [2, 77, 78], "repres": [2, 12, 23, 41, 45, 53, 83, 84, 88, 89], "motor": 2, "mount": [2, 36], "floor": 2, "etc": [2, 18, 34, 61, 72, 78, 81, 86, 90, 98], "composit": 2, "_1": [2, 36], "circ": 2, "_2": 2, "_3": 2, "cdot": [2, 36], "gonimomet": 2, "record": [2, 4, 14, 15, 45, 54, 61, 62, 75, 76, 78, 79, 80, 81, 83, 84, 85, 87, 88, 90], "angular": [2, 11, 18, 54, 61, 62, 83, 84, 88], "displac": [2, 11], "magnitud": [2, 36, 64, 65, 80], "_i": [2, 36], "prior": [2, 11, 55, 76, 84, 88, 89, 90, 94], "handl": [2, 16, 24, 25, 26, 30, 34, 76, 77, 78, 85, 86, 87, 100], "scan": [2, 3, 4, 6, 14, 16, 17, 25, 26, 27, 28, 33, 39, 42, 45, 48, 49, 50, 52, 53, 54, 55, 58, 59, 61, 62, 67, 68, 70, 75, 76, 78, 83, 84, 85, 87, 88, 89, 90, 95, 99], "_n": 2, "_": [2, 22, 36], "confus": [2, 86], "constant": [2, 14, 54, 55, 61, 62, 77, 90], "throughout": [2, 83, 86], "thei": [2, 9, 11, 14, 16, 18, 39, 47, 48, 54, 55, 61, 62, 75, 76, 77, 78, 80, 83, 84, 88, 89, 99], "whose": [2, 48, 51, 52, 54, 55, 61, 62], "befor": [2, 7, 24, 36, 38, 39, 42, 54, 55, 61, 62, 65, 70, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 93], "apparatu": [2, 4], "circl": [2, 48, 51, 52, 75, 78, 84, 88], "\u03ba": 2, "arrang": [2, 83, 86], "\u03c9": 2, "\u03c6": [2, 84, 88, 89], "hold": 2, "explor": [2, 76, 80, 84, 86, 89, 97], "region": [2, 11, 16, 47, 48, 57, 76, 77, 79, 83, 86, 89], "_\u03c9": 2, "_\u03ba": 2, "_\u03c6": 2, "\ud835\udfd9": 2, "bernstein": [2, 41, 86, 97], "int": [2, 11, 12, 14, 15, 16, 18, 24, 25, 26, 27, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74], "crystallogr": [2, 77, 97], "199": [2, 75, 83, 84, 86, 87, 88], "205": [2, 75, 78, 80, 83, 84, 86, 88], "iucr": 2, "2006": [2, 18, 71], "buse": 2, "levi": 2, "rai": [2, 22, 34, 36, 75, 76, 80, 92, 96, 97, 99], "neutron": 2, "22": [2, 3, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98], "457": [2, 83, 84, 88], "464": [2, 84, 88], "1967": 2, "giacovazzo": 2, "fundament": [2, 14], "oxford": 2, "press": [2, 80, 89], "toolbox": [2, 97], "reusabl": 2, "appl": [2, 11, 41, 66, 81, 86, 97], "hammerslei": 2, "westbrook": 2, "444": [2, 78, 84, 85, 88], "458": [2, 83, 84, 88], "paciorek": 2, "meyer": 2, "chapui": 2, "On": [2, 50, 76, 77, 79, 85, 89], "modern": 2, "sect": 2, "found": [2, 4, 6, 11, 16, 41, 48, 49, 50, 53, 54, 65, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 97, 98], "55": [2, 75, 76, 80, 83, 84, 85, 87, 88, 90], "543": [2, 84, 88], "557": [2, 83, 88], "1999": [2, 54, 55, 61, 62, 86, 88, 97], "atom": [2, 65, 78, 86], "bibliograph": 2, "entri": [2, 79], "brookhaven": 2, "natl": [2, 97], "1992": [2, 97], "rupp": 2, "write": [3, 7, 34, 41, 45, 47, 48, 54, 61, 62, 72, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 98], "store": [3, 4, 14, 18, 49, 58, 76, 77], "summaris": [3, 76, 98], "plu": [3, 14, 15, 31, 84, 88, 89], "option": [3, 4, 6, 7, 15, 18, 34, 35, 39, 40, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 74, 76, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 98], "input": [3, 6, 7, 11, 14, 15, 16, 18, 30, 31, 32, 34, 37, 38, 39, 41, 42, 45, 47, 48, 52, 53, 54, 55, 56, 58, 61, 62, 65, 66, 68, 71, 72, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 98], "find_spot": [3, 16, 49, 50, 54, 69, 73, 75, 76, 77, 78, 80, 83, 84, 85, 87, 88, 89, 90, 98], "profile_model": [3, 4, 19, 33], "json": [3, 11, 18, 23, 25, 31, 35, 37, 39, 41, 44, 45, 53, 55, 61, 64, 65, 69, 70, 71, 72, 77, 78, 84, 86, 88, 98], "ascii": [3, 76, 89], "being": [3, 6, 12, 14, 18, 26, 43, 54, 56, 61, 62, 65, 75, 76, 78, 80, 83, 84, 85, 86, 88, 89, 90, 95, 96], "human": 3, "readabl": 3, "edit": [3, 37, 75, 83, 85, 89], "locat": [3, 18, 34, 51, 54, 61, 62, 85, 86, 88, 89], "ani": [3, 7, 11, 14, 15, 18, 23, 25, 34, 39, 41, 45, 48, 50, 53, 54, 61, 62, 63, 65, 68, 74, 76, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95], "imageset": [3, 6, 16, 23, 25, 28, 31, 33, 37, 46, 48, 54, 55, 56, 75, 76, 84, 85, 87, 88, 89, 95], "goniomet": [3, 4, 6, 23, 25, 27, 28, 33, 35, 36, 39, 53, 54, 61, 62, 76, 77, 80, 84, 85, 88, 95, 97], "encod": 3, "share": [3, 10, 12, 14, 24, 25, 26, 27, 39, 65, 74, 85, 95], "short": [3, 45, 50, 79, 83, 85], "shown": [3, 4, 7, 53, 65, 75, 84, 85, 86, 88, 89], "__id__": 3, "experimentlist": [3, 4, 11, 14, 16, 25, 28, 34, 85], "imagesequ": [3, 27, 28], "templat": [3, 21, 22, 23, 24, 25, 26, 27, 30, 34, 53, 77, 81, 84, 85, 88, 89, 95], "centroid_": 3, "cbf": [3, 4, 21, 24, 26, 34, 46, 48, 49, 50, 52, 53, 56, 67, 77, 81, 83, 84, 85, 87, 88, 90, 95, 98], "007852057721998333": 3, "772524827250213e": 3, "14": [3, 41, 75, 76, 78, 83, 84, 85, 86, 88, 97], "9999691721195861": 3, "polarization_norm": [3, 39, 53], "diverg": [3, 21, 42, 52, 55, 59, 76, 84, 87, 88, 89], "polarization_fract": [3, 21, 39, 53], "999": [3, 21, 84, 86, 88, 89], "sigma_diverg": [3, 21], "058": [3, 75, 84, 86], "wavelength": [3, 6, 21, 22, 34, 39, 53, 54, 61, 62, 65, 75, 76, 77, 81, 84, 86, 87, 88, 90], "9795": 3, "panel": [3, 14, 24, 39, 46, 47, 48, 51, 52, 53, 54, 55, 56, 60, 61, 62, 75, 76, 77, 78, 83, 84, 88, 89], "211": [3, 84, 87, 88], "53596470096178": 3, "219": [3, 75, 84, 86, 88], "45303890619488": 3, "192": [3, 75, 78, 84, 86, 88], "7062494437063": 3, "fast_axi": [3, 24, 39, 53, 77, 84, 88], "9999551354884303": 3, "0021159302715049923": 3, "009233084500921031": 3, "slow_axi": [3, 24, 39, 53, 77, 84, 88], "0021250002879257116": 3, "999997269169901": 3, "0009726389448611214": 3, "trusted_rang": [3, 24, 53, 84, 88], "495976": 3, "image_s": [3, 24, 53, 84, 88], "2463": [3, 84, 88], "2527": [3, 84, 88], "px_mm_strategi": 3, "parallaxcorrectedpxmmstrategi": [3, 84, 88], "sensor_unknown": 3, "pixel_s": [3, 24, 53, 76, 84, 88], "172": [3, 80, 84, 86, 88], "fixed_rot": [3, 26, 39, 53], "rotation_axi": [3, 26, 39], "5919306617286774e": 3, "16": [3, 41, 49, 60, 75, 76, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 97], "904199434387693e": 3, "exposure_tim": [3, 30], "epoch": [3, 30, 53], "1360324992": 3, "1360324993": 3, "1360324994": 3, "image_rang": [3, 15, 27, 30, 34, 53, 54, 66, 68, 75, 78], "9": [3, 11, 41, 46, 53, 54, 75, 76, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97], "real_space_a": [3, 22, 31], "23781811553089": 3, "600614003857873": 3, "077690418635804": 3, "real_space_b": [3, 22, 31], "657129890916668": 3, "4698317405529955": 3, "65693038892429": 3, "real_space_c": [3, 22, 31], "295803077552249": 3, "38": [3, 41, 75, 78, 80, 83, 84, 85, 86, 87, 88, 98], "99952334925477": 3, "972795822746061": 3, "space_group_hall_symbol": 3, "mosaic": [3, 22, 42, 52, 54, 55, 59, 76, 81, 84, 88, 98], "157": [3, 78, 84, 86, 88], "save": [3, 39, 41, 42, 48, 51, 53, 55, 59, 65, 76, 77, 83, 84, 85, 86, 87, 88, 89, 90, 98], "pickl": [3, 11, 16, 23, 25, 31, 39, 48, 52, 77], "binari": [3, 94], "serial": [3, 4, 15, 23, 25, 28, 33, 54, 61, 62, 76, 85, 92, 97, 98, 99], "class": [2, 3, 6, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 42, 46, 48, 52, 53, 55, 56, 59, 75, 76, 77, 84, 85, 87, 88], "flag": [3, 6, 14, 15, 16, 45, 47, 54, 55, 61, 62, 67, 72, 74, 84, 85, 88], "bit": [3, 25, 76, 78], "mask": [3, 16, 24, 27, 32, 37, 47, 48, 51, 52, 53, 55, 77, 84, 88], "statu": [3, 81], "miller_index": 3, "enter": [3, 7, 14, 65, 76, 89], "exit": [3, 85], "s1": [3, 24, 42, 52, 55, 59], "xyzcal": 3, "mm": [3, 14, 24, 36, 48, 51, 52, 53, 54, 60, 61, 62, 76, 80, 83, 84, 85, 87, 88, 89, 97], "predict": [3, 11, 14, 16, 17, 41, 42, 45, 52, 54, 55, 61, 62, 73, 76, 77, 83, 84, 85, 86, 87, 88, 89], "rad": [3, 14, 54, 61, 62, 86], "px": [3, 48, 51, 52, 53, 75, 76, 80, 83, 84, 85, 87, 88], "frame": [3, 11, 12, 21, 22, 24, 26, 34, 35, 36, 45, 48, 49, 55, 65, 70, 71, 74, 77, 78, 84, 88, 89, 99], "ub_matrix": 3, "xyzob": [3, 14], "centroid": [3, 4, 11, 32, 42, 45, 48, 51, 52, 54, 55, 59, 61, 62, 68, 72, 80, 83, 84, 85, 87, 88, 89], "millimetr": [3, 76], "rlp": [3, 45], "raw": [3, 9, 45, 46, 48, 49, 56, 67, 75, 77, 84, 88, 89], "prf": [3, 41, 55, 76, 83, 84, 86, 87, 88], "fit": [3, 12, 36, 42, 44, 52, 55, 59, 62, 65, 72, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 94], "without": [3, 7, 34, 78, 80, 83, 85, 89, 90, 94, 95], "inverse_scale_factor": [3, 15], "divisori": 3, "inverse_scale_factor_vari": 3, "lp": [3, 84, 88, 89], "qe": 3, "quantum": 3, "correl": [3, 14, 18, 38, 41, 54, 61, 62, 63, 72, 74, 76, 78, 80, 81, 83, 84, 85, 86, 88, 89, 90], "bbox": [3, 12], "bound": [3, 11, 12, 18, 48, 51, 52, 54, 55, 68], "box": [3, 12, 48, 54, 75, 76, 89], "shoebox": [3, 10, 16, 39, 42, 48, 52, 55, 59, 65, 76, 84, 88, 89, 90], "background": [3, 19, 32, 33, 42, 48, 52, 55, 60, 76, 80, 84, 87, 88, 89, 97], "struct": [3, 77, 97], "extern": [4, 14, 16, 64, 76, 89], "dxtbx": [4, 9, 10, 11, 14, 33, 75, 77, 83, 84, 85, 87, 88, 97], "libtbx_refresh": 4, "py": [4, 9, 75, 77, 85], "io": [4, 84, 86, 88, 92], "subprocess": 4, "sy": [4, 85], "pathlib": 4, "libtbx": [4, 6, 11, 15, 18, 85], "pkg_util": 4, "pkg_resourc": 4, "except": [4, 11, 23, 34, 48, 54, 61, 62, 76, 77], "modulenotfounderror": 4, "script": [4, 6, 7, 9, 34, 39, 78, 85], "out": [4, 7, 9, 14, 22, 34, 39, 45, 47, 48, 51, 52, 54, 61, 62, 75, 76, 77, 80, 83, 84, 85, 86, 88, 89, 94], "them": [4, 16, 26, 39, 47, 61, 75, 76, 77, 78, 80, 83, 84, 85, 88, 89, 95, 98], "_src_path_root": 4, "str": [4, 6, 11, 15, 18, 22, 25, 26, 27, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 65, 66, 68, 70, 71, 72, 74], "env": [4, 85], "dist_path": 4, "joinpath": 4, "src": [4, 34], "insert": 4, "configur": [4, 9, 14, 15, 21, 24, 34, 49, 54, 61, 62, 65, 72, 81, 83, 84, 85, 86, 88, 90], "attempt": [4, 25, 35, 36, 54, 65, 78, 85, 90, 98], "implement": [4, 14, 15, 16, 18, 23, 24, 27, 32, 41, 42, 52, 55, 59, 71, 80, 86, 92, 97], "regist": 4, "refresh": 4, "style": [4, 54, 74], "setup": [4, 14, 34, 93], "setuptool": 4, "list": [4, 7, 11, 12, 14, 15, 16, 18, 23, 25, 26, 27, 30, 31, 32, 34, 36, 39, 45, 48, 51, 53, 54, 55, 57, 61, 62, 65, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 92, 94, 95, 96, 98], "instal": [4, 8, 33, 34, 49, 73, 75, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90], "plugin": 4, "basis_vector_search_strategi": 4, "fft1d": [4, 11, 54, 84, 85, 88, 98], "basis_vector_search": [4, 19], "fft3d": [4, 11, 54, 89], "real_space_grid_search": [4, 11, 54, 89, 98], "scaling_model_ext": 4, "gaussian_r": [4, 32, 42, 52, 55, 59], "gaussian_rs_profile_model_ext": [4, 32], "lattice_search_strategi": 4, "low_res_spot_match": [4, 54], "now": [4, 6, 34, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 95], "discov": [4, 83], "instead": [4, 44, 65, 76, 79, 80, 85, 89], "runtim": [4, 77], "directori": [4, 7, 9, 23, 25, 30, 31, 45, 46, 53, 58, 62, 75, 76, 77, 78, 81, 84, 85, 86, 90, 93, 95], "user": [2, 4, 7, 11, 14, 37, 47, 48, 49, 55, 65, 80, 81, 82, 84, 85, 86, 88, 89, 92, 93], "install_format": [4, 75], "add": [4, 9, 10, 12, 14, 15, 23, 30, 34, 45, 48, 54, 75, 78, 84, 88, 89, 93, 98], "distribut": [4, 18, 54, 61, 62, 67, 77, 78, 84, 88, 89, 94, 98], "pleas": [4, 9, 65, 74, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92], "submit": [4, 85, 97], "pull": [4, 89], "request": [4, 14, 27, 44, 49, 54, 61, 62, 80, 83, 92], "repositori": [4, 9, 54, 61, 62, 77], "whenev": 4, "beamlin": [2, 4, 36, 45, 49, 80, 83, 84, 86, 87, 88, 89, 92, 97, 99], "staff": 4, "essenc": 4, "associ": [4, 11, 14, 15, 54, 61, 62, 70, 85, 95, 97], "thing": [4, 6, 43, 75, 83, 85, 86, 99], "take": [4, 15, 17, 18, 39, 41, 47, 49, 53, 54, 55, 59, 61, 62, 65, 71, 76, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 95, 97], "look": [4, 48, 53, 54, 61, 62, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 99], "overrid": [4, 14, 18, 42, 44, 46, 48, 52, 53, 54, 55, 59, 61, 62, 68, 74, 77, 83, 85], "construct": [4, 11, 14, 16, 21, 24, 26, 30, 31, 76, 77], "kei": [4, 6, 14, 18, 49, 78, 84, 85, 88, 89], "decid": [4, 78], "custom": [4, 65], "ideal": [4, 34, 76, 79, 90, 95], "your": [4, 7, 9, 36, 49, 75, 78, 79, 81, 84, 85, 86, 88, 89, 90, 95], "inherit": [4, 14], "just": [4, 11, 14, 24, 26, 54, 65, 75, 76, 80, 83, 84, 85, 87, 88, 89, 98, 99], "longest": 4, "chain": [4, 79], "ancestor": 4, "claim": [4, 76], "built": 4, "factori": [4, 14, 16, 21, 24, 26, 27, 29, 30, 83], "trivial": [4, 80], "complex": [4, 7, 21, 24, 39, 84, 89], "hopefulli": [4, 85], "correspond": [4, 6, 11, 14, 34, 37, 54, 55, 75, 76, 79, 80, 84, 85, 86, 88, 89], "let": [4, 23, 75, 76, 78, 80, 83, 84, 85, 86, 88, 89], "pretend": 4, "revers": [4, 11, 26, 45, 80], "correctli": [4, 7, 38, 41, 76, 90], "instanti": [4, 23, 25], "__future__": [4, 6], "absolute_import": 4, "divis": 4, "print_funct": 4, "formatcbfminipilatu": [4, 84, 85], "formatcbfminipilatusmybeamlin": 4, "mini": 4, "pilatu": [4, 49, 80, 83, 84, 88, 89], "mybeamlin": 4, "staticmethod": 4, "def": [4, 6, 23, 85], "image_fil": 4, "header": [4, 9, 24, 27, 30, 53, 75, 76, 79, 80, 85, 87], "get_cbf_head": 4, "split": [4, 12, 14, 25, 39, 48, 52, 54, 55, 61, 62, 65, 68, 79, 80, 83, 84, 85, 87, 88, 90, 95, 98], "42": [4, 54, 61, 62, 66, 74, 78, 80, 83, 84, 85, 86, 87, 88, 89, 98], "4242": 4, "_goniomet": 4, "self": [4, 6, 12, 23], "_goniometer_factori": 4, "single_axis_revers": [4, 26], "local": [4, 7, 46, 48, 54, 64, 76, 89, 93], "myproject": 4, "define_entry_point": 4, "my_format_modul": 4, "formatmyclass": 4, "formatbaseclass1": 4, "formatbaseclass2": 4, "myformat": 4, "top": [4, 12, 75, 76, 80], "view": [4, 41, 48, 52, 76, 77, 79, 80, 84, 88, 89, 90, 97, 99], "hierarchi": [4, 24, 53, 54, 61, 62, 77, 83], "show_registri": 4, "show": [4, 22, 32, 34, 41, 46, 48, 52, 57, 73, 75, 76, 77, 78, 80, 83, 84, 85, 86, 88, 89, 90, 98], "registri": [4, 23], "root": [4, 54, 61, 62, 76], "subclass": [4, 14, 15, 23], "indent": [4, 18, 23, 34], "formatbruk": 4, "formatbrukerfixedchi": 4, "formatbrukerphotonii": 4, "deleg": [4, 14], "find_basis_vector": [4, 11], "mystrategy_phil_str": 4, "magic_paramet": 4, "magic": 4, "float": [4, 10, 11, 15, 18, 22, 24, 26, 36, 38, 39, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 70, 71, 72, 74], "phil_scop": [4, 6, 11, 15, 85], "pars": [4, 6, 34], "mystrategi": 4, "my": 4, "reciprocal_lattice_vector": [4, 11], "arg": [4, 11, 14, 23, 25, 34], "scitbx": [4, 6, 10, 11, 12, 14, 18, 22, 24, 25, 26, 27, 41, 74], "array_famili": [4, 11, 85], "flex": [4, 11, 14, 15, 85], "vec3_doubl": [4, 11, 26], "period": [4, 11, 84, 88, 89], "tupl": [4, 11, 14, 15, 16, 18, 22, 24, 26, 27, 34, 54, 61, 62, 85], "bool": [4, 10, 11, 12, 14, 15, 16, 18, 22, 24, 25, 26, 27, 38, 39, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74], "identifi": [4, 11, 23, 24, 25, 27, 34, 41, 43, 48, 53, 54, 55, 57, 61, 62, 65, 67, 71, 74, 78, 80, 84, 85, 86, 88, 89, 90], "were": [4, 11, 14, 39, 49, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90], "used_in_index": 4, "candidate_basis_vector": 4, "entir": [4, 48, 75, 79, 90], "mylatticesearch": 4, "find_crystal_model": [4, 11], "candid": [4, 11, 54, 84, 85, 88, 89], "reflection_t": [4, 11, 12, 15, 16, 34, 85], "spot": [4, 11, 16, 36, 42, 43, 45, 46, 48, 50, 51, 52, 54, 55, 59, 60, 61, 62, 66, 69, 79, 81, 83, 85, 87, 95, 98], "experiment_list": [4, 11, 28, 31, 33, 34, 85], "candidate_crystal_model": 4, "scalingmodelbas": [4, 15], "from_dict": [4, 15, 21, 22, 23, 24, 25, 26, 29, 30, 32], "from_data": [4, 15], "configure_compon": [4, 15], "__init__": [4, 6, 10, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 31, 32, 34], "consecutive_refinement_ord": [4, 15], "consecut": [4, 15, 53, 56, 65], "mode": [4, 15, 18, 34, 35, 41, 53, 54, 61, 62, 65, 74, 76, 77, 78, 84, 85, 88, 89], "compos": [4, 14, 15, 26, 54, 61, 62, 90], "scale_compon": 4, "scalecomponentbas": 4, "mypath": 4, "specialcompon": 4, "mymodel_phil_str": 4, "special_correct": 4, "toggl": [4, 78, 84, 88], "myscalingmodel": 4, "id_": [4, 15], "modelnam": 4, "parameters_dict": [4, 15], "configdict": [4, 15], "is_scal": [4, 15], "super": 4, "_compon": 4, "parameter_esd": 4, "classmethod": [4, 14, 15, 22, 32, 34], "cl": 4, "obj": [4, 15, 23, 25, 29], "dictionari": [4, 15, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 34, 45], "configuration_paramet": 4, "doubl": [4, 10, 14, 22, 24, 26, 83, 93], "est_standard_dev": 4, "param": [4, 6, 11, 12, 14, 15, 16, 18, 21, 22, 24, 26, 27, 30, 31, 32, 34, 55, 85], "mycalingmodel": 4, "append": [4, 11, 14, 23, 25, 45], "important_numb": 4, "len": [4, 6, 77, 85], "requir": [4, 7, 11, 14, 15, 18, 45, 53, 54, 55, 61, 62, 64, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 97, 99], "nest": [4, 15, 47], "extend": [5, 11, 23, 25, 34, 42, 52, 55, 59, 74, 80, 83, 84, 88, 89, 96], "demonstr": [6, 78, 79, 89, 99], "load": [6, 16, 23, 25, 27, 31, 33, 34, 49, 52, 65, 78, 81, 84, 85, 86, 88, 89], "s0": [6, 21, 24, 44], "col": 6, "get_s0": 6, "print": [6, 7, 12, 14, 18, 34, 47, 48, 58, 62, 67, 76, 80, 84, 85, 88, 89], "\u00e5": [6, 21, 75, 76, 78, 84, 86, 88, 89, 97], "jiggeri": 6, "pokeri": 6, "cope": [6, 99], "interpret": [6, 48, 65, 75, 76, 77, 78, 80, 98], "annot": 6, "util": [6, 12, 14, 33, 36, 39, 49, 73, 85], "show_mail_handle_error": 6, "help_messag": 6, "pass": [6, 7, 14, 18, 23, 24, 45, 46, 47, 50, 52, 53, 65, 76, 78, 79, 83, 84, 85, 86, 87, 88, 90], "png": [6, 11, 46, 58, 69, 70, 72, 78, 83, 85], "process_includ": 6, "usag": [6, 7, 65, 74, 85, 90], "experiment_data": 6, "parser": [6, 34], "argumentpars": [6, 33, 34], "epilog": [6, 34], "check_format": [6, 23, 25, 27, 31, 34, 85], "read_experi": [6, 34], "read_reflect": [6, 34], "parse_arg": [6, 34], "show_diff_phil": [6, 34], "flatten_experi": [6, 33, 34], "flatten_reflect": [6, 33, 34], "print_help": 6, "get_flag": 6, "kept": [6, 54, 61, 62, 77, 78, 83], "sort": [6, 34, 55, 80, 85, 86, 88], "verifi": [6, 25], "exactli": [6, 24, 76, 80, 83], "obvious": 6, "assert": [6, 53], "next": [6, 41, 76, 78, 84, 86, 87, 88, 89], "quantiti": 6, "get_wavelength": 6, "ident": [6, 41, 62, 78, 84, 88, 90, 95], "get_angle_from_array_index": 6, "get_array_rang": [6, 27], "get_rotation_axis_datum": [6, 26], "sqr": 6, "get_fixed_rot": [6, 26], "get_setting_rot": [6, 26], "axis_and_angle_as_r3_rotation_matrix": 6, "deg": [6, 14, 22, 24, 26, 30, 41, 83, 84, 85, 86, 87, 88, 89, 98], "__name__": [6, 85], "__main__": [6, 85], "download": [7, 49, 73, 75, 76, 77, 80, 84, 87, 88, 89, 93], "latest": [7, 14, 81], "releas": 7, "site": [7, 77, 92], "linux": [7, 25, 76, 81, 83, 85], "mac": 7, "intend": [7, 36, 45, 50, 54, 61], "toolkit": [7, 39, 80, 85, 96, 97], "stabl": [7, 90], "window": [7, 75, 77, 80, 89, 93], "somewhat": [7, 85], "wiki": [7, 9, 18], "prepar": [7, 14, 65, 75, 78, 81, 85, 90], "compress": [7, 45, 46, 80], "archiv": [7, 77, 80], "onc": [7, 41, 48, 53, 75, 76, 78, 83, 84, 87, 88, 89, 90], "unpack": [7, 77], "tar": [7, 49, 77, 78, 80, 87, 88, 89, 90, 93], "xjf": [7, 93], "major": [7, 55, 76, 80, 85, 86, 89], "minor": [7, 79], "patch": 7, "x86_64": [7, 93], "xz": [7, 45, 78, 93], "substitut": [7, 94], "version": [7, 14, 36, 45, 49, 50, 77, 81, 83, 86, 89], "usr": [7, 93], "permiss": [7, 55, 94], "cd": [7, 9, 34, 49, 75, 76, 78, 81, 83, 85, 86, 93, 97], "home": [7, 77], "prefix": [7, 12, 45, 46, 48, 54, 61, 62, 85, 93], "put": [7, 54, 76, 80], "suit": [7, 49], "achiev": [7, 14, 36, 54, 57, 61, 62, 83, 90], "bash": [7, 76, 77, 78, 85], "dials_env": [7, 93], "sh": [7, 76, 93], "csh": [7, 49], "bourn": 7, "produc": [7, 39, 45, 54, 55, 61, 62, 68, 76, 77, 79, 80, 83, 84, 85, 86, 88, 89, 98], "everyth": [7, 21, 24, 26, 76, 78], "properli": [7, 76, 77, 79, 80, 85, 86], "messag": [7, 34], "argument": [7, 14, 15, 27, 32, 34, 53, 54, 66, 68], "displai": [7, 39, 41, 46, 49, 52, 60, 74, 77, 79, 84, 88, 89], "expert_level": [7, 39, 41, 42, 44, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 61, 62, 64, 65, 71, 72, 74, 84, 88], "e2": [7, 58, 64], "string": [7, 12, 14, 23, 34, 44, 48, 50, 54, 55, 61, 62, 65, 70, 71, 72, 74], "increas": [7, 14, 54, 65, 75, 83, 84, 85, 88, 89, 98, 99], "attributes_level": 7, "a2": [7, 18, 98], "apart": [7, 83, 84, 88, 89], "switch": [7, 18, 60, 78, 83, 85, 87], "though": [7, 75, 76, 78, 83, 84, 85, 86, 88, 90], "less": [7, 18, 41, 48, 51, 52, 55, 62, 65, 71, 74, 75, 76, 79, 80, 83, 84, 85, 88, 89, 90], "frequent": 7, "clarif": 7, "index_assign": [7, 54], "sai": [7, 54, 61, 62, 80, 85, 89], "myparam": 7, "readi": [7, 45, 77, 85, 89], "convent": [8, 22, 53, 54, 63, 66, 68, 79, 84, 90], "librari": [8, 31, 75, 85], "prerequisit": 9, "Then": [9, 14, 54, 61, 62, 77, 78, 84, 88, 89, 93, 98], "bootstrap": [9, 85], "wget": [9, 49, 93], "http": [9, 18, 36, 48, 49, 54, 61, 62, 75, 77, 84, 90, 93], "githubusercont": [9, 49, 75, 77], "com": [9, 42, 49, 52, 55, 59, 75, 77, 81], "curl": [9, 49, 77, 93], "explan": 9, "step": [9, 14, 18, 41, 45, 46, 54, 55, 61, 62, 65, 72, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 99], "updat": [9, 14, 15, 34, 45, 54, 61, 65, 83, 84, 85, 87, 88, 89, 100], "conda_bas": 9, "compil": [9, 49, 93], "subsequ": [9, 15, 77, 79, 83, 84, 86, 88, 89, 90], "login": 9, "session": [9, 99], "sure": [9, 74, 75, 76, 79, 80, 89], "dispatch": 9, "libgl": 9, "glu": 9, "khr": 9, "instruct": [9, 45, 76, 80, 89, 93, 95, 97], "privat": [9, 14], "dials_regress": 9, "histor": [9, 99], "svn": 9, "cci": [9, 49], "server": [9, 50, 73], "replac": [9, 25, 39, 53, 75, 76, 77, 79, 85], "usernam": 9, "checkout": 9, "ssh": 9, "lbl": [9, 49], "gov": [9, 36, 49], "trunk": 9, "scratch": [9, 81, 85], "prefer": [9, 18, 41, 48, 62, 71, 74, 76, 78, 83, 84, 85, 86, 88, 89], "guid": [9, 65], "github": [9, 77, 84, 86, 88, 92, 93], "handi": 9, "radialaverag": [10, 19], "instanc": [10, 12, 14, 16, 23, 24, 25, 26, 27, 30, 34, 78, 80], "arg1": [10, 12, 14, 22, 24, 25, 26, 27], "beambas": [10, 25, 27], "arg2": [10, 12, 22, 24, 25, 26, 27], "arg3": [10, 12, 24, 25, 26, 27], "arg4": [10, 12, 26, 27], "arg5": [10, 12, 26], "arg6": [10, 26], "signatur": [10, 12, 14, 22, 24, 25, 26, 27], "void": [10, 12, 14, 22, 24, 25, 26, 27], "_object": [10, 12, 14, 22, 24, 25, 26, 27], "shared_ptr": [10, 25, 27], "unsign": [10, 12, 14, 25, 26, 27], "long": [10, 12, 14, 25, 26, 27, 65, 76, 79, 84, 88, 89, 90], "lvalu": [10, 12, 22, 24, 25, 26, 27], "af": [10, 12, 14, 24, 25, 26, 27], "const_ref": [10, 12, 26, 27], "c_grid": 10, "2ul": [10, 12, 27], "inv_d2": 10, "weight": [10, 11, 14, 15, 18, 41, 54, 61, 62, 65, 74, 83, 84, 85, 88], "set_shoebox_background_valu": [10, 19], "ref": [10, 44, 74], "trivial_accessor": [10, 12, 26, 27], "dialsindexerror": [11, 19], "runtimeerror": [11, 23], "dialsindexrefineerror": [11, 19], "export_as_json": 11, "file_nam": [11, 49], "indexed_experi": 11, "export_reflect": 11, "find_lattic": 11, "find_max_cel": 11, "static": [11, 12, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 42, 45, 52, 54, 55, 58, 59, 61, 62, 64, 75, 76, 83, 84, 85, 89, 90], "from_paramet": [11, 16], "known_crystal_model": 11, "index_reflect": 11, "setup_index": 11, "show_experi": 11, "apply_hkl_offset": 11, "offset": [11, 15, 24, 53, 54, 65, 66, 76, 80, 83, 84, 88], "stillsindex": 11, "choose_best_orientation_matrix": 11, "candidate_orientation_matric": 11, "experiment_list_for_cryst": 11, "identify_outli": 11, "stillsindexerbasisvectorsearch": 11, "basisvectorsearch": 11, "stillsindexerknownorient": 11, "known_orient": [11, 85], "indexerknownorient": 11, "stillsindexerlatticesearch": 11, "latticesearch": 11, "calc_2d_rmsd_and_displac": 11, "e_refin": 11, "graph_verbos": 11, "plot_displac": 11, "kwarg": [11, 14, 16, 23, 25, 32, 34], "strategi": [11, 14, 16, 48, 54, 61, 62, 84, 88, 97], "search": [11, 23, 30, 38, 39, 54, 61, 62, 66, 76, 79, 80, 85, 87, 98], "1d": [11, 54, 84, 88, 89], "fft": [11, 54, 76, 84, 85, 88, 89], "dimensionless": 11, "radial": [11, 48], "7000": 11, "total": [11, 14, 48, 50, 76, 78, 81, 83, 84, 85, 86, 88, 89, 90], "roughli": [11, 44], "evenli": 11, "solid": 11, "hemispher": 11, "onto": [11, 79, 80], "scalar": 11, "linear": [11, 14, 36, 54, 55, 65, 84, 85, 88, 89], "densiti": [11, 18, 36, 54, 79], "aggreg": 11, "shortest": 11, "non": [11, 14, 54, 61, 62, 74, 86], "collinear": 11, "wave": 11, "greatest": [11, 83], "spectral": 11, "steller": [11, 54], "rossmann": 11, "1997": [11, 54, 83, 88], "30": [11, 46, 54, 68, 75, 76, 77, 83, 84, 85, 86, 87, 88, 89, 99], "1036": [11, 75, 84], "1040": [11, 78], "2004": [11, 36, 66, 86], "37": [11, 54, 66, 75, 76, 78, 79, 83, 84, 85, 86, 87, 88], "399": [11, 66, 78, 84, 85, 86, 87, 88, 97], "409": [11, 66, 75, 83, 84, 87, 88], "maximum": [11, 15, 16, 17, 18, 39, 41, 42, 44, 45, 47, 48, 52, 53, 54, 55, 60, 61, 62, 65, 66, 74, 78, 84, 86, 88, 89, 90], "dimens": [11, 14, 18, 24, 41, 54, 61, 62, 65, 74, 76, 78, 84, 85, 86, 88, 89], "primit": [11, 54, 62, 75, 79, 80, 84, 88, 89, 90], "characteristic_grid": [11, 54], "frequenc": [11, 54], "radian": [11, 54, 55], "029": [11, 54, 81, 84, 86, 90], "phil_help": 11, "lower": [11, 18, 54, 55, 61, 62, 65, 75, 83, 84, 86, 88, 89], "narrow": [11, 48, 52, 54, 85, 89], "scope": [11, 12, 15, 34, 38, 54], "min_cel": [11, 54], "ascrib": 11, "assign": [11, 22, 54, 74, 79, 84, 85, 86, 88, 89, 90], "spatial": 11, "appreci": 11, "procedur": [11, 41, 76, 84, 85, 86, 88, 89], "mitig": 11, "sometim": [11, 53, 75, 84, 88], "curtail": 11, "certain": [11, 36, 39, 54, 55, 61, 62, 65, 74, 75, 86, 90], "ignor": [11, 27, 34, 53, 54, 59, 61, 62, 79, 86], "1986": [11, 88, 99], "eec": 11, "cooper": 11, "phase": [11, 75, 79], "iii": 11, "28": [11, 75, 80, 83, 84, 85, 86, 87, 88, 89, 97], "pari": 11, "lure": 11, "campbel": 11, "1998": [11, 85], "31": [11, 36, 75, 76, 78, 83, 84, 85, 86, 87, 88], "407": [11, 84, 88], "413": [11, 75, 84, 88], "n_point": [11, 54], "limit": [11, 14, 38, 41, 42, 44, 47, 48, 50, 51, 52, 54, 55, 56, 65, 67, 69, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 94, 97, 99], "b_iso": [11, 54], "isotrop": [11, 18, 41, 79, 86], "b_factor": 11, "math": 11, "05": [11, 14, 21, 41, 42, 52, 54, 55, 59, 71, 76, 77, 78, 83, 84, 85, 86, 87, 88, 90, 98], "rmsd_cutoff": [11, 54, 61, 62], "rmsd": [11, 14, 54, 61, 62, 65, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 98], "map": [11, 18, 43, 46, 48, 51, 52, 64, 67, 78, 79, 80, 84, 88, 89], "peak": [11, 48, 52, 76, 84, 87, 88, 89, 96], "peak_volume_cutoff": [11, 54], "larger": [11, 54, 55, 57, 61, 62, 80, 86], "volum": [11, 44, 54, 61, 62, 74, 75, 76, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 99], "largest": [11, 14, 39, 41, 86], "conserv": 11, "minimum": [11, 14, 17, 18, 41, 42, 44, 45, 47, 48, 52, 54, 55, 59, 60, 61, 62, 65, 74, 78, 84, 87, 88], "quit": [11, 21, 45, 54, 75, 76, 77, 80, 86], "realspacegridsearch": 11, "target_unit_cel": 11, "known": [11, 26, 48, 54, 66, 76, 79, 80, 83, 84, 88, 89, 98], "difficult": [11, 54, 76, 80, 83, 85, 86, 89], "especi": [11, 54, 75, 86, 88, 89], "accord": [11, 14, 18, 43, 47, 48, 78], "well": [11, 23, 30, 45, 58, 64, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 88, 89], "reconstruct": 11, "observ": [11, 14, 16, 18, 36, 41, 42, 45, 54, 61, 62, 64, 67, 68, 71, 76, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90], "examin": [11, 39, 55, 75], "orient": [11, 36, 40, 42, 52, 54, 55, 58, 59, 61, 62, 64, 74, 75, 77, 83, 84, 88, 89, 90, 97, 98, 99], "nearli": [11, 14, 80, 83], "shorter": [11, 21, 76], "elimin": [11, 70, 78], "axford": [11, 85, 97], "sutton": [11, 97], "stuart": [11, 97, 99], "2014": [11, 41, 86, 97, 101], "d70": 11, "2652": [11, 97], "2666": [11, 83], "compute_funct": [11, 18], "until": [11, 14, 54, 61, 62, 75, 79, 80, 83, 84, 88, 89], "match": [11, 14, 18, 30, 34, 39, 49, 54, 61, 62, 68, 76, 83, 84, 85, 88, 89, 90], "score_vector": 11, "search_direct": 11, "length": [11, 14, 18, 34, 36, 54, 75, 79, 83, 88], "search_vector": 11, "basis_vector": 11, "max_combin": [11, 54], "filter_known_symmetri": 11, "crystal_model": [11, 22], "target_symmetri": 11, "relative_length_toler": [11, 18, 41, 54, 71], "absolute_angle_toler": [11, 18, 41, 54, 71], "max_delta": [11, 54], "filter": [11, 12, 14, 15, 16, 18, 39, 41, 42, 45, 46, 47, 48, 49, 51, 52, 54, 55, 59, 65, 72, 74, 76, 77, 84, 86, 87, 88, 89], "toler": [11, 18, 39, 54, 65, 77, 85, 90], "le": [11, 18, 54, 80], "page": [11, 18, 49, 54, 75, 76, 80, 81], "delta": [11, 14, 18, 41, 42, 52, 54, 55, 59, 65, 74, 75, 80, 84, 86, 87, 88, 89, 98], "filter_similar_orient": 11, "other_crystal_model": 11, "minimum_angular_separ": [11, 54], "optimis": [11, 65, 66, 74, 75, 76, 80, 84, 86, 88, 89], "basisvectorminimis": 11, "reciprocal_lattice_point": 11, "lbfgs_termination_param": 11, "lbfgs_core_param": 11, "lbfg": [11, 14, 18, 65, 84, 86, 88], "core_paramet": 11, "compute_functional_and_gradi": [11, 14, 18], "basisvectortarget": 11, "optimise_basis_vector": 11, "lowresspotmatch": 11, "target_symmetry_primit": 11, "max_lattic": [11, 54, 87, 98], "solut": [11, 14, 41, 54, 65, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90], "assess": [11, 49, 75, 76, 78, 84, 85, 86, 88, 89, 98], "against": [11, 15, 18, 48, 61, 65, 72, 78, 79, 83, 84, 85, 88, 90, 91], "electron": [11, 21, 48, 54, 75, 76, 77, 92, 97, 99], "collect": [11, 15, 50, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99], "laue": [11, 18, 41, 71, 74, 75, 78, 84, 86, 87, 88, 96], "zone": [11, 59, 76], "principl": [11, 21, 35], "good": [11, 39, 65, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 94], "stop": [11, 15, 48, 50, 55, 65, 71, 74, 76, 77, 84, 86, 88], "shadow": [11, 46, 48, 52, 53, 59, 83], "primarili": [11, 45, 54, 84, 88, 89], "extract": [11, 16, 23, 34, 80, 84, 85, 87, 88, 89], "modelevalu": 11, "refinement_param": 11, "evalu": [11, 14, 15, 47, 78, 97], "modelrank": 11, "item": [11, 16, 34, 54, 55, 61, 62, 76, 84, 87, 88], "best_model": 11, "modelrankfilt": 11, "check_doubled_cel": [11, 54], "likelihood_cutoff": [11, 54], "volume_cutoff": [11, 54], "n_indexed_cutoff": [11, 54], "filter_by_likelihood": 11, "filter_by_n_index": 11, "filter_by_volum": 11, "update_analysi": 11, "modelrankweight": 11, "power": [11, 54, 78, 84, 88], "volume_weight": [11, 54], "n_indexed_weight": [11, 54], "rmsd_weight": [11, 54], "combined_scor": 11, "score_by_fraction_index": 11, "score_by_rmsd_xi": 11, "score_by_volum": 11, "model_likelihood": 11, "n_index": 11, "fraction_index": 11, "hkl_offset": [11, 63, 80], "alia": [11, 12, 15, 34, 65], "filter_doubled_cel": 11, "max_cell_multipli": 11, "step_siz": [11, 54], "45": [11, 54, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 90], "nearest_neighbor_percentil": [11, 54], "histogram_bin": [11, 54], "nn_per_bin": [11, 54], "max_height_fract": [11, 54], "filter_ic": [11, 54], "filter_overlap": [11, 54], "overlaps_bord": [11, 54], "nearest_neighbor": 11, "neighboranalysi": 11, "percentil": [11, 54], "plot_histogram": 11, "filenam": [11, 14, 16, 18, 23, 25, 27, 30, 31, 34, 37, 39, 42, 45, 47, 48, 51, 53, 54, 55, 59, 61, 62, 63, 65, 68, 70, 71, 72, 76, 78, 85, 89, 98], "nn_hist": 11, "figsiz": 11, "12": [11, 41, 75, 76, 78, 80, 83, 84, 85, 86, 87, 88, 90], "assign_indic": 11, "assignindicesglob": 11, "assignindicesstrategi": 11, "assignindicesloc": 11, "epsilon": [11, 18, 54], "l_min": [11, 54], "nearest_neighbour": [11, 54], "20": [11, 14, 16, 39, 41, 42, 47, 48, 49, 52, 54, 55, 59, 61, 62, 65, 68, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88], "compare_orientation_matric": [11, 73], "difference_rotation_matrix_axis_angl": 11, "crystal_a": 11, "crystal_b": 11, "target_angl": 11, "rotation_matrix_differ": 11, "miller_indic": 11, "pairwis": [11, 40, 78], "symmetryhandl": 11, "space_group": [11, 18, 22, 31, 34, 35, 40, 41, 44, 47, 48, 51, 52, 54, 63, 71, 74, 75, 76, 79, 83, 84, 85, 87, 88, 90, 98], "apply_symmetri": 11, "cb_op": [11, 18, 62, 75, 76, 79, 80, 84, 87, 88], "sgtbx": [11, 18, 22, 25, 54], "change_of_basis_op": [11, 18, 25, 63, 71, 76, 79, 84, 88], "calc_acentric_subgroup": 11, "group_info": 11, "space_group_info": 11, "bravais_t": 11, "find_matching_symmetri": 11, "target_space_group": 11, "best_monoclinic_beta": [11, 18, 41, 62, 71, 74, 76, 84], "target_bravais_str": 11, "groups_cach": 11, "fn": 11, "metric_supergroup": 11, "executor": [12, 19], "boost_python": 12, "executorwrapp": 12, "fit_profil": 12, "profile_validation_report": 12, "profile_model_report": 12, "profile_fitt": 12, "block_siz": [12, 68, 84, 88], "block_size_unit": 12, "stuff": [12, 34], "integrator2d": [12, 19], "processorclass": 12, "processor2d": [12, 19], "finalize_reflect": 12, "post": [12, 84, 88, 89, 92, 97], "initialize_reflect": 12, "integrator3d": [12, 19], "processor3d": [12, 19], "integrator3dthread": [12, 19], "finalis": [12, 14], "initialis": [12, 14, 15, 16, 17, 18, 32, 34, 84, 86, 88], "integratorexecutor": [12, 19], "valid_foreground_threshold": [12, 55], "75": [12, 46, 55, 75, 80, 81, 83, 84, 86, 87, 88, 97], "frame0": 12, "frame1": 12, "job": [12, 16, 48, 54, 55, 61, 62, 65, 76, 83, 84, 85, 88, 89], "last": [12, 14, 23, 54, 61, 62, 76, 85, 86], "integratorflat3d": [12, 19], "flatten": [12, 18, 34], "processorflat3d": [12, 19], "integratorsingle2d": [12, 19], "processorsingle2d": [12, 19], "integratorstil": [12, 19], "processorstil": [12, 19], "joblist": [12, 19], "tiny_int_2": 12, "tini": [12, 27], "shoebox_memori": 12, "size_t": [12, 15, 16, 25, 27], "stack": 12, "valid": [12, 14, 15, 23, 27, 34, 49, 50, 54, 55, 61, 62, 65, 86, 87], "from_phil": [12, 21, 24, 26, 30], "_processorrot": 12, "processor": [12, 14, 16, 49, 55, 74, 84, 85, 88, 89], "flat": [12, 36, 48, 76, 84, 88, 89], "_processor": 12, "profilemodellerexecutor": [12, 19], "profilevalidatorexecutor": [12, 19], "reflectionmanag": [12, 14, 19], "finish": [12, 34, 65, 84, 88, 89], "num_reflect": 12, "frame_hist": [12, 19], "width": [12, 14, 15, 18, 39, 47, 48, 51, 52, 54, 61, 62, 68, 77, 83, 84, 88, 89], "80": [12, 34, 75, 80, 81, 83, 84, 86, 87, 88, 89], "histogram": [12, 54, 76, 78, 84, 87, 88], "generate_phil_scop": [12, 16, 19], "hist": [12, 19], "charact": [12, 52, 53], "nframes_hist": [12, 19], "princip": [14, 41, 78, 86], "reflection_manag": 14, "blockcalcul": [14, 19], "block": [14, 23, 25, 54, 55, 61, 62, 65, 68, 78, 83, 84, 85, 88, 89, 95], "block_centr": 14, "centr": [14, 18, 24, 38, 42, 48, 52, 53, 54, 55, 58, 59, 60, 61, 62, 66, 76, 77, 78, 82, 84, 88, 89, 96, 99], "per_imag": [14, 69], "per_width": 14, "nref_per_degre": 14, "max_sample_s": 14, "min_sample_s": 14, "close_to_spindle_cutoff": [14, 54, 61, 62, 83], "scan_margin": [14, 54, 61, 62], "outlier_detector": 14, "weighting_strategy_overrid": 14, "maintain": [14, 49], "done": [14, 15, 45, 47, 48, 54, 55, 58, 61, 62, 64, 70, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 95], "random": [14, 39, 54, 55, 61, 62, 65, 66, 74, 83, 86], "experiment_typ": 14, "filter_ob": 14, "sel": 14, "criteria": [14, 44, 47, 78, 84, 86, 88], "analysi": [14, 18, 38, 41, 50, 54, 57, 61, 62, 65, 71, 74, 79, 80, 82, 83, 87, 89, 90, 92, 97, 98, 99], "centroidanalysi": 14, "get_accepted_refs_s": 14, "inclus": [14, 41, 47, 48, 54, 55, 61, 62, 65, 71, 74, 76], "potenti": [14, 54, 61, 62, 63, 74, 75, 78, 84, 88], "get_centroid_analys": 14, "debug": [14, 45, 54, 55, 58, 61, 83, 84, 88, 89], "get_free_reflect": 14, "get_index": 14, "get_match": 14, "everi": [14, 39, 52, 54, 55, 56, 61, 62, 78, 83, 84, 85, 88, 89], "get_ob": 14, "get_sample_s": 14, "print_stats_on_match": 14, "reset_accepted_reflect": 14, "reset": [14, 65, 75], "reflectionmanagerfactori": [14, 19], "from_parameters_reflections_experi": 14, "do_stil": 14, "stillsreflectionmanag": [14, 19], "overload": [14, 76, 81, 83, 84, 86, 87, 88], "too": [14, 41, 54, 61, 62, 76, 80, 83, 84, 85, 86, 88, 89], "spindl": [14, 54, 61, 62, 83, 84, 88, 89], "delpsi": 14, "residu": [14, 54, 61, 62, 78, 83, 84, 88, 89], "scheme": [14, 65, 84, 88, 89], "weighting_strategi": [14, 54, 61, 62], "constantweightingstrategi": [14, 19], "wx": 14, "wy": 14, "wz": 14, "calculate_weight": 14, "z": [14, 18, 21, 22, 24, 26, 34, 41, 44, 63, 65, 75, 78, 80, 84, 86, 88, 89, 92], "delpsic": 14, "attribut": [14, 15, 34], "otherwis": [14, 21, 47, 48, 51, 52, 54, 61, 62, 66, 76, 77, 83, 84, 88, 89, 94], "externaldelpsiweightingstrategi": [14, 19], "statisticalweightingstrategi": [14, 19], "deltapsi": 14, "var": 14, "stillsweightingstrategi": [14, 19], "delpsi_const": [14, 54, 61, 62], "1000000": [14, 24, 54, 60, 61, 62], "refinerfactori": [14, 19], "pred_param": 14, "param_report": 14, "refman": 14, "refineri": [14, 19, 54, 61, 62, 65], "get_experi": 14, "get_param_report": 14, "parameter_correlation_plot": 14, "selection_used_for_refin": 14, "predict_for_reflection_t": 14, "predict_for_index": 14, "note": [14, 36, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 98], "histori": [14, 54, 61, 62, 86, 87, 89], "accessor": 14, "expos": 14, "mandatori": 14, "predictionparameteris": 14, "parameterreport": 14, "link": [14, 67, 90], "get_parameter_correlation_matrix": 14, "col_select": [14, 61, 72], "jacobian": [14, 54, 61, 62], "engin": [14, 18, 41, 45, 54, 61, 62, 65, 74], "addition": [14, 84, 86, 88], "used_in_refin": [14, 47], "expens": [14, 89], "skip_deriv": 14, "suppli": [14, 53, 54, 55, 61, 62, 65, 77], "print_exp_rmsd_t": 14, "print_out_of_sample_rmsd_t": 14, "rsmd": [14, 85], "track": [14, 54, 61, 62, 78, 80, 84, 88, 89], "print_panel_rmsd_t": 14, "print_step_t": 14, "rmsds_for_reflection_t": 14, "unweight": 14, "config_refineri": 14, "constraints_manag": 14, "could": [14, 23, 30, 54, 61, 62, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95], "config_restraint": 14, "restraint": [14, 54, 61, 62, 65, 76, 77, 85, 90], "predictionparamet": 14, "config_spars": 14, "spars": [14, 18, 41, 54, 61, 62, 83, 97, 98], "datatyp": 14, "config_target": 14, "predictor": [14, 17], "restraints_param": 14, "do_spars": 14, "from_parameters_data_experi": 14, "scanvaryingrefin": [14, 19], "levenbergmarquardtiter": [14, 19], "gaussnewtoniter": [14, 19], "simplelbfg": [14, 19, 54, 61, 62, 65], "lbfgscurv": [14, 19, 54, 61, 62], "concret": 14, "adaptlbfg": [14, 19], "adapt": [14, 77, 96], "bfg": [14, 18], "minimis": [14, 18, 40, 54, 61, 62, 65, 74, 84, 86, 88, 89, 91], "callback_after_step": [14, 18, 84, 86, 88], "minim": [14, 18, 41, 74, 78, 84, 86, 88, 97, 98], "reach": [14, 54, 61, 62, 99], "termin": [14, 18, 54, 61, 62, 65, 81, 83, 93], "compute_functional_gradients_and_curvatur": [14, 18], "run_lbfg": 14, "curvatur": [14, 18, 41, 74], "adaptlstbx": [14, 19], "prediction_parameteris": 14, "max_iter": [14, 18, 41, 54, 61, 62, 65, 74], "non_linear_l": 14, "non_linear_ls_mixin": 14, "lstbx": 14, "n_paramet": [14, 84, 86, 88], "n_equat": 14, "opposite_of_grad_object": 14, "normal_matrix": 14, "versa": 14, "packed_u_accessor": 14, "build_up": 14, "objective_onli": 14, "calculate_esd": 14, "esd": [14, 90], "parameter_vector_norm": 14, "restart": 14, "set_cholesky_factor": 14, "choleski": 14, "dens": 14, "step_backward": 14, "step_forward": 14, "disablempmixin": [14, 19], "mixin": 14, "multiprocess": [14, 25, 54, 55, 61, 62, 84, 88], "set_nproc": 14, "kwd": 14, "gauss": 14, "newton": 14, "convergence_as_shift_over_esd": 14, "1e": [14, 18, 23, 24, 25, 26, 39, 65], "damping_valu": 14, "0007": 14, "gradient_threshold": 14, "max_shift_over_esd": 14, "15": [14, 41, 54, 55, 60, 65, 75, 78, 83, 84, 85, 86, 87, 88], "preced": 14, "prepare_for_step": 14, "update_journ": 14, "test_for_termin": 14, "step_threshold": 14, "dict": [14, 15, 18, 24, 25, 26, 27, 34], "extra": [14, 31, 49, 54, 61, 62, 83, 89], "ensur": [2, 14, 24, 27, 39, 41, 65, 76, 83, 84, 85, 88, 89, 90], "hidden": [14, 83], "eas": 14, "add_column": 14, "add_row": 14, "fail": [14, 54, 61, 62, 75, 76, 84, 85, 87, 88, 90, 95], "wrong": [14, 76, 80, 83, 84, 88], "del_last_row": 14, "delet": [14, 39, 55], "from_json_fil": [14, 23, 25], "get_nrow": 14, "reason_for_termin": 14, "set_last_cel": 14, "to_json_fil": 14, "compute_functional_gradients_diag": [14, 18], "emploi": [14, 80], "levenberg": [14, 84, 86, 88], "marquadt": 14, "add_constant_to_diagon": 14, "mu": [14, 24, 36, 84, 88], "diagon": [14, 18, 79], "normal": [14, 21, 36, 39, 42, 52, 53, 54, 55, 59, 61, 62, 80, 81, 84, 88, 89], "report_progress": 14, "callback": 14, "loop": [14, 78, 85], "overridden": [14, 53], "possibli": [14, 18, 38, 78, 79], "setup_mu": 14, "tau": 14, "001": [14, 54, 61, 62, 75, 84, 86], "get_correlation_matrix_for_step": 14, "decompress": 14, "get_num_step": 14, "jacobian_condition_numb": 14, "condit": [14, 54, 61, 62, 71, 76, 94], "cond": 14, "inv": 14, "rectangular": 14, "moor": 14, "penros": 14, "pseudoinvers": 14, "norm": 14, "ratio": [14, 41, 78, 86], "smallest": [14, 54, 61, 62], "singular": 14, "sig_": 14, "sig_min": 14, "accur": [14, 48, 51, 52, 75, 80, 85, 90, 97, 99], "equat": [14, 41], "amplifi": 14, "larg": [14, 45, 52, 54, 61, 62, 65, 72, 74, 76, 77, 78, 83, 84, 86, 88, 89, 90, 91, 98, 99], "linearli": [14, 65], "detect": [14, 54, 61, 62, 75, 80, 84, 85, 86, 88, 99], "situat": [14, 76, 83, 84, 85, 88], "shift": [14, 54, 61, 62, 64, 80, 83, 84, 88, 89], "problemat": 14, "row": 14, "reduct": [14, 54, 79, 82, 84, 88, 89, 99], "linearis": 14, "issu": [14, 55, 76, 78, 79, 80, 84, 85, 86, 88, 89, 92, 95], "squar": [14, 54, 61, 62, 76, 84, 88, 89], "marquardt": [14, 84, 86, 88], "polici": 14, "dictat": 14, "control": [14, 39, 44, 45, 54, 55, 61, 62, 72, 76, 89, 91, 97, 99], "split_jacobian_into_block": 14, "test_objective_increasing_but_not_nref": 14, "caus": [14, 15, 76, 79, 80, 84, 88, 89, 94, 95], "stai": [14, 78], "bad": [14, 55, 76, 80, 81, 83, 84, 85, 86, 88, 89, 95], "sign": [14, 75, 84, 88, 89], "test_rmsd_converg": 14, "converg": [14, 65, 83], "leastsquarespositionalresidualwithrmsdcutoff": [14, 19], "restraints_parameteris": 14, "frac_binsize_cutoff": 14, "33333": 14, "absolute_cutoff": [14, 54, 61, 62], "gradient_calculation_blocks": [14, 54, 61, 62], "intris": 14, "criterion": [14, 54, 61, 62, 65, 84, 86, 88, 89], "leastsquarespositionalresidualwithrmsdcutoffspars": [14, 19], "sparsegradientsmixin": [14, 19], "gradient": [14, 18, 54, 61, 62], "formula": [14, 18, 84, 86, 88], "concaten": 14, "storag": 14, "queri": 14, "relev": [14, 44, 45, 84, 86, 88, 89], "With": [14, 36, 75, 76, 77, 78, 83, 85], "place": [14, 25, 35, 45, 53, 75, 77, 79, 83, 84, 88], "auxiliari": 14, "calculate_gradi": 14, "approxim": [14, 36, 38, 44, 65, 74, 76, 79, 83, 86], "side": [14, 59, 76, 83], "compute_residu": 14, "compute_residuals_and_gradi": 14, "union": [], "compute_restraints_functional_gradients_and_curvatur": 14, "compute_restraints_residuals_and_gradi": 14, "dim": [14, 18], "get_num_match": 14, "get_num_matches_for_experi": 14, "iexp": [14, 86], "get_num_matches_for_panel": 14, "ipanel": 14, "predict_for_free_reflect": 14, "rmsd_name": 14, "rmsd_x": [14, 75, 76, 80, 83, 84, 85, 87, 88, 89], "rmsd_y": [14, 75, 76, 80, 83, 84, 85, 87, 88, 89], "rmsd_phi": [14, 83, 84, 85, 87, 88, 89], "rmsd_unit": 14, "rmsds_for_experi": 14, "rmsds_for_panel": 14, "caution": 14, "_rmsds_core": 14, "split_matches_into_block": 14, "concurr": [14, 65], "exce": [14, 53], "update_match": 14, "forc": [14, 16, 17, 39, 42, 45, 48, 52, 54, 55, 59, 61, 62, 75, 80, 84], "date": [14, 83], "targetfactori": [14, 19], "from_parameters_and_experi": 14, "target_stil": 14, "leastsquaresstillsresidualwithrmsdcutoff": [14, 19], "ewald": [14, 54, 61, 62, 76], "sphere": [14, 54, 61, 62, 76], "rmsd_deltapsi": 14, "leastsquaresstillsresidualwithrmsdcutoffspars": [14, 19], "datastructur": 15, "arrayscalingmodel": 15, "limit_image_rang": 15, "new_image_rang": 15, "modifi": [15, 41, 42, 48, 49, 51, 54, 66, 68, 75, 83, 84, 85, 86, 87, 88], "involv": [15, 36, 78], "plot_model_compon": 15, "plotli": 15, "dosedecai": 15, "exponenti": 15, "dataset": [15, 18, 34, 41, 45, 48, 54, 55, 61, 62, 63, 65, 71, 74, 76, 78, 79, 80, 83, 84, 86, 87, 88, 89, 91, 99], "fix_initial_paramet": 15, "physicalscalingmodel": 15, "get_shared_compon": 15, "dose_decai": [15, 65, 74], "kbscalingmodel": 15, "scaler": [15, 86], "cycl": [15, 54, 61, 65, 66, 74, 80, 83, 84, 86, 88, 89], "fixed_compon": 15, "previous": [15, 84, 86, 88], "load_error_model": 15, "error_param": 15, "n_param": 15, "record_intensity_combination_imid": 15, "set_error_model": 15, "set_scaling_model_as_sc": 15, "boolean": [15, 32, 47], "set_scaling_model_as_unsc": 15, "set_valid_image_rang": 15, "to_dict": [15, 22, 23, 24, 25, 26], "model_param": 15, "calc_n_param_from_bin": 15, "value_min": [15, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 74], "value_max": [15, 41, 44, 45, 46, 47, 48, 52, 53, 54, 55, 61, 62, 65, 71, 74], "n_bin": [15, 39, 48, 52, 55, 65, 74], "gaussian": [15, 32, 42, 48, 52, 55, 59, 84, 88, 89], "smoother": [15, 54, 61, 62, 75, 77, 89], "calculate_new_offset": 15, "current_image_0": 15, "new_image_0": 15, "new_norm_fac": 15, "n_old_param": 15, "n_new_param": 15, "determine_auto_absorption_param": 15, "initialise_smooth_input": 15, "osc_rang": 15, "one_osc_width": 15, "norm_fac": 15, "make_combined_plot": 15, "plot_scaling_model": 15, "ih_tabl": 15, "reject_outli": 15, "determine_outlier_index_arrai": 15, "normdevoutlierreject": 15, "zmax": 15, "outlierrejectionbas": 15, "deviat": [15, 36, 41, 48, 54, 55, 62, 65, 72, 74, 76, 79, 81, 83, 84, 86, 87, 88, 95], "ihtabl": 15, "_do_outlier_reject": 15, "_outlier_indic": 15, "upon": [15, 78], "popul": [15, 27, 34, 86, 98], "final_outlier_arrai": 15, "simplenormdevoutlierreject": 15, "targetedoutlierreject": 15, "investig": [15, 76, 77, 79, 84, 85, 86, 88], "determine_esq_outlier_index_arrai": 15, "emax": [15, 44, 65, 74], "classifi": [15, 48], "ih": [15, 65, 84, 86, 88], "rejectiob": 15, "importantli": 15, "outlier_index_arrai": 15, "rais": [15, 23, 53, 54, 61, 62], "valueerror": [15, 34], "invalid": [15, 51, 76, 84, 87, 88], "compar": [15, 38, 39, 45, 65, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 98], "outlier_in_sc": 15, "unscal": [15, 45, 77, 80, 84, 88, 89], "prefilt": 15, "finder": [16, 84, 88], "extractpixelsfromimag": [16, 19], "threshold_funct": 16, "region_of_interest": [16, 48], "max_strong_pixel_fract": [16, 48], "compute_mean_background": [16, 48], "extractpixelsfromimage2dnoshoebox": [16, 19], "min_spot_s": [16, 48, 50, 75, 77, 83, 84, 87, 88], "max_spot_s": [16, 48, 77], "filter_spot": 16, "extractspot": [16, 19], "mp_method": 16, "mp_nproc": 16, "mp_njob": 16, "mp_chunksiz": 16, "no_shoeboxes_2d": 16, "min_chunks": [16, 48], "write_hot_pixel_mask": 16, "extractspotsparalleltask": [16, 19], "execut": [16, 76, 85], "task": [16, 55, 78, 84, 85, 88, 89], "cluster": [16, 18, 39, 41, 48, 49, 55, 74, 84, 85, 86, 88, 98], "spotfind": [16, 19, 48, 49, 60, 77, 81, 84, 88, 97, 98], "mask_gener": 16, "scan_rang": [16, 48, 55], "write_hot_mask": [16, 48], "hot_mask_prefix": [16, 48], "hot_mask": [16, 48], "is_stil": 16, "advanc": [16, 82, 84, 85, 88, 89, 91, 99], "remap": 16, "stills_process": [16, 98], "pixel_list_to_reflection_t": [16, 19], "pixel_label": 16, "pixellistlabel": 16, "pixel_list_to_shoebox": [16, 19], "shoeboxes_to_reflection_t": [16, 19], "backgroundgradientfilt": [16, 19], "background_s": [16, 48], "gradient_cutoff": [16, 48], "filterrunn": [16, 19], "success": [16, 18, 75, 76, 77, 78, 84, 85, 88, 89, 98], "check_flag": 16, "re": [16, 35, 49, 62, 63, 74, 77, 78, 85, 86, 87], "equal": [16, 18, 36, 44, 48, 54, 55, 57, 61, 62, 65, 68, 74, 79, 86], "peakcentroiddistancefilt": [16, 19], "maxd": 16, "spotdensityfilt": [16, 19], "nbin": [16, 44, 65, 74], "002": [16, 47, 48, 51, 52, 84, 86], "spotfinderfactori": [16, 19], "configure_filt": 16, "configure_threshold": 16, "load_imag": 16, "filename_or_data": 16, "reflection_predictor": 17, "reflectionpredictor": [17, 19], "dmin": [17, 76, 84, 85, 87, 88], "dmax": [17, 76, 84, 85, 87, 88], "margin": [17, 42, 52, 55, 79], "force_stat": [17, 42, 52, 54, 55, 59, 61, 62, 75, 77], "pad": [17, 24, 42, 46, 52, 55, 83], "proper": [17, 34, 75], "resolution_filter_from_arrai": [18, 19], "min_i_mean_over_sigma_mean": [18, 41, 71, 74], "min_cc_half": [18, 41, 71, 74], "resolution_filter_from_reflections_experi": [18, 19], "nativ": [18, 81, 83, 86, 87], "symmetry_bas": [18, 19], "ml_aniso": [18, 41, 71, 74], "lattice_symmetry_max_delta": [18, 41, 71, 74], "autotyp": 18, "kernel": [18, 41, 48, 52, 71, 74], "quasi": [18, 41, 71, 74, 86, 96], "ml_iso": [18, 41, 71, 74], "altogeth": 18, "1982": [18, 41, 86], "cc\u00bd": [18, 41, 44, 74, 75, 78, 84, 86, 88], "median": [18, 41, 45, 54, 61, 62, 65, 86], "monoclin": [18, 41, 62, 71, 74, 76, 84, 88, 89], "center": [18, 41, 62, 71, 74, 79, 84, 88], "i2": [18, 41, 62, 71, 74, 76, 84], "c2": [18, 41, 62, 71, 74, 76, 84, 88], "obliqu": [18, 41, 62, 71, 74], "smaller": [18, 41, 54, 56, 61, 62, 68, 71, 74, 75, 76], "kernel_normalis": 18, "ml_aniso_normalis": 18, "anisotrop": [18, 86], "likelihood": [18, 41, 71, 75, 78, 84, 86, 87, 88, 89], "ml_iso_normalis": 18, "laue_group": [18, 71, 74, 86], "correlationcoefficientaccumul": [18, 19], "increment": [18, 65, 76, 78], "coeffici": [18, 36, 38, 41, 62, 74, 80, 83, 84, 88, 89], "pearson": 18, "en": 18, "wikipedia": 18, "org": [18, 48, 49, 54, 61, 62, 77, 84, 90], "pearson_correlation_coeffici": 18, "for_a_sampl": 18, "denomin": 18, "lauegroupanalysi": [18, 19], "pointless": [18, 41, 45, 71, 77, 79, 86, 88], "d62": [18, 71], "72": [18, 41, 71, 75, 76, 81, 83, 84, 85, 86, 88, 89, 97], "82": [18, 71, 75, 80, 81, 83, 84, 87, 88, 97], "2011": [18, 71, 81, 97], "d67": [18, 71, 81], "282": [18, 71, 75, 84, 88], "292": [18, 71, 75, 78, 83, 84, 86, 88], "as_dict": 18, "as_json": [18, 25], "pretti": [18, 80, 89], "scorecorrelationcoeffici": [18, 19], "cc": [18, 41, 44, 74, 75, 76, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90], "sigma_cc": 18, "expected_cc": 18, "lower_bound": 18, "upper_bound": 18, "p_cc_given_not_": 18, "sym": 18, "op": [18, 75, 79, 80, 81, 84, 87, 88, 90], "NOT": [18, 94], "p_cc_given_": 18, "cauchi": 18, "cc_true": 18, "p_s_given_cc": 18, "scoresubgroup": [18, 19], "subgroup": 18, "sym_op_scor": 18, "absent": [18, 41, 70, 74, 84, 86, 87, 88], "overal": [18, 41, 42, 45, 52, 54, 55, 59, 61, 62, 74, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 98], "zcc": [18, 41, 75, 78, 84, 86, 87, 88, 89], "appendix": 18, "lattice_symmetri": 18, "metric_subgroup": 18, "scoresymmetryel": [18, 19], "patterson_group": 18, "confid": [18, 38, 41, 75, 76, 78, 84, 86, 87, 88, 89], "z_cc_for": 18, "z_cc_against": 18, "z_cc_net": 18, "net": [18, 49, 81, 84, 89, 92], "cc_for": 18, "cc_against": 18, "max_angular_differ": 18, "symmetris": 18, "p1": [18, 22, 54, 75, 76, 78, 84, 88, 98], "sym_op": 18, "cc_sig_fac": 18, "analys": [18, 38, 41, 53, 54, 61, 62, 76, 84, 85, 86, 88, 89, 92], "presenc": [18, 41, 79, 86, 90, 97], "a1": [18, 84, 88], "rt_mx": 18, "z_cc": 18, "n_ref": 18, "xyz": 18, "trunccauchy_pdf": [18, 19], "loc": 18, "truncat": [18, 54, 55, 61, 62, 84, 86, 87, 88], "pdf": [18, 54, 58, 61, 62, 73], "upper": [18, 55, 65, 74, 89], "reindex": [18, 25, 41, 54, 62, 73, 75, 76, 77, 78, 79, 80, 84, 86, 87, 88, 89, 90], "reindex_to_refer": 18, "determine_reindex_operator_against_refer": [18, 19], "test_miller_set": 18, "reference_miller_set": 18, "twin": [18, 63, 78, 81], "2018": [18, 41, 77, 81, 86, 97], "d74": [18, 41, 81, 86], "405": [18, 41, 83, 84, 85, 86, 88, 97], "410": [18, 41, 84, 86, 88, 97], "patterson": [18, 41, 75, 78, 84, 86, 87, 88, 89, 97], "ambigu": [18, 41, 63, 74, 78, 79, 86, 97], "cosymanalysi": [18, 19], "seed_dataset": 18, "subject": 18, "scope_extract": 18, "seed": [18, 41, 54, 55, 61, 62, 66, 71, 74], "star": [18, 79], "symmetryanalysi": [18, 19], "coord": 18, "cb_op_inp_min": 18, "subgroups_t": 18, "summary_t": 18, "sym_ops_t": 18, "extract_reference_intens": [18, 19], "iotbx": 18, "lattice_id": 18, "min_pair": [18, 41, 74], "lattice_group": [18, 41, 71, 74], "np": 18, "ndarrai": 18, "count": [18, 41, 68, 74, 76, 78, 80, 84, 86, 87, 88, 89, 99], "standard_error": [18, 41, 74], "rij": [18, 41, 74], "w_": 18, "ij": 18, "www": [18, 49], "sjsu": 18, "edu": 18, "faculti": 18, "gerstman": 18, "statprim": 18, "greater": [18, 48, 55, 65, 66, 80, 85, 98], "deprec": 65, "coordin": [18, 22, 24, 26, 48, 51, 52, 53, 60], "dimension": [18, 54, 84, 88], "compute_gradi": 18, "grad": 18, "respect": [18, 36, 40, 65, 78, 81, 86], "compute_gradients_fd": 18, "ep": [18, 54], "06": [18, 23, 24, 25, 26, 41, 49, 65, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 97], "finit": 18, "curv": [18, 44, 76, 80, 83], "curvatures_fd": 18, "get_sym_op": [], "set_dimens": 18, "lbfgs_with_curv": [18, 19], "use_curvatur": [18, 41, 74], "termination_param": 18, "termination_paramet": 18, "progress": [18, 34, 87, 96], "minimize_scipi": [18, 19], "max_cal": [18, 41, 74], "wrapper": 18, "scipi": [18, 41, 74], "minimize_scitbx_lbfg": [18, 19], "stills_index": [19, 54], "lattice_search": 19, "model_evalu": 19, "max_cel": [19, 54, 66, 84, 88, 89], "outlier_reject": [19, 65, 74], "spot_find": [19, 33], "spot_predict": [19, 33], "cosym": [19, 33, 65, 73, 74, 75, 78, 86], "beamfactori": [21, 28], "encapsul": [21, 24, 26], "sample_to_sourc": 21, "polarization_plane_norm": 21, "constructor": [21, 34], "know": [21, 24, 26, 55, 74, 75, 76, 79, 84, 85, 86, 88, 89], "cif_fil": [21, 24, 26, 30], "polar": [21, 39, 53, 84, 86, 88], "imgcif_h": [21, 24, 26, 30], "cbf_handl": [21, 24, 26, 30], "make_beam": 21, "unit_s0": 21, "make_polarized_beam": 21, "flux": [21, 53, 84, 88], "transmiss": [21, 53, 84, 88], "unpolar": 21, "simple_direct": 21, "crystalbas": [22, 25], "api": [22, 25, 26, 27, 85], "vec3": [22, 24, 26], "space_group_symbol": 22, "std": [10, 22, 24, 25, 26, 27, 41, 65, 74, 81, 86], "__cxx11": [22, 24, 25, 26, 27], "basic_str": [22, 24, 25, 26, 27], "char": [22, 24, 25, 26, 27], "char_trait": [22, 24, 25, 26, 27], "alloc": [22, 24, 25, 26, 27, 55], "mat3": [22, 26], "as_str": 22, "show_scan_vari": [22, 67], "get_crystal_symmetri": 22, "assert_is_compatible_unit_cel": 22, "mosaiccrystalkabsch2010": [22, 28], "get_mosa": 22, "is_similar_to": [22, 24, 26], "angle_toler": 22, "01": [22, 36, 41, 55, 75, 76, 77, 78, 79, 81, 83, 84, 86, 87, 88, 97, 98], "uc_rel_length_toler": 22, "uc_abs_angle_toler": 22, "mosaicity_toler": 22, "set_mosa": 22, "mosaiccrystalsauter2014": [22, 28], "get_a_as_sqr": 22, "get_a_inverse_as_sqr": 22, "get_domain_size_ang": 22, "get_half_mosaicity_deg": 22, "half_mosaicity_toler": 22, "domain_size_toler": 22, "set_domain_size_ang": 22, "domain_size_ang": 22, "set_half_mosaicity_deg": 22, "half_mosaicity_deg": 22, "crystalfactori": [22, 28], "from_mosflm_matrix": 22, "mosflm_a_matrix": 22, "ve": [22, 76, 78], "yd": 22, "spread": [22, 65, 78, 80, 81], "autoencod": [23, 28], "skipkei": 23, "ensure_ascii": 23, "check_circular": 23, "allow_nan": 23, "sort_kei": 23, "jsonencod": 23, "serializ": 23, "typeerror": 23, "arbitrari": [23, 32], "beamcomparison": [23, 25, 28], "wavelength_toler": [23, 25], "direction_toler": [23, 25], "polarization_normal_toler": [23, 25], "polarization_fraction_toler": [23, 25], "extract_imageset": 23, "extract_sequ": 23, "extract_stil": 23, "format_class": [23, 27], "iter_sequ": 23, "iter_stil": 23, "num_imag": 23, "unique_beam": 23, "unique_detector": 23, "unique_goniomet": 23, "unique_scan": 23, "datablockfactori": [23, 28], "from_arg": [23, 25], "unhandl": [23, 25, 34, 53], "compare_beam": [23, 25, 34], "compare_detector": [23, 25, 34], "compare_goniomet": [23, 25, 34], "scan_toler": [23, 25, 34], "format_kwarg": [23, 25, 27, 34], "recogn": 23, "from_filenam": [23, 25], "from_imageset": [23, 27], "from_imageset_json_fil": 23, "from_in_memori": 23, "from_json": [23, 25], "decod": [23, 25], "from_pickle_fil": [23, 25], "from_serialized_format": [23, 25], "datablocktemplateimport": [23, 28], "detectorcomparison": [23, 25, 28], "fast_axis_toler": [23, 24, 25], "slow_axis_toler": [23, 24, 25], "origin_toler": [23, 24, 25], "formatcheck": [23, 28], "helper": [23, 34], "find_format": 23, "seen": [23, 77, 83, 84, 88, 89], "prioritis": 23, "hint": [23, 75, 78, 80, 89], "iter_group": 23, "goniometercomparison": [23, 25, 28], "rotation_axis_toler": [23, 25, 26], "fixed_rotation_toler": [23, 25, 26], "setting_rotation_toler": [23, 25, 26], "invaliddatablockerror": [23, 28], "prevent": 23, "doesn": [23, 27], "datablocks_from_dict": [23, 28], "datablocks_from_imageset": [23, 28], "add_group": 24, "detectornod": 24, "node": [24, 89], "add_panel": 24, "imagedoubl": 24, "get_max_inscribed_resolut": 24, "get_max_resolut": 24, "get_nam": [24, 26], "std_string": [24, 25, 26], "get_panel_intersect": 24, "get_ray_intersect": 24, "vec2": 24, "has_projection_2d": 24, "static_onli": 24, "ignore_trusted_rang": 24, "iter_levelord": 24, "breadth": 24, "iter_panel": 24, "iter_preord": 24, "rotate_around_origin": [24, 26], "detectorfactori": [24, 28], "littl": [24, 26, 75, 76, 77, 78, 83, 84, 88, 90], "easier": [24, 26, 76, 84, 88], "fast": [24, 34, 39, 48, 51, 52, 53, 54, 60, 61, 62, 75, 76, 77, 85, 88, 97], "px_mm": 24, "pedest": [24, 27, 53, 84, 88], "rigaku": 24, "saturn": 24, "generate_from_phil": 24, "make_detector": 24, "stype": 24, "thick": [24, 36, 53, 54, 55, 61, 62, 84, 88], "overwrite_from_phil": 24, "overwrit": [24, 26, 39, 53, 83, 86], "token": 24, "ccd": [24, 43, 80, 84, 88, 89], "image_pl": 24, "everywher": [24, 80], "beam_centr": [24, 60], "fast_direct": 24, "slow_direct": 24, "presum": [24, 76], "two_theta": [24, 74], "two_theta_direct": 24, "two_theta_angl": 24, "theta": [24, 90], "move": [24, 34, 54, 61, 62, 75, 79, 83, 85, 86, 88, 89], "all_sequ": 25, "all_stil": 25, "as_fil": 25, "dump": [25, 33, 34], "uniqu": [25, 53, 54, 65, 76, 78, 81, 84, 86, 87, 88, 89, 90], "change_basi": 25, "in_plac": 25, "empti": [25, 34, 49], "from_fil": [25, 85], "from_templ": [25, 27], "is_consist": 25, "nullify_all_single_file_reader_format_inst": 25, "hdf5": 25, "mess": [25, 55], "fork": [25, 96], "reopen": 25, "remove_on_experiment_identifi": 25, "scaling_model": 25, "select_on_experiment_identifi": 25, "to_datablock": 25, "datablock": [25, 28, 31, 33, 77], "experimentlistfactori": [25, 28], "serialis": 25, "recognis": [25, 76, 80], "from_datablock_and_cryst": 25, "load_model": [25, 34, 52], "metadata": [25, 34, 45, 53, 65, 75, 76, 77, 84, 88, 89, 98], "from_imageset_and_cryst": 25, "from_sequence_and_cryst": 25, "from_stills_and_cryst": 25, "from_xd": 25, "xds_inp": [25, 31], "xds_other": 25, "goniometerbas": 26, "fixed_rotation_matrix": 26, "setting_rotation_matrix": 26, "get_num_scan_point": 26, "get_rotation_axi": 26, "get_setting_rotation_at_scan_point": 26, "mat3_doubl": 26, "num_scan_point": 26, "reset_scan_point": 26, "set_fixed_rot": 26, "set_rotation_axi": 26, "set_rotation_axis_datum": 26, "set_setting_rot": 26, "set_setting_rotation_at_scan_point": 26, "goniometerfactori": [26, 28], "peachi": 26, "kappa": [26, 53], "scan_axi": [26, 53], "primari": [26, 34, 35, 76], "arm": 26, "attach": 26, "known_axi": 26, "noth": [26, 53, 76], "make_goniomet": 26, "make_kappa_goniomet": 26, "make_multi_axis_goniomet": 26, "multi_axi": 26, "multi_axis_goniometer_from_phil": 26, "single_axi": 26, "canon": 26, "single_axis_goniometer_from_phil": 26, "kappagoniomet": [26, 28], "kappadirect": 26, "kappascanaxi": 26, "scanaxi": 26, "arg7": 26, "get_alpha_angl": 26, "get_direct": 26, "get_kappa_angl": 26, "get_kappa_axi": 26, "get_omega_angl": 26, "get_omega_axi": 26, "get_phi_angl": 26, "get_phi_axi": 26, "get_scan_axi": 26, "multiaxisgoniomet": [26, 28], "get_angl": 26, "get_ax": 26, "set_angl": 26, "set_ax": 26, "externallookup": [27, 28], "dx": [27, 53, 54, 61, 62, 77], "dy": [27, 53, 54, 61, 62, 77], "externallookupitembool": [27, 28], "externallookupitemdoubl": [27, 28], "imagegrid": [27, 28], "imagesetdata": [27, 28], "grid_siz": [27, 42, 52, 53, 55, 59, 64, 83], "get_grid_s": 27, "complete_set": 27, "get_beam": [27, 31], "get_detector": [27, 31], "get_goniomet": [27, 31], "get_scan": [27, 31], "get_templ": [27, 31, 85], "partial_set": 27, "set_beam": 27, "set_detector": 27, "set_goniomet": 27, "set_scan": 27, "update_detector_px_mm_data": 27, "inject": [27, 97], "as_imageset": 27, "clear_cach": 27, "external_lookup": 27, "get_corrected_data": 27, "get_detectorbas": 27, "detectorbas": 27, "get_format_class": 27, "get_gain": 27, "get_image_identifi": 27, "get_mask": 27, "get_path": 27, "get_pedest": 27, "get_raw_data": 27, "get_spectrum": 27, "spectrum": 27, "get_vendortyp": 27, "vendor": 27, "has_dynamic_mask": 27, "is_marked_for_reject": 27, "mark_for_reject": 27, "masker": 27, "reader": [27, 33, 34, 73, 76, 80], "get_data": [27, 34], "imagebuff": 27, "get_master_path": 27, "get_param": 27, "get_vendor": 27, "has_single_file_read": 27, "goniometershadowmask": 27, "partial_data": 27, "set_format_class": 27, "set_param": 27, "set_templ": 27, "set_vendor": 27, "imagesetfactori": [27, 28], "check_head": 27, "imageset_from_anyset": 27, "make_imageset": 27, "single_file_indic": 27, "make_sequ": 27, "ignore_unknown": 27, "imagesetlazi": [27, 28], "lazi": 27, "necessit": 27, "ahead": [27, 76, 79, 80, 85], "derefer": 27, "pointer": 27, "_detector": 27, "member": 27, "memread": [27, 28], "is_single_file_read": 27, "master_path": 27, "profilemodelfactori": [28, 29], "scanfactori": [28, 30], "basic_imageset_from_dict": [28, 31], "basic_imageset_to_dict": [28, 31], "filename_or_non": [28, 31], "filename_to_absolut": [28, 31], "imagesequence_from_dict": [28, 31], "imagesequence_to_dict": [28, 31], "imageset_from_dict": [28, 31], "imageset_to_dict": [28, 31], "to_cryst": [28, 31], "to_imageset": [28, 31], "to_xd": [28, 31], "xds_detector_nam": [28, 31], "circumst": [30, 54, 61, 62, 95], "wrap": [30, 98, 99], "slightli": [30, 76, 83, 84, 85, 88, 89], "clumsi": 30, "idiomat": 30, "make_scan": 30, "batch_offset": [30, 34, 53], "appear": [2, 30, 37, 46, 73, 75, 76, 78, 81, 84, 86, 88, 89], "impli": [30, 54, 61, 62, 65, 80, 84, 88, 89, 94], "henc": [30, 36, 84, 86], "single_fil": 30, "osc_start": 30, "osc_width": 30, "infil": 31, "xparm": [31, 34, 45], "input_filenam": 31, "extra_filenam": 31, "inp": [31, 45], "intgrat": 31, "xds_ascii": [31, 45], "content": [31, 34, 75, 76, 84, 85, 87, 88, 89], "space_group_numb": 31, "job_card": 31, "xycorr": 31, "init": [31, 34], "colspot": 31, "idxref": 31, "defpix": 31, "xparm_xd": 31, "dxtbx_name": 31, "translat": [31, 54, 61, 62, 79, 84, 86, 88], "xia2": [31, 73, 75, 82, 84, 88, 90, 97], "simple_background_ext": 32, "simplebackgroundext": [32, 33], "subtract": [32, 42, 55, 75, 80, 89], "compute_background": 32, "image_volum": 32, "null_background_ext": 32, "nullbackgroundext": [32, 33], "null": [32, 54, 55, 61, 62, 83, 85], "dispersion_spotfinder_threshold_ext": 32, "dispersionspotfinderthresholdext": [32, 33], "dispers": [32, 46, 48, 52, 77], "compute_threshold": 32, "keyword": 32, "foreground": [32, 55, 76, 84, 87, 88], "estimate_global_threshold": [32, 33], "simple_centroid_ext": 32, "simplecentroidext": [32, 33], "compute_centroid": 32, "gaussianrsprofilemodelext": [32, 33], "famili": 33, "progressbar": [33, 34], "progressbartim": [33, 34], "colour": [33, 34, 64, 70, 84, 88, 89], "head": [33, 34], "madmergedmtzwrit": [33, 34], "mtzwriterbas": [33, 34], "mergedmtzwrit": [33, 34], "unmergedmtzwrit": [33, 34], "convert_to_cambridg": [33, 34], "export_mtz": [33, 34, 85], "match_wavelength": [33, 34], "rotate_cryst": [33, 34], "export_text": [33, 34], "get_inverse_ub_matrix_from_xparm": [33, 34], "get_space_group_type_from_xparm": [33, 34], "get_entri": [33, 34], "argumenthandlingerrorinfo": [33, 34], "argumentparserbas": [33, 34], "optionpars": [33, 34], "philcommandpars": [33, 34], "reflections_and_experiments_from_fil": [33, 34], "command_lin": [34, 85], "nice": [34, 75, 76], "info": [34, 84, 85, 86, 88], "max_length": 34, "print_tim": 34, "titl": [34, 75, 86, 87], "spinner": 34, "bar": 34, "estimate_tim": 34, "fpercent": 34, "percentag": [34, 55, 65, 74], "timer": 34, "get_elapsed_tim": 34, "percent": [34, 79], "writer": 34, "add_dataset": 34, "merged_arrai": 34, "anom_arrai": 34, "amplitud": [34, 65, 79, 86, 87], "anom_amplitud": 34, "dano": [34, 86], "suffix": [34, 41], "recent": [34, 81, 86, 92, 99], "imean": [34, 86, 87, 88], "ad": [34, 61, 72, 75, 76, 78, 83, 84, 88, 96], "add_cryst": 34, "crystal_nam": [34, 45, 65], "project_nam": [34, 45, 65], "add_empty_dataset": 34, "add_batch_list": 34, "dataset_id": 34, "force_static_model": [34, 45], "write_column": 34, "AND": [34, 94], "cambridg": [34, 101], "best_unit_cel": [34, 45, 65], "combine_parti": [34, 45], "min_isigi": [34, 45, 65, 84, 86, 88], "filter_ice_r": [34, 45], "hklout": [34, 45, 75, 77, 83, 85, 88, 90, 95], "absolute_toler": 34, "0001": [34, 65, 74, 84], "rmat": 34, "integrated_data": 34, "read_fil": 34, "colorama": 34, "ansitowin32": 34, "streamwrapp": 34, "base_package_opt": 34, "configure_modul": 34, "mmtbx": 34, "smtbx": 34, "cbflib": 34, "annlib_adaptbx": 34, "wxtbx": 34, "gltbx": 34, "dest_dir_prefix": 34, "include_gui_packag": 34, "installer_dir": 34, "dl": [34, 80, 81, 84, 88], "scisoft": [34, 81, 84], "build_dial": 34, "make_app": 34, "product_nam": 34, "product_specific_finalize_instal": 34, "cleanup": 34, "ons": 34, "remove_sources_default": 34, "source_packag": 34, "cctbx_bundl": 34, "annlib": 34, "ioutil": 34, "inverse_ub_matrix": 34, "tyoe": 34, "nexu": [34, 43, 45], "traceback": 34, "read_experiments_from_imag": 34, "sort_opt": 34, "formatter_class": 34, "argpars": 34, "rawdescriptionhelpformatt": 34, "diff_phil": 34, "diff": 34, "format_help": 34, "formatt": 34, "return_unhandl": 34, "ignore_unhandl": [34, 53], "quick_pars": 34, "system_phil": 34, "config_opt": 34, "format_epilog": 34, "parse_known_arg": 34, "verbos": [34, 49, 54, 61, 62, 84, 88, 98], "intellig": 34, "tri": [34, 48], "try_read_experi": 34, "try_read_experiments_from_imag": 34, "try_read_reflect": 34, "filename_object_list": 34, "renumb": 34, "clash": 34, "experiment_identifi": 34, "reflection_file_object_list": 34, "experiment_file_object_list": 34, "cusp": 35, "perpendicular": [35, 70, 78], "attenu": 36, "anvil": 36, "pressur": 36, "sandwich": 36, "plate": [36, 78, 84, 85, 88, 89], "passag": 36, "incid": [36, 54, 61, 62], "amount": [36, 55, 65, 75, 86], "caption": 36, "3510": 36, "kg": 36, "cubic": 36, "metr": 36, "synthet": [36, 87], "allow_non": [36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74], "5925": 36, "i19": 36, "un": 36, "l_0": 36, "l_1": 36, "illustr": [36, 78, 99], "schemat": 36, "perfectli": 36, "hat": 36, "_0": 36, "lambda": 36, "l_i": 36, "alpha_i": 36, "exp": [36, 48, 55, 65, 71, 74, 75, 76, 80, 83, 84, 85, 87, 88], "rho": 36, "tabul": 36, "mass": [36, 42, 52, 55, 59, 84, 88], "carbon": 36, "collat": 36, "technologi": 36, "nist": 36, "recov": 36, "absenc": [36, 71, 74, 81, 84, 86, 88, 90], "multipli": [36, 42, 48, 52, 54, 55, 59, 61, 62], "subtli": 36, "contradict": 36, "anticip": [36, 84, 88], "signific": [36, 39, 44, 48, 55, 65, 74, 77, 83, 84, 85, 86, 88, 89], "hubbel": 36, "seltzer": 36, "onlin": [36, 76, 77], "xaamdi": 36, "2020": [36, 84, 86, 88, 97], "gaithersburg": 36, "md": 36, "augment": 37, "hand": 37, "crucial": 37, "pixels1": 37, "pixels2": 37, "belong": [38, 53, 79, 85], "misindex": [38, 54, 80], "pattern": [38, 75, 77, 79, 80, 83, 84, 85, 86, 88, 97, 99], "incorrect": [38, 54, 76, 79, 80, 90], "symop_threshold": 38, "grid_l": 38, "d_max": [38, 42, 47, 48, 51, 52, 55, 57, 65, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89], "grid_h": 38, "grid_k": 38, "asu": [38, 75], "normalise_bin": 38, "consid": [38, 48, 51, 76, 78, 79, 84, 86, 88, 90], "symm": [38, 75], "No": [39, 41, 84, 85, 86, 87, 88, 98], "repeat": [39, 48, 65, 75, 76, 77, 83, 85, 86, 89, 98], "experiments_0": [39, 41, 86, 90], "experiments_1": [39, 41, 83, 86, 90], "reflections_0": [39, 41, 86, 90], "reflections_1": [39, 41, 86, 90], "reference_from_experi": [39, 83, 85, 95], "average_detector": 39, "compare_model": [39, 85], "average_hierarchy_level": 39, "dendrogram": [39, 41, 74, 85], "1000": [39, 48, 54, 55, 61, 62, 75, 84, 85, 87, 88], "max_clust": [39, 74], "exclude_single_crystal_clust": 39, "experiments_filenam": [39, 68], "reflections_filenam": [39, 68], "n_subset": 39, "n_subset_method": 39, "n_refl": [39, 84, 86, 88], "significance_filt": [39, 55], "n_refl_panel_list": 39, "Not": [39, 46, 52, 53, 54, 61, 62], "compat": [39, 76, 80], "fall": [39, 48, 51, 52, 55, 76, 83, 84, 88], "hierarch": [39, 41, 54, 61, 62, 74, 83], "5e": [39, 90], "setting_rot": [39, 53], "03": [39, 41, 75, 78, 81, 83, 84, 86, 87, 88, 97, 98], "sig": [39, 41, 45, 84, 86, 87, 88], "max_batch_s": 39, "5500": 39, "917": [39, 75, 84], "916": [39, 84], "delete_shoebox": [39, 55], "comb": 39, "ining": 39, "min_reflections_per_experi": 39, "throw": [39, 48], "fewer": [39, 76, 98], "max_reflections_per_experi": 39, "sigi": [39, 44, 55, 65, 74, 76, 81, 83, 84, 86, 87, 88], "isigi_cutoff": [39, 55], "falloff": [39, 44, 55, 86], "past": [39, 55, 76, 83], "retain": [39, 45, 55, 78, 94], "euler": 40, "models_1": 40, "models_2": 40, "sequenti": [40, 76], "i23": 41, "unit_cell_clust": [41, 74], "5000": [41, 74, 75], "min_reflect": [41, 65], "230": [41, 71, 84, 88], "_reindex": 41, "experiments_2": [41, 86, 90], "experiments_3": [41, 86, 90], "reflections_2": [41, 86, 90], "reflections_3": [41, 86, 90], "metric": [41, 44, 54, 62, 74, 75, 76, 79, 80, 84, 85, 86, 87, 88, 89], "aren": 41, "carri": [41, 84, 85, 88, 89], "forward": [41, 55, 78], "47": [41, 76, 77, 83, 84, 85, 86, 87, 88, 97], "346": [41, 75, 78, 84, 86, 88], "singleton": [41, 86], "cluster_id": [41, 86, 98], "n_xtal": [41, 86, 98], "med_a": [41, 86, 98], "med_b": [41, 86, 98], "med_c": [41, 86, 98], "med_alpha": [41, 86, 98], "med_beta": [41, 86, 98], "med_gamma": [41, 86, 98], "cluster_1": [41, 86, 98], "68": [41, 50, 75, 77, 80, 84, 86, 87, 88], "36": [41, 54, 61, 62, 75, 78, 83, 84, 85, 86, 87, 88], "103": [41, 75, 84, 86, 87, 88], "00": [41, 43, 51, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 98], "123": [41, 75, 80, 84, 86, 88], "bracket": [41, 86], "bravai": [41, 62, 76, 80, 86, 87], "niggli": [41, 86], "dev": [41, 54, 61, 62, 77, 81, 84, 86, 87, 88, 93], "lepag": [41, 86], "255": [41, 75, 77, 84, 86, 88], "3deg": [41, 86], "wilson": [41, 75, 81, 84, 86, 88], "ml": [41, 75, 84, 86, 88], "13": [41, 75, 76, 78, 79, 83, 84, 85, 86, 87, 88, 98], "52": [41, 75, 80, 83, 84, 85, 86, 87, 88], "04": [41, 45, 75, 76, 78, 80, 81, 83, 84, 86, 87, 88, 90, 97, 98], "11": [41, 75, 76, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 97], "96": [41, 75, 78, 80, 83, 84, 86, 87, 88, 90, 98], "67": [41, 75, 80, 84, 86, 87, 88], "\u03c3": [41, 74, 84, 86, 88], "83": [41, 75, 80, 84, 86, 87, 88], "148639": [41, 86], "abl": [41, 84, 88, 89], "747": [41, 86], "8561": [41, 86], "5986": [41, 86], "9292": [41, 86], "3244": [41, 86], "8874": [41, 86], "2239": [41, 86], "8612": [41, 86], "fact": [41, 76, 77, 79, 80, 83, 85], "genuin": 41, "diederich": [41, 99], "2017": [41, 88, 97], "939": [75, 85, 88], "78": [75, 76, 78, 79, 81, 83, 84, 85, 86, 87, 88, 97], "98": [75, 76, 77, 78, 80, 81, 83, 84, 86, 87, 88, 89], "942": [75, 78, 84, 86], "941": [75, 84, 86], "81": [75, 76, 81, 83, 84, 86, 87, 88], "943": [75, 84, 86, 87], "85": [75, 77, 78, 80, 81, 83, 84, 86, 87, 88, 97, 98], "rank": 41, "sub": [41, 47, 54, 61, 62, 75, 78, 79, 84, 86, 87, 88, 89, 92], "netzcc": [41, 75, 78, 84, 86, 87, 88, 89], "84": [75, 76, 83, 84, 86, 87, 88, 89], "3603": [41, 86], "953": [41, 75, 76, 86], "000": [41, 77, 78, 81, 83, 84, 86, 87, 88, 90], "conclud": [41, 79, 83, 84, 87, 88, 89], "hide": [41, 84, 86, 88], "849": 84, "ga207eb7d5": [], "76079": [41, 86], "54367": [41, 86], "1127": [41, 86], "75607": [41, 86], "54845": [41, 86], "1284": [41, 84, 86, 88], "77983": [41, 86], "54461": [41, 86], "1404": [41, 84, 86, 88], "76468": [41, 86], "53877": [41, 86], "1062": [41, 86], "explain": [41, 76, 78, 86], "0083": [], "0022": [], "0018": [], "0015": 78, "0013": [78, 83, 84, 87], "00077": [], "00022": [], "2e": [], "093": [86, 87], "079": [75, 78, 86, 87], "048": [78, 86], "014": 86, "0014": [], "short_capt": [41, 44, 48, 53, 54, 55, 61, 62, 65, 71, 74], "max": [41, 47, 52, 53, 54, 65, 66, 74, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 98], "\u03b4": [41, 74, 89], "\u03b2": [41, 74, 76], "occas": [42, 78], "independ": [42, 54, 61, 62, 78, 83, 84, 86, 88, 89, 90, 98], "models_with_profil": 42, "ellipsoid": [42, 52, 55, 59, 98], "rlp_mosaic": [42, 52, 55, 59], "simple1": [42, 52, 55, 59], "simple6": [42, 52, 55, 59], "angular2": [42, 52, 55, 59], "angular4": [42, 52, 55, 59], "wavelength_spread": [42, 52, 55, 59], "fail_on_bad_index": [42, 52, 55, 59], "max_separ": [42, 48, 52, 55, 59, 75], "outlier_prob": [42, 52, 55, 59], "975": [42, 52, 54, 55, 59, 61, 62, 71, 75, 83, 86], "n_macro_cycl": [42, 52, 54, 55, 59, 66, 80], "n_cycl": [42, 52, 55, 59], "min_n_reflect": [42, 52, 55, 59], "997300": [42, 52, 55, 59], "scan_vari": [42, 52, 54, 55, 59, 61, 62, 75, 76, 77, 83, 84, 85, 95], "min_spot": [42, 52, 55, 59, 98], "per_degre": [42, 52, 55, 59], "sigma_m_algorithm": [42, 52, 55, 59], "centroid_definit": [42, 52, 55, 59], "n_sigma": [42, 52, 55, 59], "sigma_b": [42, 46, 52, 55, 59], "sigma_m": [42, 52, 55, 59, 84, 88, 89], "min_zeta": [42, 52, 55, 59], "scan_step": [42, 52, 55, 59], "grid_method": [42, 52, 55, 59], "regular_grid": [42, 52, 55, 59], "circular_grid": [42, 52, 55, 59], "spherical_grid": [42, 52, 55, 59], "fit_method": [42, 52, 55, 59], "reciprocal_spac": [42, 52, 55, 59], "detector_spac": [42, 52, 55, 59], "deconvolut": [42, 52, 55, 59], "subtract_background": 42, "multivari": [42, 52, 55, 59, 89], "total_reflect": [42, 52, 55, 59], "reflections_per_degre": [42, 52, 54, 55, 59, 61, 62], "min": [42, 47, 52, 53, 55, 59, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88], "zeta": [42, 52, 55, 59, 84, 88, 89], "behav": [43, 84, 88], "poisson": [43, 80, 84, 88, 89], "older": [43, 89], "amongst": [43, 85], "abil": 43, "nois": [43, 48, 52, 77, 84, 86, 88], "kernel_s": [43, 46, 48, 52], "max_imag": 43, "gain_map": [43, 48], "cc_half": [44, 74, 81, 86], "isigma": [44, 74], "misigma": [44, 74], "i_mean_over_sigma_mean": [44, 74], "cc_ref": [44, 74], "rmerg": [44, 74, 76, 78, 81, 84, 86, 88, 89, 90], "lowest": [44, 65, 76, 80, 84, 88, 89], "tanh": [44, 74], "half": [44, 54, 76, 79, 81, 84, 86, 88, 89, 90], "steep": [44, 88], "polynomi": [44, 74], "scaled_unmerg": [44, 45, 78], "cc_half_method": [44, 74], "half_dataset": [34, 44, 74], "sigma_tau": [44, 74], "reflections_per_bin": [44, 74], "batch_rang": 44, "outer": [44, 49, 74, 83, 90], "ccref": [44, 74], "cc_half_significance_level": [44, 74], "cc_half_fit": [44, 74], "binning_method": [44, 74], "counting_sort": [44, 74], "downstream": [45, 65, 76, 77, 78, 84, 86, 87, 88, 89, 90], "nx": [45, 48], "nxmx": 45, "mmcif": [45, 72, 78], "sadab": 45, "cosin": 45, "ersatz": 45, "evalccd": 45, "mat": 45, "pet": 45, "dynam": [45, 46, 52, 53, 55, 59, 97], "jana2020": 45, "shelx": [45, 72, 75, 90], "xtal": [45, 65, 85, 86, 87], "sad": [45, 90], "instrument_nam": 45, "instrument_short_nam": 45, "source_nam": 45, "source_short_nam": 45, "gz": [45, 49, 88, 90, 93], "bz2": [45, 80, 87], "pdb_version": 45, "v5": 45, "v5_next": 45, "n_digit": 45, "ins": [45, 75, 90], "scale_rang": 45, "9999": 45, "filename_prefix": 45, "dials_dyn": 45, "partiality_cutoff": [45, 65, 74, 84, 86, 88], "99": [45, 71, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 98], "flag_filt": 45, "virtual_fram": 45, "excitation_error_cutoff": 45, "n_merg": 45, "applic": [45, 55, 74, 75, 84, 86, 88, 89, 93], "unfeas": 45, "ic": [45, 47, 48, 50, 51, 52, 54, 55, 83, 84, 86, 88, 97], "ring": [45, 47, 48, 50, 51, 52, 54, 55, 76, 77, 83, 84, 86, 87, 88, 97], "instrument": [45, 83, 96], "acronym": 45, "facil": [45, 85, 86, 99], "compli": 45, "decim": [45, 54, 61, 62], "maximis": 45, "precis": [45, 84, 88], "2f": 45, "999999": 45, "9999999": 45, "cif_pet": 45, "deem": 45, "integrated_sum": 45, "integrated_prf": 45, "restrict": [45, 54, 61, 62, 85, 86], "excit": 45, "virtual": 45, "bitmap": 46, "intermedi": [46, 55, 85], "sigma_": [46, 52], "alter": [46, 76, 78, 89], "bright": [46, 52, 75, 84, 88], "colour_schem": 46, "inverse_greyscal": 46, "greyscal": 46, "rainbow": [46, 52], "heatmap": [46, 52, 64], "global_threshold": [46, 48, 52, 77], "nsigma_b": [46, 52], "nsigma_": [46, 52], "min_loc": [46, 48, 52], "satur": 46, "show_mask": [46, 52], "compress_level": 46, "jpeg": 46, "tiff": 46, "imageset_index": 46, "zlib": 46, "worst": 46, "dynamic_shadow": [46, 52, 53], "multi_panel": [46, 52, 53], "sens": 46, "flag_express": 47, "parenthes": 47, "reference_spot": 47, "failed_during_summ": 47, "failed_during_profile_fit": 47, "select_good_intens": 47, "dead_tim": 47, "reject_fract": 47, "ice_r": [47, 48, 51, 52, 55], "intersect": 47, "trustworthi": [47, 84, 88, 89], "dead": [47, 83], "exposur": [47, 53, 84, 88, 89], "overlap": [47, 54, 76, 84, 88, 89, 90], "498": [47, 48, 51, 52, 84, 87, 88], "338": [47, 48, 51, 52, 78, 84, 88], "d_space": [47, 48, 51, 52, 86], "powder": [47, 48, 51, 52, 76, 77, 83, 84, 87, 88], "194": [47, 48, 51, 52, 75, 84, 86, 88], "logic": 48, "connect": [48, 57, 64, 86], "config": [48, 85], "image1": 48, "imager_00": 48, "per_image_statist": 48, "lookup": [48, 53, 54, 55, 77], "force_2d": 48, "border": [48, 51, 52, 54], "disable_parallax_correct": [48, 51, 52], "resolution_rang": [48, 51, 52], "untrust": [48, 51, 52, 75, 77], "rectangl": [48, 51, 52, 77], "polygon": [48, 51, 52], "mp": [48, 54, 55, 61, 62, 75, 79, 80, 81, 84, 87, 88], "drmaa": [48, 55], "sge": [48, 55], "lsf": [48, 55], "pb": [48, 55], "njob": [48, 55], "chunksiz": [48, 84, 88], "dispersion_extend": 48, "radial_profil": 48, "n_iqr": [48, 52], "blur": [48, 52], "insid": [48, 78, 85], "hot": 48, "maximum_trusted_valu": 48, "j0": [48, 54, 66, 68], "j1": [48, 54, 66, 68], "liter": 48, "wherea": [48, 65, 76, 83, 84, 88, 89], "x0": [48, 51, 52], "x1": [48, 51, 52], "y0": [48, 51, 52], "y1": [48, 51, 52], "roi": 48, "height": [48, 54, 55, 61, 62, 86], "contigu": [48, 95], "mark": [48, 76, 84, 88, 89], "background_gradi": 48, "spot_dens": 48, "edg": [48, 51, 52, 54, 55, 61, 62, 75, 77, 78, 90, 99], "faster": [48, 51, 52, 54, 61, 62], "parallax": [48, 51, 52, 53], "xc": [48, 51, 52, 83, 84, 85, 88], "yc": [48, 51, 52, 83, 84, 85, 88], "corner": [48, 51, 52, 83, 84, 88, 89], "act": [48, 52], "cannot": [48, 75, 76, 80, 83, 95], "conjunct": [48, 55], "ny": 48, "sigma_background": 48, "sigma_strong": [48, 77], "global": [48, 54, 55, 61, 62, 66, 76, 85], "iqr": [48, 52, 54, 55, 61, 62], "2\u03b8": [48, 52, 72, 74], "particularli": [48, 76, 77, 80, 85, 86, 89, 90, 98], "consider": [48, 79, 84, 88, 89], "inelast": [48, 76], "insensit": [48, 86], "respons": [48, 50, 76], "peakfind": 48, "doi": [48, 54, 61, 62, 77, 84], "1107": [48, 54, 61, 62, 77], "s1600576714007626": 48, "preprocess": [48, 52, 84, 86, 88], "convolut": [48, 52], "webserv": 49, "labelit": [49, 80], "client_serv": 49, "raster": [49, 78], "balanc": 49, "throughput": 49, "07": [49, 76, 77, 78, 79, 83, 84, 85, 86, 88], "cento": 49, "mod_python": 49, "apr": [49, 97], "webpag": 49, "ask": [49, 78, 85, 86], "mirror": [49, 76, 84, 86, 88, 92], "closest": [49, 84], "visit": 49, "web": [49, 73, 75], "dyn": 49, "closer": [49, 76, 83, 85], "cgi": 49, "httpd": 49, "folder": [49, 78, 86, 88, 89], "project_root": 49, "mkdir": [49, 75, 76, 77, 78, 83, 85, 86], "project_src": 49, "cctbx_project": 49, "master": [49, 75, 77, 78], "apache_install_di": 49, "dist": [49, 77], "modpython": 49, "tgz": 49, "motorlogi": 49, "hour": 49, "mpm_prefork_modul": 49, "conf": 49, "mpm": 49, "better": [49, 66, 75, 76, 78, 84, 85, 86, 88, 89, 95], "capabl": [49, 76, 92], "machin": [49, 50, 98, 99], "host": [49, 50, 81], "localhost": 49, "8125": [49, 84], "signal_strength": 49, "from_sunbird": 49, "rawdata": 49, "ssrl_p6": 49, "i3_1_0001": 49, "stat": [49, 65], "eiger": [49, 78], "dectri": [49, 83], "eiger16mnov2015": 49, "2015_11_10": 49, "insu6_1_mast": 49, "h5": 49, "frame_numb": 49, "44": [49, 80, 83, 84, 85, 86, 87, 88], "disk": 49, "analyz": 49, "feedback": 50, "port": 50, "1234": [50, 88], "find_spots_cli": 50, "hostnam": 50, "xml": [50, 55], "image_0001": 50, "spot_count": 50, "352": [50, 75, 84, 88, 97], "spot_count_no_ic": 50, "263": [50, 75, 78, 84, 86, 87, 88], "46": [50, 75, 78, 81, 83, 84, 85, 86, 87, 88], "d_min_method_1": 50, "92": [50, 75, 76, 78, 81, 83, 84, 86, 87, 88, 97], "d_min_method_2": 50, "total_intens": 50, "56215": 50, "distl": [50, 73], "1701": [50, 88], "unwant": 51, "few": [51, 54, 61, 62, 75, 76, 79, 80, 83, 85, 86, 98], "shape": [51, 65, 84, 88, 89, 90], "200": [48, 51, 54, 55, 65, 71, 74, 75, 78, 84, 86, 87, 88], "overlaid": 52, "color_schem": 52, "grayscal": 52, "invert": [52, 53, 80, 84, 88], "show_beam_cent": 52, "show_resolution_r": 52, "show_ice_r": 52, "show_ctr_mass": 52, "show_max_pix": 52, "show_all_pix": 52, "show_threshold_pix": 52, "show_shoebox": 52, "show_predict": 52, "show_miller_indic": 52, "show_index": 52, "show_integr": 52, "show_basis_vector": 52, "show_rotation_axi": [52, 60], "basis_vector_scal": 52, "stack_mod": 52, "powder_arc": 52, "calibrate_silv": 52, "calibrate_pdb": 52, "calibrate_unit_cel": 52, "show_hkl": 52, "mask_param": 52, "predict_reflect": 52, "stack_imag": 52, "arc": [52, 76], "fetch": 52, "internet": [52, 64], "gui": 52, "metrologi": [52, 82], "silver": [52, 99], "behen": 52, "calibr": [52, 75, 76, 77, 83], "spacegroup": [52, 77, 81], "matter": [52, 90], "stdin": 53, "digit": 53, "manual": [53, 75, 76, 85, 90], "reference_geometri": [53, 77], "mosflm_beam_centr": 53, "image_": [53, 56, 67], "image_1_": 53, "image_2_": 53, "eof": [53, 77, 88], "image_1": 53, "image_2": 53, "identifier_typ": 53, "uuid": 53, "timestamp": [53, 98], "allow_multiple_sequ": [53, 95], "as_grid_scan": 53, "check_reference_geometri": 53, "use_beam_refer": 53, "use_gonio_refer": 53, "use_detector_refer": 53, "parallax_correct": 53, "fast_slow_beam_centr": [53, 75], "size_min": 53, "size_max": 53, "slow_fast_beam_centr": 53, "prioriti": 53, "invert_rotation_axi": 53, "extrapolate_scan": 53, "extrapol": 53, "convert_stills_to_sequ": 53, "convert_sequences_to_stil": 53, "offsetparallaxcorrectedpxmmstrategi": 53, "autoindex": [54, 81, 84, 88, 89], "fourier": [54, 71], "proce": [54, 61, 62, 78, 80, 84, 86, 87, 88, 89, 90, 95], "enforc": [54, 76, 79, 84, 85, 88], "p43212": [54, 78], "known_symmetri": 54, "hkl_toler": 54, "check_misindex": 54, "grid_search_scop": 54, "refinement_protocol": 54, "d_min_step": [54, 84, 88], "d_min_start": 54, "d_min_fin": 54, "ewald_proximity_resolution_cutoff": 54, "refine_all_candid": 54, "rmsd_min_px": 54, "ewald_proximal_volume_max": 54, "0025": 54, "isoform": 54, "lookup_symbol": 54, "rmsd_target_mm": 54, "beam_restraint": 54, "set_domain_size_ang_valu": 54, "set_mosaic_half_deg_valu": 54, "joint_index": 54, "set_scan_varying_error": [54, 61, 62], "in_spindle_plan": [54, 61, 62, 75, 77], "out_spindle_plan": [54, 61, 62, 75, 77], "in_beam_plan": [54, 61, 62], "out_beam_plan": [54, 61, 62], "mcd": [54, 61, 62, 84, 85, 88, 89], "tukei": [54, 55, 61, 62, 83, 84, 85, 87, 88, 89], "sauter_poon": [54, 61, 62, 85], "mm_search_scop": [54, 66], "radiu": [54, 66], "wide_search_bin": [54, 66], "coars": [54, 66], "min_cell_volum": 54, "max_cell_estim": 54, "nn": 54, "logarithm": 54, "nearest": [54, 55, 57, 68, 89], "neighbour": [54, 57, 84, 88, 89], "sigma_phi_deg": 54, "mainli": [54, 55, 79], "shot": [54, 97], "almost": [54, 76, 78, 79, 84, 88], "certainli": 54, "ness": 54, "index_error": 54, "index_magnitud": 54, "index_qu": 54, "combine_scan": 54, "refine_shel": 54, "repredict_onli": 54, "macro": [54, 61, 66, 80, 83, 84, 88, 89], "ever": [54, 80, 99], "disable_unit_cell_volume_sanity_check": 54, "saniti": 54, "unrealist": 54, "multiple_lattice_search": 54, "recycle_unindexed_reflections_cutoff": 54, "unindex": [54, 55, 60, 75, 76, 80, 84, 87, 88, 89], "cluster_analysi": 54, "dbscan": 54, "hcluster": 54, "linkag": 54, "ward": 54, "euclidean": 54, "cutoff_criterion": 54, "inconsist": 54, "min_sampl": 54, "min_cluster_s": 54, "intersection_union_ratio_cutoff": 54, "candidate_outlier_reject": 54, "refine_candidates_with_known_symmetri": 54, "proxim": 54, "pointgroup": 54, "assur": 54, "domain": [54, 76], "ang": 54, "nave": 54, "basis_vector_combin": 54, "agreement": [54, 84, 86, 88, 89, 90], "max_refin": 54, "sys_absent_threshold": 54, "solution_scor": 54, "optimise_initial_basis_vector": 54, "peak_search": 54, "flood_fil": 54, "clean": [54, 76, 83], "reciprocal_space_grid": 54, "256": [54, 75, 77, 80, 84, 86, 88, 89], "max_vector": 54, "candidate_spot": 54, "limit_resolution_bi": 54, "n_spot": 54, "d_star_toler": 54, "band": [54, 76], "use_p1_indices_as_se": 54, "search_depth": 54, "triplet": 54, "quad": [54, 77], "bootstrap_cryst": 54, "max_pair": 54, "max_triplet": 54, "600": [54, 86, 88], "max_quad": 54, "slice": [54, 68, 76, 99], "auto_reduct": [54, 61, 62], "behaviour": [54, 61, 62, 76], "min_nref_per_paramet": [54, 61, 62], "action": [54, 61, 62], "trigger": [54, 61, 62, 65], "excis": [54, 61, 62], "eman": [54, 61, 62], "macrocycl": [54, 61, 62, 76, 80, 83, 84, 88, 89], "compose_model_p": [54, 61, 62], "trade": [54, 61, 62], "accuraci": [54, 61, 62], "block_width": [54, 61, 62, 75, 77], "fine": [54, 61, 62, 76, 83, 84, 88, 89, 95, 99], "grain": [54, 61, 62], "covari": [54, 61, 62, 89], "moment": [54, 61, 62, 83], "trim_scan_to_observ": [54, 61, 62], "trim": [54, 61, 62, 75], "failur": [54, 61, 62, 74, 80], "extrem": [54, 61, 62, 64, 80, 83, 85, 86, 97, 99], "debug_centroid_analysi": [54, 61, 62], "plot_centroid_analysi": [54, 61, 62], "dials_scratch": [54, 61, 62], "fix_list": [54, 61, 62, 77], "suffic": [54, 61, 62], "detector1": [54, 61, 62], "interval_width_degre": [54, 61, 62], "checkpoint": [54, 61, 62], "absolute_num_interv": [54, 61, 62, 75, 77], "tie_to_target": [54, 61, 62, 76, 77], "tie_to_group": [54, 61, 62], "low_memory_mean": [54, 61, 62], "tie": [54, 61, 62], "treat": [54, 61, 62, 78, 83, 95], "rigid": [54, 61, 62, 83], "bodi": [54, 61, 62], "hierarchy_level": [54, 61, 62, 83], "treat_single_image_as_stil": [54, 61, 62], "spherical_relp_model": [54, 61, 62], "relp": [54, 61, 62], "gaussnewton": [54, 61, 62, 65], "levmar": [54, 61, 62, 65], "sparselevmar": [54, 61, 62], "track_step": [54, 61, 62], "track_gradi": [54, 61, 62], "track_parameter_correl": [54, 61, 62, 85], "track_jacobian_structur": [54, 61, 62], "track_condition_numb": [54, 61, 62], "track_normal_matrix": [54, 61, 62], "track_out_of_sample_rmsd": [54, 61, 62], "fraction_of_bin_s": [54, 61, 62], "discret": [54, 61, 62], "bin_size_fract": [54, 61, 62, 83], "natur": [54, 61, 62, 86, 88, 89, 97], "viz": [54, 61, 62, 90], "wider": [54, 61, 62], "minimum_sample_s": [54, 55, 61, 62], "maximum_sample_s": [54, 55, 61, 62], "random_se": [54, 55, 61, 62], "parallelepip": [54, 61, 62], "bia": [54, 61, 62], "external_deltapsi": [54, 61, 62], "identif": [54, 61, 62], "minimum_number_of_reflect": [54, 61, 62], "separate_experi": [54, 61, 62], "separate_panel": [54, 61, 62], "separate_block": [54, 61, 62], "divid": [54, 61, 62, 65], "18": [54, 61, 62, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 97], "enough": [54, 61, 62, 75, 80, 83, 85, 95], "separate_imag": [54, 61, 62], "rejector": [54, 55, 61, 62], "iqr_multipli": [54, 61, 62], "rule": [54, 61, 62], "rousseeuw": [54, 61, 62], "van": [54, 61, 62, 97], "driessen": [54, 61, 62], "1080": [54, 61, 62], "00401706": [54, 61, 62], "10485670": [54, 61, 62], "max_n_group": [54, 61, 62], "twice": [54, 61, 62, 84, 88, 89], "min_group_s": [54, 61, 62], "300": [54, 61, 62, 77, 78, 84, 85, 86, 88], "maxim": [54, 61, 62], "n_trial": [54, 61, 62], "500": [54, 61, 62, 75, 77, 84, 88], "k1": [54, 61, 62], "concentr": [54, 61, 62], "k2": [54, 61, 62], "k3": [54, 61, 62], "threshold_prob": [54, 61, 62], "quantil": [54, 61, 62], "chi": [54, 61, 62], "freedom": [2, 54, 61, 62, 83], "robust": [54, 55, 61, 62, 78, 97], "mahalanobi": [54, 61, 62], "s0021889810010782": [54, 61, 62], "px_sz": [54, 61, 62], "graph": [54, 57, 61, 62, 75, 89], "reintegr": 55, "glm": 55, "include_bad_refer": 55, "create_profile_model": [55, 73], "max_memory_usag": 55, "use_dynamic_mask": 55, "reference_profil": 55, "separate_fil": 55, "split_experi": [55, 83, 85, 87, 90, 95], "number_of_partit": 55, "min_partition_s": 55, "overlaps_filt": 55, "foreground_foreground": 55, "foreground_background": 55, "n_subset_split": 55, "detector_gain": 55, "gmodel": 55, "tuning_const": 55, "345": [55, 75, 77, 84, 87, 88], "constant2d": 55, "constant3d": 55, "loglinear2d": 55, "loglinear3d": 55, "min_pixel": 55, "nsigma": 55, "linear2d": 55, "linear3d": 55, "fuller_kapton": 55, "kapton_2019": 55, "xtal_height_above_kapton_mm": 55, "rotation_angle_deg": 55, "kapton_half_width_mm": 55, "5875": [55, 83], "kapton_thickness_mm": 55, "005": [55, 75, 81, 84, 86], "smart_sigma": 55, "within_spot_sigma": 55, "output_unintegrated_reflect": 55, "unintegr": [55, 84, 88], "bad_refer": 55, "integrate_all_reflect": 55, "nframe": 55, "guarante": [55, 89, 90], "immedi": [55, 77, 83, 88, 89], "i_over_sigma": 55, "reflection_table_selector": 55, "subsampl": 55, "neighbor": 55, "imping": 55, "tune": [55, 84, 88, 89], "thereof": 55, "irradi": 55, "kapton": 55, "tape": 55, "vertic": [2, 55, 80], "merge_n_imag": 56, "image_prefix": 56, "sum_": 56, "get_raw_data_from_imageset": 56, "modif": [56, 94], "bypass": 56, "miss": [57, 75, 76, 83, 86, 91], "asymmetr": [57, 79, 96], "min_component_s": 57, "orientation_decomposit": [58, 64], "e1": [58, 64], "e3": [58, 64], "relative_to_static_orient": [58, 64], "decomposit": [58, 64], "ignore_shadow": 59, "buffer_s": 59, "buffer": [59, 74], "visualis": 60, "reverse_phi": 60, "crystal_fram": 60, "beam_centre_panel": 60, "z_min": 60, "z_max": 60, "n_min": 60, "n_max": 60, "partiality_min": 60, "partiality_max": 60, "outlier_displai": 60, "inlier": 60, "experiment_id": 60, "black_background": 60, "show_beam_vector": 60, "show_reciprocal_cel": 60, "label_nearest_point": 60, "marker_s": [60, 70], "autospin": 60, "model_view_matrix": 60, "black": 60, "white": [60, 96, 97, 99], "n_static_macrocycl": 61, "include_unused_reflect": 61, "unus": 61, "purpos": [61, 76, 79, 83, 84, 85, 88, 89, 94], "parameter_t": 61, "correlation_plot": [61, 72, 85], "matplotlib": [61, 72], "later": [61, 72, 75, 89, 90], "replot": [61, 72], "triclin": [62, 72, 76, 77, 84, 88, 89, 90], "bravais_setting_1": [62, 84, 88], "bravais_setting_": 62, "lepage_max_delta": 62, "cc_n_bin": 62, "crystal_id": [62, 87], "external_depend": 64, "remot": [64, 81], "emb": 64, "pixels_per_bin": 64, "40": [64, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 98], "relocat": 64, "inflat": 64, "centroid_diff_max": 64, "centroid_diff_x": [64, 83], "centroid_diff_i": [64, 83], "motiv": [65, 84, 85, 88], "refelct": 65, "previou": [65, 77, 78, 83, 84, 86, 88, 89], "1_integr": 65, "2_integr": 65, "integrated_2": [65, 74, 77, 90], "overwrite_existing_model": 65, "reset_error_model": 65, "cut_data": [65, 86], "scaling_opt": 65, "check_consistent_index": 65, "cross_valid": 65, "deltacchalf": [65, 74, 76], "max_cycl": [65, 74], "max_percent_remov": [65, 74], "min_complet": [65, 74, 78], "image_group": [65, 74, 76], "group_siz": [65, 74, 76], "stdcutoff": [65, 74], "scale_and_filter_result": 65, "dataset_select": 65, "relative_b_correct": 65, "resolution_depend": 65, "quadrat": 65, "dose": [65, 74, 83], "1e6": 65, "fix_initi": 65, "reliabl": [65, 75, 84, 86, 88, 90], "weakli": [65, 83], "needl": 65, "protein": [65, 75, 76, 77, 84, 85, 97], "absorb": 65, "100um": 65, "1a": 65, "5e5": 65, "filepath": 65, "use_internal_vari": 65, "delete_integration_shoebox": 65, "discard": 65, "randomli": [65, 74, 84, 86, 88, 99], "min_group": 65, "2000": [65, 74, 84, 87], "50000": [65, 75], "min_parti": [65, 74, 84, 86, 88], "midpoint": 65, "rmea": [65, 76, 78, 81, 84, 86, 88, 89, 90], "joint_analysi": 65, "weighting_schem": 65, "invvar": 65, "uniti": [65, 80], "reweight": 65, "min_ih": [65, 76], "oppos": 65, "target_cycl": 65, "only_save_target": 65, "target_model": 65, "target_mtz": 65, "use_free_set": 65, "free": [65, 74, 75, 76, 79, 81, 84, 85, 88, 92, 97, 99], "overbias": 65, "alongisd": 65, "free_set_percentag": 65, "free_set_offset": 65, "gn": [65, 97], "lm": [65, 97], "outlier_zmax": [65, 89], "cross_validation_mod": 65, "cross": [65, 76, 77, 84, 86, 88], "docstr": 65, "discreet": 65, "parameter_valu": 65, "nfold": 65, "fold": 65, "repetit": 65, "scaling_refineri": 65, "refinement_ord": 65, "rmsd_toler": 65, "full_matrix_engin": 65, "cchalf": [65, 74], "\u03b4cc\u00bd": [65, 74, 76, 78, 86], "go": [48, 55, 65, 71, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "150": [48, 55, 65, 71, 74, 75, 81, 83, 84, 86, 87, 88, 89], "250": [48, 55, 65, 71, 74, 78, 83, 84, 86, 88], "use_dataset": 65, "et": [66, 74, 75, 81, 86], "al": [66, 74, 81, 86], "plot_search_scop": 66, "max_reflect": [66, 67], "10000": [66, 80], "show_shared_model": 67, "show_all_reflection_data": 67, "show_intens": 67, "show_centroid": 67, "show_profile_fit": 67, "show_flag": 67, "show_identifi": 67, "image_statist": 67, "show_correct": 67, "show_raw": 67, "resolution_analysi": 69, "split_json": 69, "joint_json": 69, "stereograph": [70, 78], "hkl_limit": 70, "expand_to_p1": 70, "eliminate_sys_abs": 70, "indexed_1": 70, "indexed_2": 70, "phi_angl": 70, "use_starting_angl": 70, "plane_norm": 70, "save_coordin": 70, "label_indic": 70, "font_siz": 70, "colour_map": 70, "gridsiz": 70, "systematic_abs": 71, "significance_level": 71, "signfic": 71, "axial": [71, 90], "corrplot": [72, 85], "refined_cel": [72, 90], "p4p": [72, 78, 90], "filter_integrated_centroid": 72, "combine_crystal_model": [72, 74], "xprep": [72, 75, 90], "refine_bravais_set": [73, 75, 76, 77, 79, 80, 84, 87, 88, 89, 90], "two_theta_refin": [73, 74, 78, 90], "multiplex": [73, 82, 97], "image_view": [73, 75, 76, 77, 79, 80, 83, 84, 88, 89], "reciprocal_lattice_view": [73, 76, 78, 79, 80, 83, 84, 88, 89, 90], "generate_mask": [73, 75, 77], "check_indexing_symmetri": [73, 80], "search_beam_posit": [73, 80], "plot_scan_varying_model": [73, 76], "find_spots_serv": 73, "client": 73, "apach": 73, "apply_mask": 73, "estimate_gain": 73, "estimate_resolut": [73, 74, 78, 86], "merge_cbf": 73, "export_bitmap": 73, "slice_sequ": 73, "spot_counts_per_imag": 73, "stereographic_project": 73, "combine_experi": [73, 83, 85, 95], "align_cryst": 73, "anvil_correct": 73, "missing_reflect": 73, "filter_reflect": 73, "printabl": 73, "adob": 73, "browser": [73, 75, 78, 84, 86, 88], "click": [73, 75, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 93], "Or": [73, 93], "tab": [73, 78, 86, 89], "pathologi": 74, "isomorph": [74, 78, 85], "preliminari": 74, "cite": 74, "2022": [74, 86, 94, 97], "d78": [74, 86], "752": [74, 75, 86, 97], "769": [74, 75, 86, 97], "integrated_1": [74, 77, 90, 98], "brotat": 74, "secondari": 74, "resolve_indexing_ambigu": 74, "rescale_after_resolution_cutoff": 74, "multi_crystal_analysi": 74, "min_multipl": 74, "cluster_method": 74, "cos_angl": 74, "remove_profile_fitting_failur": 74, "resolv": [74, 76, 78, 84, 88, 89], "rescal": [74, 84, 88], "author": 75, "jessica": 75, "bruhn": 75, "nanoimag": 75, "servic": [75, 94], "thermofish": 75, "glacio": 75, "tem": 75, "ceta": 75, "camera": 75, "leginon": 75, "deposit": 75, "ccdc": 75, "biotin16": 75, "p2": [75, 84, 88], "featur": [75, 76, 77, 79, 85, 92], "cheng": 75, "negro": 75, "jf": [75, 97], "rice": 75, "wj": 75, "dallakyan": 75, "eng": 75, "dg": [75, 77, 97], "potter": 75, "carragh": 75, "sci": [75, 97], "2021": [75, 76, 97], "pmid": [75, 76, 77, 97], "33030237": 75, "pmc": [75, 76, 77, 97], "reprint": [75, 76, 77, 97], "pmc7737759": 75, "microcryst": [75, 76, 97], "pharmaceut": 75, "industri": 75, "lesson": 75, "learn": [75, 76, 83], "fifti": 75, "scapin": 75, "mercado": 75, "bq": 75, "ganesh": 75, "bn": 75, "nieusma": 75, "lucier": 75, "kw": 75, "mayer": 75, "chiang": 75, "nj": 75, "poweleit": 75, "mcgilvrai": 75, "pt": 75, "mashor": 75, "hennessi": 75, "thomson": 75, "wang": 75, "front": 75, "mol": 75, "biosci": 75, "648603": 75, "34327213": 75, "pmc8313502": 75, "801406_1": 75, "801574_1": 75, "802003_1": 75, "810542_1": 75, "magnif": 75, "footprint": 75, "yellow": 75, "pictur": 75, "tilt": 75, "movi": 75, "neg": [75, 77, 78, 81, 86], "valuabl": 75, "smv": [75, 76], "beyond": [75, 84, 88, 89, 96], "benefici": [75, 89], "leginon_offset": 75, "suggest": [75, 76, 78, 81, 83, 84, 85, 87, 88, 90], "image_pedest": 75, "plug": [75, 77], "dxtbx_ed_format": [75, 77], "formatsmvcetad_tui": 75, "img": [75, 76, 80, 85], "980": [75, 84], "editor": [75, 76, 85], "viewer": [2, 75, 76, 77, 79, 80, 83, 84, 88, 89, 90], "slider": [75, 84, 88], "zoom": [75, 76, 78, 79, 84, 88], "weaker": [75, 79], "mous": [75, 76, 89], "beamstop": 75, "friedel": [75, 80, 84, 88], "draw": 75, "bottom": [75, 76, 80, 89], "red": [75, 76, 84, 88, 89], "1059": 75, "988": [75, 84, 87, 88], "diamet": 75, "max_spot": 75, "consum": [75, 85], "26": [75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 97, 98], "zinger": [75, 85], "27": [75, 77, 79, 80, 83, 84, 85, 86, 87, 88], "160": [75, 84, 86, 87, 88], "276": [75, 84, 86, 88], "347": [75, 84, 88], "598": [75, 88], "584": [75, 88], "483": [75, 84, 88], "506": [75, 77, 84, 88, 97], "327": [75, 80, 83, 84, 88], "422": [75, 78, 84, 86, 88], "17": [75, 76, 78, 81, 83, 84, 85, 86, 87, 88, 97], "286": [75, 83, 84, 86, 87, 88], "19": [41, 75, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 97], "328": [75, 76, 81, 84, 88], "21": [75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90], "142": [75, 78, 84, 86, 88], "189": [75, 84, 87, 88], "23": [41, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88], "140": [75, 78, 83, 84, 86, 88], "24": [75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 97], "424": [75, 84, 88], "1031": [75, 88], "735": [75, 84, 86, 88], "419": [75, 76, 84, 88], "374": [75, 84, 88], "29": [75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 98], "670": [75, 88], "718": [75, 88], "32": [75, 77, 78, 83, 84, 85, 86, 87, 88, 98], "evid": [75, 76, 78, 79], "mental": 75, "carefulli": [75, 76, 78], "microscop": [75, 77], "nref": [75, 76, 80, 83, 84, 85, 86, 87, 88, 89], "rmsd_z": [75, 76, 80, 83, 84, 85, 87, 88], "8365": 75, "34229": 75, "okai": [75, 76, 85], "1101": [75, 84], "299": [75, 84, 85, 86, 88], "chiral": [75, 76, 84, 86, 88], "ap": [75, 76, 79, 80, 81, 84, 87, 88], "p21": [75, 88], "p222": [75, 87, 90], "p2221": 75, "p21212": 75, "p212121": 75, "4889": 75, "08": [75, 78, 83, 84, 86, 87, 88, 97], "763": [75, 86, 87], "873": [75, 84], "990": [75, 84, 86], "1112": 75, "4856": 75, "798": 75, "979": [75, 84, 87, 88], "1114": 75, "074": [75, 78, 86, 87], "996": [75, 78, 80, 84, 85, 86, 88], "1115": 75, "4718": 75, "068": [75, 84, 86, 87, 89], "1009": [75, 84], "062": [75, 81, 84, 86, 88], "989": [75, 84], "33": [75, 77, 78, 79, 83, 84, 85, 86, 87, 88, 98], "1121": [75, 84, 88], "straightforward": [75, 78, 79, 90], "doubt": 75, "addsym": 75, "platon": 75, "great": [75, 79, 89], "orthorhomb": [75, 77, 79, 80], "decreas": [75, 76, 83, 84, 85, 86, 87, 88, 89], "significantli": [75, 84, 86, 88, 89, 98], "890": 75, "79025": 75, "1428": [75, 84], "24032": 75, "mind": 75, "incomplet": [75, 76, 77, 90], "wait": 75, "scroll": [75, 89], "bring": [75, 78, 85], "focu": [75, 78, 87, 92, 96], "orang": 75, "uptick": 75, "suboptim": [75, 86], "1022": [75, 84], "992": [75, 78, 86, 87], "831": [75, 78, 83, 84, 86], "1026": [75, 84], "986": [75, 86, 87], "791": 75, "1024": 75, "998": [75, 81, 84, 86, 88, 89], "1619": [75, 88], "715": [75, 84, 88], "43": [75, 80, 81, 83, 84, 85, 86, 87, 88], "149": [75, 78, 81, 84, 86, 88], "071": [75, 78, 79, 84, 86, 87, 88], "033": [75, 78, 80, 84, 86, 89], "032": [75, 81, 84, 86, 88, 90], "77": [75, 76, 77, 80, 81, 83, 84, 86, 87, 88, 89], "19032": 75, "8498": 75, "2916": [75, 83], "2178": 75, "636": [75, 88], "fed": 75, "reprocess": [75, 88, 89], "rememb": [75, 80, 83, 85], "saw": 75, "129": [75, 78, 80, 84, 86, 88], "101": [75, 79, 84, 86, 88], "128": [75, 78, 80, 83, 84, 86, 88], "011": [75, 84, 86, 88], "39": [75, 79, 80, 83, 84, 85, 86, 87, 88, 98], "007": [75, 84, 90], "56": [75, 77, 79, 80, 83, 84, 85, 86, 88], "57": [75, 76, 80, 81, 83, 84, 85, 86, 87, 88], "19159": 75, "2937": [75, 84], "8531": 75, "49": [75, 83, 84, 85, 86, 87, 88, 90, 97], "had": [75, 79, 83, 84, 85, 86, 88, 89], "fairli": [75, 76, 77, 80, 83, 84, 88, 89], "ob": [75, 84, 86, 87, 88, 97], "uniq": [75, 84, 86, 87, 88], "mult": [75, 84, 86, 87, 88], "comp": [75, 84, 86, 87, 88], "si": [75, 84, 86, 87, 88], "r_mrg": [75, 84, 86, 87, 88], "r_mea": [75, 84, 86, 87, 88], "r_pim": [75, 84, 86, 87, 88], "r_anom": [75, 84, 86, 88], "cc_ano": [75, 84, 86, 87, 88], "86": [75, 84, 86, 87, 88], "97": [41, 75, 76, 78, 80, 81, 83, 84, 86, 87, 88, 89, 97], "87": [75, 78, 80, 83, 84, 85, 86, 87, 88], "104": [75, 76, 77, 84, 86, 87, 88, 89], "109": [75, 83, 84, 86, 87, 88, 97], "085": [75, 78, 86, 87], "994": [75, 78, 86], "69": [41, 75, 83, 84, 86, 87, 88, 89, 97], "158": [75, 78, 83, 84, 88], "164": [75, 78, 84, 86, 88], "044": [75, 86], "935": 75, "161": [75, 78, 84, 86, 88], "169": [75, 78, 84, 86, 87, 88], "046": [75, 78, 86, 87], "114": [75, 84, 86, 87, 88], "983": [75, 84, 86, 87], "1013": [75, 84], "71": [41, 75, 76, 81, 83, 84, 85, 86, 87, 88, 97], "265": [75, 80, 83, 84, 86, 88], "067": [75, 78, 86, 88, 90], "966": [75, 84, 86], "523": [75, 84, 86, 88], "865": [75, 84], "63": [75, 76, 83, 84, 86, 87, 88], "73": [41, 75, 76, 83, 84, 85, 86, 88], "277": [75, 84, 86, 88], "288": [75, 84, 86, 88], "076": [75, 77, 78, 84, 86, 87, 90], "225": [75, 78, 84, 87, 88], "051": [75, 77, 78, 84, 86, 87], "970": 75, "76": [75, 76, 80, 81, 83, 84, 86, 87, 88, 97], "307": [75, 83, 84, 88], "322": [75, 78, 84, 86, 88], "091": [75, 80, 86, 87, 89], "213": [75, 78, 84, 86, 88], "816": [75, 84, 86], "612": [75, 88], "65": [75, 80, 83, 84, 86, 87, 88], "310": [75, 84, 88], "323": [75, 84, 86, 88], "259": [75, 80, 83, 84, 88], "881": [75, 84, 87, 88], "306": [75, 84, 88], "09": [75, 76, 78, 80, 81, 83, 84, 86, 87, 88, 97], "993": [75, 76, 78, 84, 86, 87], "393": [75, 84, 88], "408": [75, 84, 88], "272": [75, 78, 80, 84, 88], "965": 75, "167": [75, 80, 84, 86, 88], "920": [75, 84, 86], "58": [75, 83, 84, 85, 86, 87, 88, 90], "428": [75, 84, 88], "442": [75, 84, 88], "110": [75, 84, 86, 88], "915": 75, "078": [75, 78, 80, 81, 87, 88], "607": [75, 80, 84, 88], "155": [75, 78, 83, 84, 86, 88], "842": [75, 80, 84], "856": [75, 84], "61": [75, 76, 83, 84, 86, 87, 88], "622": [75, 78, 83, 84, 88], "647": [75, 88], "166": [75, 84, 86, 87, 88, 98], "520": [75, 84, 88], "931": [75, 78], "910": [75, 84, 86], "246": [75, 78, 84, 85, 88], "628": [75, 84, 86, 88], "495": [75, 84, 86, 88], "876": 75, "70": [75, 76, 78, 84, 86, 87, 88, 97], "964": [75, 84, 88], "004": [41, 75, 78, 84, 86, 87], "268": [75, 80, 83, 84, 88], "696": [75, 88], "333": [75, 83, 84, 88], "261": [75, 80, 84, 86, 88, 97], "751": [75, 84], "62": [75, 80, 84, 86, 88, 97], "146": [75, 83, 84, 86, 88], "326": [75, 84, 86, 88], "805": [75, 84], "491": [75, 84, 86, 88, 97], "324": [75, 83, 84, 86, 88], "88": [75, 76, 80, 83, 84, 86, 87, 88], "631": [75, 76, 78, 87, 88], "556": [75, 88], "648": [75, 84, 88], "505": [75, 84, 86, 88], "224": [75, 83, 84, 88], "554": [75, 88], "572": [75, 88], "503": [75, 81, 84, 86, 88], "459": [75, 84, 88], "251": [75, 84, 86, 88, 90], "260": [75, 77, 83, 84, 88], "050": [75, 78, 84, 86, 88, 89], "513": [75, 84, 88], "673": [75, 84, 88], "371": [75, 78, 84, 86, 87, 88], "427": [75, 84, 88], "48": [75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 97], "808": [75, 84, 88], "947": [75, 78, 84, 86], "666": [75, 78, 88], "389": [75, 78, 84, 88], "423": [75, 84, 88], "817": [75, 84, 86], "054": [75, 78, 86, 88], "099": [75, 88, 90], "173": [75, 76, 84, 88], "285": [75, 84, 86, 88], "312": [75, 84, 88], "477": [75, 84, 88], "003": [75, 84, 86], "432": [75, 84, 88], "15798": 75, "1361": [75, 83, 84], "257": [75, 80, 81, 84, 88], "111": [75, 76, 78, 83, 84, 86, 88, 97], "968": [75, 86, 88], "94": [75, 76, 78, 83, 84, 86, 87, 88, 89, 98], "116": [75, 80, 84, 88], "034": [75, 81, 86], "995": [75, 78, 84, 87, 88], "080": [75, 76, 78, 84, 86, 87], "961": [75, 86], "54": [75, 76, 83, 84, 85, 86, 87, 88], "170": [75, 78, 84, 86, 88], "045": [75, 78, 86, 87], "075": [75, 78, 81, 86, 87], "492": [75, 83, 84, 86, 88], "178": [75, 80, 84, 86, 88], "185": [75, 78, 84, 86, 88, 89], "1034": [75, 84], "960": [75, 77, 84], "365": [75, 78, 84, 86, 88], "891": [75, 84, 88], "332": [75, 84, 88], "090": [75, 78, 87, 88], "906": [75, 84, 86, 88], "148": [75, 78, 83, 84, 86, 88], "1003": [75, 84], "364": [75, 83, 84, 88], "379": [75, 84, 88], "267": [75, 83, 84, 87, 88], "708": [75, 84, 88], "932": [41, 75, 84, 86], "34": [75, 78, 80, 83, 84, 85, 86, 87, 88], "361": [75, 84, 88], "096": [75, 86, 88], "296": [75, 84, 86, 88], "905": [75, 84], "020": [75, 78, 81, 84, 86, 88], "439": [75, 78, 84, 88], "455": [75, 76, 84, 86, 87, 88], "302": [75, 84, 86, 88], "242": [75, 81, 84, 86, 87, 88, 97], "937": [41, 75, 84, 86, 87, 88], "493": [75, 84, 88], "121": [75, 78, 79, 80, 84, 86, 88], "812": [75, 84], "1081": [75, 83], "672": [75, 84, 88], "699": [75, 78, 84, 88], "180": [75, 78, 84, 86, 88], "739": [75, 79], "879": [75, 84], "710": [75, 84, 88], "736": [75, 79, 84, 88], "184": [75, 84, 86, 88], "264": [75, 84, 86, 88], "951": [75, 77, 84, 86], "249": [75, 84, 86, 88], "481": [75, 84, 88], "571": [75, 84, 88], "105": [75, 84, 86, 87, 88], "897": [75, 84, 86], "082": [75, 76, 78, 86, 87], "124": [75, 76, 78, 80, 84, 86, 87, 88], "294": [75, 83, 84, 88], "796": 75, "386": [75, 84, 88], "760": [75, 84, 87], "262": [75, 77, 84, 85, 86, 88], "642": [75, 88], "777": [75, 84], "866": [75, 78, 86], "544": [75, 88], "208": [75, 80, 84, 88], "514": [75, 77, 84, 88], "190": [75, 81, 84, 86, 88], "593": [75, 88], "706": [75, 84, 88], "827": 75, "605": [75, 88], "290": [75, 84, 88], "089": [75, 78, 87], "538": [75, 84, 88], "195": [75, 80, 84, 86, 88], "744": 75, "534": [75, 78, 83, 88], "289": [75, 84, 88], "436": [75, 84, 88], "314": [75, 84, 86, 88], "799": [75, 84], "353": [75, 80, 84, 88], "363": [75, 84, 86, 88], "472": [75, 83, 84, 88], "794": [75, 84, 87, 88], "137": [75, 76, 84, 86, 87, 88, 90], "052": [75, 78, 86, 87, 88], "291": [75, 76, 84, 88], "041": [75, 78, 83, 86, 88], "519": [75, 78, 80, 83, 84, 88], "851": [75, 84], "350": [75, 84, 88], "490": [75, 78, 84, 88], "16205": 75, "1373": [75, 88], "266": [75, 80, 84, 88], "072": [75, 78, 86, 87, 88], "201": [75, 78, 83, 84, 88], "127": [75, 78, 80, 83, 84, 86, 88], "lot": [75, 78, 83, 87, 89], "954": [75, 80, 84], "077": [75, 78, 81, 86, 87, 98], "028": [75, 78, 80, 84, 86, 87], "168": [75, 84, 86, 88, 90], "991": [75, 84, 86, 88, 90], "957": [75, 86], "186": [75, 78, 81, 84, 88], "971": [75, 83, 84, 85, 86], "053": [75, 86, 87, 89], "1017": [75, 84], "073": [75, 78, 86, 88], "177": [75, 83, 84, 86, 88], "956": [75, 77, 87], "203": [75, 83, 84, 86, 87, 88], "885": [75, 86], "334": [75, 84, 88], "908": [75, 84], "017": [75, 84, 86], "359": [75, 78, 84, 85, 88], "375": [75, 84, 88, 89], "102": [75, 84, 86, 87, 88], "722": [75, 84], "331": [75, 78, 80, 83, 84, 87, 88], "914": [75, 84, 88], "366": [75, 78, 83, 84, 88], "295": [75, 84, 88], "900": [75, 84], "452": [75, 76, 84, 88], "304": [75, 84, 86, 88], "870": 75, "475": [75, 84, 88], "122": [75, 78, 80, 84, 86, 88], "761": 75, "397": [75, 84, 88], "1072": 75, "637": [75, 76, 78, 85, 88], "663": [75, 88], "394": [75, 83, 84, 87, 88], "775": [75, 86, 87], "869": [75, 84], "714": [75, 88], "741": 75, "560": [75, 86, 87, 88], "608": [75, 88], "175": [75, 83, 84, 88], "921": [75, 84], "253": [75, 84, 86, 88], "486": [75, 84, 88, 97], "755": [75, 84], "151": [75, 78, 83, 84, 86, 87, 88], "888": [75, 84], "059": [75, 84, 86, 87, 88, 89], "746": [75, 76, 80, 84, 86, 88], "471": [75, 84, 88], "421": [75, 78, 84, 87, 88], "911": [75, 84], "218": [75, 84, 88], "629": [75, 84, 88], "635": [75, 88], "719": [75, 86, 88], "507": [75, 84, 88], "550": [75, 84, 88], "023": [75, 78, 84, 86, 90], "679": [75, 88], "800": [75, 84], "602": [75, 78, 80, 84, 88], "315": [75, 78, 84, 88], "212": [75, 80, 84, 86, 88], "147": [75, 84, 88], "529": [75, 87, 88], "107": [75, 76, 84, 86, 88], "790": [75, 88], "577": [75, 84, 88], "223": [75, 84, 88], "429": [75, 76, 83, 84, 88], "274": [75, 83, 84, 88], "802": [75, 83, 84], "318": [75, 84, 86, 88], "569": [75, 86, 87, 88], "426": [75, 84, 88], "047": [75, 76, 78, 86, 88], "232": [75, 84, 85, 88], "220": [75, 84, 86, 88], "287": [75, 84, 88], "537": [75, 88], "340": [75, 83, 84, 88, 97], "650": [75, 85, 88], "15973": 75, "248": [75, 84, 86, 88], "biotin_p222": 75, "viewhkl": 75, "middl": 75, "variat": [75, 84, 85, 86, 88, 89, 90], "happen": [75, 80, 84, 87, 88, 89], "goe": 75, "to_shelx": [75, 90], "chno": [75, 90], "shelxt": [75, 90], "shelxd": 75, "biotin_p212121": 75, "02501": 75, "19177": 75, "29400": 75, "84910": 75, "0000": [75, 76, 80, 83, 84, 87, 88, 90], "zerr": 75, "00104": [75, 88], "00206": 75, "00417": 75, "latt": 75, "sfac": 75, "64": [75, 76, 77, 80, 83, 84, 86, 88, 98], "plop": 75, "ntry": 75, "hklf": 75, "organ": [75, 90], "m1000": 75, "realli": [75, 78, 83, 85], "ni": 75, "difficulti": [75, 79, 80], "figur": [75, 76, 80, 83, 85], "again": [75, 76, 80, 83, 84, 85, 87, 88, 89, 90, 95], "molecular": [75, 76, 77, 79, 97, 100], "phaser": 75, "freerflag": 75, "solvent": 75, "struggl": 75, "grow": [75, 78, 79], "ones": 75, "luck": 75, "myd88": [76, 82], "tir": [76, 82], "assembli": 76, "micro": [76, 82], "sfx": 76, "insight": [76, 78], "toll": 76, "receptor": 76, "transduct": 76, "articl": 76, "reveal": [76, 79], "femtosecond": [76, 97], "clabber": [76, 77, 97], "mtb": [76, 77, 97], "holm": 76, "muuss": 76, "tw": 76, "vajjhala": 76, "pr": 76, "thygesen": 76, "sj": 76, "mald": 76, "ak": 76, "hunter": 76, "djb": 76, "croll": 76, "ti": 76, "flueckig": 76, "nanson": 76, "jd": 76, "rahaman": 76, "mh": 76, "aquila": 76, "liang": 76, "yoon": 76, "ch": 76, "zhao": [76, 97], "zatsepin": 76, "na": 76, "abbei": 76, "sierecki": 76, "gambin": 76, "stacei": 76, "kj": 76, "darmanin": 76, "kobe": 76, "xu": 76, "nat": [76, 97], "2578": 76, "33972532": 76, "pmc8110528": 76, "reproduc": [76, 77, 79, 84, 85, 88, 89, 94], "sbgrid": 76, "mt": 76, "zou": 76, "myeloid": 76, "differenti": [76, 84, 88, 89], "7beq": 76, "bank": 76, "814": [76, 84], "eighteen": 76, "subdirectori": [76, 78, 86, 88, 89], "prompt": 76, "proc": [76, 77, 97], "dive": 76, "feel": [76, 84, 85, 88], "00001": 76, "00072": 76, "inde": [76, 80, 81], "Near": 76, "formatsmvtimepix_su_516x516": 76, "193": [76, 78, 84, 88], "earlier": [76, 77], "055": [76, 78, 86, 87, 88], "timepix": [76, 77], "\u00b5m": 76, "\u00e5ngstr\u00f6m": 76, "rigor": 76, "despit": [76, 80, 83, 88, 89], "2193": [76, 88], "overwritten": 76, "plai": [76, 84, 88], "blue": [76, 84, 88, 89], "improperli": 76, "photon": [76, 97, 99], "tick": [76, 89], "overlai": 76, "big": [76, 84, 88, 89], "pick": [76, 77, 79, 89], "occur": [76, 77, 84, 88, 89], "ll": [76, 83, 85, 86, 88, 89], "leav": [76, 89], "art": [76, 89], "633": [76, 88], "launch": [76, 89], "But": [76, 86], "782563": 76, "622571": 76, "find_rotation_axi": 76, "627963": 76, "778243": 76, "checkbox": [76, 89], "0251": 76, "simultan": [76, 85, 89, 97], "hardli": 76, "neglig": [76, 84, 88, 94], "wander": 76, "unreason": 76, "latter": [76, 84, 88], "proport": 76, "562": [76, 84, 85, 88], "528": [76, 78, 84, 88], "51747": 76, "67141": 76, "28935": 76, "mi": [76, 80, 83, 97], "4508": 76, "118": [76, 80, 84, 88], "533": [76, 86, 88], "115": [76, 84, 88, 90], "267504": 76, "89": [76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 89], "134383": 76, "knew": 76, "beforehand": 76, "cheat": 76, "paper": [76, 77, 97], "\u03b1": [76, 97], "\u03b3": 76, "favour": [76, 79, 84, 88, 89], "mc": [76, 79, 80, 81, 84, 87, 88, 97], "117": [76, 84, 86, 87, 88], "highli": [76, 85, 99], "bravais_setting_2": [76, 84, 88], "push": 76, "thu": [76, 84, 85, 88, 89], "break": [76, 95], "degeneraci": 76, "awkward": 76, "twist": 76, "sophist": [76, 84, 85, 89], "1843": [76, 88], "prudent": [76, 89], "skip": [76, 98], "drift": [76, 77], "59": [76, 83, 84, 86, 87, 88, 90], "2799": [76, 84], "6495": 76, "7070": 76, "2456": [76, 84, 88], "7603": 76, "6013": 76, "9281": 76, "0053": [76, 84, 88], "3723": 76, "0101": 76, "0321": 76, "0032": 76, "0194": [76, 84], "0051": 76, "0209": 76, "0137": 76, "0044": [41, 76, 86], "0244": 76, "0117": [76, 84, 87], "0082": 76, "0002": [76, 84, 87], "0072": 76, "tell": [76, 79, 83, 85, 89, 95], "won": [76, 78, 83], "4328": [76, 88], "540": [76, 81, 88], "950": [76, 84], "403": [76, 84, 85, 88], "4849": 76, "643": [76, 88, 89], "4917": [76, 83], "335": [76, 78, 84, 86, 88], "ibg": [76, 83, 84, 87, 88], "cc_pearson": [76, 84, 87, 88], "cc_spearman": [76, 84, 87, 88], "rock": 76, "454": [76, 84, 88], "003907": 76, "083698": 76, "came": 76, "chmod": 76, "snapshot": [76, 97, 99], "tend": [76, 77], "pai": [76, 78, 89], "attent": [76, 78, 89], "contrast": [76, 89], "synchrotron": [76, 80, 92, 96, 98, 99], "regard": [76, 89], "3ded": [76, 82], "74": [41, 76, 77, 80, 81, 83, 84, 86, 88, 97], "435": [76, 84, 88], "317": [76, 84, 88], "886": [76, 80, 84, 85, 86], "460": [76, 84, 87, 88], "336": [76, 84, 88], "830": 76, "113": [76, 78, 83, 84, 88], "657": [76, 86, 88], "154": [76, 78, 80, 83, 84, 87, 88], "106": [76, 83, 84, 86, 88], "787": 76, "919": [76, 84, 88], "936": [41, 76, 84, 86], "773": [76, 78, 86], "slope": [76, 78, 81, 84, 86, 88, 89, 90], "015": [76, 81, 86, 88, 89], "df": [76, 78, 84, 86, 88, 89, 90], "di": [76, 78, 84, 86, 88, 89, 90, 97], "811": [76, 84, 87], "36662": 76, "2125": [76, 86], "974": [76, 83, 86], "2705": [76, 88], "144": [76, 78, 84, 88], "xdg": 76, "successfulli": [77, 85], "protocol": [77, 85], "peculiar": 77, "gruen": [77, 97], "jm": [77, 97], "abraham": [77, 97], "jp": [77, 97], "biol": [77, 97], "518": [77, 84, 86, 88, 97], "29872002": [77, 97], "pmc6096487": [77, 97], "2084": 77, "g06727c3": 77, "posix": 77, "compliant": 77, "seven": 77, "gzip": 77, "lys_ed_dataset_": 77, "lys_ed_dataset_1": 77, "shall": [77, 80, 86, 87, 94], "parent": [77, 89], "data_par": 77, "pwd": 77, "minicbf": 77, "unusu": [77, 85], "formatcbfminitimepix": 77, "fi": 77, "outlin": [77, 80, 84, 88], "dummi": 77, "distort": [77, 80, 84, 88, 89], "s2059798317010348": 77, "ellipt": 77, "six": [77, 90], "ellips": 77, "generate_distortion_map": 77, "lys_ed_dataset_2": 77, "frame_value_018": 77, "l1": 77, "l2": 77, "centre_xi": 77, "2475": [77, 87], "subsect": 77, "cat": 77, "018138": 77, "999803": 77, "008012": 77, "3525": [77, 88], "535": [77, 84, 88], "1890": [77, 88], "frame_value_": 77, "tendenc": 77, "recreat": 77, "515": [77, 84, 88], "504": [77, 84, 86, 88], "438": [77, 84, 88], "1615": [77, 88], "309": [77, 84, 88, 97], "2055": 77, "0344": 77, "lys_ed_dataset_3": 77, "0481": 77, "485": [77, 80, 84, 88], "lys_ed_dataset_4": 77, "lys_ed_dataset_5": 77, "305": [77, 84, 88], "952": [77, 84, 88], "lys_ed_dataset_6": 77, "blank": 77, "222": [77, 78, 84, 86, 87, 88], "358": [77, 84, 88], "207": [77, 84, 86, 88], "lys_ed_dataset_7": 77, "833": [77, 84, 87], "stabilis": 77, "tau_2": 77, "tau_3": 77, "tau2": 77, "tau3": 77, "bravais_setting_5": [77, 79, 87, 88], "poor": [77, 79, 82, 83, 84, 85, 88, 89], "soft": 77, "awai": [77, 83], "did": [77, 79, 83, 85, 99], "impos": [77, 87], "obviou": [77, 84, 85, 88], "refined_experi": 77, "compens": [77, 88], "longer": [77, 83, 84, 85, 86, 87, 88], "itself": [77, 83], "meant": 77, "chose": [77, 83, 89], "integrated_experi": 77, "integrated_3": [77, 90], "integrated_4": [77, 90], "integrated_5": 77, "integrated_6": 77, "integrated_7": 77, "2_1": [77, 79, 86], "declar": 77, "hklin": [77, 88], "integrated_": [77, 85, 95], "sorted_": 77, "pointless_reindex_": 77, "sorted_1": 77, "sorted_2": 77, "sorted_3": 77, "sorted_4": 77, "sorted_5": 77, "sorted_6": 77, "sorted_7": 77, "pointless_combin": 77, "outofsequencefil": 77, "come": [78, 85], "tool": [78, 79, 80, 84, 86, 88, 89, 91, 92], "cumbersom": 78, "dispos": [78, 80], "kindli": [78, 80], "school": 78, "spring": 78, "bl32xu_group2_data": 78, "zoo": 78, "9m": 78, "tetragon": [78, 83], "lysozym": 78, "outset": 78, "care": [78, 83, 84, 85, 88, 89], "dozen": 78, "hundr": 78, "organis": [78, 101], "yourself": 78, "sweep00": 78, "sweep30": 78, "combine0": 78, "spell": 78, "printf": 78, "02d": [78, 85], "ten": 78, "somewher": 78, "p4": [78, 83, 98], "mmm": 78, "0012": [78, 88], "00078": 78, "00062": 78, "00047": 78, "081": [78, 84, 86, 87, 88], "946": [78, 84], "93": [78, 80, 83, 84, 86, 87, 88, 90, 97], "2189": 78, "2723": [78, 88], "firefox": [78, 86], "graphic": [78, 84, 88, 89], "critic": [78, 83, 99], "275": [78, 84, 86, 88], "156": [78, 84, 86, 88], "063": [78, 83, 84, 87, 88, 89, 90], "141": [78, 84, 86, 87, 88], "134": [78, 80, 83, 84, 86, 87, 88], "130": [78, 80, 84, 88], "525": [78, 83, 84, 88, 97], "163": [78, 84, 88], "064": [78, 86, 87], "061": [78, 84, 86, 87, 88], "165": [78, 84, 86, 88], "278": [78, 83, 84, 86, 87, 88], "039": [78, 84, 86, 87, 88], "095": [78, 87, 88, 90], "167233": 78, "9155": 78, "8507": 78, "247651": 78, "22555": 78, "1278": [78, 84, 88], "1104": [78, 83, 84, 87], "42048": 78, "enthusiast": 78, "676": [78, 88], "588": [78, 87, 88], "131": [78, 80, 83, 84, 88], "801": 78, "823": 78, "060": [78, 81, 86], "864": [78, 86], "370": [78, 83, 84, 88], "258": [78, 83, 84, 88], "087": [78, 84, 86], "094": [78, 84, 86], "158400": 78, "8650": 78, "8072": 78, "21401": 78, "1212": [78, 86], "1054": 78, "worth": [78, 80, 84, 85, 86, 87, 88, 89], "227": [78, 83, 84, 87, 88], "793": 78, "749": [78, 86], "084": [78, 84, 86, 88], "892": [78, 88], "021": [78, 80, 84, 86, 87], "728": [78, 84], "026": [78, 86, 88, 89], "018": [78, 84, 86], "997": [78, 84, 86, 87, 88], "240": [78, 84, 88], "086": [78, 86, 88], "549": [78, 83, 84, 88], "301412": 78, "16640": 78, "15140": 78, "321968": 78, "20324": 78, "1149": 78, "21649": 78, "somehow": 78, "compute_delta_cchalf": [78, 86], "625": [78, 88], "599": [78, 84, 86, 88], "254": [78, 80, 83, 84, 88], "056": [78, 86, 87, 88], "463": [78, 84, 88], "508": [78, 84, 86, 87, 88], "527": [78, 84, 88], "758": [78, 83, 84], "770": 78, "843": [78, 88], "854": [78, 84], "898": [78, 84], "705": [78, 81, 84, 88], "delta_cc_half": [78, 86], "3674101744536096": 78, "stddev": [78, 86], "1112402970091422": 78, "0775510135829585": 78, "139": [78, 84, 87, 88], "238": [78, 83, 84, 88], "038": [78, 87, 98], "482": [78, 84, 88], "196": [78, 84, 86, 88], "153": [78, 80, 83, 84, 86, 88], "316": [78, 84, 86, 87, 88], "088": [78, 86, 87, 88], "522": [78, 80, 84, 88], "300879": 78, "16563": 78, "15320": 78, "304888": 78, "21363": 78, "1203": [78, 84], "21637": 78, "textrm": [78, 83], "pim": [78, 86, 87], "069": [78, 86, 87], "135": [78, 83, 84, 88], "448": [78, 84, 88], "619": [78, 88], "092": 78, "255800": 78, "14071": 78, "13145": 78, "21540": 78, "1061": [78, 84], "realist": 78, "revisit": 78, "198": [78, 84, 88], "239": [78, 84, 86, 87, 88, 97], "025": [78, 84, 86, 88, 90], "639": [78, 88], "231": [78, 83, 84, 86, 88], "626": [78, 88, 97], "415898": 78, "22943": 78, "21222": 78, "21636": 78, "1220": [78, 88], "1065": [78, 84], "252": [78, 83, 84, 86, 88], "319": [78, 84, 88], "400": [78, 83, 84, 87, 88], "461": [78, 84, 88], "674": [78, 88], "724": 78, "824": 78, "097": [78, 86, 87], "187": [78, 84, 88], "321": [78, 84, 86, 88], "042": [78, 86, 87], "083": [78, 84, 86], "019": [78, 84, 86, 88, 89], "973": [78, 84, 87], "226": [78, 84, 88], "616": [78, 85, 86, 88], "400223": 78, "22084": 78, "20368": 78, "21639": 78, "1221": [78, 84, 86, 88], "1063": [78, 84], "chanc": [78, 84, 88, 89, 98], "snow": 78, "blind": 78, "ceas": 78, "blame": 78, "substructur": 78, "far": [78, 83, 85, 90], "focuss": 78, "someth": [78, 80, 84, 85, 88], "outward": [78, 80], "xia": 78, "manner": [78, 84, 88, 89, 98], "mplex": 78, "tricki": 78, "question": [78, 80, 82, 86], "risk": 78, "situ": [78, 85, 86], "repeatedli": 78, "dot": [78, 84, 88], "visibl": [78, 84, 88, 89], "appar": [78, 83, 88, 89], "detract": 78, "touch": 78, "rapidli": 78, "mayb": 78, "ran": [78, 85], "cluster_20": 78, "27_dial": 78, "multiplicities_h_0": 78, "two_theta_refine_2theta": 78, "27_refined_cel": 78, "multiplicities_k_0": 78, "28_dial": 78, "28_scale": 78, "multiplicities_l_0": 78, "28_scaled_unmerg": 78, "29_dial": 78, "highlight": [78, 89], "thought": [79, 80], "solv": [79, 80, 84, 88, 89, 90], "late": 79, "warn": [79, 80, 85, 86, 88], "pipelin": [79, 81, 84, 86, 88, 97], "accordingli": 79, "ctruncat": [79, 88], "nc": [79, 86], "face": [79, 83, 92], "spend": 79, "notic": [79, 83, 84, 88, 89, 94], "subtl": 79, "suspect": [79, 80], "central": [79, 81, 83], "5th": 79, "odd": 79, "theori": [79, 94], "easi": [79, 84, 85, 88, 89], "a222": 79, "unconvent": 79, "839": [79, 85], "20000": [79, 80, 84, 88], "oc": [79, 80, 81, 87, 88], "678848": 79, "678373": 79, "678914": 79, "338728": 79, "338516": 79, "mimick": 79, "exercis": [79, 80], "diagnost": [79, 80], "isol": 79, "onward": 79, "rebuild": 79, "5i3l": 79, "contrari": 79, "firstli": 79, "pseudo": [79, 86], "dimer": 79, "superpos": 79, "wors": [79, 83, 84, 85, 86, 88, 89], "disord": 79, "undergon": 79, "transit": 79, "thorough": 79, "ultim": 79, "thank": [79, 80, 85], "wolfram": [79, 80], "tempel": [79, 80], "andrei": 79, "lebedev": 79, "versu": [79, 84, 88, 89], "pseudocentr": 80, "dealt": 80, "pernici": 80, "outright": 80, "careless": 80, "useless": [80, 85], "cautionari": 80, "tale": 80, "moral": 80, "xvf": 80, "dpf3_247398": 80, "x247398": 80, "t1": 80, "unrecognis": 80, "asid": 80, "whatev": [80, 84, 85, 88, 89], "keen": 80, "ei": 80, "button": [80, 84, 88, 89], "worri": [80, 83, 89], "neat": [80, 83], "spiral": 80, "grossli": 80, "understand": [80, 84, 87, 88, 89, 99], "inaccur": 80, "succe": 80, "word": 80, "straight": [80, 83, 84, 88, 89], "increasingli": 80, "imagin": 80, "unwarp": 80, "98416": 80, "6552": 80, "4345": 80, "23317": 80, "119": [80, 83, 84, 86, 88, 98], "682": [80, 88], "experienc": 80, "paus": 80, "66": [80, 83, 84, 86, 87, 88, 89, 97], "sceptic": 80, "messi": 80, "messier": 80, "heed": 80, "7490": 80, "hp": [80, 97], "1702991": 80, "043": [80, 81, 84, 86, 88], "057": [80, 84, 86], "215": [80, 84, 86, 88], "3484342": 80, "601": [80, 84, 88], "027": [80, 84, 86, 88], "214": [80, 84, 88], "53": [80, 81, 83, 84, 85, 86, 87, 88], "3466356": 80, "3289": [80, 87], "564": [80, 86, 88], "3297608": 80, "3233": [80, 88], "040": [80, 86, 88, 89], "3624346": 80, "210": [80, 84, 88, 89], "3205385": 80, "1761030": 80, "2564": [80, 88], "437": [80, 84, 88], "3358310": 80, "1535": [80, 88], "3057089": 80, "0684": 80, "031": [80, 84, 86, 87, 88], "204": [80, 84, 88], "91": [80, 84, 86, 87, 88], "2949728": 80, "6885": 80, "3288791": 80, "19928": 80, "1576060": 80, "jump": [80, 88], "rough": 80, "latch": 80, "bragg": 80, "offer": [80, 99], "dh": 80, "dk": 80, "2996": 80, "171": [80, 84, 86, 87, 88], "3151": 80, "241": [80, 83, 84, 86, 88], "3147": 80, "2924": 80, "159": [80, 84, 85, 86, 88], "3097": [80, 88], "3232": [80, 88], "2729": 80, "2904": [80, 88], "3139": 80, "1573": [80, 88], "2876": 80, "2992": 80, "3135": [80, 88], "2851": 80, "3005": [80, 88], "3156": 80, "339": [80, 81, 84, 88], "2792": 80, "244": [80, 84, 86, 88], "3073": 80, "283": [80, 84, 88], "3718": 80, "symop": 80, "culprit": 80, "badli": [80, 89], "sit": 80, "macrocyl": [80, 84, 88, 89], "dp": [80, 89, 97], "old": 80, "1562": [80, 84, 88], "1508": [80, 85, 88], "152": [80, 83, 84, 86, 88], "1560": [80, 88], "1490": [80, 88], "162": [80, 83, 84, 85, 86, 88], "1584": [80, 88], "1498": [80, 88], "convinc": 80, "50948": 80, "56722": 80, "20791": 80, "62669": 80, "521": [80, 83, 84, 88], "9765": 80, "9914": 80, "0028": 80, "0250": 80, "679306": 80, "0237": 80, "679612": 80, "679516": 80, "0091": [80, 84, 87], "678570": 80, "678646": 80, "foreseen": 80, "earli": [80, 85], "circumv": 80, "topic": 80, "wrongli": 80, "life": 80, "encount": [80, 81, 85], "excel": 80, "troubleshoot": 80, "manifest": 80, "insidi": 80, "nightli": [81, 93], "mx": [81, 84, 86, 88, 90, 99], "dials_tutori": 81, "i04_thaumatin": 81, "dev20191028": 81, "python2": 81, "dls_sw": 81, "app": 81, "clibd": 81, "lib": 81, "ccp4_scr": 81, "tmp": 81, "tmp4xxusn": 81, "thaumatin": [81, 83], "4229": 81, "gb": [81, 83, 84, 88], "cs03r": 81, "sc": 81, "serv": 81, "contact": 81, "gmail": 81, "g73f70f18": 81, "1038": [81, 84], "gf37b0db7a": 81, "sweep1": 81, "120152": 81, "2197": 81, "tp": [81, 87], "ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo": 81, "oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo": 81, "ok": [81, 89, 90], "abandon": 81, "97625": 81, "th_8_2_": 81, "13_integr": 81, "070": [81, 88], "356": [81, 84, 88], "035": [81, 86, 87, 88, 89], "012": [81, 86, 87, 88, 90], "321472": 81, "25415": 81, "70801": 81, "4729": [81, 88], "78346": 81, "9943": 81, "automatic_default_fre": 81, "mtz_unmerg": 81, "automatic_default_scaled_unmerg": 81, "took": [81, 83, 85], "00h": 81, "06m": 81, "citat": [81, 86], "bibtex": [81, 86], "bib": [81, 86], "winn": 81, "235": [81, 84, 87, 88], "love": 81, "hear": 81, "sourceforg": [81, 92], "dui": 82, "introductori": 82, "molecul": 82, "sar": 82, "cov": 82, "proteas": 82, "mpro": 82, "dpf3": 82, "tile": [82, 84, 88, 89], "blend": 82, "biotin": 82, "analyse_output": 83, "characteris": 83, "p6m": 83, "isn": 83, "mechan": [83, 85], "workaround": 83, "p6m_60_panel": 83, "thaum_m10s15_3_": 83, "matur": 83, "adxv": [83, 88], "albula": 83, "360": [83, 84, 88, 89], "supercel": 83, "plenti": 83, "q1": [83, 84, 85, 88], "med": [83, 84, 85, 88, 97], "q3": [83, 84, 85, 88], "xo": [83, 84, 85, 88], "04261": 83, "0004832": 83, "0424": 83, "yo": [83, 84, 85, 88], "697": [83, 84, 88], "03481": 83, "001733": 83, "03682": 83, "656": [83, 88], "phic": [83, 84, 85, 88], "phio": [83, 84, 85, 88], "9645": 83, "06454": 83, "0007655": 83, "06379": 83, "8353": 83, "133": [83, 84, 86, 88], "18025": 83, "067273": 83, "063827": 83, "086195": 83, "067369": 83, "063706": 83, "086197": 83, "067439": 83, "063629": 83, "086155": 83, "067531": 83, "063529": 83, "086115": 83, "067587": 83, "063456": 83, "086122": 83, "067607": 83, "063419": 83, "067617": 83, "063401": 83, "086176": 83, "06762": 83, "063395": 83, "086181": 83, "39314": 83, "36858": 83, "24623": 83, "53322": 83, "82846": 83, "14379": 83, "37822": 83, "43153": 83, "26887": 83, "297": [83, 84, 85, 86, 88], "41585": 83, "40848": 83, "26118": 83, "5563": 83, "40867": 83, "27493": 83, "49115": 83, "43483": 83, "21656": [83, 88], "41713": 83, "46071": 83, "27804": [83, 87], "44932": 83, "51832": 83, "26569": 83, "33153": 83, "28766": 83, "25461": 83, "478": [83, 84, 88], "38555": 83, "40525": 83, "26244": 83, "47338": 83, "45054": 83, "24652": 83, "40191": 83, "959": [83, 84, 87, 88], "2976": 83, "701": [83, 86, 88], "31004": 83, "3035": [83, 88], "24597": 83, "1128": [83, 86], "37366": 83, "24303": 83, "24016": 83, "33404": 83, "32094": 83, "24614": 83, "50746": 83, "47124": 83, "27169": 83, "40185": 83, "56122": 83, "3029": 83, "745": 83, "21926": 83, "30075": 83, "21426": 83, "17864": 83, "17706": 83, "2176": [83, 84], "778": 83, "36795": 83, "21167": 83, "20696": 83, "269": [83, 84, 86, 88], "44757": 83, "40028": 83, "23809": 83, "48078": 83, "65283": 83, "34241": 83, "467": [83, 84, 88], "37577": 83, "35789": 83, "20992": 83, "22329": 83, "29697": 83, "20943": 83, "447": [83, 84, 88], "36708": 83, "22722": 83, "20176": 83, "28466": 83, "52795": 83, "31729": 83, "36377": 83, "1547": 83, "70452": 83, "14842": 83, "29869": 83, "23437": 83, "13375": 83, "17175": 83, "1222": [83, 84, 88], "14108": 83, "17261": 83, "40725": 83, "85708": 83, "42044": 83, "60805": 83, "57195": 83, "43388": 83, "281": [83, 84, 88], "18353": 83, "21351": 83, "2061": 83, "19984": 83, "15417": 83, "1993": 83, "15006": 83, "27665": 83, "21823": 83, "44084": 83, "50436": 83, "38365": 83, "86526": 83, "47248": 83, "32568": 83, "54992": 83, "31614": 83, "19036": 83, "22611": 83, "12494": 83, "21894": 83, "624": [83, 84, 88], "23105": 83, "20793": [83, 86], "22246": 83, "43408": 83, "43312": 83, "2724": 83, "55289": 83, "3935": 83, "26933": 83, "29543": 83, "24331": [83, 87], "23127": 83, "771": 83, "46252": 83, "19655": 83, "2348": 83, "658": [83, 87, 88], "24901": 83, "31232": 83, "24217": 83, "44994": 83, "43547": 83, "28695": 83, "5679": 83, "44719": 83, "23983": 83, "44117": 83, "44019": 83, "24586": 83, "592": [83, 84, 88], "3056": [83, 88], "44653": 83, "24795": 83, "411": [83, 84, 88], "67885": 83, "39219": 83, "2588": 83, "45355": 83, "5659": 83, "2611": 83, "0009": [83, 88], "46232": 83, "21423": 83, "72162": 83, "36619": 83, "23884": 83, "51574": 83, "48569": 83, "2488": 83, "41145": 83, "40151": 83, "2671": [83, 88], "5362": 83, "50568": 83, "21454": 83, "85351": 83, "57076": 83, "24389": 83, "72428": 83, "38373": 83, "27121": 83, "80208": 83, "98469": 83, "27939": 83, "5144": 83, "3281": 83, "30346": 83, "33371": 83, "50058": 83, "24425": 83, "192715": 83, "834": [83, 88], "022": [83, 84, 86], "4122": 83, "9018": 83, "1299": [83, 88], "2361": [83, 84], "0320": 83, "9712": 83, "8800": 83, "4310": [83, 88], "0173": 83, "0067": 83, "0071": 83, "0156": [83, 84], "0041": [83, 84, 88], "0006": 83, "0065": 83, "0152": 83, "0075": 83, "quarter": [83, 86, 89], "quicker": 83, "yet": [83, 84, 85, 88, 89], "use_all_reflect": 83, "refined_lev0": 83, "487": [83, 84, 86, 87, 88], "04174": 83, "000276": 83, "03468": 83, "00168": 83, "03656": 83, "654": [83, 86, 88], "06627": 83, "002108": 83, "6375": 83, "2933": 83, "04128": 83, "167e": 83, "04112": 83, "3725": 83, "4707": [83, 86], "03376": 83, "001821": 83, "03588": 83, "4945": 83, "6965": 83, "06574": 83, "002213": 83, "06229": 83, "7919": 83, "186203": 83, "064091": 83, "057786": 83, "086136": 83, "064045": 83, "057829": 83, "08608": 83, "063949": 83, "05791": 83, "086068": 83, "063825": 83, "058023": 83, "086026": 83, "063734": 83, "058114": 83, "085958": 83, "063682": 83, "058167": 83, "085909": 83, "063654": 83, "058198": 83, "085887": 83, "063645": 83, "058208": 83, "085882": 83, "063644": 83, "05821": 83, "37002": 83, "33843": 83, "24538": 83, "47216": 83, "59331": 83, "22352": 83, "1363": [83, 88], "35019": 83, "46301": 83, "26549": 83, "3076": 83, "4128": 83, "40658": 83, "26659": 83, "1630": [83, 84, 88], "39692": 83, "25547": 83, "112": [83, 84, 87, 88], "39711": 83, "42575": 83, "23841": 83, "35145": 83, "51263": 83, "25474": 83, "3489": 83, "3238": 83, "48667": 83, "25694": 83, "6172": [83, 84], "30869": 83, "27402": 83, "25323": 83, "3908": 83, "37309": 83, "38322": 83, "25577": 83, "680": [83, 88], "46698": 83, "44533": 83, "24812": 83, "1178": [83, 84], "33544": 83, "51129": 83, "26289": [83, 86], "5690": 83, "28409": 83, "29009": 83, "24376": 83, "9385": 83, "36731": 83, "23495": 83, "23873": 83, "6878": 83, "31962": 83, "31088": 83, "23691": 83, "1749": [83, 88], "43068": 83, "47078": 83, "25696": 83, "1870": [83, 87], "29306": 83, "46181": 83, "26494": 83, "6328": 83, "19137": 83, "29002": 83, "21465": 83, "7599": 83, "17418": 83, "1739": [83, 84], "22093": 83, "7072": 83, "36776": 83, "18662": 83, "20821": 83, "2609": 83, "37377": 83, "42663": 83, "24206": 83, "1806": 83, "40342": 83, "57026": 83, "32007": 83, "4247": 83, "35488": 83, "34512": 83, "19181": 83, "3558": 83, "21403": 83, "30996": 83, "20695": 83, "4103": 83, "36559": 83, "19154": 83, "17851": 83, "2270": [83, 87], "25744": 83, "48077": 83, "26616": 83, "480": [83, 84, 88], "38505": 83, "0035": [83, 87, 88], "73284": 83, "930": 83, "15033": 83, "26661": 83, "34611": 83, "11836": 83, "19105": 83, "18709": 83, "11907": 83, "25901": 83, "30046": 83, "41024": 83, "95027": 83, "72705": 83, "1478": [83, 88], "56625": 83, "3835": [83, 88], "34664": 83, "3216": [83, 88], "16373": 83, "19856": 83, "19257": 83, "2826": 83, "20149": 83, "14689": 83, "19485": 83, "3285": 83, "12942": 83, "30274": 83, "20848": 83, "1965": [83, 88], "38874": 83, "45564": 83, "38875": 83, "1934": [83, 84, 88], "61707": 83, "35339": 83, "25067": 83, "55413": 83, "29556": 83, "19246": 83, "5992": 83, "2137": [83, 88], "12029": 83, "21502": 83, "6589": 83, "2254": 83, "21047": 83, "21193": 83, "2763": [83, 88], "39851": 83, "41673": 83, "27272": 83, "1512": [83, 84, 88], "50654": 83, "36893": 83, "25051": 83, "6476": 83, "28308": 83, "21635": 83, "22668": 83, "9212": 83, "40577": 83, "18283": 83, "2252": [83, 84], "7521": 83, "22936": 83, "29881": 83, "23864": 83, "2392": 83, "40816": 83, "42881": 83, "2751": [83, 88], "611": [83, 86, 88], "56917": 83, "48084": 83, "26191": 83, "4379": [83, 88], "42672": 83, "42447": 83, "25285": 83, "7749": 83, "29309": 83, "4378": 83, "24631": 83, "5470": 83, "67537": 83, "37528": 83, "25187": 83, "1210": [83, 85, 88], "42778": 83, "53938": 83, "27266": 83, "92194": 83, "45501": 83, "24629": 83, "2235": [83, 88], "71785": 83, "33424": 83, "25781": 83, "41055": 83, "38155": 83, "25735": 83, "2757": 83, "44268": 83, "40149": 83, "26646": 83, "52856": 83, "51306": 83, "28205": 83, "60967": 83, "26482": 83, "1507": [83, 84, 88], "70752": 83, "67612": 83, "25844": 83, "786": [83, 84, 88], "53669": 83, "50635": 83, "27127": 83, "43205": 83, "65796": 83, "25585": 83, "backstop": 83, "thrown": 83, "notabl": 83, "hieararchy_level": 83, "lcl": 83, "deep": 83, "refined_lev1": 83, "never": 83, "rate": [83, 85, 89, 99], "underwai": [83, 96], "minut": [83, 85, 86, 99], "desktop": [83, 85], "i7": [83, 85], "cpu": [83, 85, 99], "07ghz": [83, 85], "ram": 83, "496": [83, 84, 88], "04178": 83, "0004518": 83, "04222": 83, "903": [83, 86], "03577": 83, "0006705": 83, "576": [83, 84, 88], "06467": 83, "0007391": 83, "06414": 83, "6433": 83, "04138": 83, "0001204": 83, "3683": [83, 88], "4838": [83, 84], "0008164": 83, "03518": 83, "6969": 83, "06416": 83, "0008647": 83, "06351": 83, "7644": 83, "186145": 83, "063617": 83, "058127": 83, "085801": 83, "056976": 83, "05538": 83, "085719": 83, "049808": 83, "052619": 83, "085597": 83, "04634": 83, "051408": 83, "085475": 83, "045568": 83, "051142": 83, "085391": 83, "04538": [83, 84], "051014": 83, "085337": 83, "045228": 83, "050729": 83, "085285": 83, "045054": 83, "050076": 83, "085215": 83, "044868": 83, "049034": 83, "085115": 83, "044746": 83, "048167": 83, "085025": 83, "044708": 83, "047833": 83, "08498": 83, "044695": 83, "047759": 83, "084969": 83, "04468": 83, "047738": 83, "084967": 83, "044668": 83, "047726": 83, "044662": 83, "047721": 83, "04466": [83, 84], "047719": 83, "25965": 83, "27743": 83, "24276": 83, "32036": 83, "57819": 83, "22482": 83, "34304": 83, "4111": [83, 84], "26504": 83, "3079": [83, 88], "3561": 83, "36483": 83, "26682": 83, "1632": [83, 87, 88], "37843": 83, "37838": 83, "25453": 83, "39065": 83, "39675": 83, "23706": 83, "30539": 83, "48132": 83, "25442": 83, "3490": [83, 88], "29682": 83, "35249": 83, "25661": 83, "6178": 83, "28525": 83, "27486": 83, "25318": 83, "3909": 83, "31728": 83, "30551": 83, "25565": 83, "675": [83, 84, 88], "39465": 83, "42802": 83, "24507": 83, "1175": [83, 84], "30057": 83, "46365": 83, "26215": 83, "5685": 83, "23485": 83, "27143": 83, "24326": 83, "9386": 83, "20171": 83, "18887": 83, "23872": 83, "6880": 83, "23494": 83, "23081": 83, "23689": 83, "1746": [83, 84, 88], "31911": 83, "40137": 83, "25357": 83, "27575": 83, "44911": 83, "26334": 83, "6321": 83, "18338": 83, "21691": 83, "21382": 83, "7608": 83, "14673": 83, "13459": 83, "22118": 83, "7075": 83, "15323": 83, "1772": [83, 84], "20816": 83, "2608": 83, "27977": 83, "40106": 83, "23663": 83, "1803": 83, "24748": 83, "54944": 83, "31271": 83, "4249": 83, "15151": 83, "21436": 83, "18971": 83, "3560": 83, "11336": 83, "12431": 83, "20676": 83, "10087": 83, "16239": 83, "17534": 83, "2271": 83, "20061": 83, "46907": 83, "24929": 83, "476": [83, 84, 88], "26774": 83, "94809": 83, "69743": 83, "927": [83, 84], "10167": 83, "22193": 83, "33398": 83, "097735": 83, "13559": 83, "1876": [83, 86], "977": [83, 84, 86, 87], "069491": 83, "1907": 83, "29589": 83, "19349": 83, "91362": 83, "67233": 83, "1474": [83, 84, 88], "31601": 83, "36268": 83, "32879": 83, "3209": 83, "13728": 83, "15038": 83, "18643": 83, "2829": 83, "10162": 83, "11078": 83, "19453": 83, "3276": [83, 88], "10363": 83, "17357": 83, "2043": 83, "1951": 83, "20521": 83, "4038": 83, "36983": 83, "1931": 83, "37408": 83, "28915": 83, "24379": 83, "5869": 83, "18862": 83, "14476": 83, "1912": [83, 88, 97], "5991": 83, "13887": 83, "11716": 83, "21506": 83, "6591": 83, "15001": 83, "19861": 83, "21179": 83, "25238": 83, "36458": 83, "26476": 83, "1511": [83, 88], "47841": 83, "27181": 83, "24826": 83, "6461": 83, "27368": 83, "18468": 83, "22587": 83, "9213": 83, "19848": 83, "15776": [83, 84], "22531": 83, "21923": 83, "24706": 83, "2383": 83, "2390": 83, "32645": 83, "40052": 83, "27085": 83, "55212": 83, "29673": 83, "26008": 83, "38894": 83, "24988": 83, "25198": 83, "7747": 83, "2824": 83, "2289": 83, "29905": 83, "31716": 83, "25135": 83, "41311": 83, "47572": 83, "2691": [83, 84, 88], "69191": 83, "39228": 83, "2447": 83, "2231": 83, "47797": 83, "32129": 83, "25717": 83, "38899": 83, "31331": 83, "25676": 83, "2758": [83, 88], "39246": 83, "40955": 83, "26575": 83, "48186": 83, "52671": 83, "2798": 83, "57234": 83, "42803": 83, "2643": 83, "494": [83, 84, 85, 87, 88], "41177": 83, "25741": 83, "48028": 83, "48906": 83, "26898": 83, "39499": 83, "38962": 83, "2466": 83, "mv": 83, "analysis_lev0": 83, "analysis_lev1": 83, "rewrit": 83, "incorpor": [83, 100], "tutorial_data": [83, 88], "th_8_2": 83, "53916": 83, "26341": 83, "21858": 83, "sv_refin": 83, "1093": 83, "1100": 83, "984": [83, 84, 88], "2317": 83, "2331": 83, "2138": 83, "3776": [83, 88], "3803": 83, "3581": 83, "5416": 83, "5450": 83, "5100": 83, "7235": 83, "7289": 83, "6806": 83, "9504": 83, "9567": 83, "8952": 83, "12495": 83, "12582": 83, "11826": 83, "16967": [83, 84], "17078": 83, "16125": 83, "20187": 83, "20340": 83, "19437": 83, "23623": 83, "23881": 83, "22761": 83, "24126": 83, "271": [83, 84, 86, 88], "24397": 83, "23289": 83, "25506": 83, "25787": 83, "24863": 83, "24269": 83, "24510": 83, "23389": 83, "24780": 83, "25018": 83, "24019": 83, "25710": 83, "25988": 83, "25059": 83, "24757": 83, "25031": 83, "24000": 83, "25673": 83, "25925": 83, "25119": 83, "25214": 83, "25511": 83, "24607": 83, "25766": 83, "303": [83, 84, 86, 88], "26069": 83, "25226": 83, "338720": 83, "4747": 83, "331984": 83, "317541": 83, "uncorrect": [83, 84, 86, 88, 89], "misorient": 83, "bewar": 83, "forgiv": 83, "corrected_refin": 83, "snippet": 83, "4049": 83, "688": [83, 84, 88], "019202": 83, "28874": 83, "30251": 83, "045937": 83, "045205": 83, "4701": 83, "02988": 83, "01025": 83, "02159": 83, "6902": 83, "7267": 83, "02846": 83, "005739": 83, "02339": 83, "247": [83, 84, 86, 88], "01035": 83, "562e": 83, "01104": 83, "4029": 83, "2382": 83, "1148": [83, 86], "02997": 83, "01092": 83, "01966": 83, "1397": [83, 88], "02791": 83, "005742": 83, "02263": 83, "2531": 83, "1881": 83, "009998": 83, "0001419": 83, "0109": [83, 84], "1176": 83, "53738": 83, "04524": [83, 84], "04251": 83, "015875": 83, "043495": 83, "041514": 83, "015395": 83, "042657": 83, "040762": 83, "01535": 83, "040455": 83, "038826": 83, "015287": 83, "0356": 83, "034575": 83, "015251": 83, "028146": 83, "027998": 83, "015246": 83, "021919": 83, "022913": 83, "015245": 83, "019867": 83, "021931": 83, "015256": 83, "019579": 83, "02202": 83, "015267": 83, "019553": 83, "02204": 83, "015269": 83, "019552": 83, "022041": 83, "11368": 83, "12815": 83, "10179": 83, "18212": 83, "28586": 83, "12145": 83, "15295": 83, "24972": 83, "12934": 83, "609": [83, 88], "1286": [83, 84, 88], "21324": 83, "12291": 83, "1243": [83, 84], "21443": 83, "10878": 83, "1189": [83, 84, 86, 88], "14339": 83, "19084": 83, "10244": 83, "2389": 83, "097393": 83, "16185": 83, "1550": [83, 88], "084417": 83, "14168": 83, "098364": 83, "14653": 83, "17253": 83, "11116": 83, "21387": 83, "15463": 83, "10746": 83, "2728": [83, 84], "11345": 83, "15427": 83, "081722": 83, "4265": 83, "060489": 83, "096919": 83, "2952": [83, 88], "07167": 83, "092076": 83, "093342": 83, "565": [83, 88], "1626": [83, 87, 88], "11391": 83, "11975": 83, "18454": 83, "16728": 83, "16016": 83, "2772": 83, "092555": 83, "12647": 83, "076534": 83, "2873": 83, "047736": 83, "10398": 83, "090391": 83, "2686": 83, "063075": 83, "074814": 83, "075038": 83, "729": 83, "16869": 83, "11128": 83, "14306": 83, "81495": 83, "29087": 83, "44711": 83, "406": [83, 84, 88], "080441": 83, "12121": 83, "098888": 83, "425": [83, 84, 87, 88], "052654": 83, "15365": 83, "0754": 83, "06931": 83, "066238": 83, "073655": 83, "85448": 83, "22713": 83, "24889": 83, "579": [83, 84, 87, 88], "21735": 83, "11564": 83, "18439": 83, "1994": 83, "061756": 83, "09509": 83, "068866": 83, "1924": 83, "091952": 83, "11146": 83, "083513": 83, "2166": 83, "088252": 83, "10009": 83, "085247": 83, "13737": 83, "16646": 83, "1872": 83, "634": [83, 84, 86, 88], "16379": 83, "093519": 83, "12164": 83, "2835": 83, "067371": 83, "080697": 83, "081958": 83, "3737": [83, 88], "094318": 83, "086918": 83, "10408": [83, 84], "2806": 83, "098988": 83, "13001": 83, "082836": 83, "417": [83, 84, 87, 88], "17099": 83, "18814": 83, "12774": 83, "20834": 83, "14785": 83, "10324": 83, "1817": 83, "082715": 83, "1174": [83, 86], "10219": 83, "2385": 83, "1096": [83, 84], "12543": 83, "10965": 83, "1589": [83, 88], "12167": 83, "17861": 83, "099929": 83, "21088": 83, "2111": [83, 88], "10221": 83, "19222": 83, "16491": 83, "16288": 83, "094714": 83, "15589": 83, "1232": [83, 85, 86], "1047": [83, 84, 85], "11775": 83, "17961": 83, "12234": 83, "12735": 83, "22443": 83, "11915": 83, "11972": 83, "18238": 83, "11037": 83, "12845": 83, "24552": 83, "1396": 83, "corrected_sv_refin": 83, "corrected_integr": 83, "343": [83, 84, 86, 87, 88], "1125": 83, "1131": [83, 84], "1011": [83, 84], "2346": 83, "2359": 83, "3800": 83, "3565": [83, 84], "5448": 83, "5485": 83, "5123": 83, "7241": 83, "7293": 83, "6804": 83, "9522": 83, "9593": 83, "8986": 83, "12528": 83, "12612": 83, "11851": 83, "16954": 83, "17067": 83, "16130": 83, "20247": 83, "20401": 83, "19499": 83, "23553": 83, "23820": 83, "22740": 83, "24022": 83, "24289": 83, "23215": 83, "25479": 83, "25765": 83, "24860": 83, "24305": 83, "24546": 83, "23395": 83, "24742": 83, "236": [83, 84, 88], "24978": 83, "23965": 83, "25657": 83, "25938": 83, "24999": 83, "24755": 83, "25023": 83, "24005": 83, "25596": 83, "25846": 83, "25058": 83, "25140": 83, "298": [83, 84, 88], "25438": 83, "24540": 83, "25720": 83, "26023": 83, "25193": 83, "338446": 83, "4836": 83, "331750": 83, "317393": 83, "nicer": 83, "artefact": 83, "sigma_i": [83, 84, 88, 89], "d_": 83, "mid": 83, "modular": 83, "satisfi": [83, 89], "dave": [83, 99], "hall": [83, 97], "pcm": 84, "0102340": 84, "xchem": 84, "fragment": 84, "screen": [84, 88], "campaign": 84, "i04": [84, 87, 88, 89], "x0692": 84, "5rel": 84, "5281": 84, "zenodo": [84, 90], "3730940": 84, "mx27124": 84, "dials_data": 84, "mpro_x0692": 84, "x0692_1_0": 84, "num": [84, 85, 87, 88], "\u2460": [84, 88], "marker": [84, 88], "\u2461": [84, 88], "omit": [84, 88], "1424": [84, 88], "1578": 84, "1555": [84, 88], "1634": [84, 88], "1590": 84, "1533": [84, 88], "1773": 84, "1920": [84, 88], "1873": [84, 87], "1743": 84, "1923": 84, "2118": 84, "2179": 84, "1838": [84, 88], "2168": [84, 88], "2128": 84, "2363": 84, "2597": 84, "2275": 84, "2157": [84, 88], "2565": 84, "2623": 84, "2604": 84, "2438": 84, "2474": 84, "2613": [84, 88], "2594": [84, 88], "2503": [84, 88], "2499": [84, 85], "2585": 84, "2706": 84, "2532": 84, "2576": 84, "2424": 84, "2177": 84, "2352": [84, 88], "2439": [84, 88], "2259": 84, "2377": 84, "2284": 84, "2381": [84, 88], "2183": 84, "2512": [84, 87], "2313": 84, "2272": [84, 87], "2327": 84, "2234": [84, 88, 89], "2298": 84, "2342": [84, 88], "2513": 84, "2494": [84, 87], "2557": 84, "2388": 84, "2290": 84, "2316": 84, "2071": 84, "2069": [84, 88], "2268": 84, "2247": 84, "2187": 84, "2266": 84, "2243": [84, 88], "2260": [84, 88], "2237": [84, 87], "2253": 84, "1969": 84, "2299": 84, "2351": 84, "2319": [84, 88], "2145": 84, "2371": [84, 88], "2332": [84, 88], "2194": 84, "1995": [84, 99], "2333": [84, 88], "2238": 84, "2063": [84, 85], "2099": 84, "2129": 84, "2312": 84, "2236": 84, "1930": [84, 88], "1752": [84, 88], "1792": 84, "1798": [84, 88], "1762": [84, 88], "1452": [84, 88], "1729": [84, 88], "1782": [84, 88], "1795": [84, 88], "1787": [84, 88], "1703": [84, 88], "1536": [84, 88], "1621": [84, 88], "108": [84, 86, 87, 88, 90], "1522": 84, "1473": [84, 85, 88], "1651": 84, "1454": [84, 85, 88], "1401": 84, "1623": [84, 88], "1704": 84, "1372": 84, "1276": [84, 88], "1281": [84, 88], "1399": [84, 85, 88], "1419": [84, 88], "1476": [84, 88], "1487": 84, "1477": [84, 85, 88], "1505": [84, 88], "1495": 84, "1351": [84, 88], "1325": [84, 88], "1365": 84, "1500": [84, 88], "1345": [84, 88], "1414": [84, 88], "1264": [84, 88], "1165": 84, "1185": 84, "138": [84, 87, 88], "1219": [84, 88], "1226": [84, 86, 88], "1202": 84, "1032": 84, "143": [84, 86, 88], "1086": [84, 85], "1347": [84, 88], "1214": [84, 88], "1186": [84, 88], "1166": 84, "923": 84, "1126": 84, "1109": 84, "1191": [84, 86, 88], "1266": 84, "868": 84, "877": [84, 97], "1058": 84, "1005": 84, "1060": [84, 85], "1132": 84, "1223": [84, 88], "1020": 84, "174": [84, 86, 88], "176": [84, 86, 87, 88], "179": [84, 88], "181": [84, 86, 88], "933": [41, 84, 86], "182": [84, 86, 87, 88, 97], "922": [84, 86, 88], "183": [84, 86, 88], "188": [84, 86, 88], "1090": 84, "191": [84, 88, 98], "1006": 84, "1014": 84, "197": [84, 86, 87, 88], "857": 84, "904": [84, 87], "1097": [84, 85], "202": [84, 88], "1130": [84, 85, 88], "826": 84, "206": [84, 88], "737": [84, 86], "901": [84, 88], "209": [84, 86, 88], "1043": 84, "216": [84, 88], "867": 84, "217": [84, 86, 88], "785": 84, "909": [84, 88, 89], "221": [84, 86, 88, 98], "1069": 84, "896": 84, "228": [84, 86, 88], "229": [84, 88], "969": [84, 86, 87], "804": 84, "233": [84, 88], "234": [84, 88], "887": [84, 86, 89], "829": 84, "860": 84, "237": [84, 87, 88], "893": [84, 87, 88], "958": [84, 86], "243": [84, 86, 88], "859": 84, "907": [84, 88], "945": [84, 86], "940": 84, "918": [84, 86], "972": [84, 88], "1025": 84, "1041": [84, 87], "813": 84, "1045": 84, "1042": [84, 85], "878": [84, 86], "889": [84, 86], "934": [41, 84, 86], "270": [84, 88], "1010": 84, "928": [84, 86, 88], "273": [84, 86, 88], "846": [84, 86], "963": [84, 86, 88], "1089": 84, "279": [84, 88], "1079": 84, "280": [84, 88, 89], "1067": [84, 88], "1076": [84, 88], "1193": [84, 86], "284": [84, 88], "1001": 84, "944": [84, 85], "293": [84, 88], "1037": 84, "894": [84, 97], "948": [84, 86, 88], "976": [84, 88], "301": [84, 86, 88], "1094": [84, 85, 88], "1056": 84, "1145": 84, "308": [84, 88, 89], "1030": 84, "311": [84, 88], "1140": 84, "313": [84, 86, 87, 88], "981": [84, 85, 87], "1141": 84, "1309": [84, 88], "1257": [84, 88], "1233": [84, 86, 88], "1225": 84, "1238": [84, 86, 88], "320": [84, 88], "1253": [84, 88], "1068": [84, 90], "1240": [84, 88], "325": [84, 86, 88], "1429": [84, 85, 88], "1204": [84, 88], "1258": [84, 86, 88], "329": [84, 86, 88], "1384": [84, 88], "330": [84, 88], "1241": 84, "1296": [84, 88], "1666": 84, "337": [84, 88], "1308": [84, 85], "1207": [84, 86], "1447": [84, 88], "1360": 84, "341": [84, 86, 88], "1252": [84, 88], "342": [84, 86, 88], "1440": [84, 88], "1392": 84, "344": [84, 86, 88], "1576": [84, 88], "1616": 84, "1412": 84, "348": [84, 88], "1503": [84, 88], "349": [84, 88], "1479": 84, "1493": [84, 88], "351": [84, 88], "1514": 84, "1625": [84, 88], "1655": [84, 88], "354": [84, 88], "1544": 84, "355": [84, 88], "1430": [84, 85, 88], "1379": [84, 88], "357": [84, 88, 97], "1458": [84, 88], "1598": [84, 88], "1668": [84, 88], "1662": [84, 88], "362": [84, 88, 89], "1848": 84, "1833": 84, "1731": [84, 88], "1648": [84, 88], "1837": [84, 86], "367": [84, 88], "2029": 84, "368": [84, 86, 88], "1853": 84, "369": [84, 87, 88, 97], "1871": [84, 88], "1741": [84, 88], "1842": [84, 88], "372": [84, 87, 88], "1697": [84, 88], "373": [84, 88], "1611": 84, "1563": [84, 85, 88], "376": [84, 88], "1705": [84, 88], "377": [84, 88], "1586": [84, 88], "378": [84, 85, 88], "1883": [84, 88], "1955": 84, "380": [84, 88], "1720": 84, "381": [84, 86, 88], "1742": [84, 88], "382": [84, 86, 88], "1667": 84, "383": [84, 86, 88], "384": [84, 87, 88], "1724": [84, 88], "385": [84, 86, 88, 97], "1661": [84, 88], "1672": [84, 88], "387": [84, 88], "388": [84, 88], "1464": [84, 85, 88], "390": [84, 85, 86, 88], "391": [84, 86, 88, 89], "392": [84, 85, 88], "1592": 84, "395": [84, 88], "396": [84, 88], "1421": [84, 88], "398": [84, 88], "1287": [84, 88], "30376": 84, "7811": 84, "22562": 84, "21740": 84, "newli": [84, 88], "green": [84, 88, 89], "pink": [84, 88], "incorrectli": [84, 88], "\u2462": [84, 88], "preview": [84, 88, 89], "ey": [84, 88, 89], "20836": 84, "rmsd_xy": [84, 88], "131784": 84, "21005": 84, "130920": 84, "20874": 84, "131244": 84, "20815": 84, "130947": 84, "20903": 84, "130988": 84, "20817": 84, "131302": 84, "20905": 84, "131333": 84, "20942": 84, "131615": 84, "20979": 84, "131757": 84, "20988": 84, "131478": 84, "20971": 84, "131699": 84, "20934": 84, "130748": 84, "20887": 84, "131505": 84, "20977": 84, "131181": 84, "20949": [84, 88], "131653": 84, "20929": 84, "131143": 84, "20978": 84, "130878": 84, "131446": 84, "131949": 84, "132001": 84, "20924": 84, "131286": 84, "20982": 84, "131102": 84, "20975": 84, "131553": 84, "20964": 84, "131729": 84, "20986": 84, "130749": 84, "20972": 84, "131689": 84, "20935": 84, "130961": 84, "20990": 84, "131849": 84, "20950": 84, "131547": 84, "20966": 84, "131909": 84, "20958": 84, "131574": 84, "20984": 84, "131360": 84, "21022": 84, "131075": 84, "21001": 84, "131936": 84, "21025": 84, "131503": 84, "20944": [84, 86], "131107": 84, "20976": 84, "20899": 84, "131398": 84, "20985": 84, "131818": 84, "20938": 84, "131032": 84, "21000": 84, "131708": 84, "20936": 84, "131069": 84, "20967": 84, "131138": 84, "20999": 84, "131546": 84, "132052": 84, "20961": 84, "131474": 84, "20941": 84, "131072": 84, "20983": 84, "131363": 84, "131706": 84, "21012": 84, "630": [84, 88], "9000": 84, "4121": 84, "2959": 84, "8170": 84, "4949": 84, "3200": 84, "4034": 84, "8572": 84, "0224": 84, "0187": 84, "0090": 84, "0181": [84, 87], "0193": 84, "0026": 84, "0108": 84, "0153": 84, "0155": [84, 88], "734": [84, 86], "20952": 84, "703": [84, 88, 89], "6229": 84, "3916": 84, "1449": 84, "013": [84, 86, 87, 88, 89], "2842": 84, "2246": 84, "016": [84, 86, 88], "00306": 84, "551": [84, 86, 88], "2347": [84, 88], "18605": 84, "684": [84, 88], "3968": 84, "1734": [84, 85, 88], "9907": 84, "2767": 84, "1807": [84, 88], "5715": 84, "9351": 84, "1436": [84, 86, 88], "001552": 84, "7571": 84, "51841": 84, "26874": 84, "22605": 84, "1268": [84, 88], "10007": 84, "23108": 84, "097838": 84, "098106": 84, "23331": 84, "096656": 84, "096297": 84, "23343": 84, "096506": 84, "095677": 84, "23386": 84, "096504": 84, "095601": 84, "23402": 84, "095596": 84, "23403": 84, "56107": 84, "55579": 84, "46806": 84, "738": 84, "7872": 84, "8996": 84, "4114": 84, "2938": [84, 88], "8183": 84, "4940": 84, "3230": [84, 88], "4014": 84, "8570": 84, "0052": [41, 84, 86], "0040": 84, "0089": 84, "21029": 84, "21163": 84, "9265": 84, "04435": 84, "002579": 84, "05266": 84, "6455": 84, "04679": 84, "003802": 84, "04913": 84, "1087": 84, "05362": 84, "1561": 84, "2632": [84, 88], "18343": 84, "3699": 84, "03984": 84, "003241": 84, "05068": 84, "3939": 84, "03613": 84, "005551": 84, "04528": 84, "4172": 84, "8813": 84, "08308": 84, "05629": 84, "1488": [84, 88], "6562": 84, "080738": 84, "083417": 84, "21845": 84, "079354": 84, "082036": 84, "22074": 84, "07875": 84, "082035": 84, "2202": 84, "078446": 84, "082152": 84, "21934": 84, "078361": 84, "08228": 84, "21896": 84, "078348": 84, "082315": 84, "21889": 84, "078347": 84, "082318": 84, "45551": 84, "47859": 84, "43778": 84, "499": [84, 87, 88], "2255": [84, 87], "7863": 84, "9931": 84, "8997": 84, "4112": 84, "8184": 84, "4015": 84, "0225": 84, "0188": [84, 88], "0195": 84, "0027": 84, "21028": 84, "21054": 84, "685": [84, 88], "20974": 84, "8873": 84, "04424": 84, "00171": 84, "04794": 84, "6379": 84, "717": [84, 88], "05087": 84, "001016": 84, "04519": 84, "1071": 84, "05102": 84, "1496": 84, "18246": 84, "3408": [84, 88], "03953": 84, "002804": 84, "04673": 84, "3899": [84, 88], "04049": 84, "001011": 84, "04132": 84, "412": [84, 87, 88], "8957": 84, "08015": 84, "05445": 84, "6317": 84, "0772": [84, 88], "081515": 84, "21713": 84, "076915": 84, "081075": 84, "21844": 84, "076743": 84, "081138": 84, "2184": 84, "076641": 84, "081227": 84, "21821": 84, "076606": 84, "081288": 84, "21809": 84, "0766": 84, "081303": 84, "21806": 84, "081305": 84, "44535": 84, "4727": 84, "43612": 84, "470": [84, 88], "7854": 84, "2936": 84, "3229": [84, 87], "0182": [84, 87], "711": [84, 88], "21039": 84, "04434": 84, "001314": 84, "04642": 84, "6643": 84, "0511": 84, "001655": 84, "1074": 84, "04974": 84, "662": [84, 88], "2689": 84, "18285": 84, "3321": [84, 88], "03982": 84, "002306": 84, "3082": [84, 87], "3898": 84, "04183": [84, 88], "738e": 84, "04119": 84, "4075": 84, "9054": 84, "08134": 84, "05293": 84, "1411": [84, 88], "6249": 84, "076424": 84, "081591": 84, "21765": 84, "076361": 84, "081373": 84, "21833": 84, "076313": 84, "081403": 84, "21832": 84, "076281": 84, "081442": 84, "21826": [84, 88], "076268": 84, "081466": 84, "21822": 84, "076266": 84, "081471": 84, "44341": 84, "47367": 84, "43642": 84, "2250": [84, 88], "7844": 84, "9899": 84, "21027": 84, "21033": 84, "20973": 84, "9039": 84, "001238": 84, "04604": 84, "6737": 84, "721": [84, 88], "05114": 84, "001455": 84, "04477": 84, "05018": 84, "1486": 84, "955": 84, "2679": 84, "18294": 84, "3319": 84, "03988": 84, "002168": 84, "04478": 84, "3091": [84, 88], "3894": 84, "04171": 84, "155e": 84, "04124": 84, "4076": [84, 88], "9195": 84, "08125": 84, "05369": 84, "1407": [84, 86, 88], "6192": 84, "076338": 84, "081412": 84, "21795": [84, 86], "076296": 84, "081315": 84, "081329": 84, "076252": 84, "081346": 84, "076246": 84, "081356": 84, "21831": 84, "076245": 84, "081358": 84, "44329": 84, "47301": 84, "43661": 84, "2251": 84, "7837": 84, "9895": 84, "712": [84, 88], "captur": [84, 85, 88, 89], "gone": [84, 88, 89], "why": [84, 88, 99], "256\u00b3": [84, 88, 89], "eventu": [84, 88, 89], "domin": [84, 88, 89], "unabl": [84, 88], "didn": [84, 85, 88, 89], "irrespect": 84, "0252": 84, "743": 84, "18268": 84, "259466": 84, "18292": 84, "129876": 84, "bravais_summari": [84, 88], "adher": [84, 88, 89], "propos": [84, 88, 89], "bravais_setting_n": [84, 88], "plausibl": [84, 88], "9033": 84, "04467": 84, "001113": 84, "04686": 84, "6841": 84, "05039": 84, "000498": 84, "0441": 84, "1057": 84, "05334": 84, "4006": 84, "03718": 84, "002731": 84, "0445": [84, 86], "3007": 84, "4479": 84, "03614": 84, "001424": 84, "03842": 84, "4335": 84, "8575": 84, "06504": 84, "05968": 84, "1383": [84, 88], "5736": 84, "069855": 84, "076289": 84, "21058": 84, "069841": 84, "07608": 84, "21094": 84, "069746": 84, "075965": 84, "21131": 84, "069583": 84, "075866": 84, "21178": 84, "069463": 84, "075811": 84, "21212": 84, "069424": 84, "075799": 84, "21221": 84, "069418": 84, "0758": [84, 88], "40359": 84, "4407": 84, "42443": 84, "880": 84, "0373": 84, "3455": 84, "8436": 84, "5477": [84, 86], "1745": 84, "7620": 84, "4018": [84, 88], "5079": [84, 88], "0021": [84, 86], "0231": 84, "0077": 84, "0045": 84, "0154": 84, "0078": 84, "0076": 84, "9124": 84, "0002905": 84, "04459": 84, "695": [84, 88], "05097": 84, "00175": 84, "04269": 84, "05077": 84, "4022": [], "16950": [], "3629": [84, 88], "03772": 84, "002061": [], "0421": 84, "3225": 84, "4409": 84, "03702": 84, "0001993": [], "03677": 84, "4927": 84, "8777": 84, "06567": [], "05753": 84, "1366": [84, 88], "5653": 84, "069571": [], "075489": [], "21208": 84, "058325": [], "069796": [], "18766": 84, "057132": [], "066282": 84, "17174": 84, "05548": [], "062547": 84, "1527": 84, "053552": [], "060443": 84, "13032": 84, "051597": [], "058975": [], "11425": [], "050233": [], "10841": 84, "049665": [], "057789": 88, "04951": [], "057702": 84, "049395": [], "057682": 84, "10611": [], "049289": [], "057678": 84, "10618": [], "049221": [], "057686": [], "049202": [], "057689": [], "10636": [], "057688": 84, "28606": [], "33539": 84, "21272": [], "401": [84, 85, 88], "unphys": [84, 88], "shortli": [84, 88], "lack": [84, 88, 89], "mostli": [84, 88, 89], "9126": 84, "00197242": [], "999998": 84, "14122e": 84, "sensor_pad": [84, 88], "94172": 84, "21948": 84, "999994": 84, "00340502": [], "000208751": [], "00340524": [], "00105736": [], "882": [], "764": 84, "millimet": [84, 88], "t0": [84, 88], "713": [84, 88], "4077": [84, 86], "4790": [], "junk": [84, 88], "1510": 88, "198713": [], "039475": [84, 88], "329180": [], "boundari": [84, 88], "swap": [84, 88], "ulimit": [84, 88], "4641": 84, "4839": [], "4574": 84, "416": [84, 88], "2923": [84, 88], "4483": 84, "4813": [], "4556": 84, "2878": [84, 87], "im": [84, 88], "1231": [84, 86, 88], "561": [84, 87, 88], "2052": [84, 88], "526": [84, 87, 88], "1263": [84, 88], "902": 84, "2105": [84, 88], "858": 84, "759": 84, "1354": [84, 88], "1489": [84, 88], "1301": 84, "1432": [84, 88], "795": 84, "1332": [84, 88], "1273": [84, 88], "1418": [84, 88], "1305": 84, "1209": [84, 86, 88], "1338": [84, 88], "1156": 84, "1188": 84, "837": 84, "1173": 84, "1123": 84, "766": 84, "1103": 84, "1116": 84, "1180": 84, "1078": 84, "586": [84, 88], "661": [84, 88], "618": [84, 88], "1129": [84, 86], "1035": 84, "1106": 84, "1012": 84, "517": [84, 86, 87, 88], "566": [84, 85, 86, 88], "539": [84, 87, 88], "1051": 84, "1039": 84, "531": [84, 88], "511": [84, 88], "1073": 84, "536": [84, 88], "558": [84, 88, 97], "1195": 84, "1099": 84, "1122": 84, "559": [84, 88], "578": [84, 88], "1198": [84, 88], "1167": [84, 88], "1154": 84, "644": [84, 88], "623": [84, 87, 88], "1254": 84, "1334": [84, 85], "1227": 84, "1321": [84, 88], "589": [84, 87, 88], "640": [84, 88], "1340": [84, 88], "1236": [84, 86], "1339": [84, 88], "1298": [84, 88], "1310": 88, "1382": 88, "1269": [86, 88], "704": [88, 89], "1380": [86, 88], "1329": [], "1343": [84, 88], "1415": 88, "1292": [84, 88], "732": [], "693": [85, 88], "1400": 97, "1328": [84, 88], "1279": [], "707": [84, 88], "748": [84, 88], "1420": [84, 88], "1285": [84, 88], "716": [84, 86, 88], "1387": 84, "1451": 84, "1316": 84, "1327": [84, 88], "1391": [84, 88], "1256": [84, 86, 88], "809": 84, "762": 84, "1408": [84, 86, 88], "1491": [84, 88], "1362": [84, 88], "1335": [84, 88], "1417": [84, 88], "1288": [84, 88, 90], "803": 84, "871": [84, 85, 86], "819": [84, 86], "1433": [84, 88], "1530": [84, 88], "1336": [84, 85], "1427": [84, 88], "806": [84, 87], "861": 84, "1425": [84, 88], "1300": [84, 88], "1389": [84, 88], "1534": [84, 88], "1445": [84, 88], "1259": [84, 88], "1385": [84, 88], "1344": [84, 88], "1422": [84, 85], "1208": [84, 86, 88], "1337": [84, 88], "1462": [84, 85, 88], "1199": 84, "1248": [84, 88], "875": 84, "855": 84, "1393": [84, 88], "1182": 84, "835": 84, "1217": [84, 87, 88], "1323": [84, 88], "1242": [84, 88], "774": 84, "1150": 84, "1255": [84, 88], "1095": 84, "1194": 84, "780": 84, "1161": 84, "727": [84, 86, 88], "1172": [84, 85], "1137": 84, "667": [84, 88], "1110": [84, 86], "1092": 84, "1083": [84, 85], "1046": [84, 85], "596": [84, 88], "659": [84, 87, 88], "587": [84, 88], "929": [84, 86], "797": 84, "828": 84, "456": [84, 88], "484": [84, 88], "730": [84, 88], "783": 84, "441": [84, 86, 87, 88], "692": [84, 88], "725": [84, 87], "440": [84, 88], "681": [84, 88], "52199": [], "47641": 84, "47756": 84, "51458": 84, "2535": [], "49664": 84, "47418": 84, "2483": [84, 88], "48975": 84, "xy": [84, 88], "1469": 88, "431": [84, 88], "430": [84, 88], "469": [84, 88], "466": [84, 88], "510": [84, 88], "451": [84, 88], "473": [84, 88], "443": [84, 86, 88], "468": [84, 88], "446": [84, 88], "404": [84, 88], "501": [84, 86, 88], "474": [84, 86, 88], "420": [84, 86, 88], "449": [84, 86, 88], "434": [84, 88], "509": [84, 88], "453": [84, 88], "445": [84, 87, 88], "502": [84, 85, 86, 88], "418": [84, 86, 88], "512": [84, 88], "415": [84, 86, 88], "462": [84, 88], "488": [84, 88], "402": [84, 86, 88], "450": [84, 88], "479": [84, 88], "497": [84, 88], "414": [84, 88], "433": [84, 88], "530": [84, 86, 88, 90], "489": [84, 86, 88], "524": [84, 88], "542": [84, 88], "548": [84, 86, 88], "516": [84, 86, 88], "591": [84, 88], "567": [84, 88], "1082": 84, "1307": [84, 88], "2213": [84, 88], "1963": 84, "2049": [84, 88], "2979": [84, 88], "2473": 84, "2649": 84, "4341": 84, "3734": 84, "3944": 84, "5293": 84, "5649": [84, 85], "8672": 84, "7676": 84, "7975": 84, "9833": 84, "8693": 84, "8970": 84, "10956": 84, "9414": 84, "9838": 84, "12248": 84, "10251": [], "10730": 84, "13279": 84, "11943": 84, "12280": 84, "14619": 84, "12987": 84, "13349": 84, "16875": 84, "14610": 84, "15144": [], "17479": 84, "15719": 84, "16051": 84, "17482": 84, "14510": 84, "15067": 84, "17440": 84, "595": [84, 88], "15812": 84, "16141": [], "17610": 84, "15398": 84, "17776": 84, "570": [84, 88], "15652": 84, "16001": 84, "193373": 84, "6021": [], "52769": 84, "4243": 84, "30000": 84, "2658": 84, "169054": [], "174758": 84, "24296": [], "2309": 84, "22837": 84, "199394": [], "176557": [], "advantag": [84, 85, 88, 89], "lorentz": [84, 88, 89], "anywai": [84, 88, 89], "sigma_d": [84, 88, 89], "167255": 84, "b_cart": [84, 86, 88], "60297": [], "3888": 84, "1283": 84, "3788": 84, "7954": 84, "2227": [84, 85], "unrel": [84, 88], "sd": [84, 88, 90], "50048": [], "852": 84, "49404": [], "law": [84, 88], "macromolecul": [84, 86, 88], "illumin": [84, 86, 88, 89], "unequ": [84, 88, 89], "1654": [84, 85], "176234": [], "00000": [84, 88], "02000": [84, 88], "\u00b2": [84, 86, 88], "a\u00b2": [84, 86, 88], "\u03c3\u00b2": [84, 86, 88], "bi": [84, 86, 88], "asymptot": [84, 86, 88], "2495": [], "dev20220924": [], "futurewarn": [], "iteritem": [], "futur": [96, 99, 100], "172960": 84, "preselect": [84, 88], "174580": [], "174531": [], "173009": 84, "15286": [], "48771": [], "50054": [], "rmsd_i": [84, 86, 88], "49280": [], "88595": [], "8622": [], "71025": [], "65791": [], "62675": [], "61245": [], "57406": [], "55722": [], "55538": [], "55363": [], "55299": [], "55226": [], "55199": [], "5516": [], "55136": [], "55117": [], "55101": [], "55071": [], "55056": [], "55039": [], "55019": [], "54984": [], "54914": [], "54846": [], "54746": [], "54628": [], "54479": [], "54405": [], "54358": [], "54302": [], "54286": [], "54241": [], "54234": [], "54231": [], "99431": [], "09881": [], "99146": [], "12652": [], "99342": [], "10504": [], "3237": 84, "99428": [], "09887": [], "99406": [], "09961": [], "99283": [], "11312": [], "50021": [], "60266": [], "60082": [], "58804": [], "58752": [], "58706": [], "58663": [], "5862": [], "5859": [], "58574": [], "58567": [], "58557": [], "58551": [], "51786": [], "05512": [], "036": [86, 87, 88], "2417": [], "009": 84, "1779": [], "3567": [], "3799": [], "3030": [], "50030": [], "99941": [], "99341": [], "98782": [], "98299": [], "98074": [], "97961": [], "97892": [], "97871": [], "97868": [], "49604": [], "05454": [], "2415": [], "594": [86, 88], "841": [], "982": [86, 87], "1764": [86, 88], "3505": [], "3805": 88, "3008": [], "4299": [], "172395": 84, "2040": 84, "1523": 88, "15831": [], "4256": 84, "030": [84, 86, 87, 89, 90], "15553": [], "4161": 84, "987": [84, 85, 88], "16022": [], "4148": 84, "010": [86, 90], "14918": [], "4147": 84, "15842": 84, "4141": 84, "15070": [], "4102": 84, "742": 85, "13299": 84, "4152": 84, "12281": 84, "4130": 84, "10701": [], "844": 86, "552": [84, 88], "9802": 84, "4043": 84, "683": 88, "581": [88, 89], "782": [], "8951": 84, "3933": 84, "3864": 84, "024": [86, 90], "5725": 84, "3403": [84, 88], "756": [], "4011": 84, "2783": 84, "726": 88, "2773": 84, "2065": 84, "1435": [84, 88], "037": [84, 86, 87, 88, 89], "610": [84, 88], "822": [84, 88], "174268": [], "62208": 84, "818": [86, 87], "121875": [], "6721": [], "4795": [], "34307": [], "1789": [], "1674": 88, "dials_scale_user_guid": [84, 86, 88], "disproportion": [84, 88, 89], "navig": [84, 86, 89], "happi": [84, 85, 87, 88, 89], "strictli": [84, 86, 87, 88], "globular": [84, 88, 89], "companion": [84, 88, 89], "uniform": [84, 88, 89], "complic": 85, "feasibl": 85, "sacrifici": 85, "teha": 85, "membran": 85, "crystallis": [85, 86], "room": [85, 97], "temperatur": [85, 97], "xta": 85, "annoy": 85, "happili": 85, "2711": 85, "compris": 85, "abruptli": 85, "tcsh": 85, "perl": 85, "rubi": 85, "comfort": [85, 89], "grep": 85, "process_teha": 85, "uncom": 85, "tasklist": 85, "easy_run": 85, "easy_mp": 85, "process_sequ": 85, "newdir": 85, "getcwd": 85, "sequence_": 85, "chdir": 85, "cmd": 85, "fully_buff": 85, "p1_model": 85, "isfil": 85, "dirti": 85, "got": 85, "argv": 85, "expt_path": 85, "abspath": 85, "enumer": 85, "get_process": 85, "parallel_map": 85, "func": 85, "preserve_ord": 85, "good_result": 85, "serlial": 85, "familiar": [85, 89], "feed": 85, "intervent": 85, "errant": 85, "bother": 85, "carrier": 85, "terribl": 85, "rescu": 85, "xta30_1_": 85, "xta31_1_": 85, "xtal7_1_": 85, "xtal8_1_": 85, "sequence_00": 85, "sequence_01": 85, "sequence_02": 85, "sequence_03": 85, "sequence_04": 85, "sequence_08": 85, "sequence_09": 85, "sequence_11": 85, "sequence_12": 85, "sequence_13": 85, "sequence_14": 85, "sequence_16": 85, "sequence_17": 85, "sequence_19": 85, "sequence_20": 85, "sequence_21": 85, "sequence_22": 85, "sequence_23": 85, "sequence_24": 85, "sequence_25": 85, "sequence_26": 85, "sequence_27": 85, "sequence_28": 85, "sequence_29": 85, "sequence_31": 85, "sequence_32": 85, "sequence_33": 85, "sequence_35": 85, "sequence_38": 85, "sequence_39": 85, "sequence_40": 85, "sequence_41": 85, "sequence_42": 85, "sequence_43": 85, "sequence_44": 85, "sequence_45": 85, "sequence_46": 85, "sequence_47": 85, "sequence_48": 85, "sequence_50": 85, "sequence_53": 85, "sequence_54": 85, "sequence_55": 85, "sequence_57": 85, "sequence_58": 85, "sequence_59": 85, "sequence_60": 85, "sequence_61": 85, "sequence_62": 85, "sequence_63": 85, "sequence_64": 85, "sequence_65": 85, "sequence_66": 85, "sequence_67": 85, "sequence_68": 85, "sequence_69": 85, "sequence_70": 85, "sequence_71": 85, "9m56": 85, "29m36": 85, "8m3": 85, "individual_mtz": 85, "dat": [85, 86], "echo": [85, 95], "final_list_of_fil": 85, "rerun": [85, 86, 87, 90], "corrplot_x": 85, "experiments_and_reflect": 85, "1471": [85, 88], "1381": [84, 85, 88], "1588": [85, 88], "1642": 85, "1529": [85, 88], "1261": [85, 88], "1587": [85, 88], "1727": [85, 88], "1358": [85, 88], "1049": 85, "1830": 85, "2033": 85, "1856": 85, "1048": 85, "1695": [85, 88], "2398": 85, "2173": 85, "2869": [85, 88], "3181": 85, "2810": 85, "3508": 85, "2985": 85, "2526": 85, "2453": 85, "1738": [85, 88], "1152": 85, "1331": [85, 88], "641": [85, 88], "1052": [85, 88], "1364": [85, 88], "2114": 85, "2139": 85, "1570": [85, 88], "2334": 85, "1645": [85, 88], "2376": 85, "1211": 85, "1190": [85, 87], "652": [85, 88], "unwieldi": 85, "ongo": [85, 99], "96848": 85, "8559": 85, "04029": 85, "8264": 85, "02585": 85, "4819": 85, "001499": 85, "1756": [85, 88], "9352": 85, "87496": 85, "02594": 85, "8807": 85, "5064": 85, "02297": 85, "4352": 85, "001485": 85, "6408": 85, "1569": [85, 88], "79118": 85, "0856": 85, "83106": [85, 88], "52798": 85, "91236": 85, "7085": 85, "50131": 85, "70048": 85, "54736": 85, "46902": 85, "46951": 85, "36137": 85, "40123": 85, "29632": 85, "21747": 85, "28785": 85, "20347": 85, "15376": 85, "17079": 85, "16762": 85, "13534": 85, "11626": 85, "16252": 85, "13282": [85, 90], "10889": 85, "16223": 85, "13265": 85, "16213": 85, "13258": 85, "16204": 85, "13254": 85, "10869": 85, "13252": 85, "10877": 85, "16199": 85, "10879": 85, "1438": [85, 88], "55006": 85, "36386": 85, "39245": 85, "1377": 85, "60375": 85, "35395": 85, "37074": 85, "81377": 85, "55378": 85, "74578": 85, "71331": 85, "50699": 85, "29662": 85, "7057": 85, "0768": 85, "70272": 85, "76136": 85, "54465": 85, "91579": 85, "2153": 85, "38596": 85, "1033": 85, "50161": 85, "37586": 85, "24255": 85, "49387": 85, "35304": 85, "27443": 85, "8339": 85, "58238": 85, "27862": 85, "51758": 85, "29764": 85, "26121": 85, "1297": [84, 85, 88], "0496": 85, "0934": 85, "62916": 85, "56529": 85, "41568": 85, "35943": 85, "52573": 85, "34911": 85, "2364": 85, "1581": [85, 88], "64887": 85, "3499": 85, "27855": 85, "1142": 85, "3555": [85, 88], "0016": 85, "81589": 85, "57376": 85, "46291": 85, "30225": 85, "68198": 85, "55891": 85, "48053": 85, "62128": 85, "55331": 85, "34444": 85, "1814": 85, "97204": 85, "80027": 85, "48625": 85, "82146": 85, "47213": 85, "41469": 85, "1696": [85, 88], "65721": 85, "34464": 85, "28293": 85, "1700": 85, "59074": 85, "37139": 85, "28981": 85, "1472": [85, 88], "72438": 85, "69007": 85, "39294": 85, "81814": 85, "64633": 85, "39922": 85, "1413": [85, 88], "5227": 85, "90807": 85, "2374": [85, 88], "52255": 85, "2912": 85, "24541": 85, "29952": 85, "23895": 85, "2620": [85, 88], "5181": 85, "30387": 85, "25139": 85, "2928": 85, "51628": 85, "29307": 85, "27191": 85, "2510": 85, "51078": 85, "3342": 85, "29667": 85, "68191": 85, "38606": 85, "2856": 85, "3240": [85, 88], "80437": 85, "50846": 85, "5801": [85, 87], "2330": 85, "5782": 85, "0468": 85, "59145": 85, "2409": 85, "64632": 85, "28538": 85, "26755": 85, "2226": 85, "6115": 85, "86348": 85, "1551": [85, 88], "91913": 85, "90458": 85, "64259": 85, "75458": 85, "54531": 85, "30649": 85, "6069": 85, "0673": 85, "3176": 85, "1205": [85, 88], "2038": 85, "94187": 85, "0289": 85, "1200": [85, 86], "3346": [85, 88], "98056": 85, "46257": 85, "6651": 85, "7142": 85, "2596": 85, "5491": 85, "0847": 85, "1105": 85, "1467": [85, 88], "86945": 85, "0626": [85, 88], "1929": 85, "55025": 85, "2708": [85, 88], "25013": 85, "1786": [85, 88], "60951": 85, "27533": 85, "27842": 85, "56749": 85, "35204": 85, "33809": 85, "53203": 85, "31578": 85, "27452": 85, "2016": [85, 97], "1326": [85, 88], "2978": 85, "59713": 85, "1481": 85, "97476": 85, "0774": 85, "32288": 85, "2412": [85, 88], "54143": 85, "47678": 85, "25686": 85, "2005": 85, "0293": [85, 90], "77775": 85, "46855": 85, "924": 85, "97306": 85, "64495": 85, "28243": 85, "63827": 85, "42478": 85, "58041": 85, "2180": 85, "58521": 85, "32623": 85, "31898": 85, "63002": 85, "40298": 85, "26934": 85, "1070": 85, "3311": [85, 88], "0275": 85, "73719": 85, "3765": 85, "2727": 85, "78839": 85, "exhibit": 85, "logfil": 85, "54278": 85, "30358": 85, "2555": 85, "realiti": 85, "stabil": 85, "fair": 85, "split_00": 85, "split_57": 85, "logger": 85, "getlogg": 85, "export_al": 85, "split_": 85, "joint_export": 85, "joint_mtz": 85, "tree": [85, 89], "lcv": 85, "alcv": 85, "depict": 85, "truth": 85, "shortcut": 85, "synthesi": 85, "unsuccess": 85, "scientist": 85, "danni": 85, "nien": 85, "jen": 85, "hu": 85, "foadi": 85, "hassanul": 85, "ghani": 85, "choudhuri": 85, "iwata": 85, "konstantino": 85, "bei": 85, "pierr": 85, "aller": [85, 97], "yilmaz": 85, "alguel": 85, "inher": 86, "vmxi": 86, "autom": [86, 99], "proteinas": 86, "vmxi_proteinase_k_sweep": 86, "bag": 86, "train": [86, 88, 89], "bagtrain": 86, "integrated_fil": 86, "multi_cryst": 86, "easiest": 86, "216868": [], "21169": [], "20799": 86, "049": [86, 87, 88, 89], "ranom": 86, "ccano": 86, "20596": 88, "20441": [], "20531": [], "20410": [], "1230": [86, 90], "20255": [], "16541": 86, "12327": [], "10345": [], "065": [86, 88], "8653": [], "6964": 86, "5481": 86, "4333": 86, "1108": 86, "3142": [86, 88], "1028": [86, 88], "2119": 86, "962": [41, 84, 86, 87, 88], "0033": 86, "00087": 86, "d76": 86, "fourth": 86, "furthest": 86, "cc_": 86, "confirm": 86, "74952": 86, "54371": 86, "74323": 86, "54522": 86, "76579": 86, "54045": 86, "75406": 86, "53975": [], "20037": 86, "12546": 86, "79350": [], "05855": [], "7432": [], "19172": 86, "11927": 86, "14121": 86, "20789": 86, "12917": 86, "multiscal": 86, "17132": 86, "203702": 86, "11465": 86, "13758": 86, "1277": [86, 88], "13392": 86, "n_group": 86, "689": [86, 88], "649": [84, 86, 88], "617": [86, 88], "912": [86, 87], "832": 86, "582": [86, 88], "614": [86, 88], "838": 86, "792": [86, 87], "52727": 86, "4603": 86, "6250": 86, "11840": 86, "4257": 86, "4759": 86, "6416": 86, "13937": 86, "3631": 86, "4673": 86, "6395": 86, "13354": 86, "3628": [86, 88], "4801": 86, "6405": 86, "13596": 86, "18836": 86, "25466": 86, "1229": 88, "2925": [], "99898": [], "05535": [], "99904": 86, "06074": [], "9992": 86, "05406": [], "11484": 86, "99921": [], "05422": [], "05394": [], "99915": [], "0572": [], "52646": [], "0443": [], "0439": [], "75344": [], "06505": [], "10316": [], "1836": 88, "1183": [86, 88], "2769": [], "967": 86, "12313": [], "21102": [], "754": [], "29053": [], "31599": [], "26252": [], "16243": 86, "0471": [], "0451": [], "0446": [], "0444": 86, "0442": [], "75086": [], "06528": [], "1835": 86, "1184": 86, "2864": [], "12374": 86, "21137": [], "29038": [], "31543": [], "26167": [], "16218": [], "1246": [], "301260": 86, "246904": 86, "2533": [86, 88], "5463": 86, "46360": 86, "21419": [], "20916": 86, "1271": [86, 88], "20682": [], "20831": 86, "20700": 86, "21302": 86, "20395": 86, "1197": [86, 88], "16676": 86, "12527": 86, "1213": 86, "10416": 86, "066": [86, 87, 88], "8636": 86, "6956": 86, "1147": 86, "4340": [86, 88], "3144": 86, "1029": 86, "2115": [86, 88], "1171": [86, 88], "219144": 86, "845": [86, 87], "varieti": 86, "mention": [86, 90], "assmann": 86, "216938": 86, "815": 86, "781": 86, "delta_cchalf": 86, "warrant": 86, "answer": 86, "drawn": 86, "17133": 86, "203731": 86, "52237": 86, "4675": [86, 88], "6304": 86, "11892": 86, "4706": 86, "6334": 86, "13802": 86, "6376": 86, "13260": 86, "4831": 86, "6341": 86, "13283": 86, "18919": 86, "25355": 86, "99874": [], "05684": 86, "06058": [], "99926": 86, "0539": [], "99909": 86, "05537": [], "05383": [], "99916": [], "05704": [], "52161": [], "75083": [], "06531": [], "10222": 86, "12371": [], "21127": 86, "29045": [], "31550": [], "26174": [], "16219": 86, "0418": 86, "0413": [], "0412": [], "0409": [], "75446": [], "06471": [], "10189": [], "2892": [], "12387": 86, "29034": 86, "31532": [], "26135": [], "16236": [], "5413": [], "21418": 86, "20917": 86, "20683": 86, "21300": [], "20394": 86, "16674": 86, "219140": [], "222563": 86, "166095": 86, "16534": 86, "16285": 86, "redund": [86, 87], "mea": [86, 87], "sigific": 86, "screw": [86, 87], "4_1": 86, "54879": 86, "55061": 86, "54689": [], "54511": 86, "41c": 86, "21a": [86, 87], "847": [], "42c": 86, "enantiomorph": 86, "french": 86, "treatment": 86, "mislead": 86, "anisotropi": 86, "u_cif": 86, "eigen": 86, "cart": 86, "eigenvector": 86, "702": [84, 88], "span": 86, "behavior": 86, "gaug": 86, "induc": 86, "amplif": 86, "28e": 86, "31e": 86, "82e": 86, "72e": 86, "bernoulli": 86, "patholog": 86, "morri": 86, "synch": 86, "worrisom": 86, "z_score": 86, "iob": 86, "820": 86, "unexpect": 86, "elev": 86, "satellit": 86, "elsewher": 86, "abnorm": 86, "d55": 86, "1759": 86, "acentr": 86, "centric": 86, "06e": 86, "20e": 86, "erf": 86, "n_acentr": 86, "rm": 86, "theoret": 86, "crystallin": [86, 97], "processs": 86, "669": [84, 86, 88], "750": 86, "671": [86, 88], "883": [86, 88], "\u03b4f": 86, "925": 88, "884": 86, "655": 88, "21412": 86, "20908": 86, "20673": 86, "20824": 86, "20684": 86, "21289": [], "20382": 86, "008": [86, 90], "16670": 86, "12524": 86, "10412": 86, "219058": [], "p41212": 86, "78117": 86, "bst": 86, "979493": 86, "5535": [], "sigimean": [86, 87, 88], "q": [86, 87, 97], "20519": 86, "14678": 86, "3635": 88, "20798": 86, "sigf": [86, 87], "20518": 86, "14677": 86, "14397": 86, "sigdano": 86, "semi": 87, "trypsin": 87, "semisynthetic_multilattice_data_2": 87, "semisynthetic_multilattice_data": 87, "ag": 87, "trp_ag_": 87, "formatcbfminipilatusdls6msn100": [87, 88], "tweak": 87, "46332": 87, "8863": 87, "37466": 87, "35422": 87, "41832": 87, "25232": 87, "15582": 87, "33596": 87, "17531": 87, "16636": 87, "9778": 87, "7632": 87, "6185": 87, "0427": 87, "6227": 87, "7813": 87, "9814": 87, "1725": 87, "0838": 87, "0185": 87, "0172": 87, "0150": 87, "0131": 87, "0093": 87, "0008": 87, "0107": 87, "0030": [87, 88], "17247": 87, "0060": 87, "0094": 87, "6714": 87, "7410": 87, "3813": 87, "6875": 87, "6180": 87, "9244": 87, "2768": [87, 88], "2625": 87, "0115": 87, "0111": 87, "0070": 87, "0118": 87, "0171": 87, "0048": 87, "0039": 87, "33883": 87, "1539": 87, "895": 87, "2490": 87, "251517": 87, "500054": 87, "499425": 87, "498876": 87, "209657": 87, "209735": 87, "209715": 87, "209787": 87, "209725": 87, "2639": 87, "740": [84, 87, 88], "240463": 87, "709": [87, 88], "487536": 87, "472000": 87, "466492": 87, "0497": 87, "209775": 87, "209773": 87, "0453": 87, "209673": 87, "0221": 87, "209642": 87, "209577": 87, "45694": 87, "26413": 87, "16573": 87, "35593": 87, "20011": 87, "16635": 87, "2684": 87, "7630": 87, "6186": 87, "0429": 87, "6228": 87, "7812": 87, "1728": [87, 88], "0839": [87, 88], "17249": 87, "2882": [87, 88], "3810": 87, "6874": 87, "6182": 87, "9245": 87, "2621": [87, 88], "0047": [87, 88], "33884": 87, "1538": [87, 88], "similarli": 87, "079758": 87, "046104": 87, "018187": 87, "066176": 87, "042452": 87, "017411": 87, "065727": 87, "042236": 87, "016897": 87, "065412": 87, "042413": 87, "016653": 87, "065282": 87, "042591": 87, "016592": 87, "065257": 87, "042631": 87, "016585": 87, "065253": 87, "042632": 87, "13833": 87, "48806": 87, "27504": 87, "14752": 87, "35492": 87, "2951": 87, "20587": 87, "25027": 87, "1859": 87, "9850": 87, "10448": 87, "5595": 87, "29114": 87, "2208": 87, "23507": 87, "1796": 87, "11202": 87, "24816": 87, "1800": 87, "10172": 87, "9013": 87, "5147": 87, "29676": 87, "24069": 87, "1812": 87, "10754": 87, "2822": 87, "5198": 87, "21b": 87, "16592": 87, "21c": 87, "28257": 87, "46152": 87, "34551": 87, "2288": [87, 88], "3375": 87, "2366": 87, "15165": 87, "3400": 87, "2285": 87, "3369": 87, "4059": 87, "3297": 87, "2143": [87, 88], "3226": [87, 88], "1506": [87, 88], "3246": 87, "2372": 87, "1133": 87, "2387": [87, 90], "840": 87, "2481": [87, 88], "3177": [87, 88], "2480": 87, "3207": [87, 88], "2540": [87, 88], "2306": [87, 88], "1845": 87, "1293": [87, 88], "651": [87, 88], "p22121": 87, "32658": 87, "8871": 87, "06499": 87, "gf88516da7": 87, "2019": [87, 97], "gmt": 87, "97949": 87, "213880": 87, "5046": 87, "24848": 87, "12695": 87, "180658": 87, "4263": [87, 88], "split_0": 87, "split_1": 87, "lactamas": [88, 89], "c2sum_1": [88, 89], "720": 88, "1439": 88, "1593": 88, "1663": 88, "1597": 88, "1605": 88, "1519": 88, "1504": 88, "1368": 88, "1518": 88, "1470": [84, 88], "1540": 88, "1591": 88, "1357": 88, "1350": [84, 88], "1441": 88, "1394": 88, "1304": 88, "1444": 88, "1270": 88, "1465": [88, 97], "1431": 88, "1168": 88, "1311": 88, "1333": 88, "1353": 88, "1502": 88, "1317": 88, "1295": 88, "1289": 88, "1320": 88, "1306": 88, "1235": 88, "1456": 88, "1388": 88, "1282": 88, "1245": 88, "1355": 88, "1410": [84, 88], "1455": 88, "1405": 88, "1553": 88, "1318": 88, "1702": 88, "1526": 88, "1453": 88, "1577": 88, "1484": 88, "1497": 88, "1537": 88, "1596": 88, "1640": 88, "1461": 88, "1448": 88, "1552": 88, "1610": 88, "1617": 88, "1575": 88, "1572": 88, "1643": 88, "1601": 88, "1633": 88, "1715": 88, "1585": 88, "1622": 88, "1475": 88, "1583": [88, 90], "1582": 88, "1747": 88, "1603": 88, "1532": 88, "1760": 88, "1542": 88, "1509": [84, 88], "1437": 88, "1732": 88, "1777": 88, "1673": 88, "1559": 88, "1868": 88, "1376": 88, "1680": 88, "1658": 88, "1638": 88, "1416": 88, "1580": 88, "1501": 88, "1710": 88, "1649": 88, "1736": 88, "1770": 88, "1692": 88, "1776": 88, "1660": 88, "1628": 88, "1913": 88, "1708": 88, "1564": 88, "1744": 88, "1687": 88, "1783": 88, "1765": 88, "1612": 88, "1763": 88, "1671": 88, "1613": 88, "1712": 88, "1599": 88, "1805": 88, "1790": 88, "1740": 88, "1683": 88, "1928": 88, "1950": 88, "1641": 88, "1723": 88, "1903": 88, "1627": 88, "1664": 88, "1614": 88, "1810": 88, "1865": 88, "1717": 88, "1531": 88, "1644": 88, "1635": 88, "1694": 88, "1574": 88, "1799": 88, "1879": 88, "1682": 88, "1659": 88, "1499": 88, "1568": 88, "1679": 88, "1754": 88, "1466": 88, "1459": [88, 97], "1820": 88, "1646": 88, "1665": 88, "1480": 88, "1348": 88, "1426": 88, "1721": 88, "1403": 88, "1520": 88, "1442": 88, "1201": 88, "1409": 88, "1390": 88, "1546": 88, "1324": 88, "1545": 88, "1367": 88, "1688": 88, "1371": 88, "1460": 88, "1349": 88, "1315": 88, "1375": 88, "1267": 88, "1457": 88, "1423": 88, "1319": 88, "1406": 88, "1291": [84, 88], "1341": 88, "1290": 88, "1262": 88, "1275": [88, 90], "1265": 88, "1463": [84, 88], "1322": 88, "1352": 88, "465": [84, 88], "1346": 88, "1492": 88, "1181": 88, "1135": 88, "1369": 88, "1187": 88, "1155": 88, "1485": 88, "1434": 88, "1312": 88, "1356": 88, "1558": 88, "532": [84, 88], "1515": 88, "541": 88, "545": [88, 97], "546": 88, "547": 88, "1294": 88, "1631": 88, "1579": 88, "553": 88, "555": [84, 88], "1656": 88, "563": 88, "1374": 88, "568": 88, "1722": 88, "1629": 88, "573": 88, "574": 88, "575": [86, 88], "1549": 88, "1398": 88, "580": 88, "1689": 88, "583": 88, "1657": 88, "585": 88, "1794": 88, "1678": 88, "590": 88, "1513": 88, "1750": 88, "1781": 88, "597": 88, "1618": 88, "1949": 88, "603": 88, "604": 88, "1594": 88, "606": 88, "1719": 88, "1711": 88, "613": [84, 88], "615": 88, "1521": 88, "620": 88, "621": 88, "1713": 88, "1896": 88, "627": [84, 88], "1904": 88, "1681": 88, "632": 88, "1937": 88, "1784": 88, "1730": 88, "638": [84, 88, 97], "1894": 88, "1947": 88, "1916": 88, "1676": 88, "645": 88, "646": 88, "1606": 88, "1774": 88, "1699": 88, "1851": 88, "653": 88, "1852": 88, "1528": 88, "1693": 88, "1716": 88, "660": [84, 88], "664": 88, "1609": 88, "665": 88, "668": 88, "1735": 88, "1650": 88, "677": 88, "1677": 88, "678": 88, "1769": 88, "1608": 88, "1707": 88, "1709": 88, "686": 88, "687": 88, "1636": 88, "690": 88, "691": 88, "694": 88, "698": 88, "1653": 88, "1482": 88, "124946": 88, "16738": 88, "108207": 88, "107999": 88, "91203": 88, "114154": 88, "94166": 88, "114243": 88, "94215": 88, "113803": 88, "93959": 88, "114214": 88, "93867": 88, "114144": 88, "94275": 88, "114123": 88, "93742": 88, "113784": 88, "93870": 88, "114124": 88, "94101": 88, "114140": 88, "94077": 88, "114518": 88, "94017": 88, "114292": 88, "93749": 88, "113958": 88, "93595": 88, "114230": 88, "114431": 88, "93838": 88, "114065": 88, "94173": 88, "114507": 88, "93960": 88, "114109": 88, "94103": 88, "114277": 88, "93862": 88, "114113": 88, "94089": 88, "114110": 88, "93890": 88, "114017": 88, "93302": 88, "113865": 88, "93126": 88, "114178": 88, "94031": 88, "114275": 88, "94063": 88, "114151": 88, "94188": 88, "113599": 88, "93047": 88, "114191": 88, "93419": 88, "113880": 88, "93138": 88, "114543": 88, "92656": 88, "114150": 88, "93970": 88, "114266": 88, "94194": 88, "114199": 88, "94373": 88, "94065": 88, "114470": 88, "93872": 88, "113637": 88, "93709": 88, "114013": 88, "94057": 88, "113621": 88, "92029": 88, "114555": 88, "91895": 88, "114816": 88, "92639": 88, "114242": 88, "93340": 88, "113913": 88, "92296": 88, "113990": 88, "93360": 88, "114207": 88, "94097": 88, "114482": 88, "93092": 88, "114024": 88, "93886": 88, "114325": 88, "93248": 88, "114060": 88, "93703": 88, "113906": 88, "92940": 88, "114265": 88, "91089": 88, "114137": 88, "93712": 88, "8417": 88, "5364": 88, "1751": 88, "9673": 88, "8256": 88, "2459": 88, "0246": 88, "0036": [41, 86, 88], "0248": 88, "0010": 88, "0144": 88, "0227": 88, "0134": 88, "0029": 88, "0139": 88, "0097": 88, "0202": 88, "93816": 88, "2047": 88, "3707": 88, "731": [84, 88], "6009": 88, "2953": 88, "00193": 88, "08649": 88, "01357": 88, "3106": 88, "90710": 88, "6121": 88, "3087": 88, "03742": 88, "006": 88, "08685": 88, "01122": 88, "4516": 88, "36000": [88, 89], "56197": [88, 89], "55131": [88, 89], "13413": [88, 89], "24338": [88, 89], "26503": [88, 89], "15575": [88, 89], "10648": [88, 89], "13198": [88, 89], "13476": [88, 89], "055785": [88, 89], "059567": [88, 89], "10888": [88, 89], "051066": [88, 89], "052336": [88, 89], "10514": [88, 89], "050906": [88, 89], "052372": [88, 89], "10505": [88, 89], "050901": [88, 89], "052378": [88, 89], "29594": 88, "30452": 88, "2101": 88, "93847": 88, "5519": 88, "5591": 88, "2964": 88, "9752": 88, "0783": 88, "8429": 88, "5343": 88, "0638": 88, "1841": 88, "9672": 88, "5056": 88, "8270": 88, "0247": 88, "0249": 88, "0145": 88, "0140": 88, "0098": 88, "0203": 88, "101813": 88, "102009": 88, "101460": 88, "3659": 88, "03707": 88, "002529": 88, "03158": 88, "3623": [86, 88], "8234": 88, "03127": 88, "0002209": 88, "03123": 88, "9301": 88, "8541": 88, "0814": 88, "0005383": 88, "08299": 88, "4886": 88, "96574": 88, "03646": 88, "002887": 88, "03019": 88, "03001": 88, "000363": 88, "02939": 88, "1893": 88, "3509": 88, "08067": 88, "0001275": 88, "08135": 88, "3266": 88, "048834": 88, "046981": 88, "10531": 88, "048722": 88, "046957": 88, "10525": 88, "048696": 88, "04698": 88, "10522": 88, "048684": 88, "046993": 88, "048681": 88, "046997": 88, "28303": 88, "27324": 88, "2104": 88, "5520": 88, "5588": 88, "0189": 88, "9731": 88, "2458": 88, "105712": 88, "105724": 88, "105342": 88, "3602": 88, "03583": 88, "0009226": 88, "03338": 88, "3599": 88, "03272": 88, "0005848": 88, "03157": 88, "08148": 88, "001034": 88, "08422": 88, "5469": 88, "99873": [86, 88], "03485": 88, "03209": 88, "03096": 88, "0005444": 88, "02996": 88, "3535": 88, "08055": 88, "0006649": 88, "08254": 88, "3272": 88, "049172": 88, "04859": 88, "10641": 88, "049153": 88, "04854": 88, "10638": 88, "049152": 88, "048515": 88, "10639": 88, "049155": 88, "048503": 88, "1064": 88, "049156": 88, "0485": 88, "28579": 88, "28197": 88, "21281": 88, "5583": 88, "0190": 88, "9725": 88, "0761": 88, "107089": 88, "107097": 88, "723": [86, 88], "106715": 88, "0006477": 88, "03379": 88, "3619": 88, "03302": 88, "0004506": 88, "03208": 88, "9716": 88, "08205": 88, "0008108": 88, "08438": 88, "5604": 88, "101111": 88, "03501": 88, "0007897": 88, "03243": 88, "03118": 88, "0004102": 88, "03034": 88, "1979": 88, "08096": 88, "0004804": 88, "08264": 88, "3495": 88, "049499": 88, "048536": 88, "049483": 88, "048491": 88, "10673": 88, "049474": 88, "048479": 88, "10676": 88, "049473": 88, "048472": 88, "10677": 88, "04847": 88, "28764": 88, "2818": 88, "21355": 88, "5513": 88, "5578": 88, "2911": 88, "0192": 88, "9728": 88, "107264": [88, 89], "107277": 88, "106891": 88, "03563": 88, "0001711": 88, "03425": 88, "3641": 88, "03295": 88, "0004634": 88, "0322": 88, "9614": 88, "08213": 88, "0006723": 88, "08443": 88, "5626": 88, "101265": 88, "0347": 88, "0003111": 88, "03288": 88, "1637": 88, "03122": 88, "0004946": 88, "3539": 88, "08118": 88, "0003692": 88, "08282": 88, "049518": 88, "04852": 88, "10693": 88, "049498": 88, "048528": 88, "10688": 88, "049495": 88, "048535": 88, "10686": 88, "049494": 88, "048537": 88, "28776": 88, "28219": 88, "21371": 88, "5585": 88, "2922": 88, "0198": 88, "9722": 88, "0759": 88, "733": [88, 89], "c2221": 88, "c222": 88, "0457": 88, "35999": 88, "218334": 88, "0455": 88, "218080": 88, "108857": 88, "0326": 88, "225340": 88, "112674": 88, "bravais_setting_4": 88, "bravais_setting_3": 88, "cost": 88, "worsen": 88, "03532": 88, "621e": 88, "03409": 88, "3577": 88, "03515": 88, "0003891": 88, "03422": 88, "08285": 88, "0008039": 88, "08427": 88, "11207": 88, "95684": [88, 89], "1758": 88, "03395": 88, "00103": 88, "03025": 88, "03204": 88, "0007586": 88, "02982": 88, "3632": 88, "07953": 88, "0008083": 88, "08143": 88, "3193": 88, "046337": [88, 89], "048039": [88, 89], "10463": [88, 89], "046274": [88, 89], "047964": [88, 89], "10467": [88, 89], "046255": [88, 89], "047941": [88, 89], "10472": [88, 89], "046259": [88, 89], "047928": [88, 89], "10474": [88, 89], "046263": [88, 89], "047924": [88, 89], "10475": [88, 89], "26897": 88, "27863": 88, "106889": 88, "03433": 88, "0006215": 88, "03482": 88, "03495": 88, "53e": 88, "0345": 88, "781e": 88, "08362": 88, "11457": 88, "95432": 88, "03294": 88, "000379": 88, "03065": 88, "1822": 88, "03149": 88, "0003546": 88, "2338": 88, "3681": 88, "08069": 88, "365e": 88, "08057": 88, "3162": 88, "04602": 88, "047837": 88, "10469": 88, "043154": 88, "040661": 88, "10341": 88, "041158": 88, "039695": 88, "040613": 88, "039489": 88, "10246": 88, "040498": 88, "03948": 88, "10226": 88, "040475": 88, "039476": 88, "10215": 88, "040471": 88, "10214": 88, "040469": 88, "10213": 88, "23529": 88, "22951": 88, "20427": 88, "1698": 88, "2426": 88, "2883": 88, "04558": 88, "9560": 88, "2863": [86, 88], "0639": 88, "0114": 88, "2539": 88, "2931": 88, "9239": 88, "2460": 88, "0163": 88, "0180": 88, "0151": 88, "23985": 88, "000831161": 88, "22424e": 88, "89652": 88, "999913": 88, "00556579": 88, "011931": 88, "00567871": 88, "999939": 88, "00945197": 88, "965028": 88, "0598562": 88, "255222": 88, "128604": 88, "74028": 88, "659883": 88, "228434": 88, "669628": 88, "706694": 88, "gon_phi": 88, "gon_kappa": 88, "gon_omega": 88, "11833": 88, "95431": 88, "12568": 88, "368590": 88, "95430": 88, "044181": 88, "26302": 88, "22778": 88, "23887": 88, "22476": 88, "26211": 88, "22771": 88, "23877": 88, "22401": 88, "2008": 88, "2341": 88, "2815": 88, "2569": 88, "2560": 88, "3052": 88, "2733": 88, "3546": 88, "4266": 88, "3869": 88, "2654": 88, "3274": 88, "2634": 88, "3140": 88, "2788": 88, "3881": 88, "3202": 88, "2874": 88, "2843": 88, "3644": 88, "2562": 88, "3128": 88, "2807": 88, "3264": 88, "2894": 88, "4289": 88, "3867": 88, "2445": 88, "2966": 88, "2685": 88, "3327": 88, "2945": 88, "2378": 88, "2865": 88, "2875": 88, "2987": 88, "3630": 88, "3815": 88, "2302": 88, "2500": 88, "2984": 88, "3537": 88, "3075": 88, "3674": 88, "3833": 88, "2244": 88, "2703": 88, "2429": 88, "3028": 88, "3618": 88, "3137": 88, "3680": 88, "4369": 88, "3863": 88, "2171": 88, "2648": 88, "2403": 88, "3143": 88, "3748": 88, "3742": 88, "4441": 88, "3905": 88, "2159": 88, "2640": 88, "2395": 88, "3174": 88, "3785": 88, "3280": 88, "3750": 88, "4450": 88, "3926": 88, "2130": 88, "2602": 88, "3277": 88, "3889": 88, "3348": 88, "4492": 88, "3929": 88, "2150": 88, "2605": 88, "2354": 88, "3234": 88, "3826": 88, "3262": 88, "3717": 88, "3790": 88, "2134": 88, "2575": 88, "2308": 88, "3210": 88, "3194": 88, "3660": 88, "4291": 88, "2573": 88, "2282": 88, "3112": 88, "3658": 88, "3104": [86, 88], "4165": 88, "3586": 88, "2149": 88, "2574": 88, "3047": 88, "3578": 88, "3061": 88, "3493": 88, "4087": 88, "3549": 88, "2583": 88, "3024": 88, "3019": 88, "3479": 88, "4061": 88, "3515": 88, "2950": 88, "3464": 88, "3394": 88, "3961": 88, "3423": 88, "2188": 88, "2626": 88, "3330": 88, "3883": 88, "3358": 88, "2215": 88, "2647": 88, "2796": [84, 88], "3295": 88, "2816": 88, "3221": 88, "3767": 88, "3273": 88, "2667": 88, "3184": 88, "2719": 88, "3107": 88, "3647": 88, "3163": 88, "2660": 88, "2329": 88, "2631": 88, "3588": 88, "2230": 88, "2670": 88, "2530": 88, "2982": 88, "2525": 88, "3496": 88, "3016": 88, "2198": 88, "2637": 88, "2296": 88, "2567": 88, "2543": 88, "3048": 88, "3572": 88, "3084": 88, "2716": 88, "2367": 88, "2548": 88, "2988": 88, "2524": 88, "3057": 88, "3582": 88, "3080": 88, "2744": 88, "2380": 88, "2591": 88, "3157": 88, "3693": 88, "3182": 88, "2834": 88, "2452": 88, "2616": 88, "3037": 88, "3211": 88, "3731": 88, "3187": 88, "2443": 88, "2895": 88, "2619": 88, "3771": 88, "3215": 88, "2498": 88, "2946": 88, "2482": 88, "2939": 88, "3286": 88, "3760": 88, "2554": 88, "2981": 88, "2491": 88, "2896": 88, "2464": 88, "3777": 88, "3014": 88, "2467": 88, "2871": 88, "3298": 88, "3817": 88, "3265": 88, "3088": 88, "2457": 88, "2662": 88, "2408": 88, "2825": 88, "2436": 88, "3302": 88, "2680": 88, "3148": 88, "2642": 88, "2358": 88, "2791": 88, "2420": 88, "3317": 88, "3870": 88, "2676": 88, "2633": 88, "2357": 88, "2461": 88, "3347": 88, "3927": 88, "3407": 88, "2697": 88, "3188": 88, "2879": 88, "2546": 88, "3428": 88, "4021": 88, "3532": 88, "2722": 88, "3218": 88, "2766": 88, "2434": 88, "2934": 88, "2618": 88, "3439": 88, "4052": 88, "3601": 88, "2681": 88, "2961": 88, "2657": 88, "3465": 88, "4071": 88, "3620": 88, "2650": 88, "3132": 88, "2472": 88, "2688": 88, "3435": 88, "4047": 88, "3609": 88, "2558": 88, "3033": 88, "2646": 88, "2519": 88, "3053": 88, "3477": 88, "4101": 88, "2529": 88, "3000": 88, "2622": 88, "2552": 88, "3103": 88, "2802": 88, "3446": 88, "4079": 88, "3669": 88, "2593": 88, "2881": 88, "3431": 88, "4094": 88, "2356": 88, "2812": 88, "2507": 88, "2638": 88, "3241": 88, "2949": 88, "3402": 88, "3714": 88, "2269": 88, "2673": 88, "3309": 88, "3013": 88, "3364": 88, "4060": 88, "3701": 88, "2191": 88, "2606": 88, "2355": 88, "2710": 88, "3361": 88, "3042": 88, "3323": 88, "3646": 88, "2504": 88, "2803": 88, "3480": 88, "3152": 88, "3359": 88, "4073": 88, "2085": 88, "2468": 88, "2223": 88, "3551": 88, "3204": 88, "3389": 88, "4100": 88, "3711": 88, "2430": 88, "2186": 88, "2890": 88, "3580": 88, "3343": 88, "4063": 88, "3678": 88, "2147": 88, "2828": 88, "3512": 88, "3164": 88, "3220": 88, "3923": 88, "1940": 88, "2311": 88, "2077": 88, "2759": 88, "3450": 88, "3109": 88, "3819": 88, "3449": 88, "1900": 88, "2278": 88, "3100": 88, "3430": 88, "1932": 88, "2701": 88, "3345": 88, "3023": 88, "3021": 88, "3692": 88, "1914": 88, "2301": 88, "2053": 88, "2683": 88, "3011": 88, "2973": 88, "3304": 88, "1897": 88, "2039": 88, "2598": 88, "3253": 88, "2888": [86, 88], "3564": [84, 88], "3239": 88, "2295": 88, "2044": 88, "2590": 88, "2972": 88, "2859": 88, "3554": 88, "1887": 88, "2066": 88, "3191": 88, "2907": 88, "3502": 88, "2127": 88, "3101": 88, "2819": 88, "3420": 88, "3072": 88, "2793": 88, "2782": 88, "3467": 88, "2479": 88, "2211": 88, "2795": 88, "3171": 88, "2435": 88, "2817": 88, "2905": 88, "3622": 88, "2123": 88, "2664": 88, "3063": 88, "2940": 88, "3662": 88, "3349": 88, "2185": 88, "2730": 88, "2462": 88, "2800": 88, "3732": 88, "3383": 88, "2811": 88, "2516": 88, "2427": 88, "3012": 88, "2700": 88, "2962": 88, "3655": 88, "2263": 88, "2517": 88, "2349": 88, "2577": 88, "3526": 88, "3180": 88, "2790": 88, "2492": 88, "2801": 88, "3192": 88, "2315": 88, "2571": 88, "2827": 88, "2508": 88, "3676": 88, "3296": 88, "2411": 88, "3018": 88, "2551": 88, "3837": 88, "2344": 88, "2884": 88, "2559": 88, "3123": 88, "3868": 88, "3463": 88, "2570": 88, "2845": 88, "2839": 88, "3159": 88, "3877": 88, "3472": 88, "2615": 88, "3242": 88, "2877": 88, "3199": 88, "3954": 88, "3534": 88, "3293": 88, "2814": 88, "4074": 88, "3648": 88, "3386": 88, "1566": 88, "1818": 88, "2294": 88, "2045": 88, "91596": 88, "92165": 88, "92093": 88, "91556": 88, "91153": 88, "90889": 88, "1177": 88, "1228": 88, "2965": 88, "5312": 88, "4368": 88, "4822": 88, "7648": 88, "6425": 88, "6912": 88, "11094": 88, "9253": 88, "9881": 88, "15371": 88, "12970": 88, "13814": 88, "20779": 88, "17869": 88, "18839": 88, "23748": 88, "20760": 88, "21529": 88, "24455": 88, "20311": 88, "21238": 88, "24341": 88, "20604": 88, "21460": 88, "24576": 88, "21432": 88, "22117": 88, "24712": 88, "21140": 88, "21781": 88, "25045": 88, "21338": 88, "21959": 88, "25192": 88, "22294": 88, "25082": 88, "21759": 88, "22206": 88, "25616": 88, "22282": 88, "22785": 88, "25697": 88, "22620": 88, "23008": 88, "26130": 88, "22429": 88, "22949": 88, "26279": 88, "22938": 88, "23278": 88, "366022": 88, "2677": 88, "95699": 88, "5239": 88, "54359": 88, "3548": 88, "313907": 88, "325384": 88, "42882": 88, "3208": 88, "41622": 88, "368699": 88, "327077": 88, "312214": 88, "155136": [], "5515": 88, "9961": 88, "0721": 88, "150980": [], "150254": [], "327039": 88, "6490": 88, "325073": 88, "325380": 88, "325379": 88, "325074": 88, "7479": 88, "48533": 88, "50270": 88, "49246": 88, "2242": 88, "1753": 88, "0494": 88, "98356": 88, "88594": 88, "83668": 88, "83299": 88, "8151": 88, "81007": 88, "80047": 88, "79677": 88, "7962": 88, "79545": 88, "79528": 88, "79502": 88, "79494": 88, "79482": 88, "79473": 88, "79465": 88, "99897": 88, "06032": 88, "99893": 88, "06694": 88, "06024": 88, "39733": 88, "3973": 88, "99899": [86, 88], "06016": 88, "99889": 88, "06294": 88, "50240": 88, "83161": 88, "82989": 88, "82981": 88, "70559": 88, "03884": 88, "9938": 88, "2076": 88, "5976": 88, "9783": 88, "14804": 88, "19581": 88, "12908": 88, "50245": 88, "0416": 88, "0375": 88, "0372": 88, "67891": 88, "9949": 88, "1933": 88, "2097": 88, "5993": 88, "9810": 88, "14768": 88, "20450": 88, "12834": 88, "3687": [], "324980": 88, "23046": 88, "22762": 88, "3324": 88, "22907": 88, "3267": 88, "22699": 88, "3258": 88, "21992": 88, "098": 88, "22185": 88, "3190": 88, "3167": 88, "985": [86, 88, 90], "21507": 88, "3115": 88, "22177": 88, "3126": 88, "21416": 88, "3095": 88, "20945": 88, "21449": 88, "19024": 88, "3010": 88, "14334": 88, "9982": 88, "6959": 88, "5117": 88, "3119": 88, "325190": 88, "49118": 88, "nativig": 88, "trough": [88, 89], "colin": 88, "driven": 89, "resiz": 89, "layout": 89, "wildcard": 89, "branch": 89, "steadi": 89, "drop": 89, "cyan": 89, "cursor": 89, "heat": 89, "pop": 89, "heurist": 89, "polish": 89, "rougher": 89, "fifth": 89, "demand": 89, "tight": 89, "hypothesi": 89, "revis": [89, 97], "283277": 89, "15064": 89, "11794": 89, "41136": 89, "1935": 89, "understood": 89, "untick": 89, "fresh": 89, "cloud": 89, "ccp4i2": 89, "51405": 90, "cyst_0": 90, "unconstrain": 90, "yield": 90, "unlik": 90, "substanti": 90, "metal": 90, "12198": 90, "perspect": [90, 99], "42183": 90, "02218": 90, "6983": 90, "6749": 90, "5789": 90, "7429": 90, "3362": 90, "4212": 90, "6254": 90, "6569": 90, "1844": 90, "0832": 90, "0561": 90, "0913": 90, "0280": 90, "0777": 90, "0769": 90, "0546": 90, "3e": 90, "0222": 90, "7e": [41, 86, 90], "00356": 90, "And": 90, "jiffi": 90, "lcy": 90, "Such": [2, 90], "reflections_": [90, 95], "experiments_": [90, 95], "ssx": 91, "ssx_index": 91, "ssx_integr": 91, "biologi": [92, 99, 100], "year": [92, 99], "deliv": 92, "micron": 92, "xfel": 92, "endeavour": 92, "bug": 92, "east": 92, "west": [92, 101], "employe": 92, "stfc": [92, 96], "218270": 92, "biomed": 92, "research": [92, 94], "pkg": 93, "dev20150903": 93, "platform": 93, "diamond_build": 93, "conda3": 93, "macosx": 93, "xzf": 93, "sudo": 93, "copyright": 94, "2012": [94, 97, 101], "kingdom": 94, "innov": 94, "reserv": 94, "redistribut": 94, "permit": 94, "met": 94, "disclaim": 94, "neither": 94, "holder": 94, "nor": 94, "endors": 94, "promot": 94, "BY": 94, "THE": 94, "AS": [94, 97], "OR": 94, "warranti": 94, "BUT": 94, "TO": 94, "OF": 94, "merchant": 94, "FOR": 94, "IN": 94, "NO": 94, "event": 94, "owner": 94, "BE": 94, "liabl": 94, "indirect": 94, "incident": 94, "exemplari": 94, "consequenti": 94, "procur": 94, "loss": 94, "profit": 94, "busi": 94, "interrupt": 94, "ON": 94, "liabil": 94, "strict": 94, "tort": 94, "aris": 94, "IF": 94, "SUCH": 94, "blah_": 95, "sorri": 95, "recombin": 95, "mere": 95, "reli": 95, "ada": 96, "lovelac": 96, "scientif": 96, "isi": 96, "muon": 96, "flight": 96, "tof": 96, "sxd": 96, "diffus": [96, 97], "spallat": 96, "plan": 96, "monochromat": 96, "rj": 97, "horrel": 97, "sandi": 97, "sanchez": 97, "weatherbi": 97, "owen": 97, "lukacik": 97, "strain": 97, "damerel": 97, "rl": 97, "walsh": 97, "ma": [97, 101], "jun": 97, "35647922": 97, "mcdonagh": 97, "pascal": 97, "bh": 97, "nov": 97, "34747533": 97, "32254063": 97, "paterson": 97, "ng": 97, "beal": 97, "vollmar": 97, "mcaulei": 97, "ke": 97, "flaig": 97, "aw": 97, "mar": 97, "30950396": 97, "pmc6450062": 97, "lj": 97, "yano": 97, "nk": 97, "sep": 97, "30198898": 97, "pmc6130462": 97, "29717711": 97, "pmc5930348": 97, "29533234": 97, "pmc5947772": 97, "thorn": 97, "iucrj": 97, "28989718": 97, "pmc5619854": 97, "1921": 97, "dec": 97, "27980508": 97, "pmc5139990": 97, "27050135": 97, "pmc4822564": 97, "oct": 97, "25286849": 97, "pmc4188007": 97, "aug": 97, "25242914": 97, "pmc4119952": 97, "motion": 97, "wall": 97, "me": 97, "pd": 97, "fraser": 97, "feb": 97, "24507780": 97, "pmc4070675": 97, "rw": 97, "1274": 97, "jul": 97, "2013": [97, 101], "23793153": 97, "pmc3689530": 97, "fortran": 97, "convers": 97, "fabl": 97, "terwillig": 97, "tc": 97, "22640868": 97, "pmc3448510": 97, "toxic": 97, "synuclein": 97, "invis": 97, "rodriguez": 97, "ja": 97, "ivanova": 97, "sawaya": 97, "mr": 97, "cascio": 97, "rey": 97, "fe": 97, "shi": 97, "sangwan": 97, "guenther": 97, "el": 97, "johnson": 97, "zhang": 97, "jiang": 97, "arb": 97, "nannenga": 97, "bl": 97, "whitelegg": 97, "messerschmidt": 97, "boutet": 97, "gonen": 97, "eisenberg": 97, "2015": [97, 101], "26352473": 97, "pmc4791177": 97, "architectur": 97, "synaptotagmin": 97, "snare": 97, "machineri": 97, "neuron": 97, "exocytosi": 97, "zhou": 97, "lai": 97, "bacaj": 97, "lyubimov": 97, "ai": 97, "uervirojnangkoorn": 97, "cohen": 97, "ae": 97, "solti": 97, "sm": 97, "alonso": 97, "mori": 97, "chollet": 97, "lemk": 97, "ht": 97, "pfuetzner": 97, "ra": 97, "choi": 97, "wei": 97, "wi": 97, "diao": 97, "s\u00fcdhof": 97, "brunger": 97, "AT": 97, "26280336": 97, "pmc4607316": 97, "laser": [97, 99], "ginn": 97, "hm": 97, "wagner": 97, "grime": 97, "26057680": 97, "pmc4461207": 97, "biolog": 97, "elif": 97, "25781634": 97, "pmc4397907": 97, "cpv17": 97, "polyhedrin": 97, "ji": 97, "6435": 97, "25751308": 97, "pmc4403592": 97, "25723925": 97, "pmc4344359": 97, "amyloid": 97, "peptid": 97, "mcfarlan": 97, "25664747": 97, "pmc4321489": 97, "25664746": 97, "pmc4321488": 97, "zwart": 97, "ph": 97, "3299": 97, "25478847": 97, "pmc4257623": 97, "gonz\u00e1lez": 97, "aguila": 97, "barn": 97, "baxter": 97, "brehmer": 97, "calero": 97, "ehrensberg": 97, "eriksson": 97, "tl": 97, "feng": 97, "hedman": 97, "hollenbeck": 97, "holton": 97, "keabl": 97, "kobilka": 97, "bk": 97, "kovaleva": 97, "eg": 97, "kruse": 97, "lin": 97, "manglik": 97, "mathew": 97, "ii": 97, "mcphillip": 97, "se": 97, "nelson": 97, "peter": 97, "jw": 97, "smith": 97, "ca": [97, 101], "song": 97, "stevenson": 97, "tsai": 97, "vinetski": 97, "wakatsuki": 97, "zadvornyi": 97, "oa": 97, "zhu": 97, "hodgson": 97, "ko": 97, "acad": 97, "17122": 97, "25362050": 97, "pmc4260607": 97, "bacteri": 97, "gingeri": 97, "goldschmidt": 97, "colleti": 97, "koglin": 97, "je": 97, "gj": 97, "nass": 97, "botha": 97, "doak": 97, "rb": 97, "shoeman": 97, "depont": 97, "park": 97, "hw": 97, "federici": 97, "ba": 97, "schlicht": 97, "12769": 97, "25136092": 97, "pmc4156696": 97, "spectroscopi": 97, "metalloenzym": 97, "kern": 97, "tran": 97, "laksmono": 97, "gul": 97, "sierra": 97, "rg": 97, "rehanek": 97, "erko": 97, "mitzner": 97, "wernet": 97, "bergmann": 97, "yachandra": 97, "philo": 97, "soc": 97, "lond": 97, "20130590": 97, "24914169": 97, "pmc4052878": 97, "mn\u2084ca": 97, "photosynthet": 97, "water": 97, "oxid": 97, "catalyst": 97, "koroidov": 97, "hellmich": 97, "messing": 97, "zouni": 97, "vk": 97, "20130324": 97, "24914152": 97, "pmc4052861": 97, "ibrahim": 97, "han": 97, "lassal": 97, "kaiser": 97, "chatterje": 97, "stan": 97, "gl\u00f6ckner": 97, "lamp": 97, "difior": 97, "milathianaki": 97, "fry": 97, "seibert": 97, "gallo": 97, "uhlig": 97, "sokara": 97, "weng": 97, "skinner": 97, "bogan": 97, "mj": 97, "glatzel": 97, "4371": 97, "25006873": 97, "pmc4151126": 97, "miahnahri": 97, "schafer": 97, "dw": 97, "sellberg": 97, "latim": 97, "24633409": 97, "pmc4008696": 97, "photosystem": 97, "23413188": 97, "pmc3732582": 97, "mcqueen": 97, "ta": 97, "9721": 97, "22665786": 97, "pmc3382516": 97, "conform": 97, "microsecond": 97, "simul": 97, "benschoten": 97, "ah": 97, "17887": 97, "25453071": 97, "pmc4273327": 97, "tightli": 97, "jbluic": 97, "pothineni": 97, "sb": 97, "venugopalan": 97, "ogata": 97, "cm": 97, "hilgart": 97, "stepanov": 97, "sanishvili": 97, "becker": 97, "jl": 97, "fischetti": 97, "rf": 97, "25484844": 97, "pmc4248568": 97, "imagecif": 97, "hj": 97, "deliver": 97, "biostruct": [97, 99], "month": 97, "board": [], "simplic": 98, "cluster_2": 98, "vv": 98, "underli": 98, "batch_siz": 98, "integrated_0": 98, "technolog": 99, "brilliant": 99, "3rd": 99, "tandem": 99, "microfocu": 99, "optic": 99, "brought": 99, "fel": 99, "nano": 99, "tantalis": 99, "prospect": 99, "era": 99, "concomit": 99, "methodologi": 99, "shutterless": 99, "utilis": 99, "techniqu": 99, "gpu": 99, "comprehens": 99, "wp6": 99, "forum": 99, "technic": 99, "survei": 99, "scene": 99, "emphasi": 99, "formal": 99, "todai": 99, "learnt": 99, "trek": 99, "adventur": 99, "wolfgang": 99, "retrospect": 99, "kai": 99, "beaten": 99, "miniut": 99, "tom": 99, "crystfel": 99, "anastassi": 99, "tasso": 99, "perraki": 99, "tbc": 99, "frank": 99, "vondelft": 99, "nick": 99, "individualist": 99, "bullet": 99, "wast": 99, "1976": 99, "loe": 99, "kroon": 99, "batenburg": 99, "eval": 99, "mrc": 100, "dai": 100, "parametr": 100, "12th": 101, "13th": 101, "june": 101, "committe": 101, "juli": 101, "boston": 101, "februari": 101, "22nd": 101, "attende": 101, "4a": 101, "septemb": 101, "4b": 101, "octob": 101, "novemb": 101, "dev20220927": [], "9169": [], "0983": [], "9112": [], "6309": [], "853": 86, "g351b9efc3": [], "dev20221008": [], "7059": [], "6802": [], "2550": [], "g010e9a395": [], "dev20221015": [], "5443": [], "2610": [], "4166": [], "6238": [], "max_experi": 60, "gb4a1ad681": [], "dev20221029": [], "7131": [], "6557": [], "9487": [], "stepwis": 98, "gd37c24234": [], "dev20221105": [], "6755": [], "3488": [], "7312": [], "2292": [], "gb0f0dc3b7": [], "dev20221112": [], "5550": [], "4155": [], "5159": [], "g543180896": [], "6693": [], "1050": [], "7570": [], "3967": [], "g5304ce1d9": [], "9264": [], "7456": [], "7217": [], "7405": [], "2082": [], "9007": [], "gdb80b67c7": [], "6932": [], "8069": [], "9372": [], "gd177bc21c": [], "5461": [], "4797": [], "4952": [], "3427": [], "7568": [], "0890": [], "6393": [], "6407": [], "8515": [], "7015": [], "5781": [], "6770": [], "8372": [], "2023": 86, "6941": [], "dosedecayscalingmodel": 15, "analytical_correct": 65, "5271": [], "0860": [], "4323": [], "additional_stat": 65, "g9e9a7f555": [], "0063": [41, 86], "0043": [41, 86], "00098": [41, 86], "4023": 84, "16949": 84, "002058": 84, "0001998": 84, "0656": 84, "069573": 84, "075491": 84, "058323": 84, "069797": 84, "05713": 84, "055477": 84, "053549": 84, "051594": 84, "058974": 84, "11424": 84, "050231": 84, "058126": 84, "049663": 84, "057788": 84, "10679": 84, "049507": 84, "10619": 84, "049393": 84, "049287": 84, "10617": 84, "049219": 84, "057685": 84, "0492": 84, "10635": 84, "057687": 84, "28605": 84, "21271": 84, "00196911": 84, "00340589": 84, "000205118": 84, "00340611": 84, "00105738": 84, "765": 84, "4078": 84, "4791": 84, "198714": 84, "329174": 84, "4812": 84, "1342": 84, "52200": 84, "2536": 84, "10252": 84, "15145": 84, "16140": 84, "6022": 84, "169055": 84, "24297": 84, "199395": 84, "176558": 84, "60278": 84, "50032": 84, "49390": 84, "176235": 84, "2493": 84, "174581": 84, "174532": 84, "15287": 84, "48772": 84, "49961": 84, "49195": 84, "86962": 84, "84699": 84, "68902": 84, "64811": 84, "61143": 84, "59561": 84, "55316": 84, "53633": 84, "53407": 84, "53263": 84, "53176": 84, "53061": 84, "52974": 84, "52887": 84, "52842": 84, "52804": 84, "52761": 84, "52734": 84, "52714": 84, "52701": 84, "52687": 84, "52644": 84, "52596": 84, "52554": 84, "5247": 84, "52445": 84, "52397": 84, "52345": 84, "52311": 84, "52264": 84, "52191": 84, "52119": 84, "52074": 84, "52026": 84, "51956": 84, "51878": 84, "51862": 84, "51821": 84, "51811": 84, "51795": 84, "5179": 84, "99453": 84, "09768": 84, "99161": 84, "12619": 84, "99366": 84, "9945": 84, "09771": 84, "99429": 84, "09844": 84, "99298": 84, "11241": 84, "49935": 84, "58134": 84, "57988": 84, "57059": 84, "56975": 84, "56933": 84, "56899": 84, "56849": 84, "56838": 84, "56826": 84, "56809": 84, "56798": 84, "56788": 84, "56778": 84, "5677": 84, "56765": 84, "52355": 84, "05329": 84, "2425": 84, "3774": 84, "3045": 84, "49941": 84, "97254": 84, "96613": 84, "95998": 84, "95477": 84, "95249": 84, "95155": 84, "95092": 84, "95067": 84, "95063": 84, "49883": 84, "05341": 84, "2416": 84, "1755": 84, "848": 84, "3503": 84, "3773": 84, "2993": 84, "3712": [], "1524": 84, "15826": 84, "15548": 84, "16023": 84, "14920": 84, "15071": 84, "10702": 84, "821": 84, "174263": 84, "836": 84, "121612": 84, "6709": 84, "4785": 84, "34220": 84, "1785": 84, "216892": 86, "21172": 86, "20606": 86, "20449": 86, "20533": 86, "20413": 86, "20254": 86, "12326": 86, "10344": 86, "8654": 86, "53971": 86, "79277": 86, "05869": 86, "10921": 86, "2943": 86, "05532": 86, "99902": 86, "06075": 86, "05407": 86, "99922": 86, "0542": 86, "05396": 86, "99913": 86, "05721": 86, "52647": 86, "0449": 86, "0447": 86, "75280": 86, "06521": 86, "10328": 86, "2760": 86, "12295": 86, "21107": 86, "29074": 86, "31603": 86, "52643": 86, "0463": 86, "0435": 86, "0433": 86, "0432": 86, "75054": 86, "06534": 86, "21129": 86, "29041": 86, "31551": 86, "26163": 86, "16221": 86, "21420": 86, "20681": 86, "20830": 86, "20701": 86, "2353": 86, "06057": 86, "99925": 86, "05389": 86, "05536": 86, "05382": 86, "99917": 86, "05703": 86, "52160": 86, "0417": 86, "75061": 86, "06536": 86, "10223": 86, "2862": 86, "12375": 86, "29042": 86, "31552": 86, "26175": 86, "0414": 86, "0408": 86, "0406": 86, "75486": 86, "06465": 86, "10191": 86, "21130": 86, "31531": 86, "26138": 86, "16235": 86, "3306": [], "21301": 86, "949": 86, "219141": 86, "54690": 86, "926": 86, "21290": 86, "219059": 86, "5517": 86, "155114": 88, "150962": 88, "150234": 88, "8289": [], "tchon": 0, "gdf40861c2": [], "7809": [], "5599": [], "gfd41200bc": [], "6422": [], "invalidphilerror": [33, 34], "g0ebd622c2": [], "2747": [], "6898": [], "gcb7ac0357": [], "1775": [], "3946": [], "7162": [], "ge23117f50": [], "4358": [], "2470": [], "7706": [], "5077": [], "anom_multipl": 34, "mergedhalfdataset": 34, "ge28409c06": [], "2441": [], "8254": [], "3878": [], "gfe1418851": [], "3257": [], "5605": [], "resolution_r": 46, "fontsiz": 46, "horizont": 2, "decis": 2, "gf2aaec4ec": [], "x0692_1_": 84, "5092": [], "5360": [], "i03": 88, "mx19576": 88, "c2sum_1_": 88, "r_free_arrai": 34, "g39acdb18f": [], "r_free_flag": 74, "use_lattice_symmetri": 74, "use_dataman_shel": 74, "n_shell": 74, "relative_to_complete_set": 74, "bold": 74, "noauto": 74, "max_fre": 74, "bias": 74, "old_test_flag_valu": 74, "guess": 74, "phenix": 74, "d_ep": 74, "4180": [], "7317": [], "3195": [], "hkl_base": 86, "freer_flag": 86, "0136": [], "g18146d1d6": [41, 84, 86, 88], "2738": 84, "9604": 86, "4433": 86, "1970": 88}, "objects": {"dials.algorithms": [[10, 0, 0, "-", "background"], [11, 0, 0, "-", "indexing"], [13, 0, 0, "-", "profile_model"], [15, 0, 0, "-", "scaling"], [18, 0, 0, "-", "symmetry"]], "dials.algorithms.background": [[10, 1, 1, "", "RadialAverage"], [10, 3, 1, "", "set_shoebox_background_value"]], "dials.algorithms.background.RadialAverage": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "add"], [10, 2, 1, "", "inv_d2"], [10, 2, 1, "", "mean"], [10, 2, 1, "", "weight"]], "dials.algorithms.indexing": [[11, 4, 1, "", "DialsIndexError"], [11, 4, 1, "", "DialsIndexRefineError"], [11, 0, 0, "-", "assign_indices"], [11, 0, 0, "-", "basis_vector_search"], [11, 0, 0, "-", "compare_orientation_matrices"], [11, 0, 0, "-", "indexer"], [11, 0, 0, "-", "lattice_search"], [11, 0, 0, "-", "max_cell"], [11, 0, 0, "-", "model_evaluation"], [11, 0, 0, "-", "nearest_neighbor"], [11, 0, 0, "-", "refinement"], [11, 0, 0, "-", "stills_indexer"], [11, 0, 0, "-", "symmetry"]], "dials.algorithms.indexing.assign_indices": [[11, 1, 1, "", "AssignIndicesGlobal"], [11, 1, 1, "", "AssignIndicesLocal"], [11, 1, 1, "", "AssignIndicesStrategy"]], "dials.algorithms.indexing.assign_indices.AssignIndicesGlobal": [[11, 2, 1, "", "__init__"]], "dials.algorithms.indexing.assign_indices.AssignIndicesLocal": [[11, 2, 1, "", "__init__"]], "dials.algorithms.indexing.assign_indices.AssignIndicesStrategy": [[11, 2, 1, "", "__init__"]], "dials.algorithms.indexing.basis_vector_search": [[11, 1, 1, "", "FFT1D"], [11, 1, 1, "", "FFT3D"], [11, 1, 1, "", "RealSpaceGridSearch"], [11, 1, 1, "", "Strategy"], [11, 0, 0, "-", "combinations"], [11, 0, 0, "-", "optimise"]], "dials.algorithms.indexing.basis_vector_search.FFT1D": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_basis_vectors"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.basis_vector_search.FFT3D": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_basis_vectors"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "compute_functional"], [11, 2, 1, "", "find_basis_vectors"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"], [11, 2, 1, "", "score_vectors"], [11, 6, 1, "", "search_directions"], [11, 6, 1, "", "search_vectors"]], "dials.algorithms.indexing.basis_vector_search.Strategy": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_basis_vectors"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.basis_vector_search.combinations": [[11, 3, 1, "", "candidate_orientation_matrices"], [11, 3, 1, "", "filter_known_symmetry"], [11, 3, 1, "", "filter_similar_orientations"]], "dials.algorithms.indexing.basis_vector_search.optimise": [[11, 1, 1, "", "BasisVectorMinimiser"], [11, 1, 1, "", "BasisVectorTarget"], [11, 3, 1, "", "optimise_basis_vectors"]], "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorMinimiser": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "compute_functional_and_gradients"]], "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "compute_functional"], [11, 2, 1, "", "compute_functional_and_gradients"]], "dials.algorithms.indexing.compare_orientation_matrices": [[11, 3, 1, "", "difference_rotation_matrix_axis_angle"], [11, 3, 1, "", "rotation_matrix_differences"]], "dials.algorithms.indexing.indexer": [[11, 1, 1, "", "Indexer"], [11, 3, 1, "", "apply_hkl_offset"]], "dials.algorithms.indexing.indexer.Indexer": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "export_as_json"], [11, 2, 1, "", "export_reflections"], [11, 2, 1, "", "find_lattices"], [11, 2, 1, "", "find_max_cell"], [11, 2, 1, "", "from_parameters"], [11, 2, 1, "", "index"], [11, 2, 1, "", "index_reflections"], [11, 2, 1, "", "refine"], [11, 2, 1, "", "setup_indexing"], [11, 2, 1, "", "show_experiments"]], "dials.algorithms.indexing.lattice_search": [[11, 1, 1, "", "LowResSpotMatch"], [11, 1, 1, "", "Strategy"]], "dials.algorithms.indexing.lattice_search.LowResSpotMatch": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_crystal_models"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.lattice_search.Strategy": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_crystal_models"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.max_cell": [[11, 3, 1, "", "find_max_cell"]], "dials.algorithms.indexing.model_evaluation": [[11, 1, 1, "", "ModelEvaluation"], [11, 1, 1, "", "ModelRank"], [11, 1, 1, "", "ModelRankFilter"], [11, 1, 1, "", "ModelRankWeighted"], [11, 1, 1, "", "Result"], [11, 1, 1, "", "Strategy"], [11, 3, 1, "", "filter_doubled_cell"]], "dials.algorithms.indexing.model_evaluation.ModelEvaluation": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "evaluate"]], "dials.algorithms.indexing.model_evaluation.ModelRank": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "append"], [11, 2, 1, "", "best_model"], [11, 2, 1, "", "extend"]], "dials.algorithms.indexing.model_evaluation.ModelRankFilter": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "append"], [11, 2, 1, "", "best_model"], [11, 2, 1, "", "extend"], [11, 2, 1, "", "filter_by_likelihood"], [11, 2, 1, "", "filter_by_n_indexed"], [11, 2, 1, "", "filter_by_volume"], [11, 2, 1, "", "update_analysis"]], "dials.algorithms.indexing.model_evaluation.ModelRankWeighted": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "best_model"], [11, 2, 1, "", "combined_scores"], [11, 2, 1, "", "score_by_fraction_indexed"], [11, 2, 1, "", "score_by_rmsd_xy"], [11, 2, 1, "", "score_by_volume"]], "dials.algorithms.indexing.model_evaluation.Result": [[11, 5, 1, "", "crystal"], [11, 5, 1, "", "fraction_indexed"], [11, 5, 1, "", "hkl_offset"], [11, 5, 1, "", "model_likelihood"], [11, 5, 1, "", "n_indexed"], [11, 5, 1, "", "rmsds"]], "dials.algorithms.indexing.model_evaluation.Strategy": [[11, 2, 1, "", "evaluate"]], "dials.algorithms.indexing.nearest_neighbor": [[11, 1, 1, "", "NeighborAnalysis"]], "dials.algorithms.indexing.nearest_neighbor.NeighborAnalysis": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "plot_histogram"]], "dials.algorithms.indexing.refinement": [[11, 3, 1, "", "refine"]], "dials.algorithms.indexing.stills_indexer": [[11, 1, 1, "", "StillsIndexer"], [11, 1, 1, "", "StillsIndexerBasisVectorSearch"], [11, 1, 1, "", "StillsIndexerKnownOrientation"], [11, 1, 1, "", "StillsIndexerLatticeSearch"], [11, 3, 1, "", "calc_2D_rmsd_and_displacements"], [11, 3, 1, "", "e_refine"], [11, 3, 1, "", "plot_displacements"]], "dials.algorithms.indexing.stills_indexer.StillsIndexer": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "choose_best_orientation_matrix"], [11, 2, 1, "", "experiment_list_for_crystal"], [11, 2, 1, "", "identify_outliers"], [11, 2, 1, "", "index"], [11, 2, 1, "", "refine"]], "dials.algorithms.indexing.symmetry": [[11, 1, 1, "", "SymmetryHandler"], [11, 3, 1, "", "calc_acentric_subgroups"], [11, 3, 1, "", "find_matching_symmetry"], [11, 3, 1, "", "groups_cache"], [11, 3, 1, "", "metric_supergroup"]], "dials.algorithms.indexing.symmetry.SymmetryHandler": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "apply_symmetry"]], "dials.algorithms.integration": [[12, 0, 0, "-", "integrator"]], "dials.algorithms.integration.integrator": [[12, 1, 1, "", "Executor"], [12, 1, 1, "", "Integrator"], [12, 1, 1, "", "Integrator2D"], [12, 1, 1, "", "Integrator3D"], [12, 1, 1, "", "Integrator3DThreaded"], [12, 1, 1, "", "IntegratorExecutor"], [12, 1, 1, "", "IntegratorFlat3D"], [12, 1, 1, "", "IntegratorSingle2D"], [12, 1, 1, "", "IntegratorStills"], [12, 1, 1, "", "JobList"], [12, 1, 1, "", "Parameters"], [12, 1, 1, "", "Processor2D"], [12, 1, 1, "", "Processor3D"], [12, 1, 1, "", "ProcessorFlat3D"], [12, 1, 1, "", "ProcessorSingle2D"], [12, 1, 1, "", "ProcessorStills"], [12, 1, 1, "", "ProfileModellerExecutor"], [12, 1, 1, "", "ProfileValidatorExecutor"], [12, 1, 1, "", "ReflectionManager"], [12, 3, 1, "", "frame_hist"], [12, 3, 1, "", "generate_phil_scope"], [12, 3, 1, "", "hist"], [12, 3, 1, "", "nframes_hist"]], "dials.algorithms.integration.integrator.Executor": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "process"]], "dials.algorithms.integration.integrator.Integrator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "fit_profiles"], [12, 2, 1, "", "integrate"], [12, 2, 1, "", "report"], [12, 2, 1, "", "summary"]], "dials.algorithms.integration.integrator.Integrator2D": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.Integrator3D": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.Integrator3DThreaded": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "finalise"], [12, 2, 1, "", "initialise"], [12, 2, 1, "", "integrate"], [12, 2, 1, "", "report"], [12, 2, 1, "", "summary"]], "dials.algorithms.integration.integrator.IntegratorExecutor": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "data"], [12, 2, 1, "", "finalize"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "process"]], "dials.algorithms.integration.integrator.IntegratorFlat3D": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.IntegratorSingle2D": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.IntegratorStills": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.JobList": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "add"], [12, 2, 1, "", "shoebox_memory"], [12, 2, 1, "", "split"]], "dials.algorithms.integration.integrator.Parameters": [[12, 1, 1, "", "Filter"], [12, 1, 1, "", "Profile"], [12, 2, 1, "", "__init__"], [12, 2, 1, "", "from_phil"]], "dials.algorithms.integration.integrator.Parameters.Filter": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.Parameters.Profile": [[12, 1, 1, "", "Validation"], [12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.Parameters.Profile.Validation": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.Processor2D": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.Processor3D": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.ProcessorFlat3D": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.ProcessorSingle2D": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.ProcessorStills": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.ProfileModellerExecutor": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "data"], [12, 2, 1, "", "finalize"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "process"]], "dials.algorithms.integration.integrator.ProfileValidatorExecutor": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "data"], [12, 2, 1, "", "finalize"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "process"]], "dials.algorithms.integration.integrator.ReflectionManager": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "accumulate"], [12, 2, 1, "", "data"], [12, 2, 1, "", "finished"], [12, 2, 1, "", "job"], [12, 2, 1, "", "num_reflections"], [12, 2, 1, "", "split"]], "dials.algorithms.refinement": [[14, 0, 0, "-", "engine"], [14, 0, 0, "-", "refiner"], [14, 0, 0, "-", "reflection_manager"], [14, 0, 0, "-", "target"], [14, 0, 0, "-", "target_stills"], [14, 0, 0, "-", "weighting_strategies"]], "dials.algorithms.refinement.engine": [[14, 1, 1, "", "AdaptLbfgs"], [14, 1, 1, "", "AdaptLstbx"], [14, 1, 1, "", "DisableMPmixin"], [14, 1, 1, "", "GaussNewtonIterations"], [14, 1, 1, "", "Journal"], [14, 1, 1, "", "LBFGScurvs"], [14, 1, 1, "", "LevenbergMarquardtIterations"], [14, 1, 1, "", "Refinery"], [14, 1, 1, "", "SimpleLBFGS"]], "dials.algorithms.refinement.engine.AdaptLbfgs": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "callback_after_step"], [14, 2, 1, "", "compute_functional_and_gradients"], [14, 2, 1, "", "compute_functional_gradients_and_curvatures"], [14, 2, 1, "", "run_lbfgs"]], "dials.algorithms.refinement.engine.AdaptLstbx": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "build_up"], [14, 2, 1, "", "calculate_esds"], [14, 2, 1, "", "parameter_vector_norm"], [14, 2, 1, "", "restart"], [14, 2, 1, "", "set_cholesky_factor"], [14, 2, 1, "", "step_backward"], [14, 2, 1, "", "step_forward"]], "dials.algorithms.refinement.engine.DisableMPmixin": [[14, 2, 1, "", "set_nproc"]], "dials.algorithms.refinement.engine.GaussNewtonIterations": [[14, 2, 1, "", "__init__"], [14, 5, 1, "", "convergence_as_shift_over_esd"], [14, 5, 1, "", "damping_value"], [14, 5, 1, "", "gradient_threshold"], [14, 5, 1, "", "max_shift_over_esd"], [14, 2, 1, "", "run"], [14, 5, 1, "", "step_threshold"]], "dials.algorithms.refinement.engine.Journal": [[14, 2, 1, "", "add_column"], [14, 2, 1, "", "add_row"], [14, 2, 1, "", "del_last_row"], [14, 2, 1, "", "from_json_file"], [14, 2, 1, "", "get_nrows"], [14, 5, 1, "", "reason_for_termination"], [14, 2, 1, "", "set_last_cell"], [14, 2, 1, "", "to_json_file"]], "dials.algorithms.refinement.engine.LBFGScurvs": [[14, 2, 1, "", "compute_functional_gradients_diag"], [14, 2, 1, "", "run"]], "dials.algorithms.refinement.engine.LevenbergMarquardtIterations": [[14, 2, 1, "", "add_constant_to_diagonal"], [14, 6, 1, "", "mu"], [14, 2, 1, "", "report_progress"], [14, 2, 1, "", "run"], [14, 2, 1, "", "setup_mu"], [14, 5, 1, "", "tau"]], "dials.algorithms.refinement.engine.Refinery": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "get_correlation_matrix_for_step"], [14, 2, 1, "", "get_num_steps"], [14, 2, 1, "", "jacobian_condition_number"], [14, 2, 1, "", "prepare_for_step"], [14, 2, 1, "", "run"], [14, 2, 1, "", "set_nproc"], [14, 2, 1, "", "split_jacobian_into_blocks"], [14, 2, 1, "", "test_for_termination"], [14, 2, 1, "", "test_objective_increasing_but_not_nref"], [14, 2, 1, "", "test_rmsd_convergence"], [14, 2, 1, "", "update_journal"]], "dials.algorithms.refinement.engine.SimpleLBFGS": [[14, 2, 1, "", "run"]], "dials.algorithms.refinement.refiner": [[14, 1, 1, "", "Refiner"], [14, 1, 1, "", "RefinerFactory"], [14, 1, 1, "", "ScanVaryingRefiner"]], "dials.algorithms.refinement.refiner.Refiner": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "get_experiments"], [14, 2, 1, "", "get_free_reflections"], [14, 2, 1, "", "get_matches"], [14, 2, 1, "", "get_param_reporter"], [14, 2, 1, "", "get_parameter_correlation_matrix"], [14, 6, 1, "", "history"], [14, 2, 1, "", "predict_for_indexed"], [14, 2, 1, "", "predict_for_reflection_table"], [14, 2, 1, "", "print_exp_rmsd_table"], [14, 2, 1, "", "print_out_of_sample_rmsd_table"], [14, 2, 1, "", "print_panel_rmsd_table"], [14, 2, 1, "", "print_step_table"], [14, 2, 1, "", "rmsds"], [14, 2, 1, "", "rmsds_for_reflection_table"], [14, 2, 1, "", "run"], [14, 2, 1, "", "selection_used_for_refinement"]], "dials.algorithms.refinement.refiner.RefinerFactory": [[14, 2, 1, "", "config_refinery"], [14, 2, 1, "", "config_restraints"], [14, 2, 1, "", "config_sparse"], [14, 2, 1, "", "config_target"], [14, 2, 1, "", "from_parameters_data_experiments"]], "dials.algorithms.refinement.reflection_manager": [[14, 1, 1, "", "BlockCalculator"], [14, 1, 1, "", "ReflectionManager"], [14, 1, 1, "", "ReflectionManagerFactory"], [14, 1, 1, "", "StillsReflectionManager"]], "dials.algorithms.refinement.reflection_manager.BlockCalculator": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "per_image"], [14, 2, 1, "", "per_width"]], "dials.algorithms.refinement.reflection_manager.ReflectionManager": [[14, 2, 1, "", "__init__"], [14, 5, 1, "", "experiment_type"], [14, 2, 1, "", "filter_obs"], [14, 2, 1, "", "finalise"], [14, 2, 1, "", "get_accepted_refs_size"], [14, 2, 1, "", "get_centroid_analyser"], [14, 2, 1, "", "get_free_reflections"], [14, 2, 1, "", "get_indexed"], [14, 2, 1, "", "get_matches"], [14, 2, 1, "", "get_obs"], [14, 2, 1, "", "get_sample_size"], [14, 2, 1, "", "print_stats_on_matches"], [14, 2, 1, "", "reset_accepted_reflections"]], "dials.algorithms.refinement.reflection_manager.ReflectionManagerFactory": [[14, 2, 1, "", "from_parameters_reflections_experiments"]], "dials.algorithms.refinement.reflection_manager.StillsReflectionManager": [[14, 5, 1, "", "experiment_type"], [14, 2, 1, "", "print_stats_on_matches"]], "dials.algorithms.refinement.target": [[14, 1, 1, "", "LeastSquaresPositionalResidualWithRmsdCutoff"], [14, 1, 1, "", "LeastSquaresPositionalResidualWithRmsdCutoffSparse"], [14, 1, 1, "", "SparseGradientsMixin"], [14, 1, 1, "", "Target"], [14, 1, 1, "", "TargetFactory"]], "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoff": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "achieved"]], "dials.algorithms.refinement.target.Target": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "achieved"], [14, 2, 1, "", "calculate_gradients"], [14, 2, 1, "", "compute_functional_gradients_and_curvatures"], [14, 2, 1, "", "compute_residuals"], [14, 2, 1, "", "compute_residuals_and_gradients"], [14, 2, 1, "", "compute_restraints_functional_gradients_and_curvatures"], [14, 2, 1, "", "compute_restraints_residuals_and_gradients"], [14, 6, 1, "", "dim"], [14, 2, 1, "", "get_num_matches"], [14, 2, 1, "", "get_num_matches_for_experiment"], [14, 2, 1, "", "get_num_matches_for_panel"], [14, 2, 1, "", "predict"], [14, 2, 1, "", "predict_for_free_reflections"], [14, 2, 1, "", "predict_for_reflection_table"], [14, 5, 1, "", "rmsd_names"], [14, 5, 1, "", "rmsd_units"], [14, 2, 1, "", "rmsds"], [14, 2, 1, "", "rmsds_for_experiment"], [14, 2, 1, "", "rmsds_for_panel"], [14, 2, 1, "", "rmsds_for_reflection_table"], [14, 2, 1, "", "split_matches_into_blocks"], [14, 2, 1, "", "update_matches"]], "dials.algorithms.refinement.target.TargetFactory": [[14, 2, 1, "", "from_parameters_and_experiments"]], "dials.algorithms.refinement.target_stills": [[14, 1, 1, "", "LeastSquaresStillsResidualWithRmsdCutoff"], [14, 1, 1, "", "LeastSquaresStillsResidualWithRmsdCutoffSparse"]], "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "achieved"], [14, 2, 1, "", "predict_for_reflection_table"], [14, 5, 1, "", "rmsd_names"], [14, 5, 1, "", "rmsd_units"]], "dials.algorithms.refinement.weighting_strategies": [[14, 1, 1, "", "ConstantWeightingStrategy"], [14, 1, 1, "", "ExternalDelPsiWeightingStrategy"], [14, 1, 1, "", "StatisticalWeightingStrategy"], [14, 1, 1, "", "StillsWeightingStrategy"]], "dials.algorithms.refinement.weighting_strategies.ConstantWeightingStrategy": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "calculate_weights"]], "dials.algorithms.refinement.weighting_strategies.ExternalDelPsiWeightingStrategy": [[14, 2, 1, "", "calculate_weights"]], "dials.algorithms.refinement.weighting_strategies.StatisticalWeightingStrategy": [[14, 2, 1, "", "calculate_weights"]], "dials.algorithms.refinement.weighting_strategies.StillsWeightingStrategy": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "calculate_weights"]], "dials.algorithms.scaling.model": [[15, 0, 0, "-", "model"]], "dials.algorithms.scaling.model.model": [[15, 1, 1, "", "ArrayScalingModel"], [15, 1, 1, "", "DoseDecay"], [15, 1, 1, "", "KBScalingModel"], [15, 1, 1, "", "PhysicalScalingModel"], [15, 1, 1, "", "ScalingModelBase"], [15, 3, 1, "", "calc_n_param_from_bins"], [15, 3, 1, "", "calculate_new_offset"], [15, 3, 1, "", "determine_auto_absorption_params"], [15, 3, 1, "", "initialise_smooth_input"], [15, 3, 1, "", "make_combined_plots"], [15, 3, 1, "", "plot_scaling_models"]], "dials.algorithms.scaling.model.model.ArrayScalingModel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "configure_components"], [15, 6, 1, "", "consecutive_refinement_order"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 5, 1, "", "id_"], [15, 2, 1, "", "limit_image_range"], [15, 5, 1, "", "phil_scope"], [15, 2, 1, "", "plot_model_components"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling.model.model.DoseDecay": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "configure_components"], [15, 6, 1, "", "consecutive_refinement_order"], [15, 2, 1, "", "fix_initial_parameter"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "get_shared_components"], [15, 5, 1, "", "id_"], [15, 2, 1, "", "limit_image_range"], [15, 5, 1, "", "phil_scope"], [15, 2, 1, "", "plot_model_components"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling.model.model.KBScalingModel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "configure_components"], [15, 6, 1, "", "consecutive_refinement_order"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 5, 1, "", "id_"], [15, 5, 1, "", "phil_scope"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling.model.model.PhysicalScalingModel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "configure_components"], [15, 6, 1, "", "consecutive_refinement_order"], [15, 2, 1, "", "fix_initial_parameter"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "get_shared_components"], [15, 5, 1, "", "id_"], [15, 2, 1, "", "limit_image_range"], [15, 5, 1, "", "phil_scope"], [15, 2, 1, "", "plot_model_components"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling.model.model.ScalingModelBase": [[15, 2, 1, "", "__init__"], [15, 6, 1, "", "components"], [15, 6, 1, "", "configdict"], [15, 2, 1, "", "configure_components"], [15, 2, 1, "", "consecutive_refinement_order"], [15, 6, 1, "", "error_model"], [15, 2, 1, "", "fix_initial_parameter"], [15, 6, 1, "", "fixed_components"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "get_shared_components"], [15, 5, 1, "", "id_"], [15, 6, 1, "", "is_scaled"], [15, 2, 1, "", "limit_image_range"], [15, 2, 1, "", "load_error_model"], [15, 6, 1, "", "n_params"], [15, 2, 1, "", "plot_model_components"], [15, 2, 1, "", "record_intensity_combination_Imid"], [15, 2, 1, "", "set_error_model"], [15, 2, 1, "", "set_scaling_model_as_scaled"], [15, 2, 1, "", "set_scaling_model_as_unscaled"], [15, 2, 1, "", "set_valid_image_range"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling": [[15, 0, 0, "-", "outlier_rejection"]], "dials.algorithms.scaling.outlier_rejection": [[15, 1, 1, "", "NormDevOutlierRejection"], [15, 1, 1, "", "OutlierRejectionBase"], [15, 1, 1, "", "SimpleNormDevOutlierRejection"], [15, 1, 1, "", "TargetedOutlierRejection"], [15, 3, 1, "", "determine_Esq_outlier_index_arrays"], [15, 3, 1, "", "determine_outlier_index_arrays"], [15, 3, 1, "", "reject_outliers"]], "dials.algorithms.scaling.outlier_rejection.NormDevOutlierRejection": [[15, 2, 1, "", "__init__"]], "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase": [[15, 2, 1, "", "__init__"], [15, 5, 1, "", "final_outlier_arrays"], [15, 2, 1, "", "run"]], "dials.algorithms.scaling.outlier_rejection.SimpleNormDevOutlierRejection": [[15, 2, 1, "", "__init__"]], "dials.algorithms.scaling.outlier_rejection.TargetedOutlierRejection": [[15, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding": [[16, 0, 0, "-", "factory"], [16, 0, 0, "-", "finder"]], "dials.algorithms.spot_finding.factory": [[16, 1, 1, "", "BackgroundGradientFilter"], [16, 1, 1, "", "FilterRunner"], [16, 1, 1, "", "PeakCentroidDistanceFilter"], [16, 1, 1, "", "SpotDensityFilter"], [16, 1, 1, "", "SpotFinderFactory"], [16, 3, 1, "", "generate_phil_scope"]], "dials.algorithms.spot_finding.factory.BackgroundGradientFilter": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "run"]], "dials.algorithms.spot_finding.factory.FilterRunner": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "check_flags"]], "dials.algorithms.spot_finding.factory.PeakCentroidDistanceFilter": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "run"]], "dials.algorithms.spot_finding.factory.SpotDensityFilter": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "run"]], "dials.algorithms.spot_finding.factory.SpotFinderFactory": [[16, 2, 1, "", "configure_filter"], [16, 2, 1, "", "configure_threshold"], [16, 2, 1, "", "from_parameters"], [16, 2, 1, "", "load_image"]], "dials.algorithms.spot_finding.finder": [[16, 1, 1, "", "ExtractPixelsFromImage"], [16, 1, 1, "", "ExtractPixelsFromImage2DNoShoeboxes"], [16, 1, 1, "", "ExtractSpots"], [16, 1, 1, "", "ExtractSpotsParallelTask"], [16, 1, 1, "", "SpotFinder"], [16, 3, 1, "", "pixel_list_to_reflection_table"], [16, 3, 1, "", "pixel_list_to_shoeboxes"], [16, 3, 1, "", "shoeboxes_to_reflection_table"]], "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage2DNoShoeboxes": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding.finder.ExtractSpots": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding.finder.ExtractSpotsParallelTask": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding.finder.SpotFinder": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "find_spots"]], "dials.algorithms.spot_prediction": [[17, 0, 0, "-", "reflection_predictor"]], "dials.algorithms.spot_prediction.reflection_predictor": [[17, 1, 1, "", "ReflectionPredictor"]], "dials.algorithms.spot_prediction.reflection_predictor.ReflectionPredictor": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "predictor"]], "dials.algorithms.symmetry": [[18, 0, 0, "-", "cosym"], [18, 0, 0, "-", "laue_group"], [18, 0, 0, "-", "reindex_to_reference"], [18, 3, 1, "", "resolution_filter_from_array"], [18, 3, 1, "", "resolution_filter_from_reflections_experiments"], [18, 1, 1, "", "symmetry_base"]], "dials.algorithms.symmetry.cosym": [[18, 1, 1, "", "CosymAnalysis"], [18, 1, 1, "", "ScoreSubGroup"], [18, 1, 1, "", "ScoreSymmetryElement"], [18, 1, 1, "", "SymmetryAnalysis"], [18, 0, 0, "-", "engine"], [18, 3, 1, "", "extract_reference_intensities"], [18, 0, 0, "-", "target"]], "dials.algorithms.symmetry.cosym.CosymAnalysis": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 2, 1, "", "as_json"], [18, 2, 1, "", "run"]], "dials.algorithms.symmetry.cosym.ScoreSubGroup": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 6, 1, "", "stars"]], "dials.algorithms.symmetry.cosym.ScoreSymmetryElement": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 6, 1, "", "stars"]], "dials.algorithms.symmetry.cosym.SymmetryAnalysis": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 2, 1, "", "subgroups_table"], [18, 2, 1, "", "summary_table"], [18, 2, 1, "", "sym_ops_table"]], "dials.algorithms.symmetry.cosym.engine": [[18, 1, 1, "", "lbfgs_with_curvs"], [18, 3, 1, "", "minimize_scipy"], [18, 3, 1, "", "minimize_scitbx_lbfgs"]], "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "callback_after_step"], [18, 2, 1, "", "compute_functional_and_gradients"], [18, 2, 1, "", "compute_functional_gradients_and_curvatures"], [18, 2, 1, "", "compute_functional_gradients_diag"]], "dials.algorithms.symmetry.cosym.target": [[18, 1, 1, "", "Target"]], "dials.algorithms.symmetry.cosym.target.Target": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "compute_functional"], [18, 2, 1, "", "compute_gradients"], [18, 2, 1, "", "compute_gradients_fd"], [18, 2, 1, "", "curvatures"], [18, 2, 1, "", "curvatures_fd"], [18, 5, 1, "", "dim"], [18, 2, 1, "", "set_dimensions"]], "dials.algorithms.symmetry.laue_group": [[18, 1, 1, "", "CorrelationCoefficientAccumulator"], [18, 1, 1, "", "LaueGroupAnalysis"], [18, 1, 1, "", "ScoreCorrelationCoefficient"], [18, 1, 1, "", "ScoreSubGroup"], [18, 1, 1, "", "ScoreSymmetryElement"], [18, 3, 1, "", "trunccauchy_pdf"]], "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "accumulate"], [18, 2, 1, "", "coefficient"], [18, 2, 1, "", "denominator"], [18, 2, 1, "", "n"], [18, 2, 1, "", "numerator"]], "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 2, 1, "", "as_json"]], "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient": [[18, 2, 1, "", "__init__"], [18, 6, 1, "", "p_cc_given_not_s"], [18, 6, 1, "", "p_cc_given_s"], [18, 6, 1, "", "p_s_given_cc"]], "dials.algorithms.symmetry.laue_group.ScoreSubGroup": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"]], "dials.algorithms.symmetry.laue_group.ScoreSymmetryElement": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"]], "dials.algorithms.symmetry.reindex_to_reference": [[18, 3, 1, "", "determine_reindex_operator_against_reference"]], "dials.algorithms.symmetry.symmetry_base": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "kernel_normalisation"], [18, 2, 1, "", "ml_aniso_normalisation"], [18, 2, 1, "", "ml_iso_normalisation"]], "dials.array_family": [[20, 0, 0, "-", "flex"]], "dials.extensions": [[32, 0, 0, "-", "dispersion_spotfinder_threshold_ext"], [32, 0, 0, "-", "gaussian_rs_profile_model_ext"], [32, 0, 0, "-", "null_background_ext"], [32, 0, 0, "-", "simple_background_ext"], [32, 0, 0, "-", "simple_centroid_ext"]], "dials.extensions.dispersion_spotfinder_threshold_ext": [[32, 1, 1, "", "DispersionSpotFinderThresholdExt"], [32, 3, 1, "", "estimate_global_threshold"]], "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "compute_threshold"], [32, 5, 1, "", "name"], [32, 2, 1, "", "phil"]], "dials.extensions.gaussian_rs_profile_model_ext": [[32, 1, 1, "", "GaussianRSProfileModelExt"]], "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt": [[32, 2, 1, "", "algorithm"], [32, 5, 1, "", "default"], [32, 2, 1, "", "from_dict"], [32, 5, 1, "", "name"], [32, 2, 1, "", "phil"]], "dials.extensions.null_background_ext": [[32, 1, 1, "", "NullBackgroundExt"]], "dials.extensions.null_background_ext.NullBackgroundExt": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "compute_background"], [32, 5, 1, "", "name"]], "dials.extensions.simple_background_ext": [[32, 1, 1, "", "SimpleBackgroundExt"]], "dials.extensions.simple_background_ext.SimpleBackgroundExt": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "compute_background"], [32, 5, 1, "", "name"], [32, 2, 1, "", "phil"]], "dials.extensions.simple_centroid_ext": [[32, 1, 1, "", "SimpleCentroidExt"]], "dials.extensions.simple_centroid_ext.SimpleCentroidExt": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "compute_centroid"], [32, 5, 1, "", "default"], [32, 5, 1, "", "name"]], "dials.util": [[34, 0, 0, "-", "command_line"], [34, 0, 0, "-", "export_mtz"], [34, 0, 0, "-", "export_text"], [34, 0, 0, "-", "image"], [34, 0, 0, "-", "installer"], [34, 0, 0, "-", "ioutil"], [34, 0, 0, "-", "nexus"], [34, 0, 0, "-", "options"]], "dials.util.command_line": [[34, 1, 1, "", "Command"], [34, 1, 1, "", "ProgressBar"], [34, 1, 1, "", "ProgressBarTimer"], [34, 3, 1, "", "coloured"], [34, 3, 1, "", "heading"]], "dials.util.command_line.Command": [[34, 2, 1, "", "end"], [34, 5, 1, "", "indent"], [34, 5, 1, "", "max_length"], [34, 5, 1, "", "print_time"], [34, 2, 1, "", "start"]], "dials.util.command_line.ProgressBar": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "finished"], [34, 2, 1, "", "update"]], "dials.util.command_line.ProgressBarTimer": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "get_elapsed_time"], [34, 2, 1, "", "update"]], "dials.util.export_mtz": [[34, 1, 1, "", "MADMergedMTZWriter"], [34, 1, 1, "", "MTZWriterBase"], [34, 1, 1, "", "MergedMTZWriter"], [34, 1, 1, "", "UnmergedMTZWriter"], [34, 3, 1, "", "convert_to_cambridge"], [34, 3, 1, "", "export_mtz"], [34, 3, 1, "", "match_wavelengths"], [34, 3, 1, "", "rotate_crystal"]], "dials.util.export_mtz.MADMergedMTZWriter": [[34, 2, 1, "", "add_dataset"]], "dials.util.export_mtz.MTZWriterBase": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "add_crystal"], [34, 2, 1, "", "add_empty_dataset"]], "dials.util.export_mtz.MergedMTZWriter": [[34, 2, 1, "", "add_dataset"]], "dials.util.export_mtz.UnmergedMTZWriter": [[34, 2, 1, "", "add_batch_list"], [34, 2, 1, "", "write_columns"]], "dials.util.export_text": [[34, 3, 1, "", "export_text"]], "dials.util.image": [[34, 1, 1, "", "reader"]], "dials.util.image.reader": [[34, 2, 1, "", "get_data"], [34, 2, 1, "", "read_file"]], "dials.util.installer": [[34, 1, 1, "", "installer"]], "dials.util.installer.installer": [[34, 5, 1, "", "base_package_options"], [34, 5, 1, "", "configure_modules"], [34, 5, 1, "", "dest_dir_prefix"], [34, 5, 1, "", "include_gui_packages"], [34, 5, 1, "", "installer_dir"], [34, 5, 1, "", "make_apps"], [34, 5, 1, "", "product_name"], [34, 2, 1, "", "product_specific_finalize_install"], [34, 5, 1, "", "remove_sources_default"], [34, 5, 1, "", "source_packages"]], "dials.util.ioutil": [[34, 3, 1, "", "get_inverse_ub_matrix_from_xparm"], [34, 3, 1, "", "get_space_group_type_from_xparm"]], "dials.util.nexus": [[34, 3, 1, "", "dump"], [34, 3, 1, "", "get_entry"], [34, 3, 1, "", "load"]], "dials.util.options": [[34, 1, 1, "", "ArgumentHandlingErrorInfo"], [34, 1, 1, "", "ArgumentParser"], [34, 1, 1, "", "ArgumentParserBase"], [34, 1, 1, "", "Importer"], [34, 4, 1, "", "InvalidPhilError"], [34, 1, 1, "", "OptionParser"], [34, 1, 1, "", "PhilCommandParser"], [34, 3, 1, "", "flatten_experiments"], [34, 3, 1, "", "flatten_reflections"], [34, 3, 1, "", "reflections_and_experiments_from_files"]], "dials.util.options.ArgumentHandlingErrorInfo": [[34, 5, 1, "", "exception"], [34, 5, 1, "", "message"], [34, 5, 1, "", "name"], [34, 5, 1, "", "traceback"], [34, 5, 1, "", "type"], [34, 5, 1, "", "validation"]], "dials.util.options.ArgumentParser": [[34, 2, 1, "", "__init__"], [34, 6, 1, "", "diff_phil"], [34, 2, 1, "", "format_help"], [34, 2, 1, "", "parse_args"], [34, 6, 1, "", "phil"], [34, 6, 1, "", "system_phil"]], "dials.util.options.ArgumentParserBase": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "format_epilog"], [34, 2, 1, "", "parse_known_args"]], "dials.util.options.Importer": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "try_read_experiments"], [34, 2, 1, "", "try_read_experiments_from_images"], [34, 2, 1, "", "try_read_reflections"]], "dials.util.options.OptionParser": [[34, 2, 1, "", "__init__"]], "dials.util.options.PhilCommandParser": [[34, 2, 1, "", "__init__"], [34, 6, 1, "", "diff_phil"], [34, 2, 1, "", "parse_args"], [34, 6, 1, "", "phil"], [34, 6, 1, "", "system_phil"]], "dxtbx": [[23, 0, 0, "-", "datablock"], [27, 0, 0, "-", "imageset"]], "dxtbx.datablock": [[23, 1, 1, "", "AutoEncoder"], [23, 1, 1, "", "BeamComparison"], [23, 1, 1, "", "DataBlock"], [23, 1, 1, "", "DataBlockFactory"], [23, 1, 1, "", "DataBlockTemplateImporter"], [23, 1, 1, "", "DetectorComparison"], [23, 1, 1, "", "FormatChecker"], [23, 1, 1, "", "GoniometerComparison"], [23, 4, 1, "", "InvalidDataBlockError"], [23, 3, 1, "", "datablocks_from_dict"], [23, 3, 1, "", "datablocks_from_imagesets"]], "dxtbx.datablock.AutoEncoder": [[23, 2, 1, "", "default"]], "dxtbx.datablock.BeamComparison": [[23, 2, 1, "", "__init__"]], "dxtbx.datablock.DataBlock": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "append"], [23, 2, 1, "", "extend"], [23, 2, 1, "", "extract_imagesets"], [23, 2, 1, "", "extract_sequences"], [23, 2, 1, "", "extract_stills"], [23, 2, 1, "", "format_class"], [23, 2, 1, "", "iter_sequences"], [23, 2, 1, "", "iter_stills"], [23, 2, 1, "", "num_images"], [23, 2, 1, "", "to_dict"], [23, 2, 1, "", "unique_beams"], [23, 2, 1, "", "unique_detectors"], [23, 2, 1, "", "unique_goniometers"], [23, 2, 1, "", "unique_scans"]], "dxtbx.datablock.DataBlockFactory": [[23, 2, 1, "", "from_args"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "from_filenames"], [23, 2, 1, "", "from_imageset"], [23, 2, 1, "", "from_imageset_json_file"], [23, 2, 1, "", "from_in_memory"], [23, 2, 1, "", "from_json"], [23, 2, 1, "", "from_json_file"], [23, 2, 1, "", "from_pickle_file"], [23, 2, 1, "", "from_serialized_format"]], "dxtbx.datablock.DataBlockTemplateImporter": [[23, 2, 1, "", "__init__"]], "dxtbx.datablock.DetectorComparison": [[23, 2, 1, "", "__init__"]], "dxtbx.datablock.FormatChecker": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "find_format"], [23, 2, 1, "", "iter_groups"]], "dxtbx.datablock.GoniometerComparison": [[23, 2, 1, "", "__init__"]], "dxtbx.imageset": [[27, 1, 1, "", "ExternalLookup"], [27, 1, 1, "", "ExternalLookupItemBool"], [27, 1, 1, "", "ExternalLookupItemDouble"], [27, 1, 1, "", "ImageGrid"], [27, 1, 1, "", "ImageSequence"], [27, 1, 1, "", "ImageSet"], [27, 1, 1, "", "ImageSetData"], [27, 1, 1, "", "ImageSetFactory"], [27, 1, 1, "", "ImageSetLazy"], [27, 1, 1, "", "MemReader"]], "dxtbx.imageset.ExternalLookup": [[27, 2, 1, "", "__init__"], [27, 6, 1, "", "dx"], [27, 6, 1, "", "dy"], [27, 6, 1, "", "gain"], [27, 6, 1, "", "mask"], [27, 6, 1, "", "pedestal"]], "dxtbx.imageset.ExternalLookupItemBool": [[27, 2, 1, "", "__init__"], [27, 6, 1, "", "data"], [27, 6, 1, "", "filename"]], "dxtbx.imageset.ExternalLookupItemDouble": [[27, 2, 1, "", "__init__"], [27, 6, 1, "", "data"], [27, 6, 1, "", "filename"]], "dxtbx.imageset.ImageGrid": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "from_imageset"], [27, 2, 1, "", "get_grid_size"]], "dxtbx.imageset.ImageSequence": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "complete_set"], [27, 2, 1, "", "get_array_range"], [27, 2, 1, "", "get_beam"], [27, 2, 1, "", "get_detector"], [27, 2, 1, "", "get_goniometer"], [27, 2, 1, "", "get_scan"], [27, 2, 1, "", "get_template"], [27, 2, 1, "", "partial_set"], [27, 2, 1, "", "set_beam"], [27, 2, 1, "", "set_detector"], [27, 2, 1, "", "set_goniometer"], [27, 2, 1, "", "set_scan"], [27, 2, 1, "", "update_detector_px_mm_data"]], "dxtbx.imageset.ImageSet": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "as_imageset"], [27, 2, 1, "", "clear_cache"], [27, 2, 1, "", "complete_set"], [27, 2, 1, "", "data"], [27, 6, 1, "", "external_lookup"], [27, 2, 1, "", "get_beam"], [27, 2, 1, "", "get_corrected_data"], [27, 2, 1, "", "get_detector"], [27, 2, 1, "", "get_detectorbase"], [27, 2, 1, "", "get_format_class"], [27, 2, 1, "", "get_gain"], [27, 2, 1, "", "get_goniometer"], [27, 2, 1, "", "get_image_identifier"], [27, 2, 1, "", "get_mask"], [27, 2, 1, "", "get_path"], [27, 2, 1, "", "get_pedestal"], [27, 2, 1, "", "get_raw_data"], [27, 2, 1, "", "get_scan"], [27, 2, 1, "", "get_spectrum"], [27, 2, 1, "", "get_vendortype"], [27, 2, 1, "", "has_dynamic_mask"], [27, 2, 1, "", "indices"], [27, 2, 1, "", "is_marked_for_rejection"], [27, 2, 1, "", "mark_for_rejection"], [27, 2, 1, "", "masker"], [27, 2, 1, "", "params"], [27, 2, 1, "", "partial_set"], [27, 2, 1, "", "paths"], [27, 2, 1, "", "reader"], [27, 2, 1, "", "set_beam"], [27, 2, 1, "", "set_detector"], [27, 2, 1, "", "set_goniometer"], [27, 2, 1, "", "set_scan"], [27, 2, 1, "", "size"], [27, 2, 1, "", "update_detector_px_mm_data"]], "dxtbx.imageset.ImageSetData": [[27, 2, 1, "", "__init__"], [27, 6, 1, "", "external_lookup"], [27, 2, 1, "", "get_beam"], [27, 2, 1, "", "get_data"], [27, 2, 1, "", "get_detector"], [27, 2, 1, "", "get_format_class"], [27, 2, 1, "", "get_goniometer"], [27, 2, 1, "", "get_image_identifier"], [27, 2, 1, "", "get_master_path"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "get_path"], [27, 2, 1, "", "get_scan"], [27, 2, 1, "", "get_template"], [27, 2, 1, "", "get_vendor"], [27, 2, 1, "", "has_single_file_reader"], [27, 2, 1, "", "is_marked_for_rejection"], [27, 2, 1, "", "mark_for_rejection"], [27, 2, 1, "", "masker"], [27, 2, 1, "", "partial_data"], [27, 2, 1, "", "reader"], [27, 2, 1, "", "set_beam"], [27, 2, 1, "", "set_detector"], [27, 2, 1, "", "set_format_class"], [27, 2, 1, "", "set_goniometer"], [27, 2, 1, "", "set_params"], [27, 2, 1, "", "set_scan"], [27, 2, 1, "", "set_template"], [27, 2, 1, "", "set_vendor"]], "dxtbx.imageset.ImageSetFactory": [[27, 2, 1, "", "from_template"], [27, 2, 1, "", "imageset_from_anyset"], [27, 2, 1, "", "make_imageset"], [27, 2, 1, "", "make_sequence"], [27, 2, 1, "", "new"]], "dxtbx.imageset.ImageSetLazy": [[27, 2, 1, "", "get_beam"], [27, 2, 1, "", "get_corrected_data"], [27, 2, 1, "", "get_detector"], [27, 2, 1, "", "get_gain"], [27, 2, 1, "", "get_goniometer"], [27, 2, 1, "", "get_mask"], [27, 2, 1, "", "get_scan"]], "dxtbx.imageset.MemReader": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "copy"], [27, 2, 1, "", "identifiers"], [27, 2, 1, "", "is_single_file_reader"], [27, 2, 1, "", "master_path"], [27, 2, 1, "", "paths"], [27, 2, 1, "", "read"]], "dxtbx.model": [[22, 1, 1, "", "Crystal"], [24, 1, 1, "", "Detector"], [25, 1, 1, "", "ExperimentList"], [22, 1, 1, "", "MosaicCrystalKabsch2010"], [22, 1, 1, "", "MosaicCrystalSauter2014"], [21, 0, 0, "-", "beam"], [22, 0, 0, "-", "crystal"], [24, 0, 0, "-", "detector"], [25, 0, 0, "-", "experiment_list"], [26, 0, 0, "-", "goniometer"], [29, 0, 0, "-", "profile"], [30, 0, 0, "-", "scan"]], "dxtbx.model.Crystal": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "as_str"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_crystal_symmetry"], [22, 2, 1, "", "show"], [22, 2, 1, "", "to_dict"]], "dxtbx.model.Detector": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "add_group"], [24, 2, 1, "", "add_panel"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "get_max_inscribed_resolution"], [24, 2, 1, "", "get_max_resolution"], [24, 2, 1, "", "get_names"], [24, 2, 1, "", "get_panel_intersection"], [24, 2, 1, "", "get_ray_intersection"], [24, 2, 1, "", "has_projection_2d"], [24, 2, 1, "", "hierarchy"], [24, 2, 1, "", "is_similar_to"], [24, 2, 1, "", "iter_levelorder"], [24, 2, 1, "", "iter_panels"], [24, 2, 1, "", "iter_preorder"], [24, 2, 1, "", "rotate_around_origin"], [24, 2, 1, "", "to_dict"]], "dxtbx.model.ExperimentList": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "all_sequences"], [25, 2, 1, "", "all_stills"], [25, 2, 1, "", "append"], [25, 2, 1, "", "as_file"], [25, 2, 1, "", "as_json"], [25, 2, 1, "", "beams"], [25, 2, 1, "", "change_basis"], [25, 2, 1, "", "clear"], [25, 2, 1, "", "crystals"], [25, 2, 1, "", "detectors"], [25, 2, 1, "", "empty"], [25, 2, 1, "", "extend"], [25, 2, 1, "", "find"], [25, 2, 1, "", "from_file"], [25, 2, 1, "", "from_templates"], [25, 2, 1, "", "goniometers"], [25, 2, 1, "", "identifiers"], [25, 2, 1, "", "imagesets"], [25, 2, 1, "", "indices"], [25, 2, 1, "", "is_consistent"], [25, 2, 1, "", "nullify_all_single_file_reader_format_instances"], [25, 2, 1, "", "profiles"], [25, 2, 1, "", "remove_on_experiment_identifiers"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "scaling_models"], [25, 2, 1, "", "scans"], [25, 2, 1, "", "select_on_experiment_identifiers"], [25, 2, 1, "", "to_datablocks"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "where"]], "dxtbx.model.MosaicCrystalKabsch2010": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "as_str"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_mosaicity"], [22, 2, 1, "", "is_similar_to"], [22, 2, 1, "", "set_mosaicity"], [22, 2, 1, "", "to_dict"]], "dxtbx.model.MosaicCrystalSauter2014": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "as_str"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_A_as_sqr"], [22, 2, 1, "", "get_A_inverse_as_sqr"], [22, 2, 1, "", "get_domain_size_ang"], [22, 2, 1, "", "get_half_mosaicity_deg"], [22, 2, 1, "", "is_similar_to"], [22, 2, 1, "", "set_domain_size_ang"], [22, 2, 1, "", "set_half_mosaicity_deg"], [22, 2, 1, "", "to_dict"]], "dxtbx.model.beam": [[21, 1, 1, "", "BeamFactory"]], "dxtbx.model.beam.BeamFactory": [[21, 2, 1, "", "complex"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_phil"], [21, 2, 1, "", "imgCIF"], [21, 2, 1, "", "imgCIF_H"], [21, 2, 1, "", "make_beam"], [21, 2, 1, "", "make_polarized_beam"], [21, 2, 1, "", "simple"], [21, 2, 1, "", "simple_directional"]], "dxtbx.model.crystal": [[22, 1, 1, "", "CrystalFactory"]], "dxtbx.model.crystal.CrystalFactory": [[22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_mosflm_matrix"]], "dxtbx.model.detector": [[24, 1, 1, "", "DetectorFactory"]], "dxtbx.model.detector.DetectorFactory": [[24, 2, 1, "", "complex"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_phil"], [24, 2, 1, "", "generate_from_phil"], [24, 2, 1, "", "imgCIF"], [24, 2, 1, "", "imgCIF_H"], [24, 2, 1, "", "make_detector"], [24, 2, 1, "", "overwrite_from_phil"], [24, 2, 1, "", "sensor"], [24, 2, 1, "", "simple"], [24, 2, 1, "", "two_theta"]], "dxtbx.model.experiment_list": [[25, 1, 1, "", "BeamComparison"], [25, 1, 1, "", "DetectorComparison"], [25, 1, 1, "", "ExperimentListFactory"], [25, 1, 1, "", "GoniometerComparison"]], "dxtbx.model.experiment_list.BeamComparison": [[25, 2, 1, "", "__init__"]], "dxtbx.model.experiment_list.DetectorComparison": [[25, 2, 1, "", "__init__"]], "dxtbx.model.experiment_list.ExperimentListFactory": [[25, 2, 1, "", "from_args"], [25, 2, 1, "", "from_datablock_and_crystal"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "from_filenames"], [25, 2, 1, "", "from_imageset_and_crystal"], [25, 2, 1, "", "from_json"], [25, 2, 1, "", "from_json_file"], [25, 2, 1, "", "from_pickle_file"], [25, 2, 1, "", "from_sequence_and_crystal"], [25, 2, 1, "", "from_serialized_format"], [25, 2, 1, "", "from_stills_and_crystal"], [25, 2, 1, "", "from_templates"], [25, 2, 1, "", "from_xds"]], "dxtbx.model.experiment_list.GoniometerComparison": [[25, 2, 1, "", "__init__"]], "dxtbx.model.goniometer": [[26, 1, 1, "", "Goniometer"], [26, 1, 1, "", "GoniometerFactory"], [26, 1, 1, "", "KappaGoniometer"], [26, 1, 1, "", "MultiAxisGoniometer"]], "dxtbx.model.goniometer.Goniometer": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "get_fixed_rotation"], [26, 2, 1, "", "get_num_scan_points"], [26, 2, 1, "", "get_rotation_axis"], [26, 2, 1, "", "get_rotation_axis_datum"], [26, 2, 1, "", "get_setting_rotation"], [26, 2, 1, "", "get_setting_rotation_at_scan_point"], [26, 2, 1, "", "get_setting_rotation_at_scan_points"], [26, 2, 1, "", "is_similar_to"], [26, 6, 1, "", "num_scan_points"], [26, 2, 1, "", "reset_scan_points"], [26, 2, 1, "", "rotate_around_origin"], [26, 2, 1, "", "set_fixed_rotation"], [26, 2, 1, "", "set_rotation_axis"], [26, 2, 1, "", "set_rotation_axis_datum"], [26, 2, 1, "", "set_setting_rotation"], [26, 2, 1, "", "set_setting_rotation_at_scan_points"], [26, 2, 1, "", "to_dict"]], "dxtbx.model.goniometer.GoniometerFactory": [[26, 2, 1, "", "from_dict"], [26, 2, 1, "", "from_phil"], [26, 2, 1, "", "imgCIF"], [26, 2, 1, "", "imgCIF_H"], [26, 2, 1, "", "kappa"], [26, 2, 1, "", "known_axis"], [26, 2, 1, "", "make_goniometer"], [26, 2, 1, "", "make_kappa_goniometer"], [26, 2, 1, "", "make_multi_axis_goniometer"], [26, 2, 1, "", "multi_axis"], [26, 2, 1, "", "multi_axis_goniometer_from_phil"], [26, 2, 1, "", "single_axis"], [26, 2, 1, "", "single_axis_goniometer_from_phil"], [26, 2, 1, "", "single_axis_reverse"]], "dxtbx.model.goniometer.KappaGoniometer": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "get_alpha_angle"], [26, 2, 1, "", "get_direction"], [26, 2, 1, "", "get_kappa_angle"], [26, 2, 1, "", "get_kappa_axis"], [26, 2, 1, "", "get_omega_angle"], [26, 2, 1, "", "get_omega_axis"], [26, 2, 1, "", "get_phi_angle"], [26, 2, 1, "", "get_phi_axis"], [26, 2, 1, "", "get_scan_axis"]], "dxtbx.model.goniometer.MultiAxisGoniometer": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "get_angles"], [26, 2, 1, "", "get_axes"], [26, 2, 1, "", "get_names"], [26, 2, 1, "", "get_scan_axis"], [26, 2, 1, "", "set_angles"], [26, 2, 1, "", "set_axes"], [26, 2, 1, "", "to_dict"]], "dxtbx.model.profile": [[29, 1, 1, "", "ProfileModelFactory"]], "dxtbx.model.profile.ProfileModelFactory": [[29, 2, 1, "", "from_dict"]], "dxtbx.model.scan": [[30, 1, 1, "", "ScanFactory"]], "dxtbx.model.scan.ScanFactory": [[30, 2, 1, "", "add"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_phil"], [30, 2, 1, "", "imgCIF"], [30, 2, 1, "", "imgCIF_H"], [30, 2, 1, "", "make_scan"], [30, 2, 1, "", "search"], [30, 2, 1, "", "single_file"]], "dxtbx.serialize": [[31, 0, 0, "-", "imageset"], [31, 0, 0, "-", "load"], [31, 0, 0, "-", "xds"]], "dxtbx.serialize.imageset": [[31, 3, 1, "", "basic_imageset_from_dict"], [31, 3, 1, "", "basic_imageset_to_dict"], [31, 3, 1, "", "filename_or_none"], [31, 3, 1, "", "filename_to_absolute"], [31, 3, 1, "", "imagesequence_from_dict"], [31, 3, 1, "", "imagesequence_to_dict"], [31, 3, 1, "", "imageset_from_dict"], [31, 3, 1, "", "imageset_to_dict"]], "dxtbx.serialize.load": [[31, 3, 1, "", "crystal"], [31, 3, 1, "", "datablock"], [31, 3, 1, "", "experiment_list"], [31, 3, 1, "", "imageset"]], "dxtbx.serialize.xds": [[31, 3, 1, "", "to_crystal"], [31, 3, 1, "", "to_imageset"], [31, 1, 1, "", "to_xds"], [31, 3, 1, "", "xds_detector_name"]], "dxtbx.serialize.xds.to_xds": [[31, 2, 1, "", "XDS_INP"], [31, 2, 1, "", "__init__"], [31, 2, 1, "", "get_beam"], [31, 2, 1, "", "get_detector"], [31, 2, 1, "", "get_goniometer"], [31, 2, 1, "", "get_scan"], [31, 2, 1, "", "get_template"], [31, 2, 1, "", "xparm_xds"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:exception", "5": "py:attribute", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "titleterms": {"about": [0, 75], "develop": [0, 5, 9, 93], "team": 0, "dial": [0, 1, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 81, 83, 85, 86, 91, 92, 93, 94, 96, 97, 98, 99, 100], "east": 0, "west": 0, "acknowledg": [0, 79, 80, 83, 85], "user": 1, "guid": [1, 91, 98], "scale": [1, 4, 15, 65, 75, 76, 77, 84, 86, 87, 88, 89, 90], "data": [1, 3, 6, 9, 75, 76, 77, 78, 84, 88, 89, 90, 98], "common": 1, "option": [1, 75], "practic": 1, "larg": 1, "dataset": [1, 75, 77, 85], "against": 1, "refer": [1, 33], "advanc": [1, 92], "us": [1, 44, 74, 81], "control": 1, "model": [1, 2, 4, 15, 21, 22, 24, 25, 26, 29, 30, 77, 80], "choos": 1, "reflect": [1, 3], "minimis": 1, "convent": 2, "coordin": 2, "frame": [2, 75], "The": 2, "diffractomet": 2, "equat": 2, "orthogonalis": 2, "orient": [2, 76, 78], "matrix": 2, "laboratori": 2, "summari": 2, "dxtbx": [2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "goniomet": [2, 26], "file": 3, "experi": [3, 6, 78], "list": 3, "extend": 4, "content": [4, 20, 32], "entri": 4, "point": 4, "ad": 4, "new": 4, "format": 4, "class": 4, "write": 4, "understand": 4, "static": [4, 77], "method": 4, "index": [4, 11, 54, 75, 76, 77, 80, 84, 87, 88, 89, 90, 98], "basi": 4, "vector": 4, "search": 4, "strategi": 4, "lattic": [4, 75, 76, 79, 84, 87, 88, 89, 90], "profil": [4, 29], "defin": 4, "exampl": [5, 41, 44, 74], "read": 6, "get": 7, "start": 7, "instal": [7, 9, 93], "sourc": [7, 81, 92, 99], "environ": [7, 9], "built": 7, "help": 7, "paramet": [7, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74], "next": [7, 83, 85], "step": 7, "document": [8, 73], "set": [9, 78], "up": 9, "linux": [9, 93], "mac": [9, 93], "modulenotfounderror": 9, "No": 9, "modul": 9, "name": 9, "gltbx_gl_ext": 9, "download": 9, "regress": 9, "test": [9, 49], "keep": 9, "current": 9, "algorithm": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "background": 10, "stills_index": 11, "basis_vector_search": 11, "lattice_search": 11, "model_evalu": 11, "max_cel": 11, "integr": [12, 55, 75, 76, 77, 84, 87, 88, 89, 90, 92, 98], "profile_model": 13, "refin": [14, 61, 75, 76, 77, 83, 84, 85, 87, 88, 89, 90, 95], "outlier_reject": 15, "spot_find": 16, "spot_predict": 17, "symmetri": [18, 71, 75, 76, 79, 80, 84, 86, 87, 88, 89, 90], "cosym": [18, 41], "arrai": 20, "famili": 20, "tabl": [20, 32], "beam": [21, 75, 80], "crystal": [22, 78, 85, 86], "datablock": 23, "detector": [24, 76, 83], "experiment_list": 25, "imageset": 27, "scan": [30, 77], "serial": 31, "extens": 32, "librari": 33, "util": 34, "align_cryst": 35, "introduct": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90], "basic": [35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74], "full": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74], "definit": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74], "anvil_correct": 36, "detail": [36, 88, 89], "apply_mask": 37, "check_indexing_symmetri": 38, "combine_experi": 39, "compare_orientation_matric": 40, "create_profile_model": 42, "estimate_gain": 43, "estimate_resolut": 44, "case": [44, 74], "export": [45, 75, 84, 88, 89, 90, 95], "export_bitmap": 46, "filter_reflect": 47, "find_spot": 48, "distl": 49, "apach": 49, "server": 49, "build": [49, 93], "instruct": 49, "find_spots_serv": 50, "client": 50, "generate_mask": 51, "image_view": 52, "import": [53, 75, 77, 80, 84, 87, 88, 89, 90, 95], "merge_cbf": 56, "missing_reflect": 57, "plot_scan_varying_model": 58, "predict": 59, "reciprocal_lattice_view": 60, "refine_bravais_set": 62, "reindex": 63, "report": [64, 84, 88, 97], "search_beam_posit": 66, "show": 67, "slice_sequ": 68, "spot_counts_per_imag": 69, "stereographic_project": 70, "two_theta_refin": 72, "program": [73, 99, 100], "xia2": [74, 78, 81, 86], "multiplex": [74, 78, 86], "process": [75, 76, 78, 85, 88, 89, 95, 98], "small": [75, 76, 90], "molecul": [75, 90], "micro": 75, "3ded": 75, "biotin": 75, "gener": [75, 81], "note": 75, "collect": 75, "video": 75, "pedest": 75, "offset": 75, "imag": [75, 95], "find": [75, 76, 77, 80, 84, 88, 89, 90], "centr": [75, 79, 80], "re": 75, "correct": [75, 80, 83], "center": 75, "mask": 75, "spot": [75, 76, 77, 80, 84, 88, 89, 90], "bravai": [75, 84, 88, 89, 90], "geometri": [75, 80], "other": 75, "multi": [75, 78, 83, 85, 86, 87], "determin": [75, 76, 90], "exclud": 75, "bad": 75, "togeth": 75, "solv": 75, "structur": 75, "myd88tir": 76, "wedg": 76, "exploratori": 76, "analysi": [76, 78, 84, 85, 86, 88], "distanc": 76, "tilt": 76, "axi": 76, "further": 76, "script": 76, "lysozym": 77, "nanocryst": 77, "1": [77, 80, 99], "2": [77, 79, 84], "3": [77, 93, 100], "4": 77, "5": 77, "6": 77, "7": 77, "vari": 77, "merg": [77, 84, 87, 88], "bookkeep": 78, "0": [78, 93], "9": 78, "10": 78, "19": 78, "20": 78, "29": 78, "explor": 78, "reciproc": 78, "space": 78, "post": 78, "preferenti": 78, "unit": [78, 90], "cell": [78, 90], "comparison": 78, "delta": 78, "cc": 78, "half": 78, "intens": 78, "cluster": 78, "dpf3": [79, 80], "part": [79, 80], "A": 79, "question": 79, "convert": 79, "pseudocentr": 79, "conclus": [79, 80], "poor": 80, "initi": 80, "check": [80, 89], "discov": 80, "better": 80, "experiment": 80, "diamond": [81, 99], "light": [81, 92, 99], "feedback": 81, "tutori": [82, 84, 87, 88, 89, 90], "tile": 83, "metrologi": 83, "prepar": 83, "appli": 83, "what": [83, 85], "do": [83, 85], "sar": 84, "cov": 84, "main": 84, "proteas": 84, "mpro": 84, "html": [84, 88], "unmerg": [84, 88], "mtz": [84, 88, 89], "blend": 85, "individu": 85, "v": 85, "joint": 85, "jointli": 85, "manual": 86, "reprocess": 86, "almost": 86, "spotfind": 87, "dui": 89, "inspect": 89, "result": 89, "reduct": 90, "output": 90, "sadab": 90, "altern": 90, "path": 90, "how": 91, "To": 91, "diffract": [92, 96], "contact": 92, "fund": 92, "stabl": 93, "releas": 93, "11": [], "graphic": 93, "binari": 93, "licens": 94, "sequenc": 95, "miss": 95, "project": 96, "neutron": 96, "public": 97, "journal": 97, "articl": 97, "applic": 97, "xfel": 97, "crystallographi": 97, "synchrotron": 97, "newslett": 97, "ssx": 98, "dev": [], "ssx_index": 98, "ssx_integr": 98, "12th": 99, "13th": 99, "june": 99, "2012": 99, "uk": [99, 100], "organis": 99, "committe": 99, "present": [99, 100], "22nd": 100, "mai": 100, "2013": 100, "cambridg": 100, "attende": 100, "workshop": 101, "12": [], "13": [], "14": 93}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About": [[0, "about"]], "Development Teams": [[0, "development-teams"]], "DIALS East": [[0, "dials-east"]], "DIALS West": [[0, "dials-west"]], "Acknowledgements": [[0, "acknowledgements"], [79, "acknowledgements"], [80, "acknowledgements"], [83, "acknowledgements"], [85, "acknowledgements"]], "User guide for scaling data with DIALS": [[1, "user-guide-for-scaling-data-with-dials"]], "Guide to common scaling options": [[1, "guide-to-common-scaling-options"]], "Practicalities for large datasets": [[1, "practicalities-for-large-datasets"]], "Scaling against a reference dataset": [[1, "scaling-against-a-reference-dataset"]], "Advanced use - Controlling the scaling models": [[1, "advanced-use-controlling-the-scaling-models"]], "Advanced use - Choosing reflections to use for minimisation": [[1, "advanced-use-choosing-reflections-to-use-for-minimisation"]], "Conventions": [[2, "conventions"]], "Coordinate frames": [[2, "coordinate-frames"]], "The diffractometer equation": [[2, "the-diffractometer-equation"]], "Orthogonalisation convention": [[2, "orthogonalisation-convention"]], "Orientation matrix": [[2, "orientation-matrix"]], "The laboratory frame": [[2, "the-laboratory-frame"]], "Summary of coordinate frames": [[2, "summary-of-coordinate-frames"]], "The DXTBX goniometer model": [[2, "the-dxtbx-goniometer-model"]], "Data files": [[3, "data-files"]], "Experiment list files": [[3, "experiment-list-files"]], "Reflection files": [[3, "reflection-files"]], "Extending DIALS": [[4, "extending-dials"]], "Contents": [[4, "contents"]], "Entry points": [[4, "entry-points"]], "Adding new format classes": [[4, "adding-new-format-classes"]], "Writing a new format class": [[4, "writing-a-new-format-class"]], "understand Static Method": [[4, "understand-static-method"]], "Class Methods": [[4, "class-methods"]], "Extending dials.index": [[4, "extending-dials-index"]], "Basis vector search strategies": [[4, "basis-vector-search-strategies"]], "Lattice search strategies": [[4, "lattice-search-strategies"]], "Extending profile models": [[4, "extending-profile-models"]], "Extending dials.scale": [[4, "extending-dials-scale"]], "Defining a scaling model": [[4, "defining-a-scaling-model"]], "Developer Examples": [[5, "developer-examples"]], "Reading experiment and data": [[6, "reading-experiment-and-data"]], "Getting started": [[7, "getting-started"]], "Installation": [[7, "installation"], [93, "installation"], [93, "id1"]], "Sourcing the DIALS environment": [[7, "sourcing-the-dials-environment"]], "Built-in help": [[7, "built-in-help"]], "Parameters": [[7, "parameters"]], "Next steps": [[7, "next-steps"]], "Documentation": [[8, "documentation"]], "Installation for Developers": [[9, "installation-for-developers"]], "Setting up a Development Environment on Linux or Mac": [[9, "setting-up-a-development-environment-on-linux-or-mac"]], "ModuleNotFoundError: No module named \u2018gltbx_gl_ext\u2019": [[9, "modulenotfounderror-no-module-named-gltbx-gl-ext"]], "Downloading the DIALS regression test data": [[9, "downloading-the-dials-regression-test-data"]], "Keeping a Development Environment current": [[9, "keeping-a-development-environment-current"]], "dials.algorithms.background": [[10, "module-dials.algorithms.background"]], "dials.algorithms.indexing": [[11, "module-dials.algorithms.indexing"]], "dials.algorithms.indexing.indexer": [[11, "module-dials.algorithms.indexing.indexer"]], "dials.algorithms.indexing.stills_indexer": [[11, "module-dials.algorithms.indexing.stills_indexer"]], "dials.algorithms.indexing.basis_vector_search": [[11, "module-dials.algorithms.indexing.basis_vector_search"]], "dials.algorithms.indexing.lattice_search": [[11, "module-dials.algorithms.indexing.lattice_search"]], "dials.algorithms.indexing.model_evaluation": [[11, "module-dials.algorithms.indexing.model_evaluation"]], "dials.algorithms.indexing.max_cell": [[11, "module-dials.algorithms.indexing.max_cell"]], "dials.algorithms.integration": [[12, "module-dials.algorithms.integration.integrator"]], "dials.algorithms.profile_model": [[13, "module-dials.algorithms.profile_model"]], "dials.algorithms.refinement": [[14, "module-dials.algorithms.refinement.reflection_manager"]], "dials.algorithms.scaling": [[15, "module-dials.algorithms.scaling"]], "model.model": [[15, "module-dials.algorithms.scaling.model.model"]], "outlier_rejection": [[15, "module-dials.algorithms.scaling.outlier_rejection"]], "dials.algorithms.spot_finding": [[16, "module-dials.algorithms.spot_finding.finder"]], "dials.algorithms.spot_prediction": [[17, "module-dials.algorithms.spot_prediction.reflection_predictor"]], "dials.algorithms.symmetry": [[18, "module-dials.algorithms.symmetry"]], "dials.algorithms.symmetry.cosym": [[18, "module-dials.algorithms.symmetry.cosym"]], "Algorithms": [[19, "algorithms"]], "Array Family": [[20, "array-family"]], "Table of Contents": [[20, "table-of-contents"], [32, "table-of-contents"]], "dxtbx.model.beam": [[21, "module-dxtbx.model.beam"]], "dxtbx.model.crystal": [[22, "dxtbx-model-crystal"]], "dxtbx.datablock": [[23, "module-dxtbx.datablock"]], "dxtbx.model.detector": [[24, "dxtbx-model-detector"]], "dxtbx.model.experiment_list": [[25, "dxtbx-model-experiment-list"]], "dxtbx.model.goniometer": [[26, "module-dxtbx.model.goniometer"]], "dxtbx.imageset": [[27, "module-dxtbx.imageset"]], "dxtbx": [[28, "dxtbx"]], "dxtbx.model.profile": [[29, "module-dxtbx.model.profile"]], "dxtbx.model.scan": [[30, "module-dxtbx.model.scan"]], "dxtbx.serialize": [[31, "module-dxtbx.serialize.imageset"]], "Extensions": [[32, "extensions"]], "Library Reference": [[33, "library-reference"]], "Util": [[34, "util"]], "dials.align_crystal": [[35, "dials-align-crystal"]], "Introduction": [[35, "introduction"], [36, "introduction"], [37, "introduction"], [38, "introduction"], [39, "introduction"], [40, "introduction"], [41, "introduction"], [42, "introduction"], [43, "introduction"], [44, "introduction"], [45, "introduction"], [46, "introduction"], [47, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [52, "introduction"], [53, "introduction"], [54, "introduction"], [55, "introduction"], [56, "introduction"], [57, "introduction"], [58, "introduction"], [59, "introduction"], [60, "introduction"], [61, "introduction"], [62, "introduction"], [63, "introduction"], [64, "introduction"], [65, "introduction"], [66, "introduction"], [67, "introduction"], [68, "introduction"], [69, "introduction"], [70, "introduction"], [71, "introduction"], [72, "introduction"], [74, "introduction"], [76, "introduction"], [77, "introduction"], [78, "introduction"], [79, "introduction"], [80, "introduction"], [83, "introduction"], [84, "introduction"], [85, "introduction"], [86, "introduction"], [87, "introduction"], [88, "introduction"], [89, "introduction"], [90, "introduction"]], "Basic parameters": [[35, "basic-parameters"], [37, "basic-parameters"], [38, "basic-parameters"], [39, "basic-parameters"], [40, "basic-parameters"], [41, "basic-parameters"], [42, "basic-parameters"], [43, "basic-parameters"], [44, "basic-parameters"], [45, "basic-parameters"], [46, "basic-parameters"], [47, "basic-parameters"], [48, "basic-parameters"], [50, "basic-parameters"], [51, "basic-parameters"], [52, "basic-parameters"], [53, "basic-parameters"], [54, "basic-parameters"], [55, "basic-parameters"], [56, "basic-parameters"], [58, "basic-parameters"], [59, "basic-parameters"], [60, "basic-parameters"], [61, "basic-parameters"], [62, "basic-parameters"], [63, "basic-parameters"], [64, "basic-parameters"], [65, "basic-parameters"], [66, "basic-parameters"], [67, "basic-parameters"], [68, "basic-parameters"], [69, "basic-parameters"], [70, "basic-parameters"], [71, "basic-parameters"], [72, "basic-parameters"], [74, "basic-parameters"]], "Full parameter definitions": [[35, "full-parameter-definitions"], [36, "full-parameter-definitions"], [37, "full-parameter-definitions"], [38, "full-parameter-definitions"], [39, "full-parameter-definitions"], [40, "full-parameter-definitions"], [41, "full-parameter-definitions"], [42, "full-parameter-definitions"], [43, "full-parameter-definitions"], [44, "full-parameter-definitions"], [45, "full-parameter-definitions"], [46, "full-parameter-definitions"], [47, "full-parameter-definitions"], [48, "full-parameter-definitions"], [50, "full-parameter-definitions"], [51, "full-parameter-definitions"], [52, "full-parameter-definitions"], [53, "full-parameter-definitions"], [54, "full-parameter-definitions"], [55, "full-parameter-definitions"], [56, "full-parameter-definitions"], [57, "full-parameter-definitions"], [58, "full-parameter-definitions"], [59, "full-parameter-definitions"], [60, "full-parameter-definitions"], [61, "full-parameter-definitions"], [62, "full-parameter-definitions"], [63, "full-parameter-definitions"], [64, "full-parameter-definitions"], [65, "full-parameter-definitions"], [66, "full-parameter-definitions"], [67, "full-parameter-definitions"], [68, "full-parameter-definitions"], [69, "full-parameter-definitions"], [70, "full-parameter-definitions"], [71, "full-parameter-definitions"], [72, "full-parameter-definitions"], [74, "full-parameter-definitions"]], "dials.anvil_correction": [[36, "dials-anvil-correction"]], "Details": [[36, "details"]], "dials.apply_mask": [[37, "dials-apply-mask"]], "dials.check_indexing_symmetry": [[38, "dials-check-indexing-symmetry"]], "dials.combine_experiments": [[39, "dials-combine-experiments"]], "dials.compare_orientation_matrices": [[40, "dials-compare-orientation-matrices"]], "dials.cosym": [[41, "dials-cosym"]], "Example": [[41, "example"]], "dials.create_profile_model": [[42, "dials-create-profile-model"]], "dials.estimate_gain": [[43, "dials-estimate-gain"]], "dials.estimate_resolution": [[44, "dials-estimate-resolution"]], "Example use cases": [[44, "example-use-cases"]], "dials.export": [[45, "dials-export"]], "dials.export_bitmaps": [[46, "dials-export-bitmaps"]], "dials.filter_reflections": [[47, "dials-filter-reflections"]], "dials.find_spots": [[48, "dials-find-spots"]], "distl/dials apache server": [[49, "distl-dials-apache-server"]], "Build instructions": [[49, "build-instructions"]], "Testing the server": [[49, "testing-the-server"]], "Distl parameters": [[49, "distl-parameters"]], "Dials parameters": [[49, "dials-parameters"]], "dials.find_spots_server/client": [[50, "dials-find-spots-server-client"]], "dials.generate_mask": [[51, "dials-generate-mask"]], "dials.image_viewer": [[52, "dials-image-viewer"]], "dials.import": [[53, "dials-import"]], "dials.index": [[54, "dials-index"]], "dials.integrate": [[55, "dials-integrate"]], "dials.merge_cbf": [[56, "dials-merge-cbf"]], "dials.missing_reflections": [[57, "dials-missing-reflections"]], "dials.plot_scan_varying_model": [[58, "dials-plot-scan-varying-model"]], "dials.predict": [[59, "dials-predict"]], "dials.reciprocal_lattice_viewer": [[60, "dials-reciprocal-lattice-viewer"]], "dials.refine": [[61, "dials-refine"]], "dials.refine_bravais_settings": [[62, "dials-refine-bravais-settings"]], "dials.reindex": [[63, "dials-reindex"]], "dials.report": [[64, "dials-report"]], "dials.scale": [[65, "dials-scale"]], "dials.search_beam_position": [[66, "dials-search-beam-position"]], "dials.show": [[67, "dials-show"]], "dials.slice_sequence": [[68, "dials-slice-sequence"]], "dials.spot_counts_per_image": [[69, "dials-spot-counts-per-image"]], "dials.stereographic_projection": [[70, "dials-stereographic-projection"]], "dials.symmetry": [[71, "dials-symmetry"]], "dials.two_theta_refine": [[72, "dials-two-theta-refine"]], "Program documentation": [[73, "program-documentation"]], "xia2.multiplex": [[74, "xia2-multiplex"], [86, "xia2-multiplex"]], "Examples use cases": [[74, "examples-use-cases"]], "Processing Small Molecule MicroED/3DED: Biotin": [[75, "processing-small-molecule-microed-3ded-biotin"]], "General Notes": [[75, "general-notes"]], "Data collection videos": [[75, "data-collection-videos"]], "Note about pedestal and offset": [[75, "note-about-pedestal-and-offset"]], "Import images": [[75, "import-images"]], "Find the beam centre": [[75, "find-the-beam-centre"]], "Re-import with the correct beam center": [[75, "re-import-with-the-correct-beam-center"]], "Generate a mask for the beam center (optional)": [[75, "generate-a-mask-for-the-beam-center-optional"]], "Find spots": [[75, "find-spots"]], "Indexing": [[75, "indexing"], [76, "indexing"], [77, "indexing"], [80, "indexing"], [84, "indexing"], [87, "indexing"], [88, "indexing"], [89, "indexing"], [90, "indexing"]], "Find the Bravais lattice (optional)": [[75, "find-the-bravais-lattice-optional"]], "Refine the geometry": [[75, "refine-the-geometry"]], "Integration": [[75, "integration"], [76, "integration"], [77, "integration"], [84, "integration"], [88, "integration"], [89, "integration"], [90, "integration"]], "Scaling": [[75, "scaling"], [76, "scaling"], [89, "scaling"], [90, "scaling"]], "Other datasets": [[75, "other-datasets"]], "Multi-dataset symmetry determination": [[75, "multi-dataset-symmetry-determination"]], "Excluding bad frames": [[75, "excluding-bad-frames"]], "Scale the data together": [[75, "scale-the-data-together"]], "Export the data": [[75, "export-the-data"]], "Solve the structure": [[75, "solve-the-structure"]], "MyD88TIR small wedges": [[76, "myd88tir-small-wedges"]], "Data": [[76, "data"], [77, "data"], [78, "data"], [90, "data"]], "Exploratory analysis": [[76, "exploratory-analysis"]], "Detector distance": [[76, "detector-distance"]], "Spot-finding": [[76, "spot-finding"], [77, "spot-finding"]], "Tilt axis orientation": [[76, "tilt-axis-orientation"]], "Determining lattice symmetry": [[76, "determining-lattice-symmetry"]], "Refining the detector distance": [[76, "refining-the-detector-distance"]], "Further refinement": [[76, "further-refinement"]], "Scripted processing": [[76, "scripted-processing"]], "Further processing": [[76, "further-processing"]], "Lysozyme nanocrystals": [[77, "lysozyme-nanocrystals"]], "Import": [[77, "import"], [80, "import"], [84, "import"], [88, "import"], [89, "import"], [90, "import"]], "Dataset 1": [[77, "dataset-1"], [77, "id1"], [77, "id11"]], "Dataset 2": [[77, "dataset-2"], [77, "id2"], [77, "id12"]], "Dataset 3": [[77, "dataset-3"], [77, "id3"], [77, "id13"]], "Dataset 4": [[77, "dataset-4"], [77, "id4"], [77, "id14"]], "Dataset 5": [[77, "dataset-5"], [77, "id5"], [77, "id15"]], "Dataset 6": [[77, "dataset-6"], [77, "id6"], [77, "id8"], [77, "id10"], [77, "id16"]], "Dataset 7": [[77, "dataset-7"], [77, "id7"], [77, "id17"]], "Datasets 1-5 & 7": [[77, "datasets-1-5-7"], [77, "id9"]], "Static model refinement": [[77, "static-model-refinement"]], "Scan-varying refinement": [[77, "scan-varying-refinement"]], "Scaling and merging": [[77, "scaling-and-merging"]], "Multi-crystal analysis with DIALS and xia2.multiplex": [[78, "multi-crystal-analysis-with-dials-and-xia2-multiplex"]], "Bookkeeping": [[78, "bookkeeping"]], "Process": [[78, "process"]], "Sets 0-9": [[78, "sets-0-9"]], "Sets 10-19": [[78, "sets-10-19"]], "Sets 20-29": [[78, "sets-20-29"]], "Explorations of Reciprocal Space": [[78, "explorations-of-reciprocal-space"]], "Post Experiment Processing": [[78, "post-experiment-processing"]], "Preferential Orientation": [[78, "preferential-orientation"]], "Unit Cell Comparisons": [[78, "unit-cell-comparisons"]], "Delta CC-half": [[78, "delta-cc-half"]], "Intensity Clustering": [[78, "intensity-clustering"]], "Cluster Comparisons": [[78, "cluster-comparisons"]], "DPF3 Part 2: A question of centring": [[79, "dpf3-part-2-a-question-of-centring"]], "Questioning the lattice symmetry": [[79, "questioning-the-lattice-symmetry"]], "Converting to a centred lattice": [[79, "converting-to-a-centred-lattice"]], "Centred or pseudocentred?": [[79, "centred-or-pseudocentred"]], "Conclusions": [[79, "conclusions"], [80, "conclusions"]], "DPF3 Part 1: Correcting poor initial geometry": [[80, "dpf3-part-1-correcting-poor-initial-geometry"]], "Find Spots": [[80, "find-spots"], [84, "find-spots"], [88, "find-spots"], [89, "find-spots"]], "Check indexing symmetry": [[80, "check-indexing-symmetry"]], "Discover a better experimental model": [[80, "discover-a-better-experimental-model"]], "Indexing with the corrected beam centre": [[80, "indexing-with-the-corrected-beam-centre"]], "Using DIALS at Diamond Light Source": [[81, "using-dials-at-diamond-light-source"]], "General": [[81, "general"]], "Using DIALS with xia2": [[81, "using-dials-with-xia2"]], "Feedback": [[81, "feedback"]], "Tutorials": [[82, "tutorials"]], "Refining multi-tile detector metrology with DIALS": [[83, "refining-multi-tile-detector-metrology-with-dials"]], "Preparing for multi-tile refinement": [[83, "preparing-for-multi-tile-refinement"]], "Multi-tile refinement": [[83, "multi-tile-refinement"]], "Applying the corrected metrology": [[83, "applying-the-corrected-metrology"]], "What to do next": [[83, "what-to-do-next"]], "SARS-CoV-2 main protease (Mpro)": [[84, "sars-cov-2-main-protease-mpro"]], "Tutorial data": [[84, "tutorial-data"], [88, "tutorial-data"], [89, "tutorial-data"]], "Bravais Lattice Refinement": [[84, "bravais-lattice-refinement"], [88, "bravais-lattice-refinement"], [89, "bravais-lattice-refinement"]], "Refinement": [[84, "refinement"], [88, "refinement"], [89, "refinement"], [90, "refinement"], [95, "refinement"]], "Symmetry analysis": [[84, "symmetry-analysis"], [88, "symmetry-analysis"]], "Scaling and Merging": [[84, "scaling-and-merging"], [88, "scaling-and-merging"]], "HTML report": [[84, "html-report"], [88, "html-report"]], "Exporting to unmerged MTZ": [[84, "exporting-to-unmerged-mtz"], [88, "exporting-to-unmerged-mtz"]], "Multi-crystal analysis with DIALS and BLEND: individual vs joint refinement": [[85, "multi-crystal-analysis-with-dials-and-blend-individual-vs-joint-refinement"]], "Individual processing": [[85, "individual-processing"]], "Analysis of individually processed datasets": [[85, "analysis-of-individually-processed-datasets"]], "Joint refinement": [[85, "joint-refinement"]], "Analysis of jointly refined datasets": [[85, "analysis-of-jointly-refined-datasets"]], "What to do next?": [[85, "what-to-do-next"]], "Multi-crystal symmetry analysis and scaling with DIALS": [[86, "multi-crystal-symmetry-analysis-and-scaling-with-dials"]], "Manual reprocessing": [[86, "manual-reprocessing"]], "Almost there": [[86, "almost-there"]], "Multi-lattice Tutorial": [[87, "multi-lattice-tutorial"]], "Import and Spotfinding": [[87, "import-and-spotfinding"]], "Refinement and Integration": [[87, "refinement-and-integration"]], "Symmetry, Scaling and Merging": [[87, "symmetry-scaling-and-merging"]], "Processing in Detail": [[88, "processing-in-detail"]], "Processing in Detail with DUI": [[89, "processing-in-detail-with-dui"]], "Checking the symmetry": [[89, "checking-the-symmetry"]], "Inspecting the results": [[89, "inspecting-the-results"]], "Exporting as MTZ": [[89, "exporting-as-mtz"]], "Small-molecule data reduction tutorial": [[90, "small-molecule-data-reduction-tutorial"]], "Spot finding": [[90, "spot-finding"]], "Bravais lattice determination": [[90, "bravais-lattice-determination"]], "Symmetry Determination": [[90, "symmetry-determination"]], "Unit cell refinement": [[90, "unit-cell-refinement"]], "Exporting": [[90, "exporting"]], "Output for SADABS (alternate path)": [[90, "output-for-sadabs-alternate-path"]], "DIALS How-To guides": [[91, "dials-how-to-guides"]], "DIALS: Diffraction Integration for Advanced Light Sources": [[92, "dials-diffraction-integration-for-advanced-light-sources"]], "Contact": [[92, "contact"]], "Funding": [[92, "funding"]], "Stable Release: DIALS 3.14.0": [[93, "stable-release-dials-3-14-0"]], "Development Builds": [[93, "development-builds"]], "Mac graphical binary installers": [[93, "mac-graphical-binary-installers"]], "Mac and Linux binary installers": [[93, "mac-and-linux-binary-installers"]], "DIALS License": [[94, "dials-license"]], "Processing Sequences with Missing Images": [[95, "processing-sequences-with-missing-images"]], "Importing": [[95, "importing"]], "Export": [[95, "export"]], "Projects": [[96, "projects"]], "DIALS for neutron diffraction": [[96, "dials-for-neutron-diffraction"]], "Publications": [[97, "publications"]], "DIALS Journal Articles": [[97, "dials-journal-articles"]], "DIALS Application to XFEL Crystallography": [[97, "dials-application-to-xfel-crystallography"]], "DIALS Synchrotron Applications": [[97, "dials-synchrotron-applications"]], "DIALS Newsletter Articles": [[97, "dials-newsletter-articles"]], "DIALS Reports": [[97, "dials-reports"]], "SSX processing guide": [[98, "ssx-processing-guide"]], "Indexing SSX data with dials.ssx_index": [[98, "indexing-ssx-data-with-dials-ssx-index"]], "Integrating SSX data with dials.ssx_integrate": [[98, "integrating-ssx-data-with-dials-ssx-integrate"]], "DIALS 1: 12th-13th June 2012 (Diamond Light Source, UK)": [[99, "dials-1-12th-13th-june-2012-diamond-light-source-uk"]], "Organising committee": [[99, "organising-committee"]], "Program and presentations": [[99, "program-and-presentations"], [100, "program-and-presentations"]], "DIALS-3: 22nd May 2013 (Cambridge, UK)": [[100, "dials-3-22nd-may-2013-cambridge-uk"]], "Attendees": [[100, "attendees"]], "Workshops": [[101, "workshops"]]}, "indexentries": {"radialaverage (class in dials.algorithms.background)": [[10, "dials.algorithms.background.RadialAverage"]], "__init__() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.__init__"]], "add() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.add"]], "dials.algorithms.background": [[10, "module-dials.algorithms.background"]], "inv_d2() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.inv_d2"]], "mean() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.mean"]], "module": [[10, "module-dials.algorithms.background"], [11, "module-dials.algorithms.indexing"], [11, "module-dials.algorithms.indexing.assign_indices"], [11, "module-dials.algorithms.indexing.basis_vector_search"], [11, "module-dials.algorithms.indexing.basis_vector_search.combinations"], [11, "module-dials.algorithms.indexing.basis_vector_search.optimise"], [11, "module-dials.algorithms.indexing.compare_orientation_matrices"], [11, "module-dials.algorithms.indexing.indexer"], [11, "module-dials.algorithms.indexing.lattice_search"], [11, "module-dials.algorithms.indexing.max_cell"], [11, "module-dials.algorithms.indexing.model_evaluation"], [11, "module-dials.algorithms.indexing.nearest_neighbor"], [11, "module-dials.algorithms.indexing.refinement"], [11, "module-dials.algorithms.indexing.stills_indexer"], [11, "module-dials.algorithms.indexing.symmetry"], [12, "module-dials.algorithms.integration.integrator"], [13, "module-dials.algorithms.profile_model"], [14, "module-dials.algorithms.refinement.engine"], [14, "module-dials.algorithms.refinement.refiner"], [14, "module-dials.algorithms.refinement.reflection_manager"], [14, "module-dials.algorithms.refinement.target"], [14, "module-dials.algorithms.refinement.target_stills"], [14, "module-dials.algorithms.refinement.weighting_strategies"], [15, "module-dials.algorithms.scaling"], [15, "module-dials.algorithms.scaling.model.model"], [15, "module-dials.algorithms.scaling.outlier_rejection"], [16, "module-dials.algorithms.spot_finding.factory"], [16, "module-dials.algorithms.spot_finding.finder"], [17, "module-dials.algorithms.spot_prediction.reflection_predictor"], [18, "module-dials.algorithms.symmetry"], [18, "module-dials.algorithms.symmetry.cosym"], [18, "module-dials.algorithms.symmetry.cosym.engine"], [18, "module-dials.algorithms.symmetry.cosym.target"], [18, "module-dials.algorithms.symmetry.laue_group"], [18, "module-dials.algorithms.symmetry.reindex_to_reference"], [20, "module-dials.array_family.flex"], [21, "module-dxtbx.model.beam"], [22, "module-dxtbx.model.crystal"], [23, "module-dxtbx.datablock"], [24, "module-dxtbx.model.detector"], [25, "module-dxtbx.model.experiment_list"], [26, "module-dxtbx.model.goniometer"], [27, "module-dxtbx.imageset"], [29, "module-dxtbx.model.profile"], [30, "module-dxtbx.model.scan"], [31, "module-dxtbx.serialize.imageset"], [31, "module-dxtbx.serialize.load"], [31, "module-dxtbx.serialize.xds"], [32, "module-dials.extensions.dispersion_spotfinder_threshold_ext"], [32, "module-dials.extensions.gaussian_rs_profile_model_ext"], [32, "module-dials.extensions.null_background_ext"], [32, "module-dials.extensions.simple_background_ext"], [32, "module-dials.extensions.simple_centroid_ext"], [34, "module-dials.util.command_line"], [34, "module-dials.util.export_mtz"], [34, "module-dials.util.export_text"], [34, "module-dials.util.image"], [34, "module-dials.util.installer"], [34, "module-dials.util.ioutil"], [34, "module-dials.util.nexus"], [34, "module-dials.util.options"]], "set_shoebox_background_value() (in module dials.algorithms.background)": [[10, "dials.algorithms.background.set_shoebox_background_value"]], "weight() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.weight"]], "assignindicesglobal (class in dials.algorithms.indexing.assign_indices)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesGlobal"]], "assignindiceslocal (class in dials.algorithms.indexing.assign_indices)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesLocal"]], "assignindicesstrategy (class in dials.algorithms.indexing.assign_indices)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesStrategy"]], "basisvectorminimiser (class in dials.algorithms.indexing.basis_vector_search.optimise)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorMinimiser"]], "basisvectortarget (class in dials.algorithms.indexing.basis_vector_search.optimise)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget"]], "dialsindexerror": [[11, "dials.algorithms.indexing.DialsIndexError"]], "dialsindexrefineerror": [[11, "dials.algorithms.indexing.DialsIndexRefineError"]], "fft1d (class in dials.algorithms.indexing.basis_vector_search)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D"]], "fft3d (class in dials.algorithms.indexing.basis_vector_search)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D"]], "indexer (class in dials.algorithms.indexing.indexer)": [[11, "dials.algorithms.indexing.indexer.Indexer"]], "lowresspotmatch (class in dials.algorithms.indexing.lattice_search)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch"]], "modelevaluation (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.ModelEvaluation"]], "modelrank (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank"]], "modelrankfilter (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter"]], "modelrankweighted (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted"]], "neighboranalysis (class in dials.algorithms.indexing.nearest_neighbor)": [[11, "dials.algorithms.indexing.nearest_neighbor.NeighborAnalysis"]], "realspacegridsearch (class in dials.algorithms.indexing.basis_vector_search)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch"]], "result (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.Result"]], "stillsindexer (class in dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer"]], "stillsindexerbasisvectorsearch (class in dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexerBasisVectorSearch"]], "stillsindexerknownorientation (class in dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexerKnownOrientation"]], "stillsindexerlatticesearch (class in dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexerLatticeSearch"]], "strategy (class in dials.algorithms.indexing.basis_vector_search)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy"]], "strategy (class in dials.algorithms.indexing.lattice_search)": [[11, "dials.algorithms.indexing.lattice_search.Strategy"]], "strategy (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.Strategy"]], "symmetryhandler (class in dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.SymmetryHandler"]], "__init__() (dials.algorithms.indexing.assign_indices.assignindicesglobal method)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesGlobal.__init__"]], "__init__() (dials.algorithms.indexing.assign_indices.assignindiceslocal method)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesLocal.__init__"]], "__init__() (dials.algorithms.indexing.assign_indices.assignindicesstrategy method)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesStrategy.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.fft1d method)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.fft3d method)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.realspacegridsearch method)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.strategy method)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectorminimiser method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorMinimiser.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectortarget method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget.__init__"]], "__init__() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.__init__"]], "__init__() (dials.algorithms.indexing.lattice_search.lowresspotmatch method)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch.__init__"]], "__init__() (dials.algorithms.indexing.lattice_search.strategy method)": [[11, "dials.algorithms.indexing.lattice_search.Strategy.__init__"]], "__init__() (dials.algorithms.indexing.model_evaluation.modelevaluation method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelEvaluation.__init__"]], "__init__() (dials.algorithms.indexing.model_evaluation.modelrank method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank.__init__"]], "__init__() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.__init__"]], "__init__() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.__init__"]], "__init__() (dials.algorithms.indexing.nearest_neighbor.neighboranalysis method)": [[11, "dials.algorithms.indexing.nearest_neighbor.NeighborAnalysis.__init__"]], "__init__() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.__init__"]], "__init__() (dials.algorithms.indexing.symmetry.symmetryhandler method)": [[11, "dials.algorithms.indexing.symmetry.SymmetryHandler.__init__"]], "append() (dials.algorithms.indexing.model_evaluation.modelrank method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank.append"]], "append() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.append"]], "apply_hkl_offset() (in module dials.algorithms.indexing.indexer)": [[11, "dials.algorithms.indexing.indexer.apply_hkl_offset"]], "apply_symmetry() (dials.algorithms.indexing.symmetry.symmetryhandler method)": [[11, "dials.algorithms.indexing.symmetry.SymmetryHandler.apply_symmetry"]], "best_model() (dials.algorithms.indexing.model_evaluation.modelrank method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank.best_model"]], "best_model() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.best_model"]], "best_model() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.best_model"]], "calc_2d_rmsd_and_displacements() (in module dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.calc_2D_rmsd_and_displacements"]], "calc_acentric_subgroups() (in module dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.calc_acentric_subgroups"]], "candidate_orientation_matrices() (in module dials.algorithms.indexing.basis_vector_search.combinations)": [[11, "dials.algorithms.indexing.basis_vector_search.combinations.candidate_orientation_matrices"]], "choose_best_orientation_matrix() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.choose_best_orientation_matrix"]], "combined_scores() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.combined_scores"]], "compute_functional() (dials.algorithms.indexing.basis_vector_search.realspacegridsearch static method)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.compute_functional"]], "compute_functional() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectortarget method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget.compute_functional"]], "compute_functional_and_gradients() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectorminimiser method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorMinimiser.compute_functional_and_gradients"]], "compute_functional_and_gradients() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectortarget method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget.compute_functional_and_gradients"]], "crystal (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.crystal"]], "dials.algorithms.indexing": [[11, "module-dials.algorithms.indexing"]], "dials.algorithms.indexing.assign_indices": [[11, "module-dials.algorithms.indexing.assign_indices"]], "dials.algorithms.indexing.basis_vector_search": [[11, "module-dials.algorithms.indexing.basis_vector_search"]], "dials.algorithms.indexing.basis_vector_search.combinations": [[11, "module-dials.algorithms.indexing.basis_vector_search.combinations"]], "dials.algorithms.indexing.basis_vector_search.optimise": [[11, "module-dials.algorithms.indexing.basis_vector_search.optimise"]], "dials.algorithms.indexing.compare_orientation_matrices": [[11, "module-dials.algorithms.indexing.compare_orientation_matrices"]], "dials.algorithms.indexing.indexer": [[11, "module-dials.algorithms.indexing.indexer"]], "dials.algorithms.indexing.lattice_search": [[11, "module-dials.algorithms.indexing.lattice_search"]], "dials.algorithms.indexing.max_cell": [[11, "module-dials.algorithms.indexing.max_cell"]], "dials.algorithms.indexing.model_evaluation": [[11, "module-dials.algorithms.indexing.model_evaluation"]], "dials.algorithms.indexing.nearest_neighbor": [[11, "module-dials.algorithms.indexing.nearest_neighbor"]], "dials.algorithms.indexing.refinement": [[11, "module-dials.algorithms.indexing.refinement"]], "dials.algorithms.indexing.stills_indexer": [[11, "module-dials.algorithms.indexing.stills_indexer"]], "dials.algorithms.indexing.symmetry": [[11, "module-dials.algorithms.indexing.symmetry"]], "difference_rotation_matrix_axis_angle() (in module dials.algorithms.indexing.compare_orientation_matrices)": [[11, "dials.algorithms.indexing.compare_orientation_matrices.difference_rotation_matrix_axis_angle"]], "e_refine() (in module dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.e_refine"]], "evaluate() (dials.algorithms.indexing.model_evaluation.modelevaluation method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelEvaluation.evaluate"]], "evaluate() (dials.algorithms.indexing.model_evaluation.strategy method)": [[11, "dials.algorithms.indexing.model_evaluation.Strategy.evaluate"]], "experiment_list_for_crystal() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.experiment_list_for_crystal"]], "export_as_json() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.export_as_json"]], "export_reflections() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.export_reflections"]], "extend() (dials.algorithms.indexing.model_evaluation.modelrank method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank.extend"]], "extend() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.extend"]], "filter_by_likelihood() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.filter_by_likelihood"]], "filter_by_n_indexed() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.filter_by_n_indexed"]], "filter_by_volume() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.filter_by_volume"]], "filter_doubled_cell() (in module dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.filter_doubled_cell"]], "filter_known_symmetry() (in module dials.algorithms.indexing.basis_vector_search.combinations)": [[11, "dials.algorithms.indexing.basis_vector_search.combinations.filter_known_symmetry"]], "filter_similar_orientations() (in module dials.algorithms.indexing.basis_vector_search.combinations)": [[11, "dials.algorithms.indexing.basis_vector_search.combinations.filter_similar_orientations"]], "find_basis_vectors() (dials.algorithms.indexing.basis_vector_search.fft1d method)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D.find_basis_vectors"]], "find_basis_vectors() (dials.algorithms.indexing.basis_vector_search.fft3d method)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D.find_basis_vectors"]], "find_basis_vectors() (dials.algorithms.indexing.basis_vector_search.realspacegridsearch method)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.find_basis_vectors"]], "find_basis_vectors() (dials.algorithms.indexing.basis_vector_search.strategy method)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy.find_basis_vectors"]], "find_crystal_models() (dials.algorithms.indexing.lattice_search.lowresspotmatch method)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch.find_crystal_models"]], "find_crystal_models() (dials.algorithms.indexing.lattice_search.strategy method)": [[11, "dials.algorithms.indexing.lattice_search.Strategy.find_crystal_models"]], "find_lattices() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.find_lattices"]], "find_matching_symmetry() (in module dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.find_matching_symmetry"]], "find_max_cell() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.find_max_cell"]], "find_max_cell() (in module dials.algorithms.indexing.max_cell)": [[11, "dials.algorithms.indexing.max_cell.find_max_cell"]], "fraction_indexed (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.fraction_indexed"]], "from_parameters() (dials.algorithms.indexing.indexer.indexer static method)": [[11, "dials.algorithms.indexing.indexer.Indexer.from_parameters"]], "groups_cache() (in module dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.groups_cache"]], "hkl_offset (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.hkl_offset"]], "identify_outliers() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.identify_outliers"]], "index() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.index"]], "index() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.index"]], "index_reflections() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.index_reflections"]], "metric_supergroup() (in module dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.metric_supergroup"]], "model_likelihood (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.model_likelihood"]], "n_indexed (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.n_indexed"]], "optimise_basis_vectors() (in module dials.algorithms.indexing.basis_vector_search.optimise)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.optimise_basis_vectors"]], "phil_help (dials.algorithms.indexing.basis_vector_search.fft1d attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D.phil_help"]], "phil_help (dials.algorithms.indexing.basis_vector_search.fft3d attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D.phil_help"]], "phil_help (dials.algorithms.indexing.basis_vector_search.realspacegridsearch attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.phil_help"]], "phil_help (dials.algorithms.indexing.basis_vector_search.strategy attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy.phil_help"]], "phil_help (dials.algorithms.indexing.lattice_search.lowresspotmatch attribute)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch.phil_help"]], "phil_help (dials.algorithms.indexing.lattice_search.strategy attribute)": [[11, "dials.algorithms.indexing.lattice_search.Strategy.phil_help"]], "phil_scope (dials.algorithms.indexing.basis_vector_search.fft1d attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D.phil_scope"]], "phil_scope (dials.algorithms.indexing.basis_vector_search.fft3d attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D.phil_scope"]], "phil_scope (dials.algorithms.indexing.basis_vector_search.realspacegridsearch attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.phil_scope"]], "phil_scope (dials.algorithms.indexing.basis_vector_search.strategy attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy.phil_scope"]], "phil_scope (dials.algorithms.indexing.lattice_search.lowresspotmatch attribute)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch.phil_scope"]], "phil_scope (dials.algorithms.indexing.lattice_search.strategy attribute)": [[11, "dials.algorithms.indexing.lattice_search.Strategy.phil_scope"]], "plot_displacements() (in module dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.plot_displacements"]], "plot_histogram() (dials.algorithms.indexing.nearest_neighbor.neighboranalysis method)": [[11, "dials.algorithms.indexing.nearest_neighbor.NeighborAnalysis.plot_histogram"]], "refine() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.refine"]], "refine() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.refine"]], "refine() (in module dials.algorithms.indexing.refinement)": [[11, "dials.algorithms.indexing.refinement.refine"]], "rmsds (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.rmsds"]], "rotation_matrix_differences() (in module dials.algorithms.indexing.compare_orientation_matrices)": [[11, "dials.algorithms.indexing.compare_orientation_matrices.rotation_matrix_differences"]], "score_by_fraction_indexed() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.score_by_fraction_indexed"]], "score_by_rmsd_xy() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.score_by_rmsd_xy"]], "score_by_volume() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.score_by_volume"]], "score_vectors() (dials.algorithms.indexing.basis_vector_search.realspacegridsearch method)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.score_vectors"]], "search_directions (dials.algorithms.indexing.basis_vector_search.realspacegridsearch property)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.search_directions"]], "search_vectors (dials.algorithms.indexing.basis_vector_search.realspacegridsearch property)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.search_vectors"]], "setup_indexing() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.setup_indexing"]], "show_experiments() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.show_experiments"]], "update_analysis() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.update_analysis"]], "executor (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Executor"]], "integrator (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Integrator"]], "integrator2d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Integrator2D"]], "integrator3d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Integrator3D"]], "integrator3dthreaded (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded"]], "integratorexecutor (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor"]], "integratorflat3d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.IntegratorFlat3D"]], "integratorsingle2d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.IntegratorSingle2D"]], "integratorstills (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.IntegratorStills"]], "joblist (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.JobList"]], "parameters (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Parameters"]], "parameters.filter (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Parameters.Filter"]], "parameters.profile (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Parameters.Profile"]], "parameters.profile.validation (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Parameters.Profile.Validation"]], "processor2d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Processor2D"]], "processor3d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Processor3D"]], "processorclass (dials.algorithms.integration.integrator.integrator2d attribute)": [[12, "dials.algorithms.integration.integrator.Integrator2D.ProcessorClass"]], "processorclass (dials.algorithms.integration.integrator.integrator3d attribute)": [[12, "dials.algorithms.integration.integrator.Integrator3D.ProcessorClass"]], "processorclass (dials.algorithms.integration.integrator.integratorflat3d attribute)": [[12, "dials.algorithms.integration.integrator.IntegratorFlat3D.ProcessorClass"]], "processorclass (dials.algorithms.integration.integrator.integratorsingle2d attribute)": [[12, "dials.algorithms.integration.integrator.IntegratorSingle2D.ProcessorClass"]], "processorclass (dials.algorithms.integration.integrator.integratorstills attribute)": [[12, "dials.algorithms.integration.integrator.IntegratorStills.ProcessorClass"]], "processorflat3d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProcessorFlat3D"]], "processorsingle2d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProcessorSingle2D"]], "processorstills (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProcessorStills"]], "profilemodellerexecutor (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor"]], "profilevalidatorexecutor (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor"]], "reflectionmanager (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ReflectionManager"]], "__init__() (dials.algorithms.integration.integrator.executor method)": [[12, "dials.algorithms.integration.integrator.Executor.__init__"]], "__init__() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.__init__"]], "__init__() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.__init__"]], "__init__() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.__init__"]], "__init__() (dials.algorithms.integration.integrator.joblist method)": [[12, "dials.algorithms.integration.integrator.JobList.__init__"]], "__init__() (dials.algorithms.integration.integrator.parameters method)": [[12, "dials.algorithms.integration.integrator.Parameters.__init__"]], "__init__() (dials.algorithms.integration.integrator.parameters.filter method)": [[12, "dials.algorithms.integration.integrator.Parameters.Filter.__init__"]], "__init__() (dials.algorithms.integration.integrator.parameters.profile method)": [[12, "dials.algorithms.integration.integrator.Parameters.Profile.__init__"]], "__init__() (dials.algorithms.integration.integrator.parameters.profile.validation method)": [[12, "dials.algorithms.integration.integrator.Parameters.Profile.Validation.__init__"]], "__init__() (dials.algorithms.integration.integrator.processor2d method)": [[12, "dials.algorithms.integration.integrator.Processor2D.__init__"]], "__init__() (dials.algorithms.integration.integrator.processor3d method)": [[12, "dials.algorithms.integration.integrator.Processor3D.__init__"]], "__init__() (dials.algorithms.integration.integrator.processorflat3d method)": [[12, "dials.algorithms.integration.integrator.ProcessorFlat3D.__init__"]], "__init__() (dials.algorithms.integration.integrator.processorsingle2d method)": [[12, "dials.algorithms.integration.integrator.ProcessorSingle2D.__init__"]], "__init__() (dials.algorithms.integration.integrator.processorstills method)": [[12, "dials.algorithms.integration.integrator.ProcessorStills.__init__"]], "__init__() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.__init__"]], "__init__() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.__init__"]], "__init__() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.__init__"]], "accumulate() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.accumulate"]], "add() (dials.algorithms.integration.integrator.joblist method)": [[12, "dials.algorithms.integration.integrator.JobList.add"]], "data() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.data"]], "data() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.data"]], "data() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.data"]], "data() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.data"]], "dials.algorithms.integration.integrator": [[12, "module-dials.algorithms.integration.integrator"]], "finalise() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.finalise"]], "finalize() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.finalize"]], "finalize() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.finalize"]], "finalize() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.finalize"]], "finalize_reflections() (dials.algorithms.integration.integrator.integrator2d static method)": [[12, "dials.algorithms.integration.integrator.Integrator2D.finalize_reflections"]], "finalize_reflections() (dials.algorithms.integration.integrator.integrator3d static method)": [[12, "dials.algorithms.integration.integrator.Integrator3D.finalize_reflections"]], "finalize_reflections() (dials.algorithms.integration.integrator.integratorflat3d static method)": [[12, "dials.algorithms.integration.integrator.IntegratorFlat3D.finalize_reflections"]], "finalize_reflections() (dials.algorithms.integration.integrator.integratorsingle2d static method)": [[12, "dials.algorithms.integration.integrator.IntegratorSingle2D.finalize_reflections"]], "finalize_reflections() (dials.algorithms.integration.integrator.integratorstills static method)": [[12, "dials.algorithms.integration.integrator.IntegratorStills.finalize_reflections"]], "finished() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.finished"]], "fit_profiles() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.fit_profiles"]], "frame_hist() (in module dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.frame_hist"]], "from_phil() (dials.algorithms.integration.integrator.parameters static method)": [[12, "dials.algorithms.integration.integrator.Parameters.from_phil"]], "generate_phil_scope() (in module dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.generate_phil_scope"]], "hist() (in module dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.hist"]], "initialise() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.initialise"]], "initialize() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.initialize"]], "initialize() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.initialize"]], "initialize() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.initialize"]], "initialize_reflections() (dials.algorithms.integration.integrator.integrator2d static method)": [[12, "dials.algorithms.integration.integrator.Integrator2D.initialize_reflections"]], "initialize_reflections() (dials.algorithms.integration.integrator.integrator3d static method)": [[12, "dials.algorithms.integration.integrator.Integrator3D.initialize_reflections"]], "initialize_reflections() (dials.algorithms.integration.integrator.integratorflat3d static method)": [[12, "dials.algorithms.integration.integrator.IntegratorFlat3D.initialize_reflections"]], "initialize_reflections() (dials.algorithms.integration.integrator.integratorsingle2d static method)": [[12, "dials.algorithms.integration.integrator.IntegratorSingle2D.initialize_reflections"]], "initialize_reflections() (dials.algorithms.integration.integrator.integratorstills static method)": [[12, "dials.algorithms.integration.integrator.IntegratorStills.initialize_reflections"]], "integrate() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.integrate"]], "integrate() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.integrate"]], "job() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.job"]], "nframes_hist() (in module dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.nframes_hist"]], "num_reflections() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.num_reflections"]], "process() (dials.algorithms.integration.integrator.executor method)": [[12, "dials.algorithms.integration.integrator.Executor.process"]], "process() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.process"]], "process() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.process"]], "process() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.process"]], "report() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.report"]], "report() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.report"]], "shoebox_memory() (dials.algorithms.integration.integrator.joblist method)": [[12, "dials.algorithms.integration.integrator.JobList.shoebox_memory"]], "split() (dials.algorithms.integration.integrator.joblist method)": [[12, "dials.algorithms.integration.integrator.JobList.split"]], "split() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.split"]], "summary() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.summary"]], "summary() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.summary"]], "dials.algorithms.profile_model": [[13, "module-dials.algorithms.profile_model"]], "adaptlbfgs (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs"]], "adaptlstbx (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx"]], "blockcalculator (class in dials.algorithms.refinement.reflection_manager)": [[14, "dials.algorithms.refinement.reflection_manager.BlockCalculator"]], "constantweightingstrategy (class in dials.algorithms.refinement.weighting_strategies)": [[14, "dials.algorithms.refinement.weighting_strategies.ConstantWeightingStrategy"]], "disablempmixin (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.DisableMPmixin"]], "externaldelpsiweightingstrategy (class in dials.algorithms.refinement.weighting_strategies)": [[14, "dials.algorithms.refinement.weighting_strategies.ExternalDelPsiWeightingStrategy"]], "gaussnewtoniterations (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations"]], "journal (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.Journal"]], "lbfgscurvs (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.LBFGScurvs"]], "leastsquarespositionalresidualwithrmsdcutoff (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoff"]], "leastsquarespositionalresidualwithrmsdcutoffsparse (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoffSparse"]], "leastsquaresstillsresidualwithrmsdcutoff (class in dials.algorithms.refinement.target_stills)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff"]], "leastsquaresstillsresidualwithrmsdcutoffsparse (class in dials.algorithms.refinement.target_stills)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoffSparse"]], "levenbergmarquardtiterations (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations"]], "refiner (class in dials.algorithms.refinement.refiner)": [[14, "dials.algorithms.refinement.refiner.Refiner"]], "refinerfactory (class in dials.algorithms.refinement.refiner)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory"]], "refinery (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.Refinery"]], "reflectionmanager (class in dials.algorithms.refinement.reflection_manager)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager"]], "reflectionmanagerfactory (class in dials.algorithms.refinement.reflection_manager)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManagerFactory"]], "scanvaryingrefiner (class in dials.algorithms.refinement.refiner)": [[14, "dials.algorithms.refinement.refiner.ScanVaryingRefiner"]], "simplelbfgs (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.SimpleLBFGS"]], "sparsegradientsmixin (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.SparseGradientsMixin"]], "statisticalweightingstrategy (class in dials.algorithms.refinement.weighting_strategies)": [[14, "dials.algorithms.refinement.weighting_strategies.StatisticalWeightingStrategy"]], "stillsreflectionmanager (class in dials.algorithms.refinement.reflection_manager)": [[14, "dials.algorithms.refinement.reflection_manager.StillsReflectionManager"]], "stillsweightingstrategy (class in dials.algorithms.refinement.weighting_strategies)": [[14, "dials.algorithms.refinement.weighting_strategies.StillsWeightingStrategy"]], "target (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.Target"]], "targetfactory (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.TargetFactory"]], "__init__() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.__init__"]], "__init__() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.__init__"]], "__init__() (dials.algorithms.refinement.engine.gaussnewtoniterations method)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.__init__"]], "__init__() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.__init__"]], "__init__() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.__init__"]], "__init__() (dials.algorithms.refinement.reflection_manager.blockcalculator method)": [[14, "dials.algorithms.refinement.reflection_manager.BlockCalculator.__init__"]], "__init__() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.__init__"]], "__init__() (dials.algorithms.refinement.target.leastsquarespositionalresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoff.__init__"]], "__init__() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.__init__"]], "__init__() (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.__init__"]], "__init__() (dials.algorithms.refinement.weighting_strategies.constantweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.ConstantWeightingStrategy.__init__"]], "__init__() (dials.algorithms.refinement.weighting_strategies.stillsweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.StillsWeightingStrategy.__init__"]], "achieved() (dials.algorithms.refinement.target.leastsquarespositionalresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoff.achieved"]], "achieved() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.achieved"]], "achieved() (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.achieved"]], "add_column() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.add_column"]], "add_constant_to_diagonal() (dials.algorithms.refinement.engine.levenbergmarquardtiterations method)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.add_constant_to_diagonal"]], "add_row() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.add_row"]], "build_up() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.build_up"]], "calculate_esds() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.calculate_esds"]], "calculate_gradients() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.calculate_gradients"]], "calculate_weights() (dials.algorithms.refinement.weighting_strategies.constantweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.ConstantWeightingStrategy.calculate_weights"]], "calculate_weights() (dials.algorithms.refinement.weighting_strategies.externaldelpsiweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.ExternalDelPsiWeightingStrategy.calculate_weights"]], "calculate_weights() (dials.algorithms.refinement.weighting_strategies.statisticalweightingstrategy static method)": [[14, "dials.algorithms.refinement.weighting_strategies.StatisticalWeightingStrategy.calculate_weights"]], "calculate_weights() (dials.algorithms.refinement.weighting_strategies.stillsweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.StillsWeightingStrategy.calculate_weights"]], "callback_after_step() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.callback_after_step"]], "compute_functional_and_gradients() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.compute_functional_and_gradients"]], "compute_functional_gradients_and_curvatures() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.compute_functional_gradients_and_curvatures"]], "compute_functional_gradients_and_curvatures() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_functional_gradients_and_curvatures"]], "compute_functional_gradients_diag() (dials.algorithms.refinement.engine.lbfgscurvs method)": [[14, "dials.algorithms.refinement.engine.LBFGScurvs.compute_functional_gradients_diag"]], "compute_residuals() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_residuals"]], "compute_residuals_and_gradients() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_residuals_and_gradients"]], "compute_restraints_functional_gradients_and_curvatures() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_restraints_functional_gradients_and_curvatures"]], "compute_restraints_residuals_and_gradients() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_restraints_residuals_and_gradients"]], "config_refinery() (dials.algorithms.refinement.refiner.refinerfactory static method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.config_refinery"]], "config_restraints() (dials.algorithms.refinement.refiner.refinerfactory static method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.config_restraints"]], "config_sparse() (dials.algorithms.refinement.refiner.refinerfactory static method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.config_sparse"]], "config_target() (dials.algorithms.refinement.refiner.refinerfactory static method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.config_target"]], "convergence_as_shift_over_esd (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.convergence_as_shift_over_esd"]], "damping_value (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.damping_value"]], "del_last_row() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.del_last_row"]], "dials.algorithms.refinement.engine": [[14, "module-dials.algorithms.refinement.engine"]], "dials.algorithms.refinement.refiner": [[14, "module-dials.algorithms.refinement.refiner"]], "dials.algorithms.refinement.reflection_manager": [[14, "module-dials.algorithms.refinement.reflection_manager"]], "dials.algorithms.refinement.target": [[14, "module-dials.algorithms.refinement.target"]], "dials.algorithms.refinement.target_stills": [[14, "module-dials.algorithms.refinement.target_stills"]], "dials.algorithms.refinement.weighting_strategies": [[14, "module-dials.algorithms.refinement.weighting_strategies"]], "dim (dials.algorithms.refinement.target.target property)": [[14, "dials.algorithms.refinement.target.Target.dim"]], "experiment_type (dials.algorithms.refinement.reflection_manager.reflectionmanager attribute)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.experiment_type"]], "experiment_type (dials.algorithms.refinement.reflection_manager.stillsreflectionmanager attribute)": [[14, "dials.algorithms.refinement.reflection_manager.StillsReflectionManager.experiment_type"]], "filter_obs() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.filter_obs"]], "finalise() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.finalise"]], "from_json_file() (dials.algorithms.refinement.engine.journal class method)": [[14, "dials.algorithms.refinement.engine.Journal.from_json_file"]], "from_parameters_and_experiments() (dials.algorithms.refinement.target.targetfactory static method)": [[14, "dials.algorithms.refinement.target.TargetFactory.from_parameters_and_experiments"]], "from_parameters_data_experiments() (dials.algorithms.refinement.refiner.refinerfactory class method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.from_parameters_data_experiments"]], "from_parameters_reflections_experiments() (dials.algorithms.refinement.reflection_manager.reflectionmanagerfactory static method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManagerFactory.from_parameters_reflections_experiments"]], "get_accepted_refs_size() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_accepted_refs_size"]], "get_centroid_analyser() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_centroid_analyser"]], "get_correlation_matrix_for_step() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.get_correlation_matrix_for_step"]], "get_experiments() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_experiments"]], "get_free_reflections() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_free_reflections"]], "get_free_reflections() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_free_reflections"]], "get_indexed() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_indexed"]], "get_matches() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_matches"]], "get_matches() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_matches"]], "get_nrows() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.get_nrows"]], "get_num_matches() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.get_num_matches"]], "get_num_matches_for_experiment() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.get_num_matches_for_experiment"]], "get_num_matches_for_panel() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.get_num_matches_for_panel"]], "get_num_steps() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.get_num_steps"]], "get_obs() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_obs"]], "get_param_reporter() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_param_reporter"]], "get_parameter_correlation_matrix() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_parameter_correlation_matrix"]], "get_sample_size() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_sample_size"]], "gradient_threshold (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.gradient_threshold"]], "history (dials.algorithms.refinement.refiner.refiner property)": [[14, "dials.algorithms.refinement.refiner.Refiner.history"]], "jacobian_condition_number() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.jacobian_condition_number"]], "max_shift_over_esd (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.max_shift_over_esd"]], "mu (dials.algorithms.refinement.engine.levenbergmarquardtiterations property)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.mu"]], "parameter_vector_norm() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.parameter_vector_norm"]], "per_image() (dials.algorithms.refinement.reflection_manager.blockcalculator method)": [[14, "dials.algorithms.refinement.reflection_manager.BlockCalculator.per_image"]], "per_width() (dials.algorithms.refinement.reflection_manager.blockcalculator method)": [[14, "dials.algorithms.refinement.reflection_manager.BlockCalculator.per_width"]], "predict() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.predict"]], "predict_for_free_reflections() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.predict_for_free_reflections"]], "predict_for_indexed() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.predict_for_indexed"]], "predict_for_reflection_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.predict_for_reflection_table"]], "predict_for_reflection_table() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.predict_for_reflection_table"]], "predict_for_reflection_table() (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.predict_for_reflection_table"]], "prepare_for_step() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.prepare_for_step"]], "print_exp_rmsd_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.print_exp_rmsd_table"]], "print_out_of_sample_rmsd_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.print_out_of_sample_rmsd_table"]], "print_panel_rmsd_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.print_panel_rmsd_table"]], "print_stats_on_matches() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.print_stats_on_matches"]], "print_stats_on_matches() (dials.algorithms.refinement.reflection_manager.stillsreflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.StillsReflectionManager.print_stats_on_matches"]], "print_step_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.print_step_table"]], "reason_for_termination (dials.algorithms.refinement.engine.journal attribute)": [[14, "dials.algorithms.refinement.engine.Journal.reason_for_termination"]], "report_progress() (dials.algorithms.refinement.engine.levenbergmarquardtiterations method)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.report_progress"]], "reset_accepted_reflections() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.reset_accepted_reflections"]], "restart() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.restart"]], "rmsd_names (dials.algorithms.refinement.target.target attribute)": [[14, "dials.algorithms.refinement.target.Target.rmsd_names"]], "rmsd_names (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff attribute)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.rmsd_names"]], "rmsd_units (dials.algorithms.refinement.target.target attribute)": [[14, "dials.algorithms.refinement.target.Target.rmsd_units"]], "rmsd_units (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff attribute)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.rmsd_units"]], "rmsds() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.rmsds"]], "rmsds() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.rmsds"]], "rmsds_for_experiment() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.rmsds_for_experiment"]], "rmsds_for_panel() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.rmsds_for_panel"]], "rmsds_for_reflection_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.rmsds_for_reflection_table"]], "rmsds_for_reflection_table() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.rmsds_for_reflection_table"]], "run() (dials.algorithms.refinement.engine.gaussnewtoniterations method)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.run"]], "run() (dials.algorithms.refinement.engine.lbfgscurvs method)": [[14, "dials.algorithms.refinement.engine.LBFGScurvs.run"]], "run() (dials.algorithms.refinement.engine.levenbergmarquardtiterations method)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.run"]], "run() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.run"]], "run() (dials.algorithms.refinement.engine.simplelbfgs method)": [[14, "dials.algorithms.refinement.engine.SimpleLBFGS.run"]], "run() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.run"]], "run_lbfgs() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.run_lbfgs"]], "selection_used_for_refinement() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.selection_used_for_refinement"]], "set_cholesky_factor() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.set_cholesky_factor"]], "set_last_cell() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.set_last_cell"]], "set_nproc() (dials.algorithms.refinement.engine.disablempmixin method)": [[14, "dials.algorithms.refinement.engine.DisableMPmixin.set_nproc"]], "set_nproc() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.set_nproc"]], "setup_mu() (dials.algorithms.refinement.engine.levenbergmarquardtiterations method)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.setup_mu"]], "split_jacobian_into_blocks() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.split_jacobian_into_blocks"]], "split_matches_into_blocks() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.split_matches_into_blocks"]], "step_backward() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.step_backward"]], "step_forward() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.step_forward"]], "step_threshold (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.step_threshold"]], "tau (dials.algorithms.refinement.engine.levenbergmarquardtiterations attribute)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.tau"]], "test_for_termination() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.test_for_termination"]], "test_objective_increasing_but_not_nref() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.test_objective_increasing_but_not_nref"]], "test_rmsd_convergence() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.test_rmsd_convergence"]], "to_json_file() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.to_json_file"]], "update_journal() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.update_journal"]], "update_matches() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.update_matches"]], "arrayscalingmodel (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel"]], "dosedecay (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.DoseDecay"]], "kbscalingmodel (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel"]], "normdevoutlierrejection (class in dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.NormDevOutlierRejection"]], "outlierrejectionbase (class in dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase"]], "physicalscalingmodel (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel"]], "scalingmodelbase (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase"]], "simplenormdevoutlierrejection (class in dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.SimpleNormDevOutlierRejection"]], "targetedoutlierrejection (class in dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.TargetedOutlierRejection"]], "__init__() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.__init__"]], "__init__() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.__init__"]], "__init__() (dials.algorithms.scaling.model.model.kbscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.__init__"]], "__init__() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.__init__"]], "__init__() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.__init__"]], "__init__() (dials.algorithms.scaling.outlier_rejection.normdevoutlierrejection method)": [[15, "dials.algorithms.scaling.outlier_rejection.NormDevOutlierRejection.__init__"]], "__init__() (dials.algorithms.scaling.outlier_rejection.outlierrejectionbase method)": [[15, "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase.__init__"]], "__init__() (dials.algorithms.scaling.outlier_rejection.simplenormdevoutlierrejection method)": [[15, "dials.algorithms.scaling.outlier_rejection.SimpleNormDevOutlierRejection.__init__"]], "__init__() (dials.algorithms.scaling.outlier_rejection.targetedoutlierrejection method)": [[15, "dials.algorithms.scaling.outlier_rejection.TargetedOutlierRejection.__init__"]], "calc_n_param_from_bins() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.calc_n_param_from_bins"]], "calculate_new_offset() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.calculate_new_offset"]], "components (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.components"]], "configdict (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.configdict"]], "configure_components() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.configure_components"]], "configure_components() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.configure_components"]], "configure_components() (dials.algorithms.scaling.model.model.kbscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.configure_components"]], "configure_components() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.configure_components"]], "configure_components() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.configure_components"]], "consecutive_refinement_order (dials.algorithms.scaling.model.model.arrayscalingmodel property)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.consecutive_refinement_order"]], "consecutive_refinement_order (dials.algorithms.scaling.model.model.dosedecay property)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.consecutive_refinement_order"]], "consecutive_refinement_order (dials.algorithms.scaling.model.model.kbscalingmodel property)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.consecutive_refinement_order"]], "consecutive_refinement_order (dials.algorithms.scaling.model.model.physicalscalingmodel property)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.consecutive_refinement_order"]], "consecutive_refinement_order() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.consecutive_refinement_order"]], "determine_esq_outlier_index_arrays() (in module dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.determine_Esq_outlier_index_arrays"]], "determine_auto_absorption_params() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.determine_auto_absorption_params"]], "determine_outlier_index_arrays() (in module dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.determine_outlier_index_arrays"]], "dials.algorithms.scaling": [[15, "module-dials.algorithms.scaling"]], "dials.algorithms.scaling.model.model": [[15, "module-dials.algorithms.scaling.model.model"]], "dials.algorithms.scaling.outlier_rejection": [[15, "module-dials.algorithms.scaling.outlier_rejection"]], "error_model (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.error_model"]], "final_outlier_arrays (dials.algorithms.scaling.outlier_rejection.outlierrejectionbase attribute)": [[15, "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase.final_outlier_arrays"]], "fix_initial_parameter() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.fix_initial_parameter"]], "fix_initial_parameter() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.fix_initial_parameter"]], "fix_initial_parameter() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.fix_initial_parameter"]], "fixed_components (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.fixed_components"]], "from_data() (dials.algorithms.scaling.model.model.arrayscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.from_data"]], "from_data() (dials.algorithms.scaling.model.model.dosedecay class method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.from_data"]], "from_data() (dials.algorithms.scaling.model.model.kbscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.from_data"]], "from_data() (dials.algorithms.scaling.model.model.physicalscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.from_data"]], "from_data() (dials.algorithms.scaling.model.model.scalingmodelbase class method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.from_data"]], "from_dict() (dials.algorithms.scaling.model.model.arrayscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.from_dict"]], "from_dict() (dials.algorithms.scaling.model.model.dosedecay class method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.from_dict"]], "from_dict() (dials.algorithms.scaling.model.model.kbscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.from_dict"]], "from_dict() (dials.algorithms.scaling.model.model.physicalscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.from_dict"]], "from_dict() (dials.algorithms.scaling.model.model.scalingmodelbase class method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.from_dict"]], "get_shared_components() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.get_shared_components"]], "get_shared_components() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.get_shared_components"]], "get_shared_components() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.get_shared_components"]], "id_ (dials.algorithms.scaling.model.model.arrayscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.id_"]], "id_ (dials.algorithms.scaling.model.model.dosedecay attribute)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.id_"]], "id_ (dials.algorithms.scaling.model.model.kbscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.id_"]], "id_ (dials.algorithms.scaling.model.model.physicalscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.id_"]], "id_ (dials.algorithms.scaling.model.model.scalingmodelbase attribute)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.id_"]], "initialise_smooth_input() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.initialise_smooth_input"]], "is_scaled (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.is_scaled"]], "limit_image_range() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.limit_image_range"]], "limit_image_range() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.limit_image_range"]], "limit_image_range() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.limit_image_range"]], "limit_image_range() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.limit_image_range"]], "load_error_model() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.load_error_model"]], "make_combined_plots() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.make_combined_plots"]], "n_params (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.n_params"]], "phil_scope (dials.algorithms.scaling.model.model.arrayscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.phil_scope"]], "phil_scope (dials.algorithms.scaling.model.model.dosedecay attribute)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.phil_scope"]], "phil_scope (dials.algorithms.scaling.model.model.kbscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.phil_scope"]], "phil_scope (dials.algorithms.scaling.model.model.physicalscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.phil_scope"]], "plot_model_components() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.plot_model_components"]], "plot_model_components() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.plot_model_components"]], "plot_model_components() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.plot_model_components"]], "plot_model_components() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.plot_model_components"]], "plot_scaling_models() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.plot_scaling_models"]], "record_intensity_combination_imid() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.record_intensity_combination_Imid"]], "reject_outliers() (in module dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.reject_outliers"]], "run() (dials.algorithms.scaling.outlier_rejection.outlierrejectionbase method)": [[15, "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase.run"]], "set_error_model() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.set_error_model"]], "set_scaling_model_as_scaled() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.set_scaling_model_as_scaled"]], "set_scaling_model_as_unscaled() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.set_scaling_model_as_unscaled"]], "set_valid_image_range() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.set_valid_image_range"]], "to_dict() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.to_dict"]], "update() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.update"]], "update() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.update"]], "update() (dials.algorithms.scaling.model.model.kbscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.update"]], "update() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.update"]], "update() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.update"]], "backgroundgradientfilter (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.BackgroundGradientFilter"]], "extractpixelsfromimage (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage"]], "extractpixelsfromimage2dnoshoeboxes (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage2DNoShoeboxes"]], "extractspots (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.ExtractSpots"]], "extractspotsparalleltask (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.ExtractSpotsParallelTask"]], "filterrunner (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.FilterRunner"]], "peakcentroiddistancefilter (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.PeakCentroidDistanceFilter"]], "spotdensityfilter (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.SpotDensityFilter"]], "spotfinder (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.SpotFinder"]], "spotfinderfactory (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory"]], "__init__() (dials.algorithms.spot_finding.factory.backgroundgradientfilter method)": [[16, "dials.algorithms.spot_finding.factory.BackgroundGradientFilter.__init__"]], "__init__() (dials.algorithms.spot_finding.factory.filterrunner method)": [[16, "dials.algorithms.spot_finding.factory.FilterRunner.__init__"]], "__init__() (dials.algorithms.spot_finding.factory.peakcentroiddistancefilter method)": [[16, "dials.algorithms.spot_finding.factory.PeakCentroidDistanceFilter.__init__"]], "__init__() (dials.algorithms.spot_finding.factory.spotdensityfilter method)": [[16, "dials.algorithms.spot_finding.factory.SpotDensityFilter.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.extractpixelsfromimage method)": [[16, "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.extractpixelsfromimage2dnoshoeboxes method)": [[16, "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage2DNoShoeboxes.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.extractspots method)": [[16, "dials.algorithms.spot_finding.finder.ExtractSpots.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.extractspotsparalleltask method)": [[16, "dials.algorithms.spot_finding.finder.ExtractSpotsParallelTask.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.spotfinder method)": [[16, "dials.algorithms.spot_finding.finder.SpotFinder.__init__"]], "check_flags() (dials.algorithms.spot_finding.factory.filterrunner method)": [[16, "dials.algorithms.spot_finding.factory.FilterRunner.check_flags"]], "configure_filter() (dials.algorithms.spot_finding.factory.spotfinderfactory static method)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory.configure_filter"]], "configure_threshold() (dials.algorithms.spot_finding.factory.spotfinderfactory static method)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory.configure_threshold"]], "dials.algorithms.spot_finding.factory": [[16, "module-dials.algorithms.spot_finding.factory"]], "dials.algorithms.spot_finding.finder": [[16, "module-dials.algorithms.spot_finding.finder"]], "find_spots() (dials.algorithms.spot_finding.finder.spotfinder method)": [[16, "dials.algorithms.spot_finding.finder.SpotFinder.find_spots"]], "from_parameters() (dials.algorithms.spot_finding.factory.spotfinderfactory static method)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory.from_parameters"]], "generate_phil_scope() (in module dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.generate_phil_scope"]], "load_image() (dials.algorithms.spot_finding.factory.spotfinderfactory static method)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory.load_image"]], "pixel_list_to_reflection_table() (in module dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.pixel_list_to_reflection_table"]], "pixel_list_to_shoeboxes() (in module dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.pixel_list_to_shoeboxes"]], "run() (dials.algorithms.spot_finding.factory.backgroundgradientfilter method)": [[16, "dials.algorithms.spot_finding.factory.BackgroundGradientFilter.run"]], "run() (dials.algorithms.spot_finding.factory.peakcentroiddistancefilter method)": [[16, "dials.algorithms.spot_finding.factory.PeakCentroidDistanceFilter.run"]], "run() (dials.algorithms.spot_finding.factory.spotdensityfilter method)": [[16, "dials.algorithms.spot_finding.factory.SpotDensityFilter.run"]], "shoeboxes_to_reflection_table() (in module dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.shoeboxes_to_reflection_table"]], "reflectionpredictor (class in dials.algorithms.spot_prediction.reflection_predictor)": [[17, "dials.algorithms.spot_prediction.reflection_predictor.ReflectionPredictor"]], "__init__() (dials.algorithms.spot_prediction.reflection_predictor.reflectionpredictor method)": [[17, "dials.algorithms.spot_prediction.reflection_predictor.ReflectionPredictor.__init__"]], "dials.algorithms.spot_prediction.reflection_predictor": [[17, "module-dials.algorithms.spot_prediction.reflection_predictor"]], "predictor() (dials.algorithms.spot_prediction.reflection_predictor.reflectionpredictor method)": [[17, "dials.algorithms.spot_prediction.reflection_predictor.ReflectionPredictor.predictor"]], "correlationcoefficientaccumulator (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator"]], "cosymanalysis (class in dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis"]], "lauegroupanalysis (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis"]], "scorecorrelationcoefficient (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient"]], "scoresubgroup (class in dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.ScoreSubGroup"]], "scoresubgroup (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSubGroup"]], "scoresymmetryelement (class in dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.ScoreSymmetryElement"]], "scoresymmetryelement (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSymmetryElement"]], "symmetryanalysis (class in dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis"]], "target (class in dials.algorithms.symmetry.cosym.target)": [[18, "dials.algorithms.symmetry.cosym.target.Target"]], "__init__() (dials.algorithms.symmetry.cosym.cosymanalysis method)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.scoresubgroup method)": [[18, "dials.algorithms.symmetry.cosym.ScoreSubGroup.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.scoresymmetryelement method)": [[18, "dials.algorithms.symmetry.cosym.ScoreSymmetryElement.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.symmetryanalysis method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.lauegroupanalysis method)": [[18, "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.scorecorrelationcoefficient method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.scoresubgroup method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSubGroup.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.scoresymmetryelement method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSymmetryElement.__init__"]], "__init__() (dials.algorithms.symmetry.symmetry_base method)": [[18, "dials.algorithms.symmetry.symmetry_base.__init__"]], "accumulate() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.accumulate"]], "as_dict() (dials.algorithms.symmetry.cosym.cosymanalysis method)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis.as_dict"]], "as_dict() (dials.algorithms.symmetry.cosym.scoresubgroup method)": [[18, "dials.algorithms.symmetry.cosym.ScoreSubGroup.as_dict"]], "as_dict() (dials.algorithms.symmetry.cosym.scoresymmetryelement method)": [[18, "dials.algorithms.symmetry.cosym.ScoreSymmetryElement.as_dict"]], "as_dict() (dials.algorithms.symmetry.cosym.symmetryanalysis method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.as_dict"]], "as_dict() (dials.algorithms.symmetry.laue_group.lauegroupanalysis method)": [[18, "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis.as_dict"]], "as_dict() (dials.algorithms.symmetry.laue_group.scoresubgroup method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSubGroup.as_dict"]], "as_dict() (dials.algorithms.symmetry.laue_group.scoresymmetryelement method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSymmetryElement.as_dict"]], "as_json() (dials.algorithms.symmetry.cosym.cosymanalysis method)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis.as_json"]], "as_json() (dials.algorithms.symmetry.laue_group.lauegroupanalysis method)": [[18, "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis.as_json"]], "callback_after_step() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.callback_after_step"]], "coefficient() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.coefficient"]], "compute_functional() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.compute_functional"]], "compute_functional_and_gradients() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.compute_functional_and_gradients"]], "compute_functional_gradients_and_curvatures() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.compute_functional_gradients_and_curvatures"]], "compute_functional_gradients_diag() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.compute_functional_gradients_diag"]], "compute_gradients() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.compute_gradients"]], "compute_gradients_fd() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.compute_gradients_fd"]], "curvatures() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.curvatures"]], "curvatures_fd() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.curvatures_fd"]], "denominator() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.denominator"]], "determine_reindex_operator_against_reference() (in module dials.algorithms.symmetry.reindex_to_reference)": [[18, "dials.algorithms.symmetry.reindex_to_reference.determine_reindex_operator_against_reference"]], "dials.algorithms.symmetry": [[18, "module-dials.algorithms.symmetry"]], "dials.algorithms.symmetry.cosym": [[18, "module-dials.algorithms.symmetry.cosym"]], "dials.algorithms.symmetry.cosym.engine": [[18, "module-dials.algorithms.symmetry.cosym.engine"]], "dials.algorithms.symmetry.cosym.target": [[18, "module-dials.algorithms.symmetry.cosym.target"]], "dials.algorithms.symmetry.laue_group": [[18, "module-dials.algorithms.symmetry.laue_group"]], "dials.algorithms.symmetry.reindex_to_reference": [[18, "module-dials.algorithms.symmetry.reindex_to_reference"]], "dim (dials.algorithms.symmetry.cosym.target.target attribute)": [[18, "dials.algorithms.symmetry.cosym.target.Target.dim"]], "extract_reference_intensities() (in module dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.extract_reference_intensities"]], "kernel_normalisation() (dials.algorithms.symmetry.symmetry_base static method)": [[18, "dials.algorithms.symmetry.symmetry_base.kernel_normalisation"]], "lbfgs_with_curvs (class in dials.algorithms.symmetry.cosym.engine)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs"]], "minimize_scipy() (in module dials.algorithms.symmetry.cosym.engine)": [[18, "dials.algorithms.symmetry.cosym.engine.minimize_scipy"]], "minimize_scitbx_lbfgs() (in module dials.algorithms.symmetry.cosym.engine)": [[18, "dials.algorithms.symmetry.cosym.engine.minimize_scitbx_lbfgs"]], "ml_aniso_normalisation() (dials.algorithms.symmetry.symmetry_base static method)": [[18, "dials.algorithms.symmetry.symmetry_base.ml_aniso_normalisation"]], "ml_iso_normalisation() (dials.algorithms.symmetry.symmetry_base static method)": [[18, "dials.algorithms.symmetry.symmetry_base.ml_iso_normalisation"]], "n() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.n"]], "numerator() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.numerator"]], "p_cc_given_not_s (dials.algorithms.symmetry.laue_group.scorecorrelationcoefficient property)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient.p_cc_given_not_s"]], "p_cc_given_s (dials.algorithms.symmetry.laue_group.scorecorrelationcoefficient property)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient.p_cc_given_s"]], "p_s_given_cc (dials.algorithms.symmetry.laue_group.scorecorrelationcoefficient property)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient.p_s_given_cc"]], "resolution_filter_from_array() (in module dials.algorithms.symmetry)": [[18, "dials.algorithms.symmetry.resolution_filter_from_array"]], "resolution_filter_from_reflections_experiments() (in module dials.algorithms.symmetry)": [[18, "dials.algorithms.symmetry.resolution_filter_from_reflections_experiments"]], "run() (dials.algorithms.symmetry.cosym.cosymanalysis method)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis.run"]], "set_dimensions() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.set_dimensions"]], "stars (dials.algorithms.symmetry.cosym.scoresubgroup property)": [[18, "dials.algorithms.symmetry.cosym.ScoreSubGroup.stars"]], "stars (dials.algorithms.symmetry.cosym.scoresymmetryelement property)": [[18, "dials.algorithms.symmetry.cosym.ScoreSymmetryElement.stars"]], "subgroups_table() (dials.algorithms.symmetry.cosym.symmetryanalysis static method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.subgroups_table"]], "summary_table() (dials.algorithms.symmetry.cosym.symmetryanalysis static method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.summary_table"]], "sym_ops_table() (dials.algorithms.symmetry.cosym.symmetryanalysis static method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.sym_ops_table"]], "symmetry_base (class in dials.algorithms.symmetry)": [[18, "dials.algorithms.symmetry.symmetry_base"]], "trunccauchy_pdf() (in module dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.trunccauchy_pdf"]], "dials.array_family.flex": [[20, "module-dials.array_family.flex"]], "beamfactory (class in dxtbx.model.beam)": [[21, "dxtbx.model.beam.BeamFactory"]], "complex() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.complex"]], "dxtbx.model.beam": [[21, "module-dxtbx.model.beam"]], "from_dict() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.from_dict"]], "from_phil() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.from_phil"]], "imgcif() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.imgCIF"]], "imgcif_h() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.imgCIF_H"]], "make_beam() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.make_beam"]], "make_polarized_beam() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.make_polarized_beam"]], "simple() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.simple"]], "simple_directional() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.simple_directional"]], "crystal (class in dxtbx.model)": [[22, "dxtbx.model.Crystal"]], "crystalfactory (class in dxtbx.model.crystal)": [[22, "dxtbx.model.crystal.CrystalFactory"]], "mosaiccrystalkabsch2010 (class in dxtbx.model)": [[22, "dxtbx.model.MosaicCrystalKabsch2010"]], "mosaiccrystalsauter2014 (class in dxtbx.model)": [[22, "dxtbx.model.MosaicCrystalSauter2014"]], "__init__() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.__init__"]], "__init__() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.__init__"]], "__init__() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.__init__"]], "as_str() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.as_str"]], "as_str() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.as_str"]], "as_str() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.as_str"]], "dxtbx.model.crystal": [[22, "module-dxtbx.model.crystal"]], "from_dict() (dxtbx.model.crystal static method)": [[22, "dxtbx.model.Crystal.from_dict"]], "from_dict() (dxtbx.model.mosaiccrystalkabsch2010 class method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.from_dict"]], "from_dict() (dxtbx.model.mosaiccrystalsauter2014 class method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.from_dict"]], "from_dict() (dxtbx.model.crystal.crystalfactory static method)": [[22, "dxtbx.model.crystal.CrystalFactory.from_dict"]], "from_mosflm_matrix() (dxtbx.model.crystal.crystalfactory static method)": [[22, "dxtbx.model.crystal.CrystalFactory.from_mosflm_matrix"]], "get_a_as_sqr() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.get_A_as_sqr"]], "get_a_inverse_as_sqr() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.get_A_inverse_as_sqr"]], "get_crystal_symmetry() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.get_crystal_symmetry"]], "get_domain_size_ang() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.get_domain_size_ang"]], "get_half_mosaicity_deg() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.get_half_mosaicity_deg"]], "get_mosaicity() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.get_mosaicity"]], "is_similar_to() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.is_similar_to"]], "is_similar_to() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.is_similar_to"]], "set_domain_size_ang() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.set_domain_size_ang"]], "set_half_mosaicity_deg() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.set_half_mosaicity_deg"]], "set_mosaicity() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.set_mosaicity"]], "show() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.show"]], "to_dict() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.to_dict"]], "to_dict() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.to_dict"]], "to_dict() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.to_dict"]], "autoencoder (class in dxtbx.datablock)": [[23, "dxtbx.datablock.AutoEncoder"]], "beamcomparison (class in dxtbx.datablock)": [[23, "dxtbx.datablock.BeamComparison"]], "datablock (class in dxtbx.datablock)": [[23, "dxtbx.datablock.DataBlock"]], "datablockfactory (class in dxtbx.datablock)": [[23, "dxtbx.datablock.DataBlockFactory"]], "datablocktemplateimporter (class in dxtbx.datablock)": [[23, "dxtbx.datablock.DataBlockTemplateImporter"]], "detectorcomparison (class in dxtbx.datablock)": [[23, "dxtbx.datablock.DetectorComparison"]], "formatchecker (class in dxtbx.datablock)": [[23, "dxtbx.datablock.FormatChecker"]], "goniometercomparison (class in dxtbx.datablock)": [[23, "dxtbx.datablock.GoniometerComparison"]], "invaliddatablockerror": [[23, "dxtbx.datablock.InvalidDataBlockError"]], "__init__() (dxtbx.datablock.beamcomparison method)": [[23, "dxtbx.datablock.BeamComparison.__init__"]], "__init__() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.__init__"]], "__init__() (dxtbx.datablock.datablocktemplateimporter method)": [[23, "dxtbx.datablock.DataBlockTemplateImporter.__init__"]], "__init__() (dxtbx.datablock.detectorcomparison method)": [[23, "dxtbx.datablock.DetectorComparison.__init__"]], "__init__() (dxtbx.datablock.formatchecker method)": [[23, "dxtbx.datablock.FormatChecker.__init__"]], "__init__() (dxtbx.datablock.goniometercomparison method)": [[23, "dxtbx.datablock.GoniometerComparison.__init__"]], "append() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.append"]], "datablocks_from_dict() (in module dxtbx.datablock)": [[23, "dxtbx.datablock.datablocks_from_dict"]], "datablocks_from_imagesets() (in module dxtbx.datablock)": [[23, "dxtbx.datablock.datablocks_from_imagesets"]], "default() (dxtbx.datablock.autoencoder method)": [[23, "dxtbx.datablock.AutoEncoder.default"]], "dxtbx.datablock": [[23, "module-dxtbx.datablock"]], "extend() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.extend"]], "extract_imagesets() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.extract_imagesets"]], "extract_sequences() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.extract_sequences"]], "extract_stills() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.extract_stills"]], "find_format() (dxtbx.datablock.formatchecker method)": [[23, "dxtbx.datablock.FormatChecker.find_format"]], "format_class() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.format_class"]], "from_args() (dxtbx.datablock.datablockfactory static method)": [[23, "dxtbx.datablock.DataBlockFactory.from_args"]], "from_dict() (dxtbx.datablock.datablockfactory static method)": [[23, "dxtbx.datablock.DataBlockFactory.from_dict"]], "from_filenames() (dxtbx.datablock.datablockfactory static method)": [[23, "dxtbx.datablock.DataBlockFactory.from_filenames"]], "from_imageset() (dxtbx.datablock.datablockfactory static method)": [[23, "dxtbx.datablock.DataBlockFactory.from_imageset"]], "from_imageset_json_file() (dxtbx.datablock.datablockfactory static method)": [[23, "dxtbx.datablock.DataBlockFactory.from_imageset_json_file"]], "from_in_memory() (dxtbx.datablock.datablockfactory static method)": [[23, "dxtbx.datablock.DataBlockFactory.from_in_memory"]], "from_json() (dxtbx.datablock.datablockfactory static method)": [[23, "dxtbx.datablock.DataBlockFactory.from_json"]], "from_json_file() (dxtbx.datablock.datablockfactory static method)": [[23, "dxtbx.datablock.DataBlockFactory.from_json_file"]], "from_pickle_file() (dxtbx.datablock.datablockfactory static method)": [[23, "dxtbx.datablock.DataBlockFactory.from_pickle_file"]], "from_serialized_format() (dxtbx.datablock.datablockfactory static method)": [[23, "dxtbx.datablock.DataBlockFactory.from_serialized_format"]], "iter_groups() (dxtbx.datablock.formatchecker method)": [[23, "dxtbx.datablock.FormatChecker.iter_groups"]], "iter_sequences() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.iter_sequences"]], "iter_stills() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.iter_stills"]], "num_images() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.num_images"]], "to_dict() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.to_dict"]], "unique_beams() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.unique_beams"]], "unique_detectors() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.unique_detectors"]], "unique_goniometers() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.unique_goniometers"]], "unique_scans() (dxtbx.datablock.datablock method)": [[23, "dxtbx.datablock.DataBlock.unique_scans"]], "detector (class in dxtbx.model)": [[24, "dxtbx.model.Detector"]], "detectorfactory (class in dxtbx.model.detector)": [[24, "dxtbx.model.detector.DetectorFactory"]], "__init__() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.__init__"]], "add_group() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.add_group"]], "add_panel() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.add_panel"]], "complex() (dxtbx.model.detector.detectorfactory static method)": [[24, "dxtbx.model.detector.DetectorFactory.complex"]], "dxtbx.model.detector": [[24, "module-dxtbx.model.detector"]], "from_dict() (dxtbx.model.detector static method)": [[24, "dxtbx.model.Detector.from_dict"]], "from_dict() (dxtbx.model.detector.detectorfactory static method)": [[24, "dxtbx.model.detector.DetectorFactory.from_dict"]], "from_phil() (dxtbx.model.detector.detectorfactory static method)": [[24, "dxtbx.model.detector.DetectorFactory.from_phil"]], "generate_from_phil() (dxtbx.model.detector.detectorfactory static method)": [[24, "dxtbx.model.detector.DetectorFactory.generate_from_phil"]], "get_max_inscribed_resolution() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.get_max_inscribed_resolution"]], "get_max_resolution() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.get_max_resolution"]], "get_names() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.get_names"]], "get_panel_intersection() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.get_panel_intersection"]], "get_ray_intersection() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.get_ray_intersection"]], "has_projection_2d() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.has_projection_2d"]], "hierarchy() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.hierarchy"]], "imgcif() (dxtbx.model.detector.detectorfactory static method)": [[24, "dxtbx.model.detector.DetectorFactory.imgCIF"]], "imgcif_h() (dxtbx.model.detector.detectorfactory static method)": [[24, "dxtbx.model.detector.DetectorFactory.imgCIF_H"]], "is_similar_to() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.is_similar_to"]], "iter_levelorder() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.iter_levelorder"]], "iter_panels() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.iter_panels"]], "iter_preorder() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.iter_preorder"]], "make_detector() (dxtbx.model.detector.detectorfactory static method)": [[24, "dxtbx.model.detector.DetectorFactory.make_detector"]], "overwrite_from_phil() (dxtbx.model.detector.detectorfactory static method)": [[24, "dxtbx.model.detector.DetectorFactory.overwrite_from_phil"]], "rotate_around_origin() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.rotate_around_origin"]], "sensor() (dxtbx.model.detector.detectorfactory static method)": [[24, "dxtbx.model.detector.DetectorFactory.sensor"]], "simple() (dxtbx.model.detector.detectorfactory static method)": [[24, "dxtbx.model.detector.DetectorFactory.simple"]], "to_dict() (dxtbx.model.detector method)": [[24, "dxtbx.model.Detector.to_dict"]], "two_theta() (dxtbx.model.detector.detectorfactory static method)": [[24, "dxtbx.model.detector.DetectorFactory.two_theta"]], "beamcomparison (class in dxtbx.model.experiment_list)": [[25, "dxtbx.model.experiment_list.BeamComparison"]], "detectorcomparison (class in dxtbx.model.experiment_list)": [[25, "dxtbx.model.experiment_list.DetectorComparison"]], "experimentlist (class in dxtbx.model)": [[25, "dxtbx.model.ExperimentList"]], "experimentlistfactory (class in dxtbx.model.experiment_list)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory"]], "goniometercomparison (class in dxtbx.model.experiment_list)": [[25, "dxtbx.model.experiment_list.GoniometerComparison"]], "__init__() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.__init__"]], "__init__() (dxtbx.model.experiment_list.beamcomparison method)": [[25, "dxtbx.model.experiment_list.BeamComparison.__init__"]], "__init__() (dxtbx.model.experiment_list.detectorcomparison method)": [[25, "dxtbx.model.experiment_list.DetectorComparison.__init__"]], "__init__() (dxtbx.model.experiment_list.goniometercomparison method)": [[25, "dxtbx.model.experiment_list.GoniometerComparison.__init__"]], "all_sequences() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.all_sequences"]], "all_stills() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.all_stills"]], "append() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.append"]], "as_file() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.as_file"]], "as_json() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.as_json"]], "beams() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.beams"]], "change_basis() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.change_basis"]], "clear() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.clear"]], "crystals() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.crystals"]], "detectors() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.detectors"]], "dxtbx.model.experiment_list": [[25, "module-dxtbx.model.experiment_list"]], "empty() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.empty"]], "extend() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.extend"]], "find() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.find"]], "from_args() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_args"]], "from_datablock_and_crystal() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_datablock_and_crystal"]], "from_dict() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_dict"]], "from_file() (dxtbx.model.experimentlist static method)": [[25, "dxtbx.model.ExperimentList.from_file"]], "from_filenames() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_filenames"]], "from_imageset_and_crystal() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_imageset_and_crystal"]], "from_json() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_json"]], "from_json_file() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_json_file"]], "from_pickle_file() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_pickle_file"]], "from_sequence_and_crystal() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_sequence_and_crystal"]], "from_serialized_format() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_serialized_format"]], "from_stills_and_crystal() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_stills_and_crystal"]], "from_templates() (dxtbx.model.experimentlist static method)": [[25, "dxtbx.model.ExperimentList.from_templates"]], "from_templates() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_templates"]], "from_xds() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[25, "dxtbx.model.experiment_list.ExperimentListFactory.from_xds"]], "goniometers() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.goniometers"]], "identifiers() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.identifiers"]], "imagesets() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.imagesets"]], "indices() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.indices"]], "is_consistent() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.is_consistent"]], "nullify_all_single_file_reader_format_instances() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.nullify_all_single_file_reader_format_instances"]], "profiles() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.profiles"]], "remove_on_experiment_identifiers() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.remove_on_experiment_identifiers"]], "replace() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.replace"]], "scaling_models() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.scaling_models"]], "scans() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.scans"]], "select_on_experiment_identifiers() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.select_on_experiment_identifiers"]], "to_datablocks() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.to_datablocks"]], "to_dict() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.to_dict"]], "where() (dxtbx.model.experimentlist method)": [[25, "dxtbx.model.ExperimentList.where"]], "goniometer (class in dxtbx.model.goniometer)": [[26, "dxtbx.model.goniometer.Goniometer"]], "goniometerfactory (class in dxtbx.model.goniometer)": [[26, "dxtbx.model.goniometer.GoniometerFactory"]], "kappagoniometer (class in dxtbx.model.goniometer)": [[26, "dxtbx.model.goniometer.KappaGoniometer"]], "multiaxisgoniometer (class in dxtbx.model.goniometer)": [[26, "dxtbx.model.goniometer.MultiAxisGoniometer"]], "__init__() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.__init__"]], "__init__() (dxtbx.model.goniometer.kappagoniometer method)": [[26, "dxtbx.model.goniometer.KappaGoniometer.__init__"]], "__init__() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[26, "dxtbx.model.goniometer.MultiAxisGoniometer.__init__"]], "dxtbx.model.goniometer": [[26, "module-dxtbx.model.goniometer"]], "from_dict() (dxtbx.model.goniometer.goniometer static method)": [[26, "dxtbx.model.goniometer.Goniometer.from_dict"]], "from_dict() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.from_dict"]], "from_dict() (dxtbx.model.goniometer.multiaxisgoniometer static method)": [[26, "dxtbx.model.goniometer.MultiAxisGoniometer.from_dict"]], "from_phil() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.from_phil"]], "get_alpha_angle() (dxtbx.model.goniometer.kappagoniometer method)": [[26, "dxtbx.model.goniometer.KappaGoniometer.get_alpha_angle"]], "get_angles() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[26, "dxtbx.model.goniometer.MultiAxisGoniometer.get_angles"]], "get_axes() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[26, "dxtbx.model.goniometer.MultiAxisGoniometer.get_axes"]], "get_direction() (dxtbx.model.goniometer.kappagoniometer method)": [[26, "dxtbx.model.goniometer.KappaGoniometer.get_direction"]], "get_fixed_rotation() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.get_fixed_rotation"]], "get_kappa_angle() (dxtbx.model.goniometer.kappagoniometer method)": [[26, "dxtbx.model.goniometer.KappaGoniometer.get_kappa_angle"]], "get_kappa_axis() (dxtbx.model.goniometer.kappagoniometer method)": [[26, "dxtbx.model.goniometer.KappaGoniometer.get_kappa_axis"]], "get_names() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[26, "dxtbx.model.goniometer.MultiAxisGoniometer.get_names"]], "get_num_scan_points() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.get_num_scan_points"]], "get_omega_angle() (dxtbx.model.goniometer.kappagoniometer method)": [[26, "dxtbx.model.goniometer.KappaGoniometer.get_omega_angle"]], "get_omega_axis() (dxtbx.model.goniometer.kappagoniometer method)": [[26, "dxtbx.model.goniometer.KappaGoniometer.get_omega_axis"]], "get_phi_angle() (dxtbx.model.goniometer.kappagoniometer method)": [[26, "dxtbx.model.goniometer.KappaGoniometer.get_phi_angle"]], "get_phi_axis() (dxtbx.model.goniometer.kappagoniometer method)": [[26, "dxtbx.model.goniometer.KappaGoniometer.get_phi_axis"]], "get_rotation_axis() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.get_rotation_axis"]], "get_rotation_axis_datum() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.get_rotation_axis_datum"]], "get_scan_axis() (dxtbx.model.goniometer.kappagoniometer method)": [[26, "dxtbx.model.goniometer.KappaGoniometer.get_scan_axis"]], "get_scan_axis() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[26, "dxtbx.model.goniometer.MultiAxisGoniometer.get_scan_axis"]], "get_setting_rotation() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.get_setting_rotation"]], "get_setting_rotation_at_scan_point() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.get_setting_rotation_at_scan_point"]], "get_setting_rotation_at_scan_points() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.get_setting_rotation_at_scan_points"]], "imgcif() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.imgCIF"]], "imgcif_h() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.imgCIF_H"]], "is_similar_to() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.is_similar_to"]], "kappa() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.kappa"]], "known_axis() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.known_axis"]], "make_goniometer() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.make_goniometer"]], "make_kappa_goniometer() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.make_kappa_goniometer"]], "make_multi_axis_goniometer() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.make_multi_axis_goniometer"]], "multi_axis() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.multi_axis"]], "multi_axis_goniometer_from_phil() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.multi_axis_goniometer_from_phil"]], "num_scan_points (dxtbx.model.goniometer.goniometer property)": [[26, "dxtbx.model.goniometer.Goniometer.num_scan_points"]], "reset_scan_points() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.reset_scan_points"]], "rotate_around_origin() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.rotate_around_origin"]], "set_angles() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[26, "dxtbx.model.goniometer.MultiAxisGoniometer.set_angles"]], "set_axes() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[26, "dxtbx.model.goniometer.MultiAxisGoniometer.set_axes"]], "set_fixed_rotation() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.set_fixed_rotation"]], "set_rotation_axis() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.set_rotation_axis"]], "set_rotation_axis_datum() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.set_rotation_axis_datum"]], "set_setting_rotation() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.set_setting_rotation"]], "set_setting_rotation_at_scan_points() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.set_setting_rotation_at_scan_points"]], "single_axis() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.single_axis"]], "single_axis_goniometer_from_phil() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.single_axis_goniometer_from_phil"]], "single_axis_reverse() (dxtbx.model.goniometer.goniometerfactory static method)": [[26, "dxtbx.model.goniometer.GoniometerFactory.single_axis_reverse"]], "to_dict() (dxtbx.model.goniometer.goniometer method)": [[26, "dxtbx.model.goniometer.Goniometer.to_dict"]], "to_dict() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[26, "dxtbx.model.goniometer.MultiAxisGoniometer.to_dict"]], "externallookup (class in dxtbx.imageset)": [[27, "dxtbx.imageset.ExternalLookup"]], "externallookupitembool (class in dxtbx.imageset)": [[27, "dxtbx.imageset.ExternalLookupItemBool"]], "externallookupitemdouble (class in dxtbx.imageset)": [[27, "dxtbx.imageset.ExternalLookupItemDouble"]], "imagegrid (class in dxtbx.imageset)": [[27, "dxtbx.imageset.ImageGrid"]], "imagesequence (class in dxtbx.imageset)": [[27, "dxtbx.imageset.ImageSequence"]], "imageset (class in dxtbx.imageset)": [[27, "dxtbx.imageset.ImageSet"]], "imagesetdata (class in dxtbx.imageset)": [[27, "dxtbx.imageset.ImageSetData"]], "imagesetfactory (class in dxtbx.imageset)": [[27, "dxtbx.imageset.ImageSetFactory"]], "imagesetlazy (class in dxtbx.imageset)": [[27, "dxtbx.imageset.ImageSetLazy"]], "memreader (class in dxtbx.imageset)": [[27, "dxtbx.imageset.MemReader"]], "__init__() (dxtbx.imageset.externallookup method)": [[27, "dxtbx.imageset.ExternalLookup.__init__"]], "__init__() (dxtbx.imageset.externallookupitembool method)": [[27, "dxtbx.imageset.ExternalLookupItemBool.__init__"]], "__init__() (dxtbx.imageset.externallookupitemdouble method)": [[27, "dxtbx.imageset.ExternalLookupItemDouble.__init__"]], "__init__() (dxtbx.imageset.imagegrid method)": [[27, "dxtbx.imageset.ImageGrid.__init__"]], "__init__() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.__init__"]], "__init__() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.__init__"]], "__init__() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.__init__"]], "__init__() (dxtbx.imageset.memreader method)": [[27, "dxtbx.imageset.MemReader.__init__"]], "as_imageset() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.as_imageset"]], "clear_cache() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.clear_cache"]], "complete_set() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.complete_set"]], "complete_set() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.complete_set"]], "copy() (dxtbx.imageset.memreader method)": [[27, "dxtbx.imageset.MemReader.copy"]], "data (dxtbx.imageset.externallookupitembool property)": [[27, "dxtbx.imageset.ExternalLookupItemBool.data"]], "data (dxtbx.imageset.externallookupitemdouble property)": [[27, "dxtbx.imageset.ExternalLookupItemDouble.data"]], "data() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.data"]], "dx (dxtbx.imageset.externallookup property)": [[27, "dxtbx.imageset.ExternalLookup.dx"]], "dxtbx.imageset": [[27, "module-dxtbx.imageset"]], "dy (dxtbx.imageset.externallookup property)": [[27, "dxtbx.imageset.ExternalLookup.dy"]], "external_lookup (dxtbx.imageset.imageset property)": [[27, "dxtbx.imageset.ImageSet.external_lookup"]], "external_lookup (dxtbx.imageset.imagesetdata property)": [[27, "dxtbx.imageset.ImageSetData.external_lookup"]], "filename (dxtbx.imageset.externallookupitembool property)": [[27, "dxtbx.imageset.ExternalLookupItemBool.filename"]], "filename (dxtbx.imageset.externallookupitemdouble property)": [[27, "dxtbx.imageset.ExternalLookupItemDouble.filename"]], "from_imageset() (dxtbx.imageset.imagegrid static method)": [[27, "dxtbx.imageset.ImageGrid.from_imageset"]], "from_template() (dxtbx.imageset.imagesetfactory static method)": [[27, "dxtbx.imageset.ImageSetFactory.from_template"]], "gain (dxtbx.imageset.externallookup property)": [[27, "dxtbx.imageset.ExternalLookup.gain"]], "get_array_range() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.get_array_range"]], "get_beam() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.get_beam"]], "get_beam() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_beam"]], "get_beam() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.get_beam"]], "get_beam() (dxtbx.imageset.imagesetlazy method)": [[27, "dxtbx.imageset.ImageSetLazy.get_beam"]], "get_corrected_data() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_corrected_data"]], "get_corrected_data() (dxtbx.imageset.imagesetlazy method)": [[27, "dxtbx.imageset.ImageSetLazy.get_corrected_data"]], "get_data() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.get_data"]], "get_detector() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.get_detector"]], "get_detector() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_detector"]], "get_detector() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.get_detector"]], "get_detector() (dxtbx.imageset.imagesetlazy method)": [[27, "dxtbx.imageset.ImageSetLazy.get_detector"]], "get_detectorbase() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_detectorbase"]], "get_format_class() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_format_class"]], "get_format_class() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.get_format_class"]], "get_gain() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_gain"]], "get_gain() (dxtbx.imageset.imagesetlazy method)": [[27, "dxtbx.imageset.ImageSetLazy.get_gain"]], "get_goniometer() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.get_goniometer"]], "get_goniometer() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_goniometer"]], "get_goniometer() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.get_goniometer"]], "get_goniometer() (dxtbx.imageset.imagesetlazy method)": [[27, "dxtbx.imageset.ImageSetLazy.get_goniometer"]], "get_grid_size() (dxtbx.imageset.imagegrid method)": [[27, "dxtbx.imageset.ImageGrid.get_grid_size"]], "get_image_identifier() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_image_identifier"]], "get_image_identifier() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.get_image_identifier"]], "get_mask() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_mask"]], "get_mask() (dxtbx.imageset.imagesetlazy method)": [[27, "dxtbx.imageset.ImageSetLazy.get_mask"]], "get_master_path() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.get_master_path"]], "get_params() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.get_params"]], "get_path() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_path"]], "get_path() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.get_path"]], "get_pedestal() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_pedestal"]], "get_raw_data() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_raw_data"]], "get_scan() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.get_scan"]], "get_scan() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_scan"]], "get_scan() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.get_scan"]], "get_scan() (dxtbx.imageset.imagesetlazy method)": [[27, "dxtbx.imageset.ImageSetLazy.get_scan"]], "get_spectrum() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_spectrum"]], "get_template() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.get_template"]], "get_template() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.get_template"]], "get_vendor() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.get_vendor"]], "get_vendortype() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.get_vendortype"]], "has_dynamic_mask() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.has_dynamic_mask"]], "has_single_file_reader() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.has_single_file_reader"]], "identifiers() (dxtbx.imageset.memreader method)": [[27, "dxtbx.imageset.MemReader.identifiers"]], "imageset_from_anyset() (dxtbx.imageset.imagesetfactory static method)": [[27, "dxtbx.imageset.ImageSetFactory.imageset_from_anyset"]], "indices() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.indices"]], "is_marked_for_rejection() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.is_marked_for_rejection"]], "is_marked_for_rejection() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.is_marked_for_rejection"]], "is_single_file_reader() (dxtbx.imageset.memreader static method)": [[27, "dxtbx.imageset.MemReader.is_single_file_reader"]], "make_imageset() (dxtbx.imageset.imagesetfactory static method)": [[27, "dxtbx.imageset.ImageSetFactory.make_imageset"]], "make_sequence() (dxtbx.imageset.imagesetfactory static method)": [[27, "dxtbx.imageset.ImageSetFactory.make_sequence"]], "mark_for_rejection() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.mark_for_rejection"]], "mark_for_rejection() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.mark_for_rejection"]], "mask (dxtbx.imageset.externallookup property)": [[27, "dxtbx.imageset.ExternalLookup.mask"]], "masker() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.masker"]], "masker() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.masker"]], "master_path() (dxtbx.imageset.memreader static method)": [[27, "dxtbx.imageset.MemReader.master_path"]], "new() (dxtbx.imageset.imagesetfactory static method)": [[27, "dxtbx.imageset.ImageSetFactory.new"]], "params() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.params"]], "partial_data() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.partial_data"]], "partial_set() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.partial_set"]], "partial_set() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.partial_set"]], "paths() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.paths"]], "paths() (dxtbx.imageset.memreader method)": [[27, "dxtbx.imageset.MemReader.paths"]], "pedestal (dxtbx.imageset.externallookup property)": [[27, "dxtbx.imageset.ExternalLookup.pedestal"]], "read() (dxtbx.imageset.memreader method)": [[27, "dxtbx.imageset.MemReader.read"]], "reader() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.reader"]], "reader() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.reader"]], "set_beam() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.set_beam"]], "set_beam() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.set_beam"]], "set_beam() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.set_beam"]], "set_detector() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.set_detector"]], "set_detector() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.set_detector"]], "set_detector() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.set_detector"]], "set_format_class() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.set_format_class"]], "set_goniometer() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.set_goniometer"]], "set_goniometer() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.set_goniometer"]], "set_goniometer() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.set_goniometer"]], "set_params() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.set_params"]], "set_scan() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.set_scan"]], "set_scan() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.set_scan"]], "set_scan() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.set_scan"]], "set_template() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.set_template"]], "set_vendor() (dxtbx.imageset.imagesetdata method)": [[27, "dxtbx.imageset.ImageSetData.set_vendor"]], "size() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.size"]], "update_detector_px_mm_data() (dxtbx.imageset.imagesequence method)": [[27, "dxtbx.imageset.ImageSequence.update_detector_px_mm_data"]], "update_detector_px_mm_data() (dxtbx.imageset.imageset method)": [[27, "dxtbx.imageset.ImageSet.update_detector_px_mm_data"]], "profilemodelfactory (class in dxtbx.model.profile)": [[29, "dxtbx.model.profile.ProfileModelFactory"]], "dxtbx.model.profile": [[29, "module-dxtbx.model.profile"]], "from_dict() (dxtbx.model.profile.profilemodelfactory static method)": [[29, "dxtbx.model.profile.ProfileModelFactory.from_dict"]], "scanfactory (class in dxtbx.model.scan)": [[30, "dxtbx.model.scan.ScanFactory"]], "add() (dxtbx.model.scan.scanfactory static method)": [[30, "dxtbx.model.scan.ScanFactory.add"]], "dxtbx.model.scan": [[30, "module-dxtbx.model.scan"]], "from_dict() (dxtbx.model.scan.scanfactory static method)": [[30, "dxtbx.model.scan.ScanFactory.from_dict"]], "from_phil() (dxtbx.model.scan.scanfactory static method)": [[30, "dxtbx.model.scan.ScanFactory.from_phil"]], "imgcif() (dxtbx.model.scan.scanfactory static method)": [[30, "dxtbx.model.scan.ScanFactory.imgCIF"]], "imgcif_h() (dxtbx.model.scan.scanfactory static method)": [[30, "dxtbx.model.scan.ScanFactory.imgCIF_H"]], "make_scan() (dxtbx.model.scan.scanfactory static method)": [[30, "dxtbx.model.scan.ScanFactory.make_scan"]], "search() (dxtbx.model.scan.scanfactory static method)": [[30, "dxtbx.model.scan.ScanFactory.search"]], "single_file() (dxtbx.model.scan.scanfactory static method)": [[30, "dxtbx.model.scan.ScanFactory.single_file"]], "xds_inp() (dxtbx.serialize.xds.to_xds method)": [[31, "dxtbx.serialize.xds.to_xds.XDS_INP"]], "__init__() (dxtbx.serialize.xds.to_xds method)": [[31, "dxtbx.serialize.xds.to_xds.__init__"]], "basic_imageset_from_dict() (in module dxtbx.serialize.imageset)": [[31, "dxtbx.serialize.imageset.basic_imageset_from_dict"]], "basic_imageset_to_dict() (in module dxtbx.serialize.imageset)": [[31, "dxtbx.serialize.imageset.basic_imageset_to_dict"]], "crystal() (in module dxtbx.serialize.load)": [[31, "dxtbx.serialize.load.crystal"]], "datablock() (in module dxtbx.serialize.load)": [[31, "dxtbx.serialize.load.datablock"]], "dxtbx.serialize.imageset": [[31, "module-dxtbx.serialize.imageset"]], "dxtbx.serialize.load": [[31, "module-dxtbx.serialize.load"]], "dxtbx.serialize.xds": [[31, "module-dxtbx.serialize.xds"]], "experiment_list() (in module dxtbx.serialize.load)": [[31, "dxtbx.serialize.load.experiment_list"]], "filename_or_none() (in module dxtbx.serialize.imageset)": [[31, "dxtbx.serialize.imageset.filename_or_none"]], "filename_to_absolute() (in module dxtbx.serialize.imageset)": [[31, "dxtbx.serialize.imageset.filename_to_absolute"]], "get_beam() (dxtbx.serialize.xds.to_xds method)": [[31, "dxtbx.serialize.xds.to_xds.get_beam"]], "get_detector() (dxtbx.serialize.xds.to_xds method)": [[31, "dxtbx.serialize.xds.to_xds.get_detector"]], "get_goniometer() (dxtbx.serialize.xds.to_xds method)": [[31, "dxtbx.serialize.xds.to_xds.get_goniometer"]], "get_scan() (dxtbx.serialize.xds.to_xds method)": [[31, "dxtbx.serialize.xds.to_xds.get_scan"]], "get_template() (dxtbx.serialize.xds.to_xds method)": [[31, "dxtbx.serialize.xds.to_xds.get_template"]], "imagesequence_from_dict() (in module dxtbx.serialize.imageset)": [[31, "dxtbx.serialize.imageset.imagesequence_from_dict"]], "imagesequence_to_dict() (in module dxtbx.serialize.imageset)": [[31, "dxtbx.serialize.imageset.imagesequence_to_dict"]], "imageset() (in module dxtbx.serialize.load)": [[31, "dxtbx.serialize.load.imageset"]], "imageset_from_dict() (in module dxtbx.serialize.imageset)": [[31, "dxtbx.serialize.imageset.imageset_from_dict"]], "imageset_to_dict() (in module dxtbx.serialize.imageset)": [[31, "dxtbx.serialize.imageset.imageset_to_dict"]], "to_crystal() (in module dxtbx.serialize.xds)": [[31, "dxtbx.serialize.xds.to_crystal"]], "to_imageset() (in module dxtbx.serialize.xds)": [[31, "dxtbx.serialize.xds.to_imageset"]], "to_xds (class in dxtbx.serialize.xds)": [[31, "dxtbx.serialize.xds.to_xds"]], "xds_detector_name() (in module dxtbx.serialize.xds)": [[31, "dxtbx.serialize.xds.xds_detector_name"]], "xparm_xds() (dxtbx.serialize.xds.to_xds method)": [[31, "dxtbx.serialize.xds.to_xds.xparm_xds"]], "dispersionspotfinderthresholdext (class in dials.extensions.dispersion_spotfinder_threshold_ext)": [[32, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt"]], "gaussianrsprofilemodelext (class in dials.extensions.gaussian_rs_profile_model_ext)": [[32, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt"]], "nullbackgroundext (class in dials.extensions.null_background_ext)": [[32, "dials.extensions.null_background_ext.NullBackgroundExt"]], "simplebackgroundext (class in dials.extensions.simple_background_ext)": [[32, "dials.extensions.simple_background_ext.SimpleBackgroundExt"]], "simplecentroidext (class in dials.extensions.simple_centroid_ext)": [[32, "dials.extensions.simple_centroid_ext.SimpleCentroidExt"]], "__init__() (dials.extensions.dispersion_spotfinder_threshold_ext.dispersionspotfinderthresholdext method)": [[32, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt.__init__"]], "__init__() (dials.extensions.null_background_ext.nullbackgroundext method)": [[32, "dials.extensions.null_background_ext.NullBackgroundExt.__init__"]], "__init__() (dials.extensions.simple_background_ext.simplebackgroundext method)": [[32, "dials.extensions.simple_background_ext.SimpleBackgroundExt.__init__"]], "__init__() (dials.extensions.simple_centroid_ext.simplecentroidext method)": [[32, "dials.extensions.simple_centroid_ext.SimpleCentroidExt.__init__"]], "algorithm() (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext static method)": [[32, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.algorithm"]], "compute_background() (dials.extensions.null_background_ext.nullbackgroundext method)": [[32, "dials.extensions.null_background_ext.NullBackgroundExt.compute_background"]], "compute_background() (dials.extensions.simple_background_ext.simplebackgroundext method)": [[32, "dials.extensions.simple_background_ext.SimpleBackgroundExt.compute_background"]], "compute_centroid() (dials.extensions.simple_centroid_ext.simplecentroidext method)": [[32, "dials.extensions.simple_centroid_ext.SimpleCentroidExt.compute_centroid"]], "compute_threshold() (dials.extensions.dispersion_spotfinder_threshold_ext.dispersionspotfinderthresholdext method)": [[32, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt.compute_threshold"]], "default (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext attribute)": [[32, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.default"]], "default (dials.extensions.simple_centroid_ext.simplecentroidext attribute)": [[32, "dials.extensions.simple_centroid_ext.SimpleCentroidExt.default"]], "dials.extensions.dispersion_spotfinder_threshold_ext": [[32, "module-dials.extensions.dispersion_spotfinder_threshold_ext"]], "dials.extensions.gaussian_rs_profile_model_ext": [[32, "module-dials.extensions.gaussian_rs_profile_model_ext"]], "dials.extensions.null_background_ext": [[32, "module-dials.extensions.null_background_ext"]], "dials.extensions.simple_background_ext": [[32, "module-dials.extensions.simple_background_ext"]], "dials.extensions.simple_centroid_ext": [[32, "module-dials.extensions.simple_centroid_ext"]], "estimate_global_threshold() (in module dials.extensions.dispersion_spotfinder_threshold_ext)": [[32, "dials.extensions.dispersion_spotfinder_threshold_ext.estimate_global_threshold"]], "from_dict() (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext class method)": [[32, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.from_dict"]], "name (dials.extensions.dispersion_spotfinder_threshold_ext.dispersionspotfinderthresholdext attribute)": [[32, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt.name"]], "name (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext attribute)": [[32, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.name"]], "name (dials.extensions.null_background_ext.nullbackgroundext attribute)": [[32, "dials.extensions.null_background_ext.NullBackgroundExt.name"]], "name (dials.extensions.simple_background_ext.simplebackgroundext attribute)": [[32, "dials.extensions.simple_background_ext.SimpleBackgroundExt.name"]], "name (dials.extensions.simple_centroid_ext.simplecentroidext attribute)": [[32, "dials.extensions.simple_centroid_ext.SimpleCentroidExt.name"]], "phil() (dials.extensions.dispersion_spotfinder_threshold_ext.dispersionspotfinderthresholdext static method)": [[32, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt.phil"]], "phil() (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext static method)": [[32, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.phil"]], "phil() (dials.extensions.simple_background_ext.simplebackgroundext static method)": [[32, "dials.extensions.simple_background_ext.SimpleBackgroundExt.phil"]], "argumenthandlingerrorinfo (class in dials.util.options)": [[34, "dials.util.options.ArgumentHandlingErrorInfo"]], "argumentparser (class in dials.util.options)": [[34, "dials.util.options.ArgumentParser"]], "argumentparserbase (class in dials.util.options)": [[34, "dials.util.options.ArgumentParserBase"]], "command (class in dials.util.command_line)": [[34, "dials.util.command_line.Command"]], "importer (class in dials.util.options)": [[34, "dials.util.options.Importer"]], "invalidphilerror": [[34, "dials.util.options.InvalidPhilError"]], "madmergedmtzwriter (class in dials.util.export_mtz)": [[34, "dials.util.export_mtz.MADMergedMTZWriter"]], "mtzwriterbase (class in dials.util.export_mtz)": [[34, "dials.util.export_mtz.MTZWriterBase"]], "mergedmtzwriter (class in dials.util.export_mtz)": [[34, "dials.util.export_mtz.MergedMTZWriter"]], "optionparser (class in dials.util.options)": [[34, "dials.util.options.OptionParser"]], "philcommandparser (class in dials.util.options)": [[34, "dials.util.options.PhilCommandParser"]], "progressbar (class in dials.util.command_line)": [[34, "dials.util.command_line.ProgressBar"]], "progressbartimer (class in dials.util.command_line)": [[34, "dials.util.command_line.ProgressBarTimer"]], "unmergedmtzwriter (class in dials.util.export_mtz)": [[34, "dials.util.export_mtz.UnmergedMTZWriter"]], "__init__() (dials.util.command_line.progressbar method)": [[34, "dials.util.command_line.ProgressBar.__init__"]], "__init__() (dials.util.command_line.progressbartimer method)": [[34, "dials.util.command_line.ProgressBarTimer.__init__"]], "__init__() (dials.util.export_mtz.mtzwriterbase method)": [[34, "dials.util.export_mtz.MTZWriterBase.__init__"]], "__init__() (dials.util.options.argumentparser method)": [[34, "dials.util.options.ArgumentParser.__init__"]], "__init__() (dials.util.options.argumentparserbase method)": [[34, "dials.util.options.ArgumentParserBase.__init__"]], "__init__() (dials.util.options.importer method)": [[34, "dials.util.options.Importer.__init__"]], "__init__() (dials.util.options.optionparser method)": [[34, "dials.util.options.OptionParser.__init__"]], "__init__() (dials.util.options.philcommandparser method)": [[34, "dials.util.options.PhilCommandParser.__init__"]], "add_batch_list() (dials.util.export_mtz.unmergedmtzwriter method)": [[34, "dials.util.export_mtz.UnmergedMTZWriter.add_batch_list"]], "add_crystal() (dials.util.export_mtz.mtzwriterbase method)": [[34, "dials.util.export_mtz.MTZWriterBase.add_crystal"]], "add_dataset() (dials.util.export_mtz.madmergedmtzwriter method)": [[34, "dials.util.export_mtz.MADMergedMTZWriter.add_dataset"]], "add_dataset() (dials.util.export_mtz.mergedmtzwriter method)": [[34, "dials.util.export_mtz.MergedMTZWriter.add_dataset"]], "add_empty_dataset() (dials.util.export_mtz.mtzwriterbase method)": [[34, "dials.util.export_mtz.MTZWriterBase.add_empty_dataset"]], "base_package_options (dials.util.installer.installer attribute)": [[34, "dials.util.installer.installer.base_package_options"]], "coloured() (in module dials.util.command_line)": [[34, "dials.util.command_line.coloured"]], "configure_modules (dials.util.installer.installer attribute)": [[34, "dials.util.installer.installer.configure_modules"]], "convert_to_cambridge() (in module dials.util.export_mtz)": [[34, "dials.util.export_mtz.convert_to_cambridge"]], "dest_dir_prefix (dials.util.installer.installer attribute)": [[34, "dials.util.installer.installer.dest_dir_prefix"]], "dials.util.command_line": [[34, "module-dials.util.command_line"]], "dials.util.export_mtz": [[34, "module-dials.util.export_mtz"]], "dials.util.export_text": [[34, "module-dials.util.export_text"]], "dials.util.image": [[34, "module-dials.util.image"]], "dials.util.installer": [[34, "module-dials.util.installer"]], "dials.util.ioutil": [[34, "module-dials.util.ioutil"]], "dials.util.nexus": [[34, "module-dials.util.nexus"]], "dials.util.options": [[34, "module-dials.util.options"]], "diff_phil (dials.util.options.argumentparser property)": [[34, "dials.util.options.ArgumentParser.diff_phil"]], "diff_phil (dials.util.options.philcommandparser property)": [[34, "dials.util.options.PhilCommandParser.diff_phil"]], "dump() (in module dials.util.nexus)": [[34, "dials.util.nexus.dump"]], "end() (dials.util.command_line.command class method)": [[34, "dials.util.command_line.Command.end"]], "exception (dials.util.options.argumenthandlingerrorinfo attribute)": [[34, "dials.util.options.ArgumentHandlingErrorInfo.exception"]], "export_mtz() (in module dials.util.export_mtz)": [[34, "dials.util.export_mtz.export_mtz"]], "export_text() (in module dials.util.export_text)": [[34, "dials.util.export_text.export_text"]], "finished() (dials.util.command_line.progressbar method)": [[34, "dials.util.command_line.ProgressBar.finished"]], "flatten_experiments() (in module dials.util.options)": [[34, "dials.util.options.flatten_experiments"]], "flatten_reflections() (in module dials.util.options)": [[34, "dials.util.options.flatten_reflections"]], "format_epilog() (dials.util.options.argumentparserbase method)": [[34, "dials.util.options.ArgumentParserBase.format_epilog"]], "format_help() (dials.util.options.argumentparser method)": [[34, "dials.util.options.ArgumentParser.format_help"]], "get_data() (dials.util.image.reader method)": [[34, "dials.util.image.reader.get_data"]], "get_elapsed_time() (dials.util.command_line.progressbartimer method)": [[34, "dials.util.command_line.ProgressBarTimer.get_elapsed_time"]], "get_entry() (in module dials.util.nexus)": [[34, "dials.util.nexus.get_entry"]], "get_inverse_ub_matrix_from_xparm() (in module dials.util.ioutil)": [[34, "dials.util.ioutil.get_inverse_ub_matrix_from_xparm"]], "get_space_group_type_from_xparm() (in module dials.util.ioutil)": [[34, "dials.util.ioutil.get_space_group_type_from_xparm"]], "heading() (in module dials.util.command_line)": [[34, "dials.util.command_line.heading"]], "include_gui_packages (dials.util.installer.installer attribute)": [[34, "dials.util.installer.installer.include_gui_packages"]], "indent (dials.util.command_line.command attribute)": [[34, "dials.util.command_line.Command.indent"]], "installer (class in dials.util.installer)": [[34, "dials.util.installer.installer"]], "installer_dir (dials.util.installer.installer attribute)": [[34, "dials.util.installer.installer.installer_dir"]], "load() (in module dials.util.nexus)": [[34, "dials.util.nexus.load"]], "make_apps (dials.util.installer.installer attribute)": [[34, "dials.util.installer.installer.make_apps"]], "match_wavelengths() (in module dials.util.export_mtz)": [[34, "dials.util.export_mtz.match_wavelengths"]], "max_length (dials.util.command_line.command attribute)": [[34, "dials.util.command_line.Command.max_length"]], "message (dials.util.options.argumenthandlingerrorinfo attribute)": [[34, "dials.util.options.ArgumentHandlingErrorInfo.message"]], "name (dials.util.options.argumenthandlingerrorinfo attribute)": [[34, "dials.util.options.ArgumentHandlingErrorInfo.name"]], "parse_args() (dials.util.options.argumentparser method)": [[34, "dials.util.options.ArgumentParser.parse_args"]], "parse_args() (dials.util.options.philcommandparser method)": [[34, "dials.util.options.PhilCommandParser.parse_args"]], "parse_known_args() (dials.util.options.argumentparserbase method)": [[34, "dials.util.options.ArgumentParserBase.parse_known_args"]], "phil (dials.util.options.argumentparser property)": [[34, "dials.util.options.ArgumentParser.phil"]], "phil (dials.util.options.philcommandparser property)": [[34, "dials.util.options.PhilCommandParser.phil"]], "print_time (dials.util.command_line.command attribute)": [[34, "dials.util.command_line.Command.print_time"]], "product_name (dials.util.installer.installer attribute)": [[34, "dials.util.installer.installer.product_name"]], "product_specific_finalize_install() (dials.util.installer.installer method)": [[34, "dials.util.installer.installer.product_specific_finalize_install"]], "read_file() (dials.util.image.reader method)": [[34, "dials.util.image.reader.read_file"]], "reader (class in dials.util.image)": [[34, "dials.util.image.reader"]], "reflections_and_experiments_from_files() (in module dials.util.options)": [[34, "dials.util.options.reflections_and_experiments_from_files"]], "remove_sources_default (dials.util.installer.installer attribute)": [[34, "dials.util.installer.installer.remove_sources_default"]], "rotate_crystal() (in module dials.util.export_mtz)": [[34, "dials.util.export_mtz.rotate_crystal"]], "source_packages (dials.util.installer.installer attribute)": [[34, "dials.util.installer.installer.source_packages"]], "start() (dials.util.command_line.command class method)": [[34, "dials.util.command_line.Command.start"]], "system_phil (dials.util.options.argumentparser property)": [[34, "dials.util.options.ArgumentParser.system_phil"]], "system_phil (dials.util.options.philcommandparser property)": [[34, "dials.util.options.PhilCommandParser.system_phil"]], "traceback (dials.util.options.argumenthandlingerrorinfo attribute)": [[34, "dials.util.options.ArgumentHandlingErrorInfo.traceback"]], "try_read_experiments() (dials.util.options.importer method)": [[34, "dials.util.options.Importer.try_read_experiments"]], "try_read_experiments_from_images() (dials.util.options.importer method)": [[34, "dials.util.options.Importer.try_read_experiments_from_images"]], "try_read_reflections() (dials.util.options.importer method)": [[34, "dials.util.options.Importer.try_read_reflections"]], "type (dials.util.options.argumenthandlingerrorinfo attribute)": [[34, "dials.util.options.ArgumentHandlingErrorInfo.type"]], "update() (dials.util.command_line.progressbar method)": [[34, "dials.util.command_line.ProgressBar.update"]], "update() (dials.util.command_line.progressbartimer method)": [[34, "dials.util.command_line.ProgressBarTimer.update"]], "validation (dials.util.options.argumenthandlingerrorinfo attribute)": [[34, "dials.util.options.ArgumentHandlingErrorInfo.validation"]], "write_columns() (dials.util.export_mtz.unmergedmtzwriter method)": [[34, "dials.util.export_mtz.UnmergedMTZWriter.write_columns"]]}})