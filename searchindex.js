Search.setIndex({"docnames": ["about", "dials_scale_user_guide", "documentation/conventions", "documentation/data_files", "documentation/developer_examples/extending_dials", "documentation/developer_examples/index", "documentation/developer_examples/read_experiment_and_data", "documentation/getting_started", "documentation/index", "documentation/installation_developer", "documentation/library_reference/algorithms/dials.algorithms.background", "documentation/library_reference/algorithms/dials.algorithms.indexing", "documentation/library_reference/algorithms/dials.algorithms.integration", "documentation/library_reference/algorithms/dials.algorithms.profile_model", "documentation/library_reference/algorithms/dials.algorithms.refinement", "documentation/library_reference/algorithms/dials.algorithms.scaling", "documentation/library_reference/algorithms/dials.algorithms.spot_finding", "documentation/library_reference/algorithms/dials.algorithms.spot_prediction", "documentation/library_reference/algorithms/dials.algorithms.symmetry", "documentation/library_reference/algorithms/index", "documentation/library_reference/array_family/index", "documentation/library_reference/dxtbx/beam", "documentation/library_reference/dxtbx/crystal", "documentation/library_reference/dxtbx/detector", "documentation/library_reference/dxtbx/experiment_list", "documentation/library_reference/dxtbx/goniometer", "documentation/library_reference/dxtbx/imageset", "documentation/library_reference/dxtbx/index", "documentation/library_reference/dxtbx/profile", "documentation/library_reference/dxtbx/scan", "documentation/library_reference/dxtbx/serialize", "documentation/library_reference/extensions/index", "documentation/library_reference/index", "documentation/library_reference/util/index", "documentation/programs/dials_align_crystal", "documentation/programs/dials_anvil_correction", "documentation/programs/dials_apply_mask", "documentation/programs/dials_check_indexing_symmetry", "documentation/programs/dials_combine_experiments", "documentation/programs/dials_compare_orientation_matrices", "documentation/programs/dials_cosym", "documentation/programs/dials_create_profile_model", "documentation/programs/dials_estimate_gain", "documentation/programs/dials_estimate_resolution", "documentation/programs/dials_export", "documentation/programs/dials_export_bitmaps", "documentation/programs/dials_filter_reflections", "documentation/programs/dials_find_spots", "documentation/programs/dials_find_spots_apache_server", "documentation/programs/dials_find_spots_server", "documentation/programs/dials_generate_mask", "documentation/programs/dials_image_viewer", "documentation/programs/dials_import", "documentation/programs/dials_index", "documentation/programs/dials_integrate", "documentation/programs/dials_merge_cbf", "documentation/programs/dials_missing_reflections", "documentation/programs/dials_plot_scan_varying_model", "documentation/programs/dials_predict", "documentation/programs/dials_reciprocal_lattice_viewer", "documentation/programs/dials_refine", "documentation/programs/dials_refine_bravais_settings", "documentation/programs/dials_reindex", "documentation/programs/dials_report", "documentation/programs/dials_scale", "documentation/programs/dials_search_beam_position", "documentation/programs/dials_show", "documentation/programs/dials_slice_sequence", "documentation/programs/dials_spot_counts_per_image", "documentation/programs/dials_stereographic_projection", "documentation/programs/dials_symmetry", "documentation/programs/dials_two_theta_refine", "documentation/programs/index", "documentation/programs/xia2_multiplex", "documentation/tutorials/3DED/Biotin", "documentation/tutorials/3DED/MyD88", "documentation/tutorials/3DED/lysozyme_nanocrystals", "documentation/tutorials/br_lyso_multi", "documentation/tutorials/centring_vs_pseudocentring", "documentation/tutorials/correcting_poor_initial_geometry_tutorial", "documentation/tutorials/diamond", "documentation/tutorials/index", "documentation/tutorials/metrology_corrections", "documentation/tutorials/mpro_x0692", "documentation/tutorials/multi_crystal_analysis", "documentation/tutorials/multi_crystal_symmetry_and_scaling", "documentation/tutorials/multi_lattice_tutorial", "documentation/tutorials/processing_in_detail_betalactamase", "documentation/tutorials/processing_in_detail_betalactamase_dui", "documentation/tutorials/small_molecule_tutorial", "howto", "index", "installation", "license", "missing-images", "projects", "publications", "ssx_processing_guide", "workshops/DIALS-1", "workshops/dials3d", "workshops/index"], "filenames": ["about.rst", "dials_scale_user_guide.rst", "documentation/conventions.rst", "documentation/data_files.rst", "documentation/developer_examples/extending_dials.rst", "documentation/developer_examples/index.rst", "documentation/developer_examples/read_experiment_and_data.rst", "documentation/getting_started.rst", "documentation/index.rst", "documentation/installation_developer.rst", "documentation/library_reference/algorithms/dials.algorithms.background.rst", "documentation/library_reference/algorithms/dials.algorithms.indexing.rst", "documentation/library_reference/algorithms/dials.algorithms.integration.rst", "documentation/library_reference/algorithms/dials.algorithms.profile_model.rst", "documentation/library_reference/algorithms/dials.algorithms.refinement.rst", "documentation/library_reference/algorithms/dials.algorithms.scaling.rst", "documentation/library_reference/algorithms/dials.algorithms.spot_finding.rst", "documentation/library_reference/algorithms/dials.algorithms.spot_prediction.rst", "documentation/library_reference/algorithms/dials.algorithms.symmetry.rst", "documentation/library_reference/algorithms/index.rst", "documentation/library_reference/array_family/index.rst", "documentation/library_reference/dxtbx/beam.rst", "documentation/library_reference/dxtbx/crystal.rst", "documentation/library_reference/dxtbx/detector.rst", "documentation/library_reference/dxtbx/experiment_list.rst", "documentation/library_reference/dxtbx/goniometer.rst", "documentation/library_reference/dxtbx/imageset.rst", "documentation/library_reference/dxtbx/index.rst", "documentation/library_reference/dxtbx/profile.rst", "documentation/library_reference/dxtbx/scan.rst", "documentation/library_reference/dxtbx/serialize.rst", "documentation/library_reference/extensions/index.rst", "documentation/library_reference/index.rst", "documentation/library_reference/util/index.rst", "documentation/programs/dials_align_crystal.rst", "documentation/programs/dials_anvil_correction.rst", "documentation/programs/dials_apply_mask.rst", "documentation/programs/dials_check_indexing_symmetry.rst", "documentation/programs/dials_combine_experiments.rst", "documentation/programs/dials_compare_orientation_matrices.rst", "documentation/programs/dials_cosym.rst", "documentation/programs/dials_create_profile_model.rst", "documentation/programs/dials_estimate_gain.rst", "documentation/programs/dials_estimate_resolution.rst", "documentation/programs/dials_export.rst", "documentation/programs/dials_export_bitmaps.rst", "documentation/programs/dials_filter_reflections.rst", "documentation/programs/dials_find_spots.rst", "documentation/programs/dials_find_spots_apache_server.rst", "documentation/programs/dials_find_spots_server.rst", "documentation/programs/dials_generate_mask.rst", "documentation/programs/dials_image_viewer.rst", "documentation/programs/dials_import.rst", "documentation/programs/dials_index.rst", "documentation/programs/dials_integrate.rst", "documentation/programs/dials_merge_cbf.rst", "documentation/programs/dials_missing_reflections.rst", "documentation/programs/dials_plot_scan_varying_model.rst", "documentation/programs/dials_predict.rst", "documentation/programs/dials_reciprocal_lattice_viewer.rst", "documentation/programs/dials_refine.rst", "documentation/programs/dials_refine_bravais_settings.rst", "documentation/programs/dials_reindex.rst", "documentation/programs/dials_report.rst", "documentation/programs/dials_scale.rst", "documentation/programs/dials_search_beam_position.rst", "documentation/programs/dials_show.rst", "documentation/programs/dials_slice_sequence.rst", "documentation/programs/dials_spot_counts_per_image.rst", "documentation/programs/dials_stereographic_projection.rst", "documentation/programs/dials_symmetry.rst", "documentation/programs/dials_two_theta_refine.rst", "documentation/programs/index.rst", "documentation/programs/xia2_multiplex.rst", "documentation/tutorials/3DED/Biotin.rst", "documentation/tutorials/3DED/MyD88.rst", "documentation/tutorials/3DED/lysozyme_nanocrystals.rst", "documentation/tutorials/br_lyso_multi.rst", "documentation/tutorials/centring_vs_pseudocentring.rst", "documentation/tutorials/correcting_poor_initial_geometry_tutorial.rst", "documentation/tutorials/diamond.rst", "documentation/tutorials/index.rst", "documentation/tutorials/metrology_corrections.rst", "documentation/tutorials/mpro_x0692.rst", "documentation/tutorials/multi_crystal_analysis.rst", "documentation/tutorials/multi_crystal_symmetry_and_scaling.rst", "documentation/tutorials/multi_lattice_tutorial.rst", "documentation/tutorials/processing_in_detail_betalactamase.rst", "documentation/tutorials/processing_in_detail_betalactamase_dui.rst", "documentation/tutorials/small_molecule_tutorial.rst", "howto.rst", "index.rst", "installation.rst", "license.rst", "missing-images.rst", "projects.rst", "publications.rst", "ssx_processing_guide.rst", "workshops/DIALS-1.rst", "workshops/dials3d.rst", "workshops/index.rst"], "titles": ["About", "User guide for scaling data with DIALS", "Conventions", "Data files", "Extending DIALS", "Developer Examples", "Reading experiment and data", "Getting started", "Documentation", "Installation for Developers", "dials.algorithms.background", "dials.algorithms.indexing", "dials.algorithms.integration", "dials.algorithms.profile_model", "dials.algorithms.refinement", "dials.algorithms.scaling", "dials.algorithms.spot_finding", "dials.algorithms.spot_prediction", "dials.algorithms.symmetry", "Algorithms", "Array Family", "dxtbx.model.beam", "dxtbx.model.crystal", "dxtbx.model.detector", "dxtbx.model.experiment_list", "dxtbx.model.goniometer", "dxtbx.imageset", "dxtbx", "dxtbx.model.profile", "dxtbx.model.scan", "dxtbx.serialize", "Extensions", "Library Reference", "Util", "dials.align_crystal", "dials.anvil_correction", "dials.apply_mask", "dials.check_indexing_symmetry", "dials.combine_experiments", "dials.compare_orientation_matrices", "dials.cosym", "dials.create_profile_model", "dials.estimate_gain", "dials.estimate_resolution", "dials.export", "dials.export_bitmaps", "dials.filter_reflections", "dials.find_spots", "distl/dials apache server", "dials.find_spots_server/client", "dials.generate_mask", "dials.image_viewer", "dials.import", "dials.index", "dials.integrate", "dials.merge_cbf", "dials.missing_reflections", "dials.plot_scan_varying_model", "dials.predict", "dials.reciprocal_lattice_viewer", "dials.refine", "dials.refine_bravais_settings", "dials.reindex", "dials.report", "dials.scale", "dials.search_beam_position", "dials.show", "dials.slice_sequence", "dials.spot_counts_per_image", "dials.stereographic_projection", "dials.symmetry", "dials.two_theta_refine", "Program documentation", "xia2.multiplex", "Processing Small Molecule MicroED/3DED: Biotin", "MyD88<sup>TIR</sup> small wedges", "Lysozyme nanocrystals", "Multi-crystal analysis with DIALS and xia2.multiplex", "DPF3 Part 2: A question of centring", "DPF3 Part 1: Correcting poor initial geometry", "Using DIALS at Diamond Light Source", "Tutorials", "Refining multi-tile detector metrology with DIALS", "SARS-CoV-2 main protease (Mpro)", "Multi-crystal analysis with DIALS and BLEND: individual vs joint refinement", "Multi-crystal symmetry analysis and scaling with DIALS", "Multi-lattice Tutorial", "Processing in Detail", "Processing in Detail with DUI", "Small-molecule data reduction tutorial", "DIALS How-To guides", "DIALS: Diffraction Integration for Advanced Light Sources", "Installation", "DIALS License", "Processing Sequences with Missing Images", "Projects", "Publications", "SSX processing guide", "DIALS 1: 12th-13th June 2012 (Diamond Light Source, UK)", "DIALS-3: 22nd May 2013 (Cambridge, UK)", "Workshops"], "terms": {"The": [0, 1, 3, 4, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 31, 33, 35, 36, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99], "softwar": [0, 2, 7, 11, 76, 83, 85, 86, 87, 91, 93, 95, 96, 98], "i": [0, 1, 2, 3, 4, 6, 7, 9, 11, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98], "fulli": [0, 2, 44, 46, 54, 75, 82, 83, 86, 87], "open": [0, 3, 51, 72, 74, 75, 77, 83, 85, 87, 88, 92], "sourc": [0, 4, 9, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 44, 52, 79, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 95, 96, 100], "collabor": [0, 91, 98, 99], "environ": [0, 4, 48, 76, 80, 82, 92], "main": [0, 3, 9, 14, 23, 34, 64, 72, 80, 81, 87, 97], "ar": [0, 1, 2, 3, 4, 7, 9, 11, 14, 15, 16, 18, 22, 23, 24, 25, 26, 33, 35, 38, 40, 41, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 66, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98], "base": [0, 1, 4, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 38, 43, 46, 53, 60, 61, 64, 65, 71, 80, 83, 84, 85, 87, 88, 89, 96, 98], "diamond": [0, 35, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 99, 100], "light": [0, 35, 81, 82, 83, 84, 85, 86, 87, 88, 93, 100], "ccp4": [0, 73, 74, 76, 77, 78, 80, 84, 85, 87, 88, 91, 96, 98, 99], "uk": [0, 92, 100], "lawrenc": [0, 91, 93], "berkelei": [0, 91, 93, 100], "nation": [0, 35, 91, 93], "laboratori": [0, 11, 21, 35, 69, 75, 76, 84, 91, 93, 99], "usa": [0, 2, 35], "howev": [0, 1, 2, 14, 41, 42, 44, 54, 62, 69, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 97], "spirit": 0, "movement": 0, "we": [0, 2, 4, 7, 11, 14, 16, 21, 25, 26, 33, 35, 37, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98], "welcom": [0, 84], "from": [0, 1, 2, 3, 4, 6, 7, 9, 11, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 30, 33, 35, 38, 40, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 67, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99], "anyon": 0, "who": [0, 7], "wish": [0, 89], "contribut": [0, 18, 53, 60, 61, 77, 84], "project": [0, 2, 11, 44, 45, 51, 64, 69, 77, 80, 84, 85, 86, 91, 96, 98, 99], "To": [0, 1, 2, 4, 7, 11, 14, 47, 49, 75, 76, 78, 79, 83, 84, 85, 86, 87, 88, 92, 94, 97, 98], "avoid": [0, 14, 33, 53, 60, 61, 73, 75, 82, 83, 84, 87], "reinvent": 0, "wheel": 0, "much": [0, 9, 74, 75, 79, 82, 83, 84, 85, 87, 88, 89], "possibl": [0, 1, 2, 4, 11, 18, 33, 34, 40, 53, 56, 60, 61, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 93], "build": [0, 9, 14, 80], "knowledg": [0, 2, 35], "accumul": [0, 12, 18], "over": [0, 1, 11, 16, 18, 40, 52, 53, 60, 61, 70, 73, 74, 75, 77, 82, 83, 85, 87, 88], "mani": [0, 2, 4, 16, 38, 40, 48, 74, 75, 77, 78, 79, 80, 83, 84, 85, 87, 88], "decad": 0, "field": [0, 11, 33, 88, 98], "crystallograph": [0, 1, 2, 71, 73, 77, 78, 83, 96], "data": [0, 4, 5, 7, 8, 11, 12, 14, 15, 16, 18, 24, 26, 33, 35, 40, 41, 43, 44, 47, 48, 49, 52, 53, 54, 55, 60, 61, 62, 63, 64, 70, 71, 73, 78, 79, 80, 81, 82, 84, 85, 86, 90, 91, 93, 94, 95, 96, 98, 99], "process": [0, 1, 3, 7, 12, 14, 16, 31, 38, 41, 44, 47, 48, 51, 52, 53, 54, 58, 60, 61, 64, 72, 76, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 96, 98], "benefit": [0, 91, 98], "greatli": [0, 91, 98], "altruism": 0, "expert": [0, 88], "idea": [0, 77], "advic": [0, 78], "either": [0, 1, 2, 4, 24, 40, 44, 47, 48, 51, 52, 53, 58, 60, 61, 64, 69, 71, 74, 75, 80, 83, 87, 88, 97], "directli": [0, 3, 48, 74, 79, 80, 82, 83, 84, 87, 88, 97], "via": [0, 2, 4, 9, 45, 55, 77, 88, 89, 91], "detail": [0, 1, 3, 4, 7, 14, 48, 64, 72, 73, 75, 77, 78, 79, 81, 82, 83, 85, 86, 89], "public": [0, 14, 75, 76], "exist": [0, 1, 4, 9, 15, 18, 23, 52, 73, 83, 84, 85, 87, 88, 98], "algorithm": [0, 1, 2, 4, 31, 32, 38, 40, 41, 42, 47, 50, 51, 53, 54, 58, 60, 61, 64, 72, 75, 79, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 99], "packag": [0, 2, 4, 9, 92, 96, 98], "xd": [0, 22, 24, 30, 44, 53, 79, 82, 83, 87, 88, 98], "2": [0, 1, 2, 3, 4, 7, 11, 14, 16, 18, 22, 33, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 73, 74, 75, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 96, 97, 100], "mosflm": [0, 2, 22, 44, 52, 54, 98], "3": [0, 1, 2, 3, 6, 11, 15, 18, 22, 33, 35, 37, 39, 40, 41, 43, 45, 47, 48, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 69, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97, 100], "At": [0, 2, 7, 53, 60, 61, 75, 78, 79, 82, 83, 84, 87, 88, 89, 98], "heart": 0, "framework": [0, 2, 4, 6, 91, 96], "li": [0, 2, 53, 60, 61], "design": [0, 2, 11, 23, 25, 53, 95, 96, 98], "philosophi": 0, "hardwar": 0, "abstract": [0, 2, 14, 15], "generalis": 0, "model": [0, 3, 6, 10, 11, 12, 14, 18, 19, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 96, 97, 98], "experi": [0, 1, 2, 4, 5, 11, 12, 14, 15, 16, 17, 18, 23, 24, 30, 31, 33, 35, 36, 37, 38, 40, 41, 44, 46, 47, 50, 52, 53, 54, 55, 58, 60, 61, 62, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 97, 98], "inspir": [0, 78, 79, 85], "materi": [0, 23, 35, 52, 83, 87, 93], "publish": [0, 75, 83], "semin": 0, "workshop": [0, 11, 87, 88], "posit": [0, 1, 2, 3, 11, 14, 15, 33, 47, 53, 54, 60, 61, 64, 65, 70, 73, 74, 75, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88, 89], "sensit": [0, 11, 40, 85], "detector": [0, 1, 2, 3, 4, 6, 10, 11, 14, 21, 24, 26, 27, 30, 32, 38, 41, 42, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 60, 61, 64, 74, 76, 77, 79, 81, 83, 84, 85, 87, 88, 89, 91, 94, 96, 98], "1": [0, 1, 2, 3, 4, 6, 11, 14, 16, 17, 18, 21, 22, 29, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 63, 64, 65, 67, 69, 70, 71, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97, 100], "continu": [0, 53, 60, 61, 74, 75, 78, 79, 83, 84, 86, 87, 88, 94], "held": [0, 2], "our": [0, 2, 4, 75, 82, 83, 84, 87, 88, 89, 94, 99], "own": [0, 4, 53, 60, 61, 64, 75, 76, 77, 84], "seri": [0, 11, 53, 84, 98], "meet": [0, 91, 98, 99], "talk": 0, "invit": 0, "speaker": 0, "code": [0, 2, 4, 6, 9, 51, 75, 84, 93, 96, 97], "camp": 0, "which": [0, 1, 2, 4, 7, 11, 14, 15, 18, 21, 22, 23, 25, 29, 33, 35, 37, 38, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 57, 60, 61, 62, 63, 64, 66, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 97], "specif": [0, 2, 4, 7, 53, 54, 60, 71, 75, 76, 77, 83, 84, 87, 88, 93], "problem": [0, 14, 75, 78, 79, 80, 83, 84, 85, 87, 88, 94], "address": [0, 79, 85, 98], "intens": [0, 1, 3, 11, 15, 18, 33, 35, 37, 40, 43, 44, 46, 47, 49, 53, 54, 62, 64, 73, 74, 75, 78, 79, 83, 84, 85, 86, 87, 88, 89, 95, 97, 98], "effort": [0, 82, 84], "across": [0, 1, 43, 53, 60, 61, 64, 73, 75, 76, 83, 85, 89, 97], "summari": [0, 12, 66, 77, 82, 83, 84, 85, 86, 87, 88, 89, 97], "copi": [0, 14, 24, 26, 50, 75, 76, 78, 82, 84, 94], "slide": 0, "given": [0, 1, 2, 4, 11, 14, 15, 16, 17, 18, 22, 23, 25, 28, 30, 35, 39, 41, 44, 46, 47, 49, 51, 52, 53, 54, 55, 58, 63, 64, 65, 68, 69, 70, 73, 75, 79, 83, 84, 85, 87, 88, 97], "present": [0, 14, 15, 18, 33, 40, 44, 46, 53, 60, 61, 62, 67, 72, 73, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 91, 100], "avail": [0, 1, 4, 9, 14, 21, 26, 35, 47, 54, 64, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 95, 97], "here": [0, 2, 6, 14, 40, 48, 52, 57, 63, 64, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96], "written": [0, 2, 7, 45, 52, 75, 83, 84, 86, 87, 93], "us": [0, 2, 3, 4, 7, 9, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "python": [0, 3, 4, 7, 9, 22, 23, 24, 25, 26, 80, 84, 96], "c": [0, 1, 2, 7, 10, 12, 14, 22, 23, 24, 25, 26, 35, 40, 53, 61, 62, 65, 67, 74, 75, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 93, 96], "make": [0, 2, 4, 9, 15, 23, 25, 45, 53, 54, 55, 60, 61, 64, 71, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 91, 94], "heavi": [0, 64, 77], "cctbx": [0, 1, 2, 4, 9, 11, 14, 18, 22, 24, 48, 80, 84, 96], "4": [0, 1, 2, 3, 11, 16, 18, 22, 33, 35, 40, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 61, 64, 65, 70, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 96, 98], "core": [0, 82, 84, 89, 96, 97], "calcul": [0, 1, 2, 6, 11, 12, 14, 15, 18, 34, 35, 37, 39, 40, 41, 43, 47, 51, 53, 54, 58, 60, 61, 62, 64, 69, 73, 75, 77, 79, 83, 85, 86, 87, 88, 89, 96], "infrastructur": 0, "includ": [0, 1, 4, 11, 14, 18, 24, 33, 43, 44, 47, 48, 49, 53, 54, 57, 60, 61, 62, 64, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 93], "complet": [0, 7, 14, 21, 43, 48, 53, 56, 60, 61, 64, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98], "system": [0, 2, 7, 33, 54, 75, 76, 77, 80, 83, 87, 96], "seamless": 0, "interact": [0, 64, 75, 76, 88, 89], "between": [0, 1, 2, 3, 11, 14, 15, 18, 21, 35, 37, 39, 40, 41, 44, 45, 47, 51, 52, 53, 54, 58, 59, 60, 61, 62, 64, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 94], "compon": [0, 1, 2, 4, 15, 25, 40, 47, 56, 64, 77, 83, 84, 85, 87, 88], "thi": [0, 1, 2, 3, 4, 6, 7, 9, 11, 14, 15, 16, 18, 21, 23, 24, 25, 29, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98], "hybrid": 0, "enabl": [0, 4, 38, 45, 51, 52, 54, 84, 85, 95, 96, 97, 98], "boost": [0, 22, 23, 24, 25, 26, 35, 74], "provid": [0, 1, 4, 7, 11, 14, 15, 18, 23, 24, 33, 36, 38, 40, 43, 47, 50, 51, 52, 53, 54, 62, 64, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 92, 93, 97, 98], "ground": 0, "rapid": [0, 97, 98], "prototyp": 0, "after": [0, 1, 14, 18, 35, 39, 44, 48, 53, 54, 60, 61, 62, 64, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97], "structur": [0, 7, 14, 24, 53, 60, 61, 64, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 89, 91, 96, 98], "mai": [0, 1, 2, 3, 4, 7, 9, 11, 12, 14, 15, 18, 34, 35, 40, 41, 42, 46, 47, 48, 49, 51, 52, 53, 54, 60, 61, 63, 64, 71, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 92, 93, 96, 97, 100], "transfer": 0, "speed": [0, 45, 53, 54, 60, 61, 74, 82, 83, 87, 88, 97, 98], "high": [0, 1, 11, 18, 35, 37, 38, 40, 46, 47, 48, 50, 51, 53, 54, 64, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 97, 98], "level": [0, 1, 4, 12, 18, 38, 43, 45, 47, 53, 60, 61, 64, 73, 75, 82, 84, 88, 89, 97], "interfac": [0, 14, 16, 18, 41, 51, 54, 58, 75, 81, 84, 88], "remain": [0, 2, 11, 14, 38, 53, 54, 60, 61, 75, 76, 79, 83, 86, 87, 88], "facilit": [0, 98], "further": [0, 1, 4, 7, 15, 48, 64, 73, 78, 82, 83, 86, 87, 88, 89, 92, 97], "reus": [0, 95], "both": [0, 2, 18, 35, 52, 53, 60, 61, 64, 71, 73, 74, 75, 79, 83, 85, 86, 87, 88], "within": [0, 1, 2, 4, 7, 14, 37, 47, 50, 51, 52, 53, 58, 60, 61, 64, 67, 73, 75, 80, 82, 83, 84, 85, 87, 88, 89, 91, 98], "third": [0, 1, 9, 52, 74], "parti": [0, 9], "fund": [0, 95], "wellcom": [0, 91], "trust": [0, 47, 50, 52, 75, 79], "led": 0, "dr": [0, 53, 60, 61, 96], "gwyndaf": [0, 84, 98, 99], "evan": [0, 11, 18, 70, 84, 96, 98, 99], "nichola": 0, "sauter": [0, 2, 11, 48, 53, 60, 61, 65, 96, 98], "support": [0, 4, 7, 43, 44, 45, 51, 52, 53, 55, 60, 61, 71, 72, 80, 91], "institut": [0, 35, 91], "health": [0, 91], "gener": [0, 1, 3, 4, 11, 12, 18, 24, 25, 29, 33, 35, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 61, 63, 64, 67, 68, 69, 73, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 97, 98], "medic": [0, 91], "scienc": [0, 33, 80, 83, 91, 96], "grant": [0, 91], "r01": [0, 91], "gm117126": [0, 91], "new": [0, 1, 2, 7, 9, 14, 15, 16, 23, 26, 48, 53, 60, 61, 64, 72, 74, 75, 76, 78, 79, 82, 83, 84, 85, 87, 88, 91, 92, 95, 96, 98], "comput": [0, 1, 2, 11, 18, 31, 39, 41, 44, 47, 51, 54, 58, 65, 68, 77, 80, 83, 85, 95, 96, 97], "method": [0, 1, 2, 7, 11, 14, 15, 16, 18, 25, 26, 29, 40, 41, 43, 47, 49, 51, 53, 54, 58, 60, 61, 64, 65, 70, 73, 74, 75, 79, 83, 84, 85, 87, 88, 96, 97], "challeng": [0, 74, 75, 78, 79, 88, 96, 98], "work": [0, 2, 4, 7, 9, 11, 14, 21, 25, 33, 53, 54, 60, 61, 64, 74, 75, 77, 78, 79, 80, 82, 84, 85, 87, 88, 89, 91, 94, 95, 98], "lbnl": [0, 91], "perform": [0, 2, 6, 9, 11, 14, 15, 18, 37, 40, 41, 43, 44, 53, 54, 56, 60, 61, 64, 69, 73, 74, 75, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 97], "under": [0, 7, 15, 47, 48, 83, 84, 87, 88, 91], "depart": [0, 91, 95], "energi": [0, 35, 91], "contract": [0, 91, 93], "de": [0, 91, 96], "ac02": [0, 91], "05ch11231": [0, 91], "grate": 0, "all": [0, 1, 2, 3, 4, 7, 11, 14, 15, 18, 23, 24, 25, 26, 33, 35, 38, 40, 44, 45, 47, 48, 49, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 93, 97], "those": [0, 7, 9, 14, 33, 40, 49, 53, 60, 61, 67, 71, 74, 75, 77, 78, 83, 84, 85, 87, 88, 89], "have": [0, 1, 2, 4, 7, 18, 25, 35, 36, 40, 42, 44, 47, 52, 53, 54, 60, 61, 64, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97, 98], "contributor": [0, 93], "aaron": 0, "brewster": [0, 96], "ammaar": 0, "saeed": 0, "asmit": 0, "bhowmick": 0, "benjamin": 0, "william": [0, 96], "billi": 0, "poon": [0, 53, 60, 61], "daniel": 0, "palei": 0, "tchon": 0, "david": [0, 98, 99], "waterman": [0, 11, 74, 76, 96, 98, 99], "derek": 0, "mendez": 0, "graem": [0, 98, 99], "winter": [0, 11, 18, 40, 80, 85, 96, 98, 99], "huw": 0, "jenkin": 0, "ian": 0, "ree": 0, "iri": 0, "young": [0, 96], "jame": [0, 84, 99], "beilsten": [0, 85, 96], "edmand": [0, 85, 96], "parkhurst": [0, 11, 76, 96, 99], "johan": 0, "hattn": [0, 96], "katrin": 0, "leinweb": 0, "kevin": 0, "dalton": 0, "lee": 0, "o": [0, 2, 4, 22, 74, 76, 80, 84, 92, 96], "riordan": [0, 96], "lui": [0, 99], "fuent": [0, 96, 99], "montero": [0, 96, 99], "marcin": 0, "wojdyr": 0, "marku": 0, "gerstel": [0, 96], "nathaniel": 0, "echol": [0, 96], "devenish": [0, 96], "nigel": 0, "moriarti": [0, 2], "oliv": 0, "zeldin": [0, 96], "richard": 0, "gildea": [0, 11, 18, 40, 73, 85, 96], "robert": 0, "bolotovski": [0, 11], "stef": 0, "smeet": 0, "takanori": 0, "nakan": 0, "tara": 0, "michel": [0, 96], "clark": [0, 96], "tarik": 0, "drevon": 0, "In": [0, 1, 2, 4, 7, 11, 14, 15, 21, 23, 40, 47, 52, 53, 54, 60, 61, 62, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 98], "addit": [0, 1, 7, 14, 15, 26, 33, 41, 43, 44, 46, 47, 49, 53, 54, 60, 61, 64, 76, 82, 83, 85, 87, 88, 89, 95, 97], "guidanc": 0, "gain": [0, 23, 26, 33, 42, 45, 47, 51, 52, 74, 75, 76, 79, 83, 87], "through": [0, 1, 14, 23, 35, 64, 74, 75, 77, 78, 79, 83, 84, 85, 87, 88, 89, 98], "numer": [0, 1, 14, 18], "intellectu": 0, "discuss": [0, 77, 83, 86, 87, 88, 98], "follow": [0, 1, 2, 3, 6, 7, 9, 14, 18, 40, 43, 46, 48, 52, 53, 54, 65, 67, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 97, 98], "alun": [0, 98], "ashton": [0, 96, 98], "gleb": 0, "bourenkov": 0, "gerard": [0, 98], "bricogn": [0, 11, 98], "phil": [0, 3, 4, 6, 7, 11, 12, 14, 15, 18, 21, 23, 25, 29, 31, 33, 51, 54, 64, 75, 76, 84, 99], "andrew": [0, 40, 85, 98, 99], "lesli": [0, 54, 98, 99], "garib": [0, 99], "murshudov": [0, 96, 99], "jim": [0, 98], "pflugrath": [0, 98], "harri": [0, 99], "powel": [0, 99], "jon": 0, "schuermann": 0, "matthew": 0, "webber": 0, "g": [0, 1, 2, 3, 6, 7, 11, 14, 15, 18, 30, 40, 47, 49, 52, 53, 54, 60, 61, 62, 64, 65, 67, 70, 73, 74, 77, 78, 80, 83, 84, 85, 86, 87, 89, 92, 96], "1987": 0, "proceed": [0, 11, 75, 77, 78], "daresburi": 0, "studi": [0, 96], "weekend": 0, "pp": 0, "120": [0, 1, 45, 46, 47, 50, 51, 79, 83, 85, 87, 88, 97], "145": [0, 74, 77, 82, 83, 85, 87], "kabsch": [0, 98], "w": [0, 2, 11, 14, 15, 96], "2010": [0, 53, 60, 61, 80], "acta": [0, 2, 11, 18, 40, 70, 73, 76, 80, 85, 96], "cryst": [0, 11, 18, 40, 65, 70, 73, 78, 80, 85], "d66": 0, "125": [0, 74, 77, 79, 82, 83, 85, 86, 87], "132": [0, 77, 79, 82, 83, 85, 86, 87], "A": [0, 1, 2, 3, 4, 6, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 40, 43, 44, 47, 49, 52, 53, 54, 60, 61, 62, 64, 71, 73, 74, 75, 76, 79, 81, 82, 83, 85, 86, 87, 89, 93, 94, 95, 96, 97, 98], "h": [0, 2, 35, 37, 53, 62, 74, 75, 76, 78, 79, 83, 84, 85, 86, 87, 96], "r": [0, 1, 2, 6, 11, 15, 18, 35, 40, 43, 47, 50, 51, 64, 70, 73, 74, 77, 78, 85, 86, 94, 96], "2007": 0, "evolv": 0, "macromolecular": [0, 1, 71, 95, 96], "crystallographi": [0, 1, 2, 74, 75, 91, 95, 97, 98], "245": [0, 83, 85, 86, 87], "41": [0, 74, 76, 79, 80, 82, 83, 84, 85, 87, 89], "51": [0, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87], "isbn": 0, "978": [0, 83, 85, 86, 87], "4020": 0, "6314": 0, "5": [0, 1, 2, 3, 6, 11, 21, 33, 40, 41, 44, 45, 46, 47, 48, 50, 51, 53, 54, 58, 60, 61, 64, 67, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 96, 98, 100], "gross": [0, 2, 11, 96], "kunstlev": [0, 2, 11, 96], "n": [0, 2, 3, 4, 6, 11, 18, 21, 22, 33, 35, 54, 58, 74, 83, 85, 86, 87, 88, 96], "k": [0, 2, 11, 18, 37, 40, 53, 62, 76, 79, 83, 85, 86, 87, 96], "adam": [0, 2, 11, 96], "p": [0, 2, 3, 11, 18, 40, 48, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97], "d": [0, 1, 2, 4, 11, 18, 22, 23, 25, 29, 30, 31, 40, 44, 46, 47, 50, 51, 53, 58, 64, 74, 75, 76, 79, 80, 82, 83, 84, 85, 87, 96, 98], "2002": [0, 2, 83], "journal": [0, 14, 19, 53, 60, 61], "appli": [0, 1, 3, 4, 11, 14, 15, 18, 21, 24, 46, 52, 53, 54, 60, 61, 62, 64, 73, 74, 76, 77, 79, 83, 84, 85, 87, 88, 89], "35": [0, 2, 3, 74, 75, 78, 82, 83, 84, 85, 86, 87], "126": [0, 2, 74, 79, 83, 85, 87], "136": [0, 2, 74, 79, 83, 85, 86, 87, 97], "document": [1, 54, 64, 80, 93], "aim": [1, 77, 89], "variou": [1, 2, 11, 14, 43, 44, 52, 53, 61, 63, 64, 73, 75, 76, 83, 87, 88, 92, 95], "depth": [1, 4, 23], "encourag": 1, "read": [1, 2, 3, 4, 5, 23, 24, 25, 26, 29, 33, 40, 55, 74, 75, 79, 83, 84, 85, 86, 87, 88], "symmetri": [1, 11, 15, 19, 32, 37, 40, 53, 60, 61, 64, 69, 71, 72, 73, 76, 77, 81, 82, 84, 96], "section": [1, 3, 75, 77, 78, 83, 87, 88], "tutori": [1, 7, 8, 75, 76, 77, 78, 79, 80, 82, 84, 85, 94], "quick": [1, 49, 64, 75, 82, 84], "overview": 1, "For": [1, 2, 7, 9, 11, 14, 15, 38, 41, 42, 44, 47, 48, 51, 52, 53, 54, 55, 58, 60, 61, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 97], "most": [1, 2, 4, 7, 11, 15, 18, 33, 35, 38, 53, 54, 72, 74, 75, 77, 80, 83, 84, 85, 87, 88, 89, 97, 98], "like": [1, 2, 3, 4, 7, 11, 14, 26, 54, 74, 75, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89], "suffici": [1, 7, 40, 79, 84, 86, 88], "onli": [1, 2, 6, 7, 11, 14, 18, 26, 33, 36, 38, 44, 45, 46, 47, 53, 54, 55, 56, 60, 61, 64, 70, 71, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97], "below": [1, 3, 11, 35, 38, 40, 44, 47, 52, 53, 54, 60, 61, 64, 73, 74, 79, 83, 84, 85, 87, 88, 89], "return": [1, 4, 6, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 49, 53, 60, 61, 75, 84, 88], "rest": [1, 11, 40, 75, 85], "help": [1, 4, 6, 18, 21, 24, 29, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 79, 82, 83, 87, 88, 89, 97, 98], "need": [1, 2, 4, 9, 14, 16, 21, 24, 25, 40, 41, 47, 51, 54, 58, 61, 64, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 92, 98], "As": [1, 2, 4, 7, 35, 40, 47, 75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 97, 98], "remind": [1, 82], "how": [1, 4, 6, 11, 14, 15, 47, 53, 57, 60, 61, 63, 74, 75, 77, 79, 82, 83, 84, 85, 87, 88, 89, 96, 97, 98], "run": [1, 4, 6, 7, 9, 14, 15, 16, 18, 38, 40, 43, 44, 48, 53, 55, 60, 61, 64, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 97], "routin": [1, 64, 89], "integr": [1, 3, 15, 19, 30, 32, 35, 40, 41, 44, 46, 47, 50, 51, 56, 59, 61, 63, 64, 70, 71, 72, 73, 77, 78, 79, 80, 82, 84, 85, 90, 94, 95, 96, 98, 99], "obtain": [1, 2, 4, 9, 14, 15, 40, 53, 60, 61, 76, 78, 79, 83, 85, 96], "merg": [1, 33, 43, 44, 53, 55, 60, 61, 64, 73, 74, 75, 77, 84, 85, 88, 89], "mtz": [1, 33, 40, 43, 44, 62, 64, 73, 74, 75, 76, 77, 80, 82, 84, 85, 86, 89, 94], "file": [1, 4, 7, 8, 21, 23, 24, 25, 29, 30, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 97], "refl": [1, 3, 6, 35, 37, 38, 40, 41, 43, 44, 46, 47, 51, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 94, 97], "expt": [1, 3, 6, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 94, 97], "symmetr": [1, 40, 70, 74, 77, 83, 85, 86, 87, 89], "also": [1, 2, 3, 4, 7, 9, 11, 14, 15, 18, 21, 22, 23, 25, 26, 33, 37, 44, 48, 53, 60, 61, 62, 64, 69, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92, 97], "advis": [1, 93], "familiaris": 1, "themselv": [1, 23], "standard": [1, 2, 15, 21, 23, 25, 35, 40, 47, 54, 64, 71, 73, 75, 76, 77, 80, 82, 84, 85, 86, 89, 97], "program": [1, 3, 7, 8, 34, 35, 36, 37, 40, 41, 42, 44, 46, 47, 50, 51, 52, 53, 54, 55, 58, 61, 62, 63, 64, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 97, 100], "output": [1, 3, 6, 7, 14, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 97], "contain": [1, 3, 4, 9, 11, 14, 15, 16, 18, 24, 34, 38, 40, 44, 46, 47, 52, 53, 54, 60, 61, 62, 63, 64, 71, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 97, 99], "inform": [1, 2, 7, 9, 14, 15, 18, 23, 26, 41, 44, 47, 48, 52, 53, 60, 61, 71, 73, 74, 77, 78, 83, 84, 85, 86, 87, 88, 89, 91], "html": [1, 40, 43, 48, 63, 64, 70, 74, 75, 77, 85, 86, 97], "report": [1, 12, 14, 40, 42, 48, 54, 64, 68, 70, 71, 72, 75, 77, 79, 85, 86, 88, 91, 97], "plot": [1, 12, 15, 31, 57, 60, 63, 64, 68, 69, 71, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 97], "relat": [1, 2, 14, 37, 39, 53, 60, 61, 74, 77, 78, 79, 83, 84, 85, 87, 88], "statist": [1, 14, 42, 43, 44, 47, 48, 53, 60, 61, 64, 66, 68, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 97], "These": [1, 2, 3, 4, 14, 15, 33, 38, 48, 53, 61, 64, 75, 76, 77, 79, 81, 83, 84, 85, 87, 88, 97], "cover": [1, 47, 54, 77, 83, 87, 88], "commonli": [1, 14, 75, 77, 78, 88], "exampl": [1, 2, 3, 4, 6, 7, 8, 21, 23, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 97], "valu": [1, 3, 7, 10, 11, 14, 15, 18, 33, 35, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 64, 66, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 97], "cut": [1, 44, 53, 60, 61, 64, 75, 98], "back": [1, 54, 64, 74, 75, 77, 82, 84, 88], "inspect": [1, 4, 60, 71, 77, 79, 82, 83, 84, 86, 87], "v": [1, 2, 7, 43, 53, 60, 61, 73, 74, 81, 83, 87, 88, 96, 97, 98], "batch": [1, 33, 44, 52, 64, 73, 74, 77, 80, 85, 89, 97], "often": [1, 2, 4, 11, 35, 53, 75], "case": [1, 2, 4, 7, 11, 14, 15, 21, 23, 25, 35, 40, 47, 52, 53, 54, 60, 61, 62, 64, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97, 98], "suitabl": [1, 15, 44, 53, 60, 61, 64, 73, 75, 76, 83, 86, 87, 88, 89, 97], "perhap": [1, 44, 79], "due": [1, 14, 15, 64, 73, 74, 83, 85, 87, 88, 89], "radiat": [1, 73, 74, 75, 79, 82, 83, 85, 87, 88, 96], "damag": [1, 73, 74, 75, 79, 82, 83, 85, 87, 88, 93], "nonisomorph": 1, "can": [1, 2, 3, 4, 7, 9, 11, 14, 16, 21, 23, 24, 33, 35, 37, 38, 40, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 60, 61, 62, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 96, 97, 98], "singl": [1, 2, 4, 11, 12, 14, 15, 16, 18, 24, 25, 29, 38, 40, 41, 45, 47, 48, 51, 52, 53, 54, 55, 58, 60, 61, 64, 67, 70, 71, 73, 75, 77, 78, 82, 83, 84, 86, 87, 88, 89, 94, 96], "sweep": [1, 15, 64, 73, 77, 80, 83, 84, 86, 87, 89, 90, 97], "multipl": [1, 3, 4, 11, 16, 33, 34, 36, 38, 39, 43, 45, 47, 50, 51, 52, 53, 54, 60, 61, 64, 65, 67, 69, 70, 71, 73, 74, 75, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97, 98, 99], "multi": [1, 2, 15, 16, 18, 33, 38, 40, 42, 44, 45, 48, 51, 52, 53, 54, 60, 61, 64, 73, 81, 83, 87, 88, 96], "crystal": [1, 2, 3, 4, 6, 11, 15, 18, 24, 27, 30, 32, 33, 34, 38, 40, 44, 47, 48, 52, 53, 54, 57, 60, 61, 63, 64, 66, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 94, 96, 97], "d_min": [1, 11, 18, 33, 37, 38, 40, 41, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 64, 65, 70, 73, 74, 75, 76, 77, 83, 84, 85, 86, 87, 88, 89], "0": [1, 2, 3, 4, 6, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 29, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97], "resolut": [1, 11, 17, 18, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 61, 64, 68, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 96], "cutoff": [1, 11, 18, 38, 40, 43, 44, 53, 54, 60, 61, 64, 73, 74, 77, 83, 85, 87, 88], "angstrom": [1, 11, 41, 47, 50, 51, 53, 54, 58, 73, 78, 79, 82, 83, 84, 85, 87, 88], "exclude_imag": [1, 47, 54, 64, 70, 73, 74, 85], "100": [1, 18, 40, 41, 45, 47, 50, 51, 53, 54, 55, 58, 60, 61, 64, 73, 74, 77, 80, 82, 83, 85, 86, 87, 88, 89], "remov": [1, 4, 35, 40, 50, 53, 54, 60, 61, 64, 67, 71, 73, 74, 75, 77, 83, 84, 85, 86, 87, 88, 94], "imag": [1, 2, 3, 4, 6, 11, 12, 14, 15, 16, 23, 24, 26, 29, 30, 31, 33, 38, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 60, 61, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 98], "command": [1, 4, 7, 9, 32, 33, 48, 52, 64, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 97], "exclud": [1, 14, 15, 33, 44, 47, 49, 53, 54, 60, 61, 64, 70, 73, 75, 77, 78, 83, 84, 85, 87], "rang": [1, 15, 16, 26, 47, 50, 51, 52, 53, 54, 60, 61, 64, 65, 67, 70, 73, 75, 80, 83, 84, 85, 86, 87, 88], "one": [1, 2, 6, 11, 14, 15, 16, 24, 36, 38, 40, 44, 47, 53, 54, 60, 61, 62, 64, 70, 71, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97], "must": [1, 2, 4, 7, 14, 15, 33, 36, 52, 53, 54, 60, 61, 64, 65, 67, 75, 76, 77, 83, 85, 87, 88, 93], "id": [1, 3, 16, 33, 44, 46, 52, 53, 60, 61, 64, 67, 68, 73, 74, 75, 79, 83, 84, 85, 86, 87, 96], "exclus": [1, 47, 51, 54, 64, 70, 73, 77, 85], "should": [1, 2, 4, 7, 14, 15, 18, 25, 38, 44, 50, 54, 64, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94], "syntax": [1, 75], "b": [1, 2, 14, 15, 18, 21, 22, 40, 53, 60, 61, 62, 64, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 96], "where": [1, 2, 4, 7, 11, 14, 15, 18, 21, 23, 24, 25, 26, 29, 35, 38, 43, 44, 47, 49, 52, 53, 54, 55, 60, 61, 64, 70, 73, 75, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 92], "number": [1, 2, 4, 7, 11, 12, 14, 15, 16, 17, 18, 33, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 96, 97], "start": [1, 2, 8, 15, 18, 23, 25, 33, 47, 48, 53, 54, 60, 61, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 92, 99], "initi": [1, 11, 12, 14, 15, 21, 23, 25, 29, 53, 54, 60, 61, 64, 73, 75, 76, 78, 81, 83, 84, 87, 88, 98], "final": [1, 12, 14, 60, 64, 71, 73, 74, 75, 77, 82, 83, 84, 85, 87, 88, 89, 91], "exclude_dataset": [1, 64, 77], "10": [1, 14, 15, 40, 41, 42, 43, 47, 51, 53, 54, 55, 56, 58, 60, 61, 64, 73, 74, 75, 76, 79, 80, 82, 83, 84, 85, 86, 87, 89, 96, 97], "50": [1, 16, 40, 41, 43, 50, 51, 53, 54, 55, 58, 73, 74, 79, 82, 83, 84, 85, 86, 87], "79": [1, 53, 74, 77, 80, 82, 83, 84, 85, 86, 87], "whole": [1, 4, 47, 50, 51, 53, 60, 61, 64, 73, 77, 79, 82, 83, 84, 87, 88], "anomal": [1, 33, 43, 64, 73, 75, 77, 80, 83, 85, 87, 88, 89], "dure": [1, 2, 4, 14, 15, 41, 48, 49, 50, 51, 53, 54, 58, 60, 61, 64, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 97], "true": [1, 2, 4, 6, 11, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 78, 82, 83, 84, 85, 87, 88, 94], "fals": [1, 4, 6, 11, 14, 15, 16, 17, 22, 23, 24, 26, 31, 33, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 83, 84], "determin": [1, 2, 3, 4, 11, 14, 15, 18, 22, 38, 40, 44, 47, 51, 52, 53, 54, 57, 60, 61, 62, 63, 64, 70, 73, 76, 77, 79, 83, 84, 85, 87, 88, 96], "whether": [1, 4, 14, 15, 18, 33, 38, 47, 51, 53, 54, 57, 60, 61, 63, 64, 66, 70, 73, 83, 84, 87, 88, 93], "pair": [1, 2, 14, 18, 23, 34, 40, 43, 48, 53, 55, 64, 67, 73, 74, 76, 77, 79, 83, 85, 87], "combin": [1, 2, 11, 15, 18, 38, 40, 44, 46, 47, 51, 53, 54, 60, 61, 64, 71, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 89, 94], "outlier": [1, 14, 15, 40, 53, 54, 59, 60, 61, 64, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88], "reject": [1, 14, 15, 43, 46, 47, 50, 51, 53, 54, 60, 61, 64, 73, 74, 82, 83, 84, 85, 86, 87, 88], "By": [1, 2, 7, 34, 52, 53, 55, 60, 61, 62, 64, 67, 69, 71, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89], "default": [1, 7, 11, 14, 15, 18, 24, 31, 33, 34, 35, 43, 44, 45, 48, 52, 53, 55, 60, 61, 62, 64, 65, 67, 69, 71, 73, 75, 76, 79, 80, 82, 83, 86, 87, 88, 89, 97], "some": [1, 2, 3, 4, 6, 7, 9, 14, 25, 33, 41, 53, 60, 61, 64, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 94, 95], "signal": [1, 75, 96], "strongli": [1, 64, 85], "strength": [1, 75, 77, 89, 96], "enhanc": 1, "when": [1, 2, 9, 11, 14, 15, 18, 25, 26, 33, 35, 38, 44, 47, 50, 51, 52, 53, 54, 60, 61, 64, 67, 70, 71, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 94, 97], "absorpt": [1, 15, 35, 54, 64, 73, 83, 85, 87, 88, 89], "correct": [1, 2, 3, 4, 15, 18, 23, 30, 35, 44, 47, 50, 51, 52, 54, 64, 66, 73, 75, 76, 77, 78, 81, 83, 84, 85, 87, 88, 89], "physic": [1, 2, 4, 15, 35, 64, 73, 83, 85, 87, 88, 89, 96, 98], "rel": [1, 11, 15, 18, 47, 53, 57, 63, 64, 73, 77, 82, 83, 84, 85, 87, 88, 89], "incom": [1, 83, 87, 88], "outgo": 1, "scatter": [1, 2, 47, 53, 60, 61, 64, 75, 83, 87, 88, 96], "vector": [1, 2, 3, 6, 11, 14, 18, 21, 23, 34, 35, 40, 52, 53, 78, 83, 84, 85, 87, 88], "account": [1, 2, 35, 47, 50, 51, 83, 85, 87, 88, 89], "differ": [1, 2, 4, 6, 14, 18, 33, 38, 39, 40, 42, 50, 53, 54, 64, 70, 73, 75, 76, 77, 78, 82, 83, 84, 85, 87, 88, 89, 98], "path": [1, 4, 7, 26, 34, 35, 36, 37, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 68, 69, 70, 73, 75, 82, 84, 85, 92], "rather": [1, 2, 7, 64, 75, 76, 77, 79, 82, 83, 84, 87, 88, 89, 98], "than": [1, 2, 7, 11, 18, 21, 38, 41, 46, 47, 51, 53, 54, 56, 58, 60, 61, 64, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 94, 97, 98], "absolut": [1, 18, 30, 44, 53, 60, 61, 73, 84, 85], "beam": [1, 2, 3, 4, 6, 11, 22, 23, 24, 26, 27, 32, 33, 34, 35, 37, 38, 41, 47, 51, 52, 53, 54, 57, 58, 59, 60, 61, 65, 69, 75, 76, 77, 78, 82, 83, 84, 85, 87, 88, 94, 95, 96, 98], "constrain": [1, 11, 53, 60, 61, 64, 83, 87, 88], "constraint": [1, 11, 14, 53, 60, 61, 71, 75, 83, 84, 86, 87, 88, 89], "parameteris": [1, 2, 14, 15, 53, 60, 61, 74, 75, 76, 82, 83, 84, 87, 97], "chang": [1, 2, 9, 18, 24, 33, 39, 41, 51, 53, 54, 58, 61, 62, 64, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 88, 96, 97, 98], "absorption_level": [1, 64, 73, 89], "low": [1, 11, 37, 47, 50, 51, 53, 64, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89], "medium": [1, 64, 73, 89], "give": [1, 2, 7, 14, 18, 40, 45, 46, 53, 60, 61, 62, 67, 70, 73, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 97], "around": [1, 18, 34, 47, 50, 51, 53, 60, 61, 75, 77, 79, 84, 88, 98], "25": [1, 11, 43, 47, 53, 64, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87], "depend": [1, 2, 14, 35, 44, 48, 60, 63, 64, 77, 82, 83, 87, 88, 89], "see": [1, 2, 7, 9, 11, 18, 47, 48, 53, 54, 60, 61, 64, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 92, 97], "extent": [1, 73, 83, 85, 87], "check": [1, 4, 7, 9, 16, 18, 24, 26, 33, 37, 38, 53, 64, 70, 75, 77, 80, 82, 83, 84, 85, 87, 94], "conveni": [1, 2, 47, 54, 64, 70, 73], "invok": 1, "export": [1, 18, 30, 33, 45, 64, 72, 75, 76, 82, 84, 85, 90], "unmerg": [1, 43, 44, 73, 74, 75, 80, 84, 85, 88, 99], "you": [1, 4, 7, 9, 23, 40, 48, 54, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 92, 98], "want": [1, 48, 74, 75, 78, 79, 82, 83, 84, 85, 87, 88, 89], "individu": [1, 9, 40, 44, 64, 66, 69, 74, 75, 76, 77, 81, 82, 83, 85, 86, 87, 89, 94], "more": [1, 3, 4, 7, 9, 11, 18, 33, 36, 38, 46, 47, 48, 53, 54, 60, 61, 64, 70, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 94, 97, 98], "extens": [1, 4, 32, 41, 45, 47, 51, 54, 58, 60, 71, 75, 76, 91, 95], "merged_mtz": [1, 64], "creat": [1, 4, 7, 9, 14, 15, 16, 22, 23, 24, 26, 28, 38, 48, 50, 53, 54, 60, 61, 64, 71, 75, 76, 77, 83, 84, 87, 88, 89, 97], "unmerged_mtz": [1, 64], "format": [1, 2, 3, 18, 23, 24, 26, 30, 33, 44, 45, 47, 51, 52, 54, 55, 57, 64, 70, 73, 74, 75, 76, 80, 82, 83, 84, 86, 87, 88, 89, 97, 99], "One": [1, 38, 75, 76, 77, 79, 84], "choic": [1, 2, 15, 18, 34, 38, 39, 40, 41, 43, 44, 45, 47, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 69, 70, 73, 74, 77, 78, 83, 85, 87, 88, 89], "made": [1, 2, 15, 23, 33, 35, 38, 40, 53, 60, 61, 75, 83, 84, 85, 87, 88, 89], "automat": [1, 9, 11, 18, 33, 40, 48, 53, 60, 61, 67, 73, 75, 76, 80, 83, 84, 85, 86, 87, 88, 89, 96], "summat": [1, 35, 40, 54, 64, 75, 82, 83, 84, 85, 86, 87], "profil": [1, 3, 12, 24, 27, 31, 32, 35, 40, 41, 44, 47, 51, 54, 58, 64, 73, 75, 78, 79, 82, 83, 84, 85, 86, 87, 88, 95], "seem": [1, 44, 75, 82, 84], "best": [1, 2, 4, 11, 18, 40, 44, 45, 53, 60, 61, 64, 71, 73, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 96], "estim": [1, 11, 18, 40, 42, 43, 48, 49, 53, 54, 60, 61, 64, 68, 71, 73, 77, 80, 83, 85, 87, 88, 89], "two": [1, 2, 3, 4, 15, 18, 23, 35, 39, 52, 53, 60, 61, 65, 67, 74, 75, 77, 78, 79, 83, 87, 88, 89], "result": [1, 2, 11, 14, 15, 18, 35, 37, 38, 39, 40, 42, 43, 44, 51, 53, 57, 60, 61, 64, 65, 68, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 89, 94, 97], "tabl": [1, 2, 3, 4, 14, 15, 16, 33, 35, 38, 46, 47, 54, 57, 60, 61, 64, 66, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88], "log": [1, 11, 14, 18, 33, 35, 37, 38, 40, 41, 43, 44, 47, 50, 51, 52, 53, 54, 58, 60, 61, 62, 64, 65, 70, 71, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 97], "score": [1, 11, 18, 40, 64, 70, 74, 77, 78, 80, 83, 85, 86, 87, 88, 89], "set": [1, 2, 3, 6, 7, 11, 12, 14, 15, 16, 18, 26, 29, 30, 33, 34, 37, 38, 40, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 66, 69, 70, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 96, 97, 98], "imid": [1, 15, 64, 83, 85, 87], "rpim": [1, 75, 77, 80, 83, 85, 87, 88, 89], "cc1": [1, 18, 74, 83, 85, 86, 87], "specifi": [1, 2, 11, 14, 15, 33, 34, 36, 38, 43, 46, 47, 50, 51, 52, 53, 54, 60, 61, 62, 64, 65, 69, 70, 71, 73, 75, 82, 84, 85, 92, 97], "coupl": [1, 84], "intensity_choic": [1, 33, 64], "sum": [1, 3, 6, 18, 29, 40, 44, 51, 54, 55, 64, 75, 82, 83, 84, 85, 86, 87, 88], "700": [1, 80, 83, 87], "crossov": [1, 82], "adjust": [1, 74, 75, 76, 83, 85, 87, 88, 89], "uncertainti": [1, 76, 83, 85, 87, 88, 89], "error": [1, 9, 14, 15, 18, 35, 44, 52, 53, 60, 61, 64, 71, 73, 75, 76, 83, 85, 87, 88, 94], "sigma": [1, 18, 41, 51, 52, 53, 54, 58, 60, 61, 64, 70, 73, 75, 76, 77, 80, 83, 85, 86, 87, 88, 89], "systemat": [1, 40, 69, 70, 73, 78, 79, 80, 82, 83, 85, 87, 88], "suffient": 1, "refin": [1, 3, 4, 11, 15, 18, 19, 32, 38, 41, 44, 46, 51, 53, 54, 57, 58, 61, 63, 64, 71, 72, 73, 77, 78, 79, 80, 81, 85, 90, 96, 97, 99], "while": [1, 2, 9, 14, 38, 53, 75, 76, 82, 83, 84, 85, 87, 88, 89], "an": [1, 2, 3, 4, 7, 9, 11, 14, 15, 16, 18, 21, 23, 24, 25, 26, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 68, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 91, 94, 96, 97, 98], "import": [1, 2, 3, 4, 6, 7, 24, 32, 33, 42, 47, 53, 59, 65, 68, 72, 75, 77, 78, 82, 84, 90, 97], "improv": [1, 64, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97], "qualiti": [1, 45, 48, 49, 73, 74, 75, 79, 82, 83, 85, 86, 87, 88, 96, 98], "typic": [1, 2, 7, 11, 35, 47, 48, 53, 54, 60, 61, 64, 70, 73, 75, 79, 82, 83, 87, 88, 89], "poorer": [1, 85], "paramet": [1, 2, 4, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 97], "becom": [1, 2, 14, 64, 77, 79, 84], "overinfl": 1, "If": [1, 4, 7, 9, 11, 14, 15, 16, 18, 22, 24, 33, 34, 35, 38, 40, 43, 44, 46, 47, 48, 50, 52, 53, 54, 60, 61, 64, 65, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 97], "so": [1, 2, 4, 11, 14, 16, 24, 26, 35, 40, 44, 53, 60, 61, 64, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89], "error_model": [1, 15, 64], "none": [1, 4, 6, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 79, 84, 85, 97], "don": [1, 33, 35, 38, 72, 82, 84], "t": [1, 2, 15, 22, 23, 25, 26, 29, 33, 35, 38, 40, 72, 74, 75, 76, 77, 82, 83, 84, 87, 88, 96], "basic": [1, 2, 7, 14, 77, 83, 85, 87, 88], "Will": 1, "keep": [1, 14, 38, 43, 44, 53, 60, 61, 71, 73, 74, 77, 82, 88, 98], "pre": [1, 12, 83, 87, 88], "02": [1, 14, 40, 41, 51, 53, 54, 58, 60, 61, 75, 77, 80, 82, 83, 85, 86, 87, 96, 97], "first": [1, 4, 12, 15, 18, 23, 25, 26, 34, 38, 40, 45, 46, 52, 53, 54, 56, 60, 61, 69, 71, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 96, 98], "assumpt": [1, 23, 35, 77, 79, 84], "similar": [1, 4, 15, 18, 40, 47, 52, 53, 75, 77, 78, 83, 84, 85, 86, 87, 88, 97], "affect": [1, 42, 53, 60, 61, 73, 75, 76, 79, 83, 84, 85, 87, 88], "approach": [1, 11, 77, 96], "optim": [1, 18, 75, 83, 85, 87, 88, 96], "altern": [1, 4, 7, 11, 52, 53, 60, 61, 62, 64, 78, 80, 83], "separ": [1, 14, 15, 38, 40, 43, 47, 53, 54, 60, 61, 64, 71, 73, 74, 75, 76, 82, 83, 84, 86, 87, 94], "group": [1, 2, 4, 11, 15, 18, 22, 23, 33, 37, 40, 43, 45, 46, 47, 50, 51, 52, 53, 60, 61, 62, 64, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97], "chosen": [1, 2, 4, 11, 14, 15, 18, 35, 38, 43, 53, 57, 60, 61, 63, 64, 75, 77, 78, 83, 85, 86, 87, 88], "error_model_group": [1, 64], "e": [1, 2, 3, 4, 6, 7, 11, 14, 15, 18, 25, 35, 40, 43, 47, 49, 52, 53, 54, 60, 61, 62, 64, 65, 67, 70, 73, 74, 75, 77, 78, 83, 84, 85, 86, 87, 88, 89, 92, 94, 96], "partial": [1, 3, 18, 40, 44, 46, 53, 60, 61, 64, 70, 71, 73, 75, 78, 82, 83, 85, 86, 87, 96], "abov": [1, 4, 9, 37, 38, 40, 41, 44, 47, 51, 54, 58, 64, 70, 71, 74, 75, 77, 83, 85, 87, 88, 89, 93], "threshold": [1, 15, 16, 31, 37, 38, 40, 41, 44, 45, 47, 51, 54, 58, 70, 71, 73, 74, 75, 76, 79, 83, 85, 87, 88], "partiality_threshold": [1, 33, 40, 44, 70, 71], "95": [1, 37, 40, 45, 54, 64, 70, 74, 77, 82, 83, 85, 86, 87], "disregard": 1, "measur": [1, 2, 3, 11, 14, 61, 64, 73, 75, 77, 83, 84, 85, 86, 87, 88, 96], "resourc": 1, "million": 1, "slow": [1, 23, 38, 44, 47, 50, 51, 52, 59, 64, 73, 74, 75, 76], "memori": [1, 11, 14, 26, 38, 53, 54, 64, 82, 83, 87], "There": [1, 2, 7, 9, 75, 76, 77, 78, 79, 82, 83, 84, 87, 88, 91, 98], "sever": [1, 9, 49, 77, 78, 83, 84, 85, 87, 88], "manag": [1, 12, 14, 53, 60, 61, 64, 83, 87, 99], "allow": [1, 3, 11, 14, 16, 18, 23, 24, 34, 38, 44, 46, 48, 52, 53, 60, 61, 62, 64, 74, 75, 76, 77, 78, 82, 83, 84, 87, 88, 89, 91, 94, 95, 97], "blockwis": 1, "parallel": [1, 2, 16, 24, 35, 38, 48, 82, 83, 84, 87, 88, 96, 98], "nproc": [1, 14, 16, 47, 49, 53, 54, 60, 61, 64, 65, 73, 74, 83, 84, 87], "8": [1, 2, 11, 22, 40, 44, 47, 49, 53, 64, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 96], "probabl": [1, 11, 18, 40, 41, 51, 53, 54, 58, 60, 61, 74, 77, 83, 85, 86, 87], "reason": [1, 2, 53, 60, 61, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 89], "computation": [1, 88, 98], "part": [1, 2, 14, 47, 53, 60, 61, 74, 75, 81, 82, 83, 84, 85, 87, 88, 97], "round": [1, 64, 73, 74, 75, 79, 80, 83, 85, 87], "full": [1, 3, 4, 14, 21, 23, 75, 77, 82, 83, 84, 87, 88, 97], "matrix": [1, 6, 14, 18, 22, 39, 40, 44, 52, 53, 57, 60, 61, 63, 64, 71, 73, 75, 82, 83, 84, 86, 87, 89], "full_matrix": [1, 64], "turn": [1, 2, 11, 25, 53, 54, 60, 61, 64, 74, 77, 79, 82, 83, 84, 87, 88], "off": [1, 18, 53, 54, 60, 61, 64, 74, 75, 79, 83, 84, 87, 88], "factor": [1, 3, 14, 15, 35, 40, 53, 64, 65, 67, 73, 74, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89], "compromis": 1, "full_matrix_max_iter": [1, 64], "do": [1, 6, 7, 9, 11, 12, 14, 16, 21, 31, 33, 38, 41, 47, 51, 53, 54, 58, 60, 61, 64, 73, 74, 75, 76, 77, 78, 80, 83, 85, 87, 88, 89, 94, 98], "least": [1, 14, 53, 60, 61, 75, 83, 85, 87, 88], "iter": [1, 11, 14, 16, 23, 40, 41, 51, 53, 54, 58, 60, 61, 64, 65, 73, 79, 84], "reduc": [1, 2, 14, 15, 35, 40, 45, 47, 51, 53, 60, 61, 67, 73, 74, 77, 83, 84, 87, 88, 89], "reflection_select": [1, 64, 73], "auto": [1, 11, 18, 40, 44, 45, 47, 49, 51, 52, 53, 54, 59, 60, 61, 63, 64, 65, 70, 73, 83, 84, 87, 88], "even": [1, 2, 14, 44, 75, 78, 79, 83, 84, 85, 88, 93], "veri": [1, 35, 74, 75, 77, 79, 82, 83, 84, 85, 87, 88, 89], "alwai": [1, 9, 47, 54, 78, 79, 84, 88], "get": [1, 8, 14, 16, 17, 23, 24, 25, 26, 29, 30, 33, 54, 75, 77, 82, 83, 84, 85, 87, 88], "ce2": [1, 97], "try": [1, 4, 7, 24, 33, 64, 74, 75, 77, 78, 79, 80, 82, 83, 84, 87, 97], "quasi_random": [1, 64, 73], "alongsid": [1, 74, 94], "function": [1, 2, 7, 11, 12, 14, 15, 16, 18, 26, 36, 40, 43, 53, 54, 60, 61, 64, 75, 82, 83, 84, 85, 87, 88, 95], "target": [1, 11, 14, 15, 18, 19, 53, 60, 61, 64, 71, 74, 75, 82, 83, 85, 87, 88], "ha": [1, 4, 7, 11, 14, 15, 21, 23, 25, 29, 35, 40, 53, 60, 61, 74, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 94, 97, 98], "alreadi": [1, 4, 14, 16, 21, 23, 25, 26, 29, 53, 60, 61, 64, 73, 75, 77, 79, 83, 85, 87, 88, 89], "been": [1, 15, 23, 25, 29, 40, 47, 52, 53, 60, 61, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 97], "anoth": [1, 53, 62, 75, 76, 79, 83, 85, 87, 97], "datafil": [1, 80, 83, 84, 86, 87], "only_target": [1, 64], "agre": [1, 2, 77], "close": [1, 14, 24, 53, 60, 61, 67, 74, 75, 76, 78, 82, 83, 84, 87, 88], "els": [1, 6, 23, 88], "togeth": [1, 2, 64, 73, 75, 76, 77, 82, 84, 98], "joint": [1, 3, 53, 60, 61, 64, 81, 82], "assum": [1, 2, 7, 14, 21, 22, 23, 25, 29, 35, 37, 46, 48, 75, 76, 80, 82, 84, 85, 89], "varianc": [1, 3, 15, 40, 45, 47, 51, 54, 64, 77, 83, 85, 87, 88], "column": [1, 3, 6, 14, 33, 53, 54, 60, 61, 64, 71, 78, 79, 85, 86], "would": [1, 7, 15, 53, 60, 61, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 94, 98], "same": [1, 2, 11, 14, 23, 24, 36, 44, 54, 60, 62, 71, 74, 75, 76, 77, 79, 82, 83, 84, 85, 87, 88, 97], "regardless": 1, "type": [1, 3, 4, 6, 7, 11, 14, 15, 17, 18, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 80, 83, 84, 85, 86, 87, 88, 92], "three": [1, 2, 3, 11, 53, 57, 60, 61, 63, 74, 75, 77, 83, 85, 87, 88, 91, 98], "access": [1, 9, 14, 21, 48, 82, 84, 88, 91], "line": [1, 7, 9, 12, 33, 52, 64, 72, 74, 75, 78, 80, 81, 82, 83, 84, 87, 88, 89, 97], "arrai": [1, 4, 11, 14, 15, 18, 32, 33, 42, 54, 55, 64, 73, 91, 98], "kb": [1, 4, 15, 64, 73], "aimless": [1, 44, 76, 83, 85, 87, 88], "taken": [1, 35, 53, 57, 60, 61, 63, 76, 77, 83, 84, 85, 87, 88, 89], "xscale": [1, 44], "simpl": [1, 4, 14, 15, 21, 23, 24, 31, 33, 47, 50, 51, 53, 54, 64, 73, 82, 84, 88], "still": [1, 3, 9, 11, 12, 14, 16, 24, 52, 53, 54, 60, 61, 74, 75, 76, 77, 79, 82, 83, 84, 86, 87, 88, 96, 97], "small": [1, 2, 11, 53, 60, 61, 77, 78, 79, 81, 82, 83, 85, 87, 88], "rotat": [1, 2, 4, 6, 11, 14, 22, 25, 33, 34, 35, 38, 39, 47, 52, 53, 54, 57, 60, 61, 63, 64, 69, 73, 74, 75, 76, 77, 79, 82, 83, 85, 86, 87, 88, 94, 97, 98], "degre": [1, 2, 11, 15, 23, 25, 35, 41, 51, 53, 54, 58, 60, 61, 64, 67, 69, 73, 75, 78, 82, 83, 84, 85, 86, 87, 88, 89], "sensibl": [1, 77, 83, 87, 88, 89], "oscil": [1, 3, 12, 15, 29, 38, 52, 53, 60, 61, 64, 76, 78, 83, 87], "unless": [1, 7, 21, 33, 53, 60, 61, 64, 73, 75], "60": [1, 40, 64, 74, 76, 79, 80, 83, 85, 86, 87, 97], "disabl": [1, 14, 38, 47, 50, 51, 53, 85], "poorli": [1, 47, 53, 60, 61, 74, 75, 77, 85, 88], "space": [1, 2, 4, 7, 11, 14, 15, 18, 22, 31, 33, 37, 40, 41, 43, 44, 45, 46, 47, 50, 51, 53, 54, 58, 59, 60, 61, 62, 64, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 97], "down": [1, 74, 75, 78, 83, 87, 88], "90": [1, 40, 45, 46, 47, 50, 51, 53, 54, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 96, 97], "consist": [1, 2, 11, 14, 18, 40, 53, 61, 62, 64, 73, 75, 77, 78, 79, 83, 84, 85, 86, 87, 88, 89, 98], "up": [1, 7, 11, 14, 15, 24, 40, 42, 53, 54, 60, 61, 67, 69, 74, 75, 76, 78, 82, 83, 84, 85, 87, 88, 92, 97, 98], "smoothli": [1, 75, 83, 87, 88, 89, 94], "vari": [1, 14, 17, 41, 44, 51, 53, 54, 57, 58, 60, 61, 74, 75, 82, 83, 84, 86, 87, 88, 89, 94], "surfac": [1, 15, 35, 82, 83, 87, 88, 89], "scale_correct": 1, "decay_correct": [1, 64, 88], "absorption_correct": [1, 54, 64], "term": [1, 2, 14, 53, 60, 61, 64, 74, 83, 87, 88, 89], "regular": [1, 47, 54, 64, 70, 73, 77, 79, 82, 86, 97], "interv": [1, 15, 47, 53, 54, 60, 61, 64, 70, 73, 83, 87], "scale_interv": [1, 64, 88], "decay_interv": [1, 64], "highest": [1, 11, 38, 40, 54, 62, 79, 82, 83, 85, 86, 87, 88], "order": [1, 4, 9, 11, 14, 15, 23, 33, 36, 38, 52, 53, 54, 55, 60, 61, 64, 75, 79, 82, 83, 84, 85, 87, 88, 89], "spheric": [1, 53, 60, 61, 64, 73, 89], "harmon": [1, 64, 73, 89], "lmax": [1, 64, 73], "recommend": [1, 3, 7, 53, 60, 61, 64, 74, 75, 76, 83, 85, 86, 87], "higher": [1, 4, 11, 64, 74, 75, 79, 83, 84, 85, 87, 88], "6": [1, 2, 3, 15, 18, 38, 40, 44, 45, 47, 51, 53, 60, 61, 64, 69, 70, 73, 74, 75, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97, 100], "weak": [1, 76, 78, 79, 80, 85, 97], "decay_restraint": [1, 64], "strong": [1, 3, 16, 44, 47, 49, 51, 53, 54, 59, 63, 65, 68, 71, 74, 75, 76, 77, 78, 79, 82, 83, 84, 86, 87, 88, 89, 97], "surface_weight": [1, 64], "restrain": [1, 53, 60, 61, 64, 76], "decai": [1, 15, 64, 74, 83, 85, 87, 89], "toward": [1, 74, 75, 82, 98], "zero": [1, 2, 11, 35, 47, 53, 54, 60, 61, 64, 67, 70, 71, 74, 82], "although": [1, 38, 61, 74, 76, 78, 79, 82, 83, 84, 87, 88, 94], "reciproc": [1, 2, 3, 4, 11, 14, 18, 22, 31, 34, 41, 44, 51, 53, 54, 58, 59, 75, 78, 79, 83, 85, 87, 88, 89], "coverag": [1, 82], "decay_term": 1, "thin": [1, 18, 73], "wedg": [1, 11, 53, 81, 84, 88], "necessari": [1, 2, 11, 15, 40, 54, 74, 76, 77, 82, 83, 87, 89, 94], "unstabl": [1, 64], "per": [1, 14, 15, 24, 35, 36, 38, 40, 41, 43, 47, 51, 53, 54, 58, 60, 61, 64, 68, 73, 74, 75, 77, 80, 83, 84, 86, 87, 88, 94, 97], "2d": [1, 2, 12, 14, 47, 54, 64, 99], "grid": [1, 11, 37, 41, 49, 51, 52, 53, 54, 58, 64, 65, 79, 82, 83, 87, 88, 97], "bin": [1, 15, 37, 38, 43, 45, 47, 48, 51, 53, 54, 61, 64, 73, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88], "n_resolution_bin": [1, 64], "second": [1, 18, 34, 74, 78, 79, 83, 84, 87, 88], "3d": [1, 11, 12, 47, 52, 53, 64, 75, 83, 84, 87, 88, 97, 99], "x": [1, 2, 14, 18, 21, 22, 23, 25, 33, 35, 40, 43, 47, 50, 51, 52, 53, 60, 61, 62, 64, 74, 75, 76, 77, 79, 82, 83, 84, 85, 87, 88, 91, 92, 95, 96, 98], "y": [1, 2, 14, 18, 21, 22, 23, 25, 40, 43, 47, 50, 51, 52, 53, 60, 61, 62, 64, 74, 75, 76, 77, 79, 82, 83, 84, 85, 87, 88, 96], "begin": [1, 2, 53, 74, 83, 87, 88], "n_absorption_bin": [1, 64], "modulation_correct": [1, 64], "smooth": [1, 83, 84, 87, 88], "n_modulation_bin": [1, 64], "wide": [1, 7, 47, 51, 53, 65, 75, 77, 85], "test": [1, 11, 14, 15, 18, 33, 37, 53, 62, 64, 70, 73, 76, 77, 79, 84, 85, 86, 88, 89], "lead": [1, 53, 60, 61, 78, 79, 83, 84, 87, 88], "overparameteris": [1, 85], "subset": [1, 14, 38, 46, 53, 54, 60, 61, 64, 65, 73, 77, 79, 82, 83, 85, 87, 88], "effici": [1, 3, 14], "four": [1, 74, 77, 85, 89], "intensity_rang": [1, 64, 73], "use_al": [1, 64, 73], "select": [1, 6, 11, 14, 15, 38, 40, 41, 43, 46, 51, 53, 54, 58, 60, 61, 64, 73, 75, 77, 79, 83, 85, 87, 88, 89], "properti": [1, 2, 11, 14, 15, 18, 25, 26, 33, 35, 47, 96], "20k": 1, "each": [1, 2, 11, 12, 14, 17, 18, 33, 35, 38, 40, 42, 47, 52, 53, 54, 60, 61, 64, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 97], "connected": [1, 64, 73], "area": [1, 47, 75, 85, 87, 88, 98], "shell": [1, 7, 43, 47, 73, 74, 75, 76, 77, 85, 89], "find": [1, 4, 9, 11, 16, 24, 38, 42, 45, 47, 50, 51, 52, 53, 54, 65, 77, 78, 82, 84, 86, 92, 94], "averag": [1, 38, 42, 55, 64, 83, 87, 88], "therefor": [1, 4, 14, 53, 60, 61, 74, 83, 84, 85, 87, 89], "explicitli": [1, 54, 75], "min_per_area": 1, "multi_dataset": [1, 64], "min_per_dataset": 1, "isigma_cutoff": [1, 64], "size": [1, 4, 11, 18, 23, 26, 35, 38, 39, 41, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 73, 74, 75, 82, 83, 85, 86, 87, 88, 97], "normalis": [1, 15, 18, 35, 37, 40, 43, 64, 70, 73, 83, 85, 87], "e2_rang": [1, 64, 73], "isigma_rang": [1, 64, 73], "d_rang": [1, 64, 73], "simpli": [1, 2, 7, 14, 35, 40, 83, 84, 87, 88, 94], "prohibit": 1, "vec": 2, "describ": [2, 3, 7, 18, 48, 53, 60, 61, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 96], "fraction": [2, 3, 11, 16, 21, 38, 41, 46, 47, 51, 52, 53, 54, 58, 60, 61, 73, 83, 85, 87], "lattic": [2, 3, 11, 18, 40, 44, 53, 73, 76, 77, 79, 81, 85, 96, 97, 99], "basi": [2, 11, 18, 24, 39, 53, 61, 62, 74, 75, 77, 78, 83, 84, 85, 86, 87, 89], "pmatrix": 2, "l": [2, 14, 18, 37, 53, 62, 75, 76, 77, 78, 79, 83, 85, 86, 87, 89, 94, 96], "end": [2, 14, 15, 33, 46, 47, 54, 60, 64, 70, 73, 74, 75, 78, 79, 82, 83, 84, 85, 87, 88, 89, 91, 97, 99], "special": [2, 4, 11, 51, 53, 60, 61, 64, 74, 75, 76, 77, 88, 93], "integ": [2, 53, 54, 62, 67, 84, 85, 86, 97], "defin": [2, 14, 15, 18, 43, 46, 47, 50, 51, 54, 64, 74, 75, 76, 89], "point": [2, 3, 7, 11, 14, 18, 38, 40, 44, 54, 66, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94], "hkl": [2, 17, 30, 39, 44, 69, 79, 89], "miller": [2, 3, 18, 33, 39, 51, 53, 56, 69, 77, 78, 85, 86, 88], "indic": [2, 3, 4, 11, 14, 15, 24, 26, 39, 45, 48, 49, 51, 53, 54, 56, 60, 61, 64, 69, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88], "r_": [2, 18, 77], "phi": [2, 14, 22, 25, 52, 53, 60, 61, 64, 69, 76, 79, 82, 83, 84, 87, 88], "cartesian": [2, 11], "its": [2, 14, 33, 35, 48, 53, 60, 61, 64, 71, 75, 76, 78, 83, 87, 88, 93, 95], "ax": [2, 14, 25, 34, 35, 52, 57, 63, 75, 76, 77, 79, 85], "coincid": [2, 25], "distinct": [2, 77, 85], "becaus": [2, 11, 42, 74, 75, 79, 82, 83, 84, 87, 88], "distanc": [2, 11, 16, 23, 40, 51, 52, 53, 54, 60, 61, 74, 76, 82, 83, 84, 85, 86, 87], "unit": [2, 11, 18, 22, 33, 40, 41, 44, 45, 46, 47, 50, 51, 53, 54, 56, 57, 58, 60, 61, 64, 71, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 93, 97], "unicod": [2, 76], "x212b": [2, 76], "accept": [2, 7, 14, 47, 50, 51, 53, 74, 83, 85, 87, 88], "refer": [2, 8, 14, 18, 21, 23, 25, 29, 37, 38, 40, 41, 43, 51, 52, 54, 57, 58, 62, 63, 64, 67, 72, 73, 76, 82, 83, 87, 88, 90, 97], "real": [2, 4, 11, 77, 78, 79, 82, 83, 84, 87, 88, 96, 97], "lab": [2, 45, 51], "clear": [2, 24, 40, 78, 79, 82, 84, 85, 88, 89, 94, 98], "context": [2, 95], "mathbf": [2, 35], "goniostat": 2, "invers": [2, 3, 14, 41, 51, 54, 58, 79, 83, 85, 87], "index": [2, 3, 6, 14, 15, 17, 18, 19, 26, 32, 37, 40, 41, 44, 45, 46, 47, 51, 54, 58, 59, 60, 61, 62, 63, 64, 65, 69, 71, 72, 73, 77, 78, 80, 82, 84, 85, 90, 94, 96], "product": [2, 11, 93], "r_0": 2, "axi": [2, 4, 6, 21, 22, 23, 25, 33, 34, 38, 52, 53, 60, 61, 73, 74, 76, 77, 78, 79, 83, 85, 86, 87, 88], "angl": [2, 6, 11, 18, 21, 23, 25, 33, 39, 40, 52, 54, 61, 64, 69, 70, 71, 73, 74, 75, 77, 83, 85, 87, 88, 89], "doe": [2, 7, 14, 17, 36, 51, 52, 53, 55, 63, 74, 75, 82, 83, 84, 85, 87, 88], "cours": [2, 83, 88, 89], "notwithstand": [2, 79, 82], "misset": [2, 83, 87, 88], "about": [2, 4, 7, 14, 15, 23, 25, 47, 48, 57, 63, 75, 77, 79, 82, 83, 84, 85, 86, 87, 88, 99], "actual": [2, 14, 15, 74, 77, 82, 84, 87], "effect": [2, 14, 35, 47, 53, 60, 61, 64, 75, 77, 82, 83, 84, 85, 87, 88], "label": [2, 14, 43, 45, 47, 60, 69, 71, 73, 85, 86], "sampl": [2, 11, 14, 18, 23, 35, 52, 53, 54, 60, 61, 74, 75, 77, 82, 83, 87, 88, 89], "equip": 2, "omega": [2, 25, 52], "deal": [2, 76, 82, 88], "might": [2, 4, 14, 35, 75, 78, 79, 82, 83, 84, 85, 87, 88], "redefin": 2, "outsid": [2, 14, 38, 67], "modul": [2, 14, 15, 18, 33, 64, 78, 80, 84, 85, 87, 88], "definit": [2, 14, 15, 21, 33, 75, 76, 79, 84], "decompos": [2, 57, 63], "matric": [2, 39, 85, 86], "convention": 2, "u": [2, 4, 35, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 96], "name": [2, 3, 4, 6, 7, 14, 15, 23, 24, 25, 26, 30, 31, 33, 35, 36, 42, 44, 45, 48, 50, 51, 52, 53, 60, 61, 63, 64, 67, 71, 79, 80, 82, 83, 85, 86, 87, 88, 89, 93], "common": [2, 18, 29, 40, 64, 74, 79, 90], "univers": 2, "particular": [2, 4, 26, 47, 53, 60, 61, 75, 77, 88, 93, 97], "text": [2, 24, 33, 35, 74, 75, 83, 84, 87, 88], "Of": 2, "pure": [2, 14], "whilst": [2, 3, 53, 60, 61, 84], "fix": [2, 14, 15, 25, 35, 38, 41, 51, 52, 53, 54, 58, 60, 61, 64, 74, 75, 76, 78, 79, 80, 82, 83, 84, 87], "orthogon": [2, 35, 53, 60, 61], "infinit": [2, 14], "wai": [2, 33, 74, 75, 78, 79, 80, 82, 83, 84, 85, 93, 94, 95, 97], "symbol": [2, 12, 53, 85, 86], "express": [2, 46, 89, 93], "simplifi": [2, 21], "align": [2, 11, 21, 23, 25, 34, 76, 77, 78, 79, 89], "j": [2, 11, 18, 35, 40, 47, 53, 65, 67, 73, 75, 77, 80, 85, 86, 96], "lie": [2, 78], "plane": [2, 21, 34, 53, 54, 60, 61, 69, 75, 76], "unfortun": [2, 79, 82, 84, 85], "disconnect": 2, "usual": [2, 14, 41, 42, 47, 73, 74, 75, 79, 80, 82, 83, 84, 87, 88, 89, 94], "call": [2, 14, 16, 35, 40, 47, 48, 53, 54, 73, 75, 77, 83, 84, 87, 88, 97], "pdb": [2, 40, 44, 51, 62, 64, 73, 75, 78, 83, 85], "7": [2, 3, 37, 40, 45, 46, 47, 48, 50, 51, 74, 75, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97], "essenti": [2, 14, 74, 77, 83, 84, 87, 88], "transform": [2, 11, 39, 53, 61, 86, 88, 89], "state": [2, 14, 53, 60, 61, 83, 87], "element": [2, 14, 15, 18, 25, 40, 77, 79, 83, 84, 85, 87, 88], "explicit": [2, 53, 60, 61, 83, 87, 88], "compact": [2, 11, 18, 24, 44, 52, 82], "form": [2, 7, 14, 30, 43, 47, 53, 54, 60, 61, 75, 77, 78, 79, 83, 84, 87, 88, 93], "co": [2, 35, 77, 85, 96], "gamma": [2, 18, 40, 85, 89], "beta": [2, 18, 40, 61, 70, 73, 83, 85, 87, 88, 89], "sin": 2, "alpha": [2, 25, 40, 53, 60, 61, 85, 89], "It": [2, 3, 11, 14, 35, 37, 40, 41, 50, 53, 54, 60, 61, 64, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88], "desir": [2, 9, 41, 64, 73, 83, 86, 87, 89], "deriv": [2, 4, 6, 14, 22, 85, 88, 89, 93], "relationship": [2, 3, 52], "interest": [2, 16, 47, 74, 82, 84], "eqnarrai": 2, "m": [2, 11, 35, 40, 46, 74, 75, 77, 80, 83, 85, 86, 87, 88, 96, 97], "mathsf": 2, "prime": 2, "nonumb": 2, "analogi": 2, "left": [2, 35, 79, 88], "right": [2, 4, 35, 74, 75, 79, 82, 84, 93], "f": [2, 6, 18, 75, 76, 77, 83, 85, 86, 87, 88, 89], "fractionalis": 2, "easili": [2, 4, 75], "uctbx": [2, 11, 22], "unit_cel": [2, 11, 22, 33, 41, 44, 45, 46, 47, 50, 51, 53, 54, 58, 60, 61, 64, 73, 74, 75, 76, 78, 79, 82, 83, 86, 87, 97], "object": [2, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 52, 53, 60, 61, 67, 82, 84, 98, 99], "cell": [2, 11, 14, 18, 22, 33, 35, 40, 41, 44, 45, 46, 47, 50, 51, 53, 54, 57, 58, 60, 61, 64, 65, 70, 71, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 96, 97], "frac": [2, 35, 82, 83, 87, 88], "bc": 2, "ac": [2, 92, 96], "ab": [2, 83, 85, 87], "abc": 2, "sqrt": [2, 18, 83, 85, 87], "implicit": [2, 54], "orthonorm": 2, "scale": [2, 3, 18, 19, 22, 24, 32, 35, 40, 43, 44, 45, 48, 56, 72, 73, 77, 79, 80, 81, 84, 90, 95, 96], "Its": [2, 36], "clearli": [2, 75, 79, 82, 83, 84, 87, 88], "mutual": [2, 51], "think": [2, 79, 84, 98], "sequenc": [2, 3, 15, 16, 24, 26, 30, 36, 47, 52, 53, 54, 60, 61, 64, 67, 79, 80, 82, 83, 84, 86, 87, 89, 97], "practic": [2, 14, 74, 75, 78, 83, 85, 87, 88, 90], "time": [2, 4, 26, 33, 46, 64, 74, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 95, 96, 98], "slippag": 2, "unknown": [2, 26, 44], "expect": [2, 7, 14, 18, 35, 64, 74, 75, 76, 78, 79, 82, 83, 84, 85, 87, 88, 98], "inadequaci": 2, "other": [2, 4, 7, 14, 22, 23, 25, 38, 40, 42, 47, 53, 54, 60, 61, 64, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 91, 93, 94, 97, 98], "aspect": [2, 76], "experiment": [2, 3, 4, 7, 11, 26, 38, 52, 53, 60, 61, 62, 64, 65, 71, 75, 76, 77, 78, 83, 85, 87, 88, 89, 90, 97, 98], "descript": [2, 3, 4, 7, 21, 23, 47, 64, 75, 83, 84, 87, 88, 97], "reconcil": 2, "current": [2, 4, 7, 14, 18, 24, 33, 44, 53, 55, 60, 61, 64, 70, 76, 78, 79, 82, 84, 88, 92, 94, 95, 97, 98], "expand": [2, 69, 76], "datum": [2, 35], "variabl": [2, 52, 64, 75, 76, 82, 88], "That": [2, 14, 75, 84], "psi": [2, 14], "u_0": 2, "psi_x": 2, "psi_i": 2, "psi_z": 2, "convert": [2, 12, 14, 16, 21, 22, 23, 24, 25, 26, 28, 29, 30, 52, 53, 71, 74, 89], "equival": [2, 14, 15, 49, 52, 61, 64, 69, 79, 83, 85, 87, 88], "stage": [2, 35, 74, 75, 76, 78, 83, 87, 88, 89], "unclear": 2, "goal": [2, 91], "dial": [2, 3, 5, 6, 8, 19, 31, 32, 33, 72, 73, 74, 75, 76, 78, 79, 81, 83, 86, 87, 88, 89, 94, 100], "vectori": 2, "mean": [2, 10, 15, 36, 42, 45, 47, 51, 53, 60, 61, 64, 73, 75, 77, 78, 82, 83, 85, 86, 87, 88], "arbitrarili": 2, "appropri": [2, 7, 11, 12, 14, 15, 23, 40, 43, 53, 60, 61, 64, 75, 76, 77, 80, 82, 84, 85, 88, 89], "nevertheless": [2, 78, 82], "adopt": 2, "meaning": 2, "comparison": [2, 11, 24, 37, 38, 39, 53, 64, 82, 84], "commun": [2, 75, 96], "what": [2, 14, 23, 73, 75, 77, 78, 79, 83, 86, 87, 88, 98], "incompat": 2, "argu": [2, 85], "standardis": 2, "choos": [2, 18, 38, 44, 53, 60, 61, 64, 73, 74, 75, 78, 82, 83, 87, 88, 90], "cif": [2, 40, 44, 62, 64, 71, 73, 77], "imgcif": [2, 21, 23, 25, 29], "horizont": 2, "beamlin": [2, 4, 35, 44, 48, 79, 82, 83, 85, 86, 87, 88, 91, 96, 98], "vertic": [2, 54, 79], "ensur": [2, 14, 23, 26, 38, 40, 64, 75, 82, 83, 84, 87, 88, 89], "appear": [2, 29, 36, 45, 72, 74, 75, 77, 80, 83, 85, 87, 88], "viewer": [2, 74, 75, 76, 78, 79, 82, 83, 87, 88, 89], "confus": [2, 85], "user": [2, 4, 7, 11, 14, 36, 46, 47, 48, 54, 64, 79, 80, 81, 83, 84, 85, 87, 88, 91, 92], "Such": [2, 89], "decis": 2, "class": [2, 6, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 41, 45, 47, 51, 52, 54, 55, 58, 74, 75, 76, 83, 84, 86, 87], "freedom": [2, 53, 60, 61, 82], "geometri": [2, 3, 4, 11, 33, 44, 52, 53, 60, 61, 75, 76, 78, 81, 82, 83, 87, 88, 89, 96, 97, 99], "ub": [2, 75, 82, 83, 86, 87, 89, 96], "rub": 2, "wrt": 2, "diffract": [2, 3, 11, 21, 35, 37, 42, 44, 45, 47, 51, 53, 54, 60, 64, 70, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 87, 88, 96, 97, 98, 99], "direct": [2, 3, 4, 11, 21, 23, 25, 34, 38, 44, 52, 53, 60, 61, 70, 74, 75, 77, 78, 79, 83, 85, 87, 88, 93], "": [2, 4, 6, 14, 18, 35, 43, 49, 51, 53, 54, 60, 61, 64, 71, 73, 74, 75, 77, 79, 82, 83, 84, 85, 87, 88, 89, 96], "along": [2, 11, 23, 33, 34, 40, 52, 53, 75, 76, 78, 82, 85], "impact": [2, 14, 74, 89], "sensor": [2, 23], "reflect": [2, 4, 6, 10, 11, 12, 14, 15, 16, 17, 18, 31, 33, 35, 37, 38, 40, 41, 43, 44, 46, 47, 51, 53, 54, 56, 58, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 99], "pixel": [2, 3, 16, 23, 31, 36, 41, 42, 45, 47, 50, 51, 52, 53, 54, 59, 60, 61, 63, 74, 75, 79, 80, 82, 83, 86, 87, 88, 91, 97, 98], "origin": [2, 3, 4, 23, 38, 46, 52, 53, 65, 67, 73, 75, 76, 77, 79, 80, 83, 84, 87, 88, 95], "develop": [2, 4, 7, 8, 47, 91, 95, 96, 98, 99], "sinc": [2, 11, 35, 53, 54, 83, 87, 88, 89], "concern": [2, 79], "intern": [2, 26, 60, 64, 73, 77], "represent": [2, 15, 18, 52, 85], "oper": [2, 4, 14, 18, 24, 37, 39, 40, 46, 47, 48, 61, 62, 74, 75, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89], "wa": [2, 7, 14, 15, 47, 53, 60, 61, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89], "introduc": [2, 76, 77], "repres": [2, 12, 40, 44, 52, 82, 83, 87, 88], "motor": 2, "mount": [2, 35], "floor": 2, "etc": [2, 18, 33, 60, 71, 77, 80, 85, 89, 97], "composit": 2, "_1": [2, 35], "circ": 2, "_2": 2, "_3": 2, "cdot": [2, 35], "gonimomet": 2, "record": [2, 4, 14, 15, 44, 53, 60, 61, 74, 75, 77, 78, 79, 80, 82, 83, 84, 86, 87, 89], "angular": [2, 11, 18, 53, 60, 61, 82, 83, 87], "displac": [2, 11], "magnitud": [2, 35, 63, 64, 79], "_i": [2, 35], "prior": [2, 11, 54, 75, 83, 87, 88, 89, 93], "handl": [2, 16, 23, 24, 25, 29, 33, 75, 76, 77, 84, 85, 86, 99], "scan": [2, 3, 4, 6, 14, 16, 17, 24, 25, 26, 27, 32, 38, 41, 44, 47, 48, 49, 51, 52, 53, 54, 57, 58, 60, 61, 64, 66, 67, 69, 70, 73, 74, 75, 77, 82, 83, 84, 86, 87, 88, 89, 94, 98], "_n": 2, "_": [2, 22, 35], "constant": [2, 14, 53, 54, 60, 61, 76, 89], "throughout": [2, 82, 85], "thei": [2, 9, 11, 14, 16, 18, 38, 46, 47, 53, 54, 60, 61, 74, 75, 76, 77, 79, 82, 83, 87, 88, 98], "whose": [2, 47, 50, 51, 53, 54, 60, 61], "befor": [2, 7, 23, 35, 37, 38, 41, 53, 54, 60, 61, 64, 69, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 92], "apparatu": [2, 4], "circl": [2, 47, 50, 51, 74, 77, 83, 87], "\u03ba": 2, "arrang": [2, 82, 85], "\u03c9": 2, "\u03c6": [2, 83, 87, 88], "hold": 2, "explor": [2, 75, 79, 83, 85, 88, 96], "region": [2, 11, 16, 46, 47, 56, 75, 76, 78, 82, 85, 88], "_\u03c9": 2, "_\u03ba": 2, "_\u03c6": 2, "\ud835\udfd9": 2, "bernstein": [2, 40, 85, 96], "int": [2, 11, 12, 14, 15, 16, 18, 23, 24, 25, 26, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "crystallogr": [2, 76, 96], "199": [2, 74, 82, 83, 85, 86, 87], "205": [2, 74, 77, 79, 82, 83, 85, 87], "iucr": 2, "2006": [2, 18, 70], "buse": 2, "levi": 2, "rai": [2, 22, 33, 35, 52, 74, 75, 79, 83, 87, 91, 95, 96, 98], "neutron": [2, 52], "22": [2, 3, 74, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 96, 97], "457": [2, 82, 83, 85, 87], "464": [2, 83, 87], "1967": 2, "giacovazzo": 2, "fundament": [2, 14], "oxford": 2, "press": [2, 79, 88], "toolbox": [2, 96], "reusabl": 2, "appl": [2, 11, 40, 65, 80, 85, 96], "hammerslei": 2, "westbrook": 2, "444": [2, 77, 83, 84, 87], "458": [2, 82, 83, 87], "paciorek": 2, "meyer": 2, "chapui": 2, "On": [2, 49, 75, 76, 78, 84, 88], "modern": 2, "sect": 2, "found": [2, 4, 6, 11, 16, 40, 47, 48, 49, 52, 53, 64, 74, 75, 76, 79, 80, 82, 83, 84, 85, 86, 87, 88, 96, 97], "55": [2, 74, 75, 79, 82, 83, 84, 86, 87, 89], "543": [2, 83, 85, 87], "557": [2, 82, 83, 87], "1999": [2, 53, 54, 60, 61, 85, 87, 96], "atom": [2, 64, 77, 85], "bibliograph": 2, "entri": [2, 78], "brookhaven": 2, "natl": [2, 96], "1992": [2, 96], "rupp": 2, "write": [3, 7, 33, 40, 44, 46, 47, 53, 60, 61, 71, 75, 78, 79, 82, 83, 84, 85, 86, 87, 88, 97], "store": [3, 4, 14, 18, 48, 57, 75, 76], "summaris": [3, 75, 97], "plu": [3, 14, 15, 30, 83, 87, 88], "option": [3, 4, 6, 7, 15, 18, 33, 34, 38, 39, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 73, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 97], "input": [3, 6, 7, 11, 14, 15, 16, 18, 29, 30, 31, 33, 36, 37, 38, 40, 41, 44, 46, 47, 51, 52, 53, 54, 55, 57, 60, 61, 62, 64, 65, 67, 70, 71, 73, 74, 77, 82, 83, 84, 85, 86, 87, 88, 89, 97], "find_spot": [3, 16, 48, 49, 53, 68, 72, 74, 75, 76, 77, 79, 82, 83, 84, 86, 87, 88, 89, 97], "profile_model": [3, 4, 19, 32], "json": [3, 11, 18, 24, 30, 34, 36, 38, 40, 43, 44, 52, 54, 60, 63, 64, 68, 69, 70, 71, 76, 77, 83, 85, 87, 97], "ascii": [3, 75, 88], "being": [3, 6, 12, 14, 18, 25, 42, 53, 55, 60, 61, 64, 74, 75, 77, 79, 82, 83, 84, 85, 87, 88, 89, 94, 95], "human": 3, "readabl": 3, "edit": [3, 36, 74, 82, 84, 88], "locat": [3, 18, 33, 50, 53, 60, 61, 84, 85, 87, 88], "ani": [3, 7, 11, 14, 15, 18, 24, 33, 38, 40, 44, 47, 49, 52, 53, 60, 61, 62, 64, 67, 73, 75, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94], "imageset": [3, 6, 16, 24, 27, 30, 32, 36, 45, 47, 53, 54, 55, 74, 75, 83, 84, 86, 87, 88, 94], "goniomet": [3, 4, 6, 24, 26, 27, 32, 34, 35, 38, 52, 53, 60, 61, 75, 76, 79, 83, 84, 87, 94, 96], "encod": 3, "share": [3, 10, 12, 14, 23, 24, 25, 26, 38, 60, 64, 73, 84, 94], "short": [3, 44, 49, 78, 82, 84], "shown": [3, 4, 7, 52, 64, 74, 83, 84, 85, 87, 88], "__id__": 3, "experimentlist": [3, 4, 11, 14, 16, 24, 27, 33, 84], "imagesequ": [3, 26, 27], "templat": [3, 21, 22, 23, 24, 25, 26, 29, 33, 52, 76, 80, 83, 84, 87, 88, 94], "centroid_": 3, "cbf": [3, 4, 21, 23, 25, 33, 45, 47, 48, 49, 51, 52, 55, 66, 76, 80, 82, 83, 84, 86, 87, 89, 94, 97], "007852057721998333": 3, "772524827250213e": 3, "14": [3, 40, 74, 75, 77, 82, 83, 84, 85, 87, 96], "9999691721195861": 3, "polarization_norm": [3, 21, 38, 52], "diverg": [3, 21, 41, 51, 52, 54, 58, 75, 83, 86, 87, 88], "polarization_fract": [3, 21, 38, 52], "999": [3, 21, 83, 85, 87, 88], "sigma_diverg": [3, 21, 52], "058": [3, 74, 85], "wavelength": [3, 6, 18, 21, 22, 33, 38, 44, 52, 53, 60, 61, 64, 73, 74, 75, 76, 80, 83, 85, 86, 87, 89], "9795": 3, "panel": [3, 14, 23, 38, 45, 46, 47, 50, 51, 52, 53, 54, 55, 59, 60, 61, 74, 75, 76, 77, 82, 83, 87, 88], "211": [3, 83, 86, 87], "53596470096178": 3, "219": [3, 74, 83, 85, 87], "45303890619488": 3, "192": [3, 74, 77, 83, 85, 87], "7062494437063": 3, "fast_axi": [3, 23, 38, 52, 76, 83, 87], "9999551354884303": 3, "0021159302715049923": 3, "009233084500921031": 3, "slow_axi": [3, 23, 38, 52, 76, 83, 87], "0021250002879257116": 3, "999997269169901": 3, "0009726389448611214": 3, "trusted_rang": [3, 23, 52, 83, 87], "495976": 3, "image_s": [3, 23, 52, 83, 87], "2463": [3, 83, 87], "2527": [3, 83, 87], "px_mm_strategi": 3, "parallaxcorrectedpxmmstrategi": [3, 83, 87], "sensor_unknown": 3, "pixel_s": [3, 23, 52, 75, 83, 87], "172": [3, 79, 83, 85, 87], "fixed_rot": [3, 25, 38, 52], "rotation_axi": [3, 25, 38], "5919306617286774e": 3, "16": [3, 40, 48, 59, 74, 75, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 96], "904199434387693e": 3, "exposure_tim": [3, 29], "epoch": [3, 29, 52], "1360324992": 3, "1360324993": 3, "1360324994": 3, "image_rang": [3, 15, 26, 29, 33, 52, 53, 65, 67, 74, 77], "9": [3, 11, 40, 45, 52, 53, 74, 75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 96], "real_space_a": [3, 22, 30], "23781811553089": 3, "600614003857873": 3, "077690418635804": 3, "real_space_b": [3, 22, 30], "657129890916668": 3, "4698317405529955": 3, "65693038892429": 3, "real_space_c": [3, 22, 30], "295803077552249": 3, "38": [3, 40, 74, 77, 79, 82, 83, 84, 85, 86, 87, 97], "99952334925477": 3, "972795822746061": 3, "space_group_hall_symbol": 3, "mosaic": [3, 22, 41, 51, 53, 54, 58, 75, 80, 83, 87, 97], "157": [3, 77, 83, 85, 87], "done": [3, 14, 15, 44, 46, 47, 53, 54, 57, 60, 61, 63, 69, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 94], "dxtbx": [3, 4, 9, 10, 11, 14, 32, 74, 76, 82, 83, 84, 86, 87, 96], "experiment_list": [3, 4, 11, 27, 30, 32, 33, 84], "from_fil": [3, 24, 84], "save": [3, 38, 40, 41, 47, 50, 52, 54, 58, 64, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 97], "messagepack": 3, "flag": [3, 6, 14, 15, 16, 44, 46, 53, 54, 60, 61, 66, 71, 73, 83, 84, 87], "bit": [3, 24, 75, 77], "mask": [3, 16, 23, 26, 31, 36, 46, 47, 50, 51, 52, 54, 76, 83, 87], "statu": [3, 80], "miller_index": 3, "enter": [3, 7, 14, 64, 75, 88], "exit": [3, 84], "s1": [3, 23, 41, 51, 54, 58], "xyzcal": 3, "mm": [3, 14, 23, 35, 47, 50, 51, 52, 53, 59, 60, 61, 75, 79, 82, 83, 84, 86, 87, 88, 96], "predict": [3, 11, 14, 16, 17, 40, 41, 44, 51, 53, 54, 60, 61, 72, 75, 76, 82, 83, 84, 85, 86, 87, 88], "rad": [3, 14, 53, 60, 61, 85], "px": [3, 47, 50, 51, 52, 74, 75, 79, 82, 83, 84, 86, 87], "frame": [3, 11, 12, 21, 22, 23, 25, 33, 34, 35, 44, 47, 48, 54, 64, 69, 70, 73, 76, 77, 83, 87, 88, 98], "ub_matrix": 3, "xyzob": [3, 14], "centroid": [3, 4, 11, 31, 41, 44, 47, 50, 51, 53, 54, 58, 60, 61, 67, 71, 79, 82, 83, 84, 86, 87, 88], "millimetr": [3, 75], "rlp": [3, 44], "raw": [3, 9, 44, 45, 47, 48, 55, 66, 74, 76, 83, 87, 88], "prf": [3, 40, 54, 75, 82, 83, 85, 86, 87], "fit": [3, 12, 35, 41, 43, 51, 54, 58, 61, 64, 71, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 93], "without": [3, 7, 33, 77, 79, 82, 84, 88, 89, 93, 94], "inverse_scale_factor": [3, 15], "divisori": 3, "inverse_scale_factor_vari": 3, "lp": [3, 83, 87, 88], "qe": 3, "quantum": 3, "correl": [3, 14, 18, 37, 40, 53, 60, 61, 62, 71, 73, 75, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89], "bbox": [3, 12], "bound": [3, 11, 12, 18, 47, 50, 51, 53, 54, 67], "box": [3, 12, 47, 53, 74, 75, 88], "shoebox": [3, 10, 16, 38, 41, 47, 51, 54, 58, 64, 75, 83, 87, 88, 89], "background": [3, 19, 31, 32, 41, 47, 51, 54, 59, 75, 79, 83, 86, 87, 88, 96], "struct": [3, 76, 96], "look": [3, 4, 47, 52, 53, 60, 61, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 98], "array_famili": [3, 4, 11, 84], "flex": [3, 4, 11, 14, 15, 84], "reflection_t": [3, 4, 11, 12, 15, 16, 33, 84], "extern": [4, 14, 16, 63, 75, 88], "libtbx_refresh": 4, "py": [4, 9, 74, 76, 84], "io": [4, 83, 85, 87, 91], "subprocess": 4, "sy": [4, 84], "pathlib": 4, "libtbx": [4, 6, 11, 15, 18, 84], "pkg_util": 4, "pkg_resourc": 4, "except": [4, 11, 33, 47, 53, 60, 61, 75, 76], "modulenotfounderror": 4, "script": [4, 6, 7, 9, 33, 38, 77, 84], "out": [4, 7, 9, 14, 22, 33, 38, 44, 46, 47, 50, 51, 53, 60, 61, 74, 75, 76, 79, 82, 83, 84, 85, 87, 88, 93], "them": [4, 16, 25, 38, 46, 60, 74, 75, 76, 77, 79, 82, 83, 84, 87, 88, 94, 97], "_src_path_root": 4, "str": [4, 6, 11, 15, 18, 21, 22, 24, 25, 26, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 64, 65, 67, 69, 70, 71, 73], "env": [4, 84], "dist_path": 4, "joinpath": 4, "src": [4, 33], "insert": 4, "configur": [4, 9, 14, 15, 21, 23, 33, 48, 53, 60, 61, 64, 71, 80, 82, 83, 84, 85, 87, 89], "attempt": [4, 24, 34, 35, 53, 64, 77, 84, 89, 97], "implement": [4, 14, 15, 16, 18, 23, 26, 31, 40, 41, 51, 54, 58, 70, 79, 85, 91, 96], "regist": 4, "refresh": 4, "style": [4, 53, 73], "setup": [4, 14, 33, 92], "setuptool": 4, "list": [4, 7, 11, 12, 14, 15, 16, 18, 24, 25, 26, 29, 30, 31, 33, 35, 38, 44, 47, 50, 52, 53, 54, 56, 60, 61, 64, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 91, 93, 94, 95, 97], "instal": [4, 8, 32, 33, 48, 72, 74, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89], "plugin": 4, "basis_vector_search_strategi": 4, "fft1d": [4, 11, 53, 83, 84, 87, 97], "basis_vector_search": [4, 19], "fft3d": [4, 11, 53, 88], "real_space_grid_search": [4, 11, 53, 88, 97], "scaling_model_ext": 4, "gaussian_r": [4, 31, 41, 51, 54, 58], "gaussian_rs_profile_model_ext": [4, 31], "lattice_search_strategi": 4, "low_res_spot_match": [4, 53], "now": [4, 6, 33, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 94], "discov": [4, 82], "instead": [4, 43, 64, 75, 78, 79, 84, 88], "runtim": [4, 76], "directori": [4, 7, 9, 24, 29, 30, 44, 45, 52, 57, 61, 74, 75, 76, 77, 80, 83, 84, 85, 89, 92, 94], "install_format": [4, 74], "add": [4, 9, 10, 12, 14, 15, 29, 33, 44, 47, 53, 74, 77, 83, 87, 88, 92, 97], "distribut": [4, 18, 53, 60, 61, 66, 76, 77, 83, 87, 88, 93, 97], "pleas": [4, 9, 64, 73, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91], "submit": [4, 84, 96], "pull": [4, 88], "request": [4, 14, 26, 43, 48, 53, 60, 61, 79, 82, 91], "repositori": [4, 9, 53, 60, 61, 76], "whenev": 4, "staff": 4, "essenc": 4, "associ": [4, 11, 14, 15, 53, 60, 61, 69, 84, 94, 96], "thing": [4, 6, 42, 74, 82, 84, 85, 98], "take": [4, 15, 17, 18, 38, 40, 46, 48, 52, 53, 54, 58, 60, 61, 64, 70, 75, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 94, 96], "overrid": [4, 14, 18, 41, 43, 45, 47, 51, 52, 53, 54, 58, 60, 61, 67, 73, 76, 82, 84], "construct": [4, 11, 14, 16, 21, 23, 25, 29, 30, 75, 76], "kei": [4, 6, 14, 18, 48, 77, 83, 84, 87, 88], "decid": [4, 77], "custom": [4, 64], "serial": [4, 15, 24, 27, 32, 53, 60, 61, 75, 84, 91, 96, 97, 98], "ideal": [4, 33, 75, 78, 89, 94], "your": [4, 7, 9, 35, 48, 74, 77, 78, 80, 83, 84, 85, 87, 88, 89, 94], "inherit": [4, 14], "just": [4, 11, 14, 23, 25, 53, 64, 74, 75, 79, 82, 83, 84, 86, 87, 88, 97, 98], "longest": 4, "chain": [4, 78], "ancestor": 4, "claim": [4, 75], "built": 4, "factori": [4, 14, 16, 21, 23, 25, 26, 28, 29, 33, 82], "trivial": [4, 79], "complex": [4, 7, 21, 23, 38, 83, 88], "hopefulli": [4, 84], "correspond": [4, 6, 11, 14, 33, 36, 53, 54, 74, 75, 78, 79, 83, 84, 85, 87, 88], "let": [4, 74, 75, 77, 79, 82, 83, 84, 85, 87, 88], "pretend": 4, "revers": [4, 11, 25, 44, 79], "correctli": [4, 7, 37, 40, 75, 89], "instanti": [4, 24], "__future__": [4, 6], "absolute_import": 4, "divis": 4, "print_funct": 4, "formatcbfminipilatu": [4, 83, 84], "formatcbfminipilatusmybeamlin": 4, "mini": 4, "pilatu": [4, 48, 79, 82, 83, 87, 88], "mybeamlin": 4, "staticmethod": 4, "def": [4, 6, 84], "image_fil": 4, "header": [4, 9, 23, 26, 29, 52, 74, 75, 78, 79, 84, 86], "get_cbf_head": 4, "split": [4, 12, 14, 24, 38, 47, 51, 53, 54, 60, 61, 64, 67, 78, 79, 82, 83, 84, 86, 87, 89, 94, 97], "42": [4, 53, 60, 61, 65, 73, 77, 79, 82, 83, 84, 85, 86, 87, 88, 97], "4242": 4, "_goniomet": 4, "self": [4, 6, 12], "_goniometer_factori": 4, "single_axis_revers": [4, 25], "local": [4, 7, 45, 47, 53, 63, 75, 88, 92], "myproject": 4, "define_entry_point": 4, "my_format_modul": 4, "formatmyclass": 4, "formatbaseclass1": 4, "formatbaseclass2": 4, "myformat": 4, "top": [4, 12, 74, 75, 79], "view": [4, 40, 47, 51, 75, 76, 78, 79, 83, 87, 88, 89, 96, 98], "hierarchi": [4, 23, 52, 53, 60, 61, 76, 82], "show_registri": 4, "show": [4, 22, 31, 33, 40, 45, 47, 51, 56, 72, 74, 75, 76, 77, 79, 82, 83, 84, 85, 87, 88, 89, 97], "registri": 4, "root": [4, 53, 60, 61, 75], "subclass": [4, 14, 15], "indent": [4, 18, 33], "formatbruk": 4, "formatbrukerfixedchi": 4, "formatbrukerphotonii": 4, "deleg": [4, 14], "find_basis_vector": [4, 11], "mystrategy_phil_str": 4, "magic_paramet": 4, "magic": 4, "float": [4, 10, 11, 15, 18, 21, 22, 23, 25, 33, 35, 37, 38, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 69, 70, 71, 73], "phil_scop": [4, 6, 11, 15, 84], "pars": [4, 6, 33], "mystrategi": 4, "my": 4, "reciprocal_lattice_vector": [4, 11], "arg": [4, 11, 14, 24, 33], "scitbx": [4, 6, 10, 11, 12, 14, 18, 22, 23, 24, 25, 26, 40, 73], "vec3_doubl": [4, 11, 25], "period": [4, 11, 83, 87, 88], "tupl": [4, 11, 14, 15, 16, 18, 21, 22, 23, 25, 26, 33, 53, 60, 61, 84], "bool": [4, 10, 11, 12, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 37, 38, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73], "identifi": [4, 11, 23, 24, 26, 33, 40, 42, 47, 52, 53, 54, 56, 60, 61, 64, 66, 70, 73, 77, 79, 83, 84, 85, 87, 88, 89], "were": [4, 11, 14, 38, 48, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89], "used_in_index": 4, "candidate_basis_vector": 4, "entir": [4, 47, 74, 78, 89], "mylatticesearch": 4, "find_crystal_model": [4, 11], "candid": [4, 11, 53, 83, 84, 87, 88], "spot": [4, 11, 16, 35, 41, 42, 44, 45, 47, 49, 50, 51, 53, 54, 58, 59, 60, 61, 65, 68, 78, 80, 82, 84, 86, 94, 97], "candidate_crystal_model": 4, "scalingmodelbas": [4, 15], "from_dict": [4, 15, 21, 22, 23, 24, 25, 28, 29, 31], "from_data": [4, 15], "configure_compon": [4, 15], "__init__": [4, 6, 10, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 30, 31, 33], "consecutive_refinement_ord": [4, 15], "consecut": [4, 15, 52, 55, 64], "mode": [4, 15, 18, 33, 34, 40, 52, 53, 60, 61, 62, 64, 73, 75, 76, 77, 83, 84, 87, 88], "compos": [4, 14, 15, 25, 53, 60, 61, 89], "scale_compon": 4, "scalecomponentbas": 4, "mypath": 4, "specialcompon": 4, "mymodel_phil_str": 4, "special_correct": 4, "toggl": [4, 77, 83, 87], "myscalingmodel": 4, "id_": [4, 15], "modelnam": 4, "parameters_dict": [4, 15], "configdict": [4, 15], "is_scal": [4, 15], "super": 4, "_compon": 4, "parameter_esd": 4, "classmethod": [4, 14, 15, 22, 31, 33], "cl": 4, "obj": [4, 15, 24, 28], "dictionari": [4, 15, 18, 21, 22, 23, 24, 25, 28, 29, 30, 44], "configuration_paramet": 4, "doubl": [4, 10, 14, 22, 23, 25, 82, 92], "est_standard_dev": 4, "param": [4, 6, 11, 12, 14, 15, 16, 18, 21, 22, 23, 25, 26, 29, 30, 31, 33, 54, 84], "mycalingmodel": 4, "append": [4, 11, 14, 24, 44], "important_numb": 4, "len": [4, 6, 76, 84], "requir": [4, 7, 11, 14, 15, 18, 44, 52, 53, 54, 60, 61, 63, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 98], "nest": [4, 15, 46], "extend": [5, 11, 24, 33, 41, 51, 54, 58, 73, 79, 82, 83, 87, 88, 95], "demonstr": [6, 77, 78, 88, 98], "load": [6, 16, 24, 26, 30, 32, 33, 48, 51, 64, 77, 80, 83, 84, 85, 87, 88], "s0": [6, 21, 23, 43], "col": 6, "get_s0": 6, "print": [6, 7, 12, 14, 18, 33, 46, 47, 57, 61, 66, 75, 79, 83, 84, 87, 88], "\u00e5": [6, 21, 74, 75, 77, 83, 85, 87, 88, 96], "jiggeri": 6, "pokeri": 6, "cope": [6, 98], "interpret": [6, 47, 64, 74, 75, 76, 77, 79, 97], "annot": 6, "util": [6, 12, 14, 32, 35, 38, 48, 72, 84], "show_mail_handle_error": 6, "help_messag": 6, "pass": [6, 7, 14, 18, 23, 44, 45, 46, 49, 51, 52, 64, 75, 77, 78, 82, 83, 84, 85, 86, 87, 89], "png": [6, 11, 45, 57, 68, 69, 71, 77, 82, 84], "process_includ": 6, "usag": [6, 7, 64, 73, 84, 89], "experiment_data": 6, "parser": [6, 33], "argumentpars": [6, 32, 33], "epilog": [6, 33], "check_format": [6, 24, 26, 30, 33, 84], "read_experi": [6, 33], "read_reflect": [6, 33], "parse_arg": [6, 33], "show_diff_phil": [6, 33], "flatten_experi": [6, 32, 33], "flatten_reflect": [6, 32, 33], "print_help": 6, "get_flag": 6, "kept": [6, 53, 60, 61, 76, 77, 82], "sort": [6, 33, 54, 79, 84, 85, 87], "verifi": [6, 24], "exactli": [6, 23, 75, 79, 82], "obvious": 6, "assert": [6, 52], "next": [6, 40, 75, 77, 83, 85, 86, 87, 88], "quantiti": 6, "get_wavelength": 6, "ident": [6, 40, 61, 77, 83, 87, 89, 94], "get_angle_from_array_index": 6, "get_array_rang": [6, 26], "get_rotation_axis_datum": [6, 25], "sqr": 6, "get_fixed_rot": [6, 25], "get_setting_rot": [6, 25], "axis_and_angle_as_r3_rotation_matrix": 6, "deg": [6, 14, 21, 22, 23, 25, 29, 40, 82, 83, 84, 85, 86, 87, 88, 97], "__name__": [6, 84], "__main__": [6, 84], "download": [7, 48, 72, 74, 75, 76, 79, 83, 86, 87, 88, 92], "latest": [7, 14, 80], "releas": 7, "site": [7, 76, 91], "linux": [7, 24, 75, 80, 82, 84], "mac": 7, "intend": [7, 35, 44, 49, 53, 60], "toolkit": [7, 38, 79, 84, 95, 96], "stabl": [7, 89], "window": [7, 74, 76, 79, 88, 92], "somewhat": [7, 84], "wiki": [7, 9, 18], "prepar": [7, 14, 64, 74, 77, 80, 84, 89], "compress": [7, 44, 45, 79], "archiv": [7, 76, 79], "onc": [7, 40, 47, 52, 74, 75, 77, 82, 83, 86, 87, 88, 89], "unpack": [7, 76], "tar": [7, 48, 76, 77, 79, 86, 87, 88, 89, 92], "xjf": [7, 92], "major": [7, 54, 75, 79, 84, 85, 88], "minor": [7, 78], "patch": 7, "x86_64": [7, 92], "xz": [7, 44, 77, 92], "substitut": [7, 93], "version": [7, 14, 35, 44, 48, 49, 76, 80, 82, 85, 88], "usr": [7, 92], "permiss": [7, 54, 93], "cd": [7, 9, 33, 48, 74, 75, 77, 80, 82, 84, 85, 92, 96], "home": [7, 76], "prefix": [7, 12, 44, 45, 47, 53, 60, 61, 84, 92], "put": [7, 53, 75, 79], "suit": [7, 48], "achiev": [7, 14, 35, 53, 56, 60, 61, 82, 89], "bash": [7, 75, 76, 77, 84], "dials_env": [7, 92], "sh": [7, 75, 92], "csh": [7, 48], "bourn": 7, "produc": [7, 38, 44, 53, 54, 60, 61, 67, 75, 76, 78, 79, 82, 83, 84, 85, 87, 88, 97], "everyth": [7, 21, 23, 25, 75, 77], "properli": [7, 75, 76, 78, 79, 84, 85], "messag": [7, 33], "argument": [7, 14, 15, 26, 31, 33, 52, 53, 65, 67], "displai": [7, 38, 40, 45, 48, 51, 59, 73, 76, 78, 83, 87, 88], "expert_level": [7, 38, 40, 41, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 70, 71, 73, 83, 87], "e2": [7, 57, 63], "string": [7, 12, 14, 33, 43, 47, 49, 53, 54, 60, 61, 64, 69, 70, 71, 73], "increas": [7, 14, 53, 64, 73, 74, 82, 83, 84, 87, 88, 97, 98], "attributes_level": 7, "a2": [7, 18, 97], "apart": [7, 82, 83, 87, 88], "switch": [7, 18, 59, 77, 82, 84, 86], "though": [7, 74, 75, 77, 82, 83, 84, 85, 87, 89], "less": [7, 18, 40, 47, 50, 51, 54, 61, 64, 70, 73, 74, 75, 78, 79, 82, 83, 84, 87, 88, 89], "frequent": 7, "clarif": 7, "index_assign": [7, 53], "sai": [7, 53, 60, 61, 79, 84, 88], "myparam": 7, "readi": [7, 44, 76, 84, 88], "convent": [8, 22, 52, 53, 62, 65, 67, 78, 83, 89], "librari": [8, 30, 74, 84], "prerequisit": 9, "Then": [9, 14, 53, 60, 61, 76, 77, 83, 87, 88, 92, 97], "bootstrap": [9, 84], "wget": [9, 48, 92], "http": [9, 18, 35, 47, 48, 53, 60, 61, 74, 76, 83, 89, 92], "githubusercont": [9, 48, 74, 76], "com": [9, 41, 48, 51, 54, 58, 74, 76, 80], "curl": [9, 48, 76, 92], "explan": 9, "step": [9, 14, 18, 40, 44, 45, 53, 54, 60, 61, 64, 71, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 98], "updat": [9, 14, 15, 33, 44, 53, 60, 64, 82, 83, 84, 86, 87, 88, 99], "conda_bas": 9, "compil": [9, 48, 92], "subsequ": [9, 15, 76, 78, 82, 83, 85, 87, 88, 89], "login": 9, "session": [9, 98], "sure": [9, 73, 74, 75, 78, 79, 88], "dispatch": 9, "libgl": 9, "glu": 9, "khr": 9, "instruct": [9, 44, 75, 79, 88, 92, 94, 96], "privat": [9, 14], "dials_regress": 9, "histor": [9, 98], "svn": 9, "cci": [9, 48], "server": [9, 49, 72], "replac": [9, 24, 38, 52, 74, 75, 76, 78, 84], "usernam": 9, "checkout": 9, "ssh": 9, "lbl": [9, 48], "gov": [9, 35, 48], "trunk": 9, "scratch": [9, 80, 84, 87], "prefer": [9, 18, 40, 47, 61, 70, 73, 75, 77, 82, 83, 84, 85, 87, 88], "guid": [9, 64], "github": [9, 76, 83, 85, 87, 91, 92], "handi": 9, "radialaverag": [10, 19], "instanc": [10, 12, 14, 16, 23, 24, 25, 26, 29, 33, 77, 79], "arg1": [10, 12, 14, 22, 23, 24, 25, 26], "beambas": [10, 24, 26], "arg2": [10, 12, 22, 23, 24, 25, 26], "arg3": [10, 12, 23, 24, 25, 26], "arg4": [10, 12, 25, 26], "arg5": [10, 12, 25], "arg6": [10, 25], "signatur": [10, 12, 14, 22, 23, 24, 25, 26], "void": [10, 12, 14, 22, 23, 24, 25, 26], "_object": [10, 12, 14, 22, 23, 24, 25, 26], "std": [10, 22, 23, 24, 25, 26, 40, 64, 73, 80, 85], "shared_ptr": [10, 24, 26], "unsign": [10, 12, 14, 24, 25, 26], "long": [10, 12, 14, 24, 25, 26, 64, 75, 78, 83, 87, 88, 89], "lvalu": [10, 12, 22, 23, 24, 25, 26], "af": [10, 12, 14, 23, 24, 25, 26], "const_ref": [10, 12, 25, 26], "c_grid": 10, "2ul": [10, 12, 26], "inv_d2": 10, "weight": [10, 11, 14, 15, 18, 40, 53, 60, 61, 64, 73, 82, 83, 84, 87], "set_shoebox_background_valu": [10, 19], "ref": [10, 43, 73], "trivial_accessor": [10, 12, 25, 26], "dialsindexerror": [11, 19], "runtimeerror": 11, "dialsindexrefineerror": [11, 19], "export_as_json": 11, "file_nam": [11, 48], "indexed_experi": 11, "export_reflect": 11, "pickl": [11, 16, 24, 38, 47, 51, 76], "find_lattic": 11, "find_max_cel": 11, "static": [11, 12, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 31, 41, 44, 51, 53, 54, 57, 58, 60, 61, 63, 74, 75, 82, 83, 84, 88, 89], "from_paramet": [11, 16], "known_crystal_model": 11, "index_reflect": 11, "setup_index": 11, "show_experi": 11, "apply_hkl_offset": 11, "offset": [11, 15, 23, 52, 53, 64, 65, 75, 79, 82, 83, 87], "stillsindex": 11, "choose_best_orientation_matrix": 11, "candidate_orientation_matric": 11, "experiment_list_for_cryst": 11, "identify_outli": 11, "stillsindexerbasisvectorsearch": 11, "basisvectorsearch": 11, "stillsindexerknownorient": 11, "known_orient": [11, 84], "indexerknownorient": 11, "stillsindexerlatticesearch": 11, "latticesearch": 11, "calc_2d_rmsd_and_displac": 11, "e_refin": 11, "graph_verbos": 11, "plot_displac": 11, "kwarg": [11, 14, 16, 24, 31, 33], "strategi": [11, 14, 16, 47, 53, 60, 61, 83, 87, 96], "search": [11, 29, 37, 38, 53, 60, 61, 65, 75, 78, 79, 84, 86, 97], "1d": [11, 53, 83, 87, 88], "fft": [11, 53, 75, 83, 84, 87, 88], "dimensionless": 11, "radial": [11, 47], "7000": 11, "total": [11, 14, 47, 49, 75, 77, 80, 82, 83, 84, 85, 87, 88, 89], "roughli": [11, 43], "evenli": 11, "solid": 11, "hemispher": 11, "onto": [11, 78, 79], "scalar": 11, "linear": [11, 14, 35, 53, 54, 64, 83, 84, 87, 88], "densiti": [11, 18, 35, 53, 78], "aggreg": 11, "shortest": 11, "non": [11, 14, 53, 60, 61, 73, 85], "collinear": 11, "wave": 11, "greatest": [11, 82], "spectral": 11, "steller": [11, 53], "rossmann": 11, "1997": [11, 53, 82, 87], "30": [11, 45, 53, 67, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 98], "1036": [11, 74, 83], "1040": [11, 77], "2004": [11, 35, 65, 85], "37": [11, 53, 65, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87], "399": [11, 65, 77, 83, 84, 85, 86, 87, 96], "409": [11, 65, 74, 82, 83, 86, 87], "maximum": [11, 15, 16, 17, 18, 38, 40, 41, 43, 44, 46, 47, 51, 52, 53, 54, 59, 60, 61, 64, 65, 73, 77, 83, 85, 87, 88, 89], "dimens": [11, 14, 18, 23, 40, 53, 60, 61, 64, 73, 75, 77, 83, 84, 85, 87, 88], "primit": [11, 53, 61, 74, 78, 79, 83, 87, 88, 89], "characteristic_grid": [11, 53], "frequenc": [11, 53], "radian": [11, 53, 54], "029": [11, 53, 80, 85, 89], "phil_help": 11, "lower": [11, 18, 53, 54, 60, 61, 64, 74, 82, 83, 85, 87, 88], "narrow": [11, 47, 51, 53, 84, 88], "scope": [11, 12, 15, 33, 37, 53], "min_cel": [11, 53], "ascrib": 11, "assign": [11, 22, 53, 73, 78, 83, 84, 85, 87, 88, 89], "spatial": 11, "appreci": 11, "procedur": [11, 40, 75, 83, 84, 85, 87, 88], "mitig": 11, "sometim": [11, 52, 74, 83, 87], "curtail": 11, "certain": [11, 35, 38, 53, 54, 60, 61, 64, 73, 74, 85, 89], "ignor": [11, 26, 33, 52, 53, 58, 60, 61, 78, 85], "1986": [11, 87, 98], "eec": 11, "cooper": 11, "phase": [11, 74, 78], "iii": 11, "28": [11, 74, 79, 82, 83, 84, 85, 86, 87, 88, 96], "pari": 11, "lure": 11, "campbel": 11, "1998": [11, 84], "31": [11, 35, 74, 75, 77, 82, 83, 84, 85, 86, 87, 96], "407": [11, 83, 87], "413": [11, 74, 83, 87], "n_point": [11, 53], "limit": [11, 14, 37, 40, 41, 43, 46, 47, 49, 50, 51, 53, 54, 55, 58, 64, 66, 68, 73, 74, 75, 76, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 93, 96, 98], "b_iso": [11, 53], "isotrop": [11, 18, 40, 78, 85], "b_factor": 11, "math": 11, "05": [11, 14, 21, 40, 41, 51, 53, 54, 58, 70, 75, 76, 77, 82, 83, 84, 85, 86, 87, 89, 97], "rmsd_cutoff": [11, 53, 60, 61], "rmsd": [11, 14, 53, 60, 61, 64, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 97], "map": [11, 18, 42, 45, 47, 50, 51, 63, 66, 77, 78, 79, 83, 87, 88], "peak": [11, 47, 51, 75, 83, 86, 87, 88, 95], "peak_volume_cutoff": [11, 53], "larger": [11, 53, 54, 56, 60, 61, 79, 85], "volum": [11, 41, 43, 51, 53, 54, 58, 60, 61, 73, 74, 75, 77, 78, 79, 83, 84, 85, 86, 87, 88, 89, 98], "largest": [11, 14, 38, 40, 85], "conserv": 11, "minimum": [11, 14, 17, 18, 40, 41, 43, 44, 46, 47, 51, 53, 54, 58, 59, 60, 61, 64, 73, 77, 83, 86, 87], "quit": [11, 21, 44, 53, 74, 75, 76, 79, 85], "realspacegridsearch": 11, "target_unit_cel": 11, "known": [11, 25, 47, 53, 65, 75, 78, 79, 82, 83, 87, 88, 97], "difficult": [11, 53, 75, 79, 82, 84, 85, 88], "especi": [11, 53, 74, 85, 87, 88], "accord": [11, 14, 18, 42, 46, 47, 77], "well": [11, 29, 44, 57, 63, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 87, 88], "reconstruct": 11, "observ": [11, 14, 16, 18, 35, 40, 41, 44, 53, 60, 61, 63, 66, 67, 70, 75, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89], "examin": [11, 38, 54, 74], "orient": [11, 35, 39, 41, 51, 53, 54, 57, 58, 60, 61, 63, 73, 74, 76, 82, 83, 87, 88, 89, 96, 97, 98], "nearli": [11, 14, 79, 82], "shorter": [11, 21, 75], "elimin": [11, 69, 77], "axford": [11, 84, 96], "sutton": [11, 96], "stuart": [11, 96, 98], "2014": [11, 40, 85, 96, 100], "d70": 11, "2652": [11, 96], "2666": [11, 82], "compute_funct": [11, 18], "until": [11, 14, 53, 60, 61, 74, 78, 79, 82, 83, 87, 88], "match": [11, 14, 18, 29, 33, 38, 48, 53, 60, 61, 67, 75, 82, 83, 84, 87, 88, 89], "score_vector": 11, "search_direct": 11, "length": [11, 14, 18, 33, 35, 53, 74, 78, 82, 87], "search_vector": 11, "basis_vector": 11, "max_combin": [11, 53], "filter_known_symmetri": 11, "crystal_model": [11, 22], "target_symmetri": 11, "relative_length_toler": [11, 18, 40, 53, 70], "absolute_angle_toler": [11, 18, 40, 53, 70], "max_delta": [11, 53], "filter": [11, 12, 14, 15, 16, 18, 38, 40, 41, 44, 45, 46, 47, 48, 50, 51, 53, 54, 58, 64, 71, 73, 75, 76, 83, 85, 86, 87, 88], "toler": [11, 18, 38, 41, 44, 51, 53, 54, 58, 64, 73, 76, 84, 89], "le": [11, 18, 53, 79], "page": [11, 18, 48, 53, 74, 75, 79, 80], "delta": [11, 14, 18, 40, 41, 51, 53, 54, 58, 64, 73, 74, 79, 83, 85, 86, 87, 88, 97], "filter_similar_orient": 11, "other_crystal_model": 11, "minimum_angular_separ": [11, 53], "optimis": [11, 64, 65, 73, 74, 75, 79, 83, 85, 87, 88], "basisvectorminimis": 11, "reciprocal_lattice_point": 11, "lbfgs_termination_param": 11, "lbfgs_core_param": 11, "lbfg": [11, 14, 18, 64, 83, 85, 87], "core_paramet": 11, "compute_functional_and_gradi": [11, 14, 18], "basisvectortarget": 11, "optimise_basis_vector": 11, "lowresspotmatch": 11, "target_symmetry_primit": 11, "max_lattic": [11, 53, 86, 97], "solut": [11, 14, 40, 53, 64, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89], "assess": [11, 48, 74, 75, 77, 83, 84, 85, 87, 88, 97], "against": [11, 15, 18, 47, 60, 64, 71, 77, 78, 82, 83, 84, 87, 89, 90], "electron": [11, 21, 47, 52, 53, 74, 75, 76, 91, 96, 98], "collect": [11, 15, 49, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97, 98], "laue": [11, 18, 40, 70, 73, 74, 77, 83, 85, 86, 87, 95], "zone": [11, 58, 75], "principl": [11, 21, 34], "good": [11, 38, 64, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 93], "stop": [11, 15, 41, 47, 49, 51, 54, 58, 64, 70, 73, 75, 76, 83, 85, 87], "shadow": [11, 45, 47, 51, 52, 58, 82], "primarili": [11, 44, 53, 83, 87, 88], "extract": [11, 16, 33, 79, 83, 84, 86, 87, 88], "modelevalu": 11, "refinement_param": 11, "evalu": [11, 14, 15, 46, 77, 96], "modelrank": 11, "item": [11, 16, 33, 53, 54, 60, 61, 75, 83, 86, 87], "best_model": 11, "modelrankfilt": 11, "check_doubled_cel": [11, 53], "likelihood_cutoff": [11, 53], "volume_cutoff": [11, 53], "n_indexed_cutoff": [11, 53], "filter_by_likelihood": 11, "filter_by_n_index": 11, "filter_by_volum": 11, "update_analysi": 11, "modelrankweight": 11, "power": [11, 53, 77, 83, 87], "volume_weight": [11, 53], "n_indexed_weight": [11, 53], "rmsd_weight": [11, 53], "combined_scor": 11, "score_by_fraction_index": 11, "score_by_rmsd_xi": 11, "score_by_volum": 11, "model_likelihood": 11, "n_index": 11, "fraction_index": 11, "hkl_offset": [11, 62, 79], "alia": [11, 12, 15, 33, 64], "filter_doubled_cel": 11, "max_cell_multipli": 11, "step_siz": [11, 53], "45": [11, 53, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 89], "nearest_neighbor_percentil": [11, 53], "histogram_bin": [11, 53], "nn_per_bin": [11, 53], "max_height_fract": [11, 53], "filter_ic": [11, 53], "filter_overlap": [11, 53], "overlaps_bord": [11, 53], "nearest_neighbor": 11, "neighboranalysi": 11, "percentil": [11, 53], "plot_histogram": 11, "filenam": [11, 14, 16, 18, 24, 26, 29, 30, 33, 36, 38, 41, 44, 46, 47, 50, 52, 53, 54, 58, 60, 61, 62, 64, 67, 69, 70, 71, 75, 77, 84, 88, 97], "nn_hist": 11, "figsiz": 11, "12": [11, 40, 74, 75, 77, 79, 82, 83, 84, 85, 86, 87, 89], "assign_indic": 11, "assignindicesglob": 11, "assignindicesstrategi": 11, "assignindicesloc": 11, "epsilon": [11, 18, 53], "l_min": [11, 53], "nearest_neighbour": [11, 53], "20": [11, 14, 16, 38, 40, 41, 46, 47, 48, 51, 53, 54, 58, 60, 61, 64, 67, 73, 74, 75, 76, 79, 80, 82, 83, 84, 85, 86, 87], "compare_orientation_matric": [11, 72], "difference_rotation_matrix_axis_angl": 11, "crystal_a": 11, "crystal_b": 11, "target_angl": 11, "rotation_matrix_differ": 11, "miller_indic": 11, "pairwis": [11, 39, 77], "symmetryhandl": 11, "space_group": [11, 18, 22, 30, 33, 34, 39, 40, 43, 45, 46, 47, 50, 51, 53, 62, 70, 73, 74, 75, 78, 82, 83, 84, 86, 87, 89, 97], "apply_symmetri": 11, "cb_op": [11, 18, 61, 74, 75, 78, 79, 83, 86, 87], "sgtbx": [11, 18, 22, 24, 53], "change_of_basis_op": [11, 18, 24, 62, 70, 75, 78, 83, 87], "calc_acentric_subgroup": 11, "group_info": 11, "space_group_info": 11, "bravais_t": 11, "find_matching_symmetri": 11, "target_space_group": 11, "best_monoclinic_beta": [11, 18, 40, 61, 70, 73, 75, 83], "target_bravais_str": 11, "groups_cach": 11, "fn": 11, "metric_supergroup": 11, "executor": [12, 19], "boost_python": 12, "executorwrapp": 12, "fit_profil": 12, "profile_validation_report": 12, "profile_model_report": 12, "profile_fitt": 12, "block_siz": [12, 67, 83, 87], "block_size_unit": 12, "stuff": [12, 33], "integrator2d": [12, 19], "processorclass": 12, "processor2d": [12, 19], "finalize_reflect": 12, "post": [12, 83, 87, 88, 91, 96], "initialize_reflect": 12, "integrator3d": [12, 19], "processor3d": [12, 19], "integrator3dthread": [12, 19], "finalis": [12, 14], "initialis": [12, 14, 15, 16, 17, 18, 31, 33, 83, 85, 87], "integratorexecutor": [12, 19], "valid_foreground_threshold": [12, 54], "75": [12, 45, 54, 74, 79, 80, 82, 83, 85, 86, 87, 96], "frame0": 12, "frame1": 12, "job": [12, 16, 47, 53, 54, 60, 61, 64, 75, 82, 83, 84, 87, 88], "last": [12, 14, 53, 60, 61, 75, 84, 85], "integratorflat3d": [12, 19], "flatten": [12, 18, 33], "processorflat3d": [12, 19], "integratorsingle2d": [12, 19], "processorsingle2d": [12, 19], "integratorstil": [12, 19], "processorstil": [12, 19], "joblist": [12, 19], "tiny_int_2": 12, "tini": [12, 26], "shoebox_memori": 12, "size_t": [12, 15, 16, 24, 26], "stack": 12, "valid": [12, 14, 15, 26, 33, 48, 49, 53, 54, 60, 61, 64, 85, 86], "from_phil": [12, 21, 23, 25, 29], "_processorrot": 12, "processor": [12, 14, 16, 48, 54, 73, 83, 84, 87, 88], "flat": [12, 35, 47, 75, 83, 87, 88], "_processor": 12, "profilemodellerexecutor": [12, 19], "profilevalidatorexecutor": [12, 19], "reflectionmanag": [12, 14, 19], "finish": [12, 33, 64, 83, 87, 88], "num_reflect": 12, "frame_hist": [12, 19], "width": [12, 14, 15, 18, 38, 46, 47, 50, 51, 53, 60, 61, 67, 76, 82, 83, 87, 88], "80": [12, 33, 74, 79, 80, 82, 83, 85, 86, 87, 88], "histogram": [12, 53, 75, 77, 83, 86, 87], "generate_phil_scop": [12, 16, 19], "hist": [12, 19], "charact": [12, 51, 52], "nframes_hist": [12, 19], "princip": [14, 40, 77, 85], "reflection_manag": 14, "blockcalcul": [14, 19], "block": [14, 24, 53, 54, 60, 61, 64, 67, 77, 82, 83, 84, 87, 88, 94], "block_centr": 14, "centr": [14, 18, 23, 37, 41, 47, 51, 52, 53, 54, 57, 58, 59, 60, 61, 65, 75, 76, 77, 81, 83, 87, 88, 95, 98], "per_imag": [14, 68], "per_width": 14, "nref_per_degre": 14, "max_sample_s": 14, "min_sample_s": 14, "close_to_spindle_cutoff": [14, 53, 60, 61, 82], "scan_margin": [14, 53, 60, 61], "outlier_detector": 14, "weighting_strategy_overrid": 14, "maintain": [14, 48], "random": [14, 38, 53, 54, 60, 61, 64, 65, 73, 82, 85], "experiment_typ": 14, "filter_ob": 14, "sel": 14, "criteria": [14, 43, 46, 77, 83, 85, 87], "analysi": [14, 18, 37, 40, 49, 53, 56, 60, 61, 64, 70, 73, 78, 79, 81, 82, 86, 88, 89, 91, 96, 97, 98], "centroidanalysi": 14, "get_accepted_refs_s": 14, "inclus": [14, 40, 46, 47, 53, 54, 60, 61, 64, 70, 73, 75], "potenti": [14, 53, 60, 61, 62, 73, 74, 77, 83, 87], "get_centroid_analys": 14, "debug": [14, 44, 53, 54, 57, 60, 82, 83, 87, 88], "get_free_reflect": 14, "get_index": 14, "get_match": 14, "everi": [14, 38, 47, 51, 53, 54, 55, 60, 61, 64, 70, 73, 77, 82, 83, 84, 87, 88], "get_ob": 14, "get_sample_s": 14, "print_stats_on_match": 14, "reset_accepted_reflect": 14, "reset": [14, 64, 74], "reflectionmanagerfactori": [14, 19], "from_parameters_reflections_experi": 14, "do_stil": 14, "stillsreflectionmanag": [14, 19], "overload": [14, 75, 80, 82, 83, 85, 86, 87], "too": [14, 40, 53, 60, 61, 75, 79, 82, 83, 84, 85, 87, 88], "spindl": [14, 53, 60, 61, 82, 83, 87, 88], "delpsi": 14, "residu": [14, 53, 60, 61, 77, 82, 83, 87, 88], "scheme": [14, 64, 83, 87, 88], "weighting_strategi": [14, 53, 60, 61], "constantweightingstrategi": [14, 19], "wx": 14, "wy": 14, "wz": 14, "calculate_weight": 14, "z": [14, 18, 21, 22, 23, 25, 33, 40, 43, 62, 64, 74, 77, 79, 83, 85, 87, 88, 91], "delpsic": 14, "attribut": [14, 15, 33], "otherwis": [14, 21, 46, 47, 50, 51, 53, 60, 61, 65, 75, 76, 82, 83, 87, 88, 93], "externaldelpsiweightingstrategi": [14, 19], "statisticalweightingstrategi": [14, 19], "deltapsi": 14, "var": 14, "stillsweightingstrategi": [14, 19], "delpsi_const": [14, 53, 60, 61], "1000000": [14, 23, 53, 59, 60, 61], "refinerfactori": [14, 19], "pred_param": 14, "param_report": 14, "refman": 14, "refineri": [14, 19, 53, 60, 61, 64], "get_experi": 14, "get_param_report": 14, "parameter_correlation_plot": 14, "selection_used_for_refin": 14, "predict_for_reflection_t": 14, "predict_for_index": 14, "note": [14, 35, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92, 97], "histori": [14, 53, 60, 61, 85, 86, 88], "accessor": 14, "expos": 14, "mandatori": 14, "predictionparameteris": 14, "parameterreport": 14, "calc_exp_rmsd_t": 14, "link": [14, 66, 89], "get_parameter_correlation_matrix": 14, "col_select": [14, 60, 71], "jacobian": [14, 53, 60, 61], "engin": [14, 18, 40, 44, 53, 60, 61, 64, 73], "addition": [14, 83, 85, 87], "used_in_refin": [14, 46], "expens": [14, 88], "skip_deriv": 14, "suppli": [14, 52, 53, 54, 60, 61, 64, 76], "print_exp_rmsd_t": 14, "print_out_of_sample_rmsd_t": 14, "rsmd": [14, 84], "track": [14, 53, 60, 61, 77, 79, 83, 87, 88], "print_panel_rmsd_t": 14, "print_step_t": 14, "rmsds_for_reflection_t": 14, "unweight": 14, "config_refineri": 14, "constraints_manag": 14, "could": [14, 29, 53, 60, 61, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94], "config_restraint": 14, "restraint": [14, 53, 60, 61, 64, 75, 76, 84, 89], "predictionparamet": 14, "config_spars": 14, "spars": [14, 18, 40, 53, 60, 61, 82, 96, 97], "datatyp": 14, "config_target": 14, "predictor": [14, 17], "restraints_param": 14, "do_spars": 14, "from_parameters_data_experi": 14, "reflections_after_outlier_reject": 14, "scanvaryingrefin": [14, 19], "levenbergmarquardtiter": [14, 19], "gaussnewtoniter": [14, 19], "simplelbfg": [14, 19, 53, 60, 61, 64], "lbfgscurv": [14, 19, 53, 60, 61], "concret": 14, "adaptlbfg": [14, 19], "adapt": [14, 76, 95], "bfg": [14, 18], "minimis": [14, 18, 39, 53, 60, 61, 64, 73, 83, 85, 87, 88, 90], "callback_after_step": [14, 18, 83, 85, 87], "minim": [14, 18, 40, 73, 77, 83, 85, 87, 96, 97], "reach": [14, 53, 60, 61, 98], "termin": [14, 18, 53, 60, 61, 64, 80, 82, 92], "compute_functional_gradients_and_curvatur": [14, 18], "run_lbfg": 14, "curvatur": [14, 18, 40, 73], "adaptlstbx": [14, 19], "prediction_parameteris": 14, "max_iter": [14, 18, 40, 53, 60, 61, 64, 73], "non_linear_l": 14, "non_linear_ls_mixin": 14, "lstbx": 14, "n_paramet": [14, 83, 85, 87], "n_equat": 14, "opposite_of_grad_object": 14, "normal_matrix": 14, "versa": 14, "packed_u_accessor": 14, "build_up": 14, "objective_onli": 14, "calculate_esd": 14, "esd": [14, 89], "parameter_vector_norm": 14, "restart": 14, "set_cholesky_factor": 14, "choleski": 14, "dens": 14, "step_backward": 14, "step_forward": 14, "disablempmixin": [14, 19], "mixin": 14, "multiprocess": [14, 24, 53, 54, 60, 61, 83, 87], "set_nproc": 14, "kwd": 14, "gauss": 14, "newton": 14, "convergence_as_shift_over_esd": 14, "1e": [14, 18, 23, 24, 25, 38, 41, 44, 51, 54, 58, 64], "damping_valu": 14, "0007": 14, "gradient_threshold": 14, "max_shift_over_esd": 14, "15": [14, 40, 53, 54, 59, 64, 74, 77, 82, 83, 84, 85, 86, 87], "preced": 14, "prepare_for_step": 14, "update_journ": 14, "test_for_termin": 14, "step_threshold": 14, "dict": [14, 15, 18, 21, 23, 24, 25, 26, 33], "extra": [14, 30, 48, 53, 60, 61, 82, 88], "hidden": [14, 82], "eas": 14, "add_column": 14, "add_row": 14, "fail": [14, 53, 60, 61, 74, 75, 83, 84, 86, 87, 89, 94], "wrong": [14, 75, 79, 82, 83, 87], "del_last_row": 14, "delet": [14, 38, 54], "from_json_fil": [14, 24], "get_nrow": 14, "reason_for_termin": 14, "set_last_cel": 14, "to_json_fil": 14, "compute_functional_gradients_diag": [14, 18], "emploi": [14, 79], "levenberg": [14, 83, 85, 87], "marquadt": 14, "add_constant_to_diagon": 14, "mu": [14, 23, 35, 83, 87], "diagon": [14, 18, 78], "normal": [14, 21, 35, 38, 41, 51, 52, 53, 54, 58, 60, 61, 79, 80, 83, 87, 88], "report_progress": 14, "callback": 14, "loop": [14, 77, 84], "overridden": [14, 52], "possibli": [14, 18, 37, 77, 78], "setup_mu": 14, "tau": 14, "001": [14, 53, 60, 61, 74, 83, 85], "get_correlation_matrix_for_step": 14, "decompress": 14, "get_num_step": 14, "jacobian_condition_numb": 14, "condit": [14, 53, 60, 61, 70, 75, 93], "cond": 14, "inv": 14, "rectangular": 14, "moor": 14, "penros": 14, "pseudoinvers": 14, "norm": 14, "ratio": [14, 40, 77, 85], "smallest": [14, 53, 60, 61], "singular": 14, "sig_": 14, "sig_min": 14, "accur": [14, 47, 50, 51, 74, 79, 84, 89, 96, 98], "equat": [14, 40], "amplifi": 14, "larg": [14, 44, 51, 53, 60, 61, 64, 71, 73, 75, 76, 77, 82, 83, 85, 87, 88, 89, 90, 97, 98], "linearli": [14, 64], "detect": [14, 53, 60, 61, 74, 79, 83, 84, 85, 87, 98], "situat": [14, 75, 82, 83, 84, 87], "shift": [14, 53, 60, 61, 63, 79, 82, 83, 87, 88], "problemat": 14, "row": 14, "reduct": [14, 53, 78, 81, 83, 87, 88, 98], "linearis": 14, "issu": [14, 54, 75, 77, 78, 79, 83, 84, 85, 87, 88, 91, 94], "squar": [14, 53, 60, 61, 75, 83, 87, 88], "marquardt": [14, 83, 85, 87], "polici": 14, "dictat": 14, "control": [14, 38, 43, 44, 53, 54, 60, 61, 71, 75, 88, 90, 96, 98], "split_jacobian_into_block": 14, "test_objective_increasing_but_not_nref": 14, "caus": [14, 15, 75, 78, 79, 83, 87, 88, 93, 94], "stai": [14, 77], "bad": [14, 54, 75, 79, 80, 82, 83, 84, 85, 87, 88, 94], "sign": [14, 74, 83, 87, 88], "test_rmsd_converg": 14, "converg": [14, 41, 51, 54, 58, 64, 82], "leastsquarespositionalresidualwithrmsdcutoff": [14, 19], "restraints_parameteris": 14, "frac_binsize_cutoff": 14, "33333": 14, "absolute_cutoff": [14, 53, 60, 61], "gradient_calculation_blocks": [14, 53, 60, 61], "intris": 14, "criterion": [14, 53, 60, 61, 64, 83, 85, 87, 88], "leastsquarespositionalresidualwithrmsdcutoffspars": [14, 19], "sparsegradientsmixin": [14, 19], "gradient": [14, 18, 53, 60, 61], "formula": [14, 18, 83, 85, 87], "concaten": 14, "storag": 14, "queri": 14, "relev": [14, 43, 44, 83, 85, 87, 88], "With": [14, 35, 74, 75, 76, 77, 82, 84], "place": [14, 24, 34, 44, 52, 74, 76, 78, 82, 83, 87], "auxiliari": 14, "calculate_gradi": 14, "approxim": [14, 35, 37, 43, 64, 73, 75, 78, 82, 85], "side": [14, 58, 75, 82], "compute_residu": 14, "compute_residuals_and_gradi": 14, "compute_restraints_functional_gradients_and_curvatur": 14, "compute_restraints_residuals_and_gradi": 14, "dim": [14, 18], "get_num_match": 14, "get_num_matches_for_experi": 14, "iexp": [14, 85], "get_num_matches_for_panel": 14, "ipanel": 14, "predict_for_free_reflect": 14, "rmsd_name": 14, "rmsd_x": [14, 74, 75, 79, 82, 83, 84, 86, 87, 88], "rmsd_y": [14, 74, 75, 79, 82, 83, 84, 86, 87, 88], "rmsd_phi": [14, 82, 83, 84, 86, 87, 88], "rmsd_unit": 14, "rmsds_for_experi": 14, "rmsds_for_panel": 14, "caution": 14, "_rmsds_core": 14, "split_matches_into_block": 14, "concurr": [14, 64], "exce": [14, 52], "update_match": 14, "forc": [14, 16, 17, 38, 41, 44, 47, 51, 53, 54, 58, 60, 61, 74, 79, 83], "date": [14, 82], "targetfactori": [14, 19], "from_parameters_and_experi": 14, "target_stil": 14, "leastsquaresstillsresidualwithrmsdcutoff": [14, 19], "ewald": [14, 53, 60, 61, 75], "sphere": [14, 53, 60, 61, 75], "rmsd_deltapsi": 14, "leastsquaresstillsresidualwithrmsdcutoffspars": [14, 19], "datastructur": 15, "arrayscalingmodel": 15, "limit_image_rang": 15, "new_image_rang": 15, "modifi": [15, 40, 41, 47, 48, 50, 53, 65, 67, 74, 82, 83, 84, 85, 86, 87], "involv": [15, 35, 77], "plot_model_compon": 15, "plotli": 15, "dosedecai": 15, "exponenti": 15, "dataset": [15, 18, 33, 40, 44, 47, 53, 54, 60, 61, 62, 64, 70, 73, 75, 77, 78, 79, 82, 83, 85, 86, 87, 88, 90, 98], "fix_initial_paramet": 15, "dosedecayscalingmodel": 15, "get_shared_compon": 15, "dose_decai": [15, 64, 73], "kbscalingmodel": 15, "physicalscalingmodel": 15, "scaler": [15, 85], "cycl": [15, 41, 51, 53, 54, 58, 60, 64, 65, 73, 79, 82, 83, 85, 87, 88], "fixed_compon": 15, "previous": [15, 83, 85, 87], "load_error_model": 15, "error_param": 15, "n_param": 15, "record_intensity_combination_imid": 15, "set_error_model": 15, "set_scaling_model_as_sc": 15, "boolean": [15, 31, 46], "set_scaling_model_as_unsc": 15, "set_valid_image_rang": 15, "to_dict": [15, 22, 23, 24, 25], "model_param": 15, "calc_n_param_from_bin": 15, "value_min": [15, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 73], "value_max": [15, 40, 43, 44, 45, 46, 47, 52, 53, 54, 60, 61, 64, 70, 73], "n_bin": [15, 38, 47, 51, 54, 64, 73], "gaussian": [15, 31, 41, 47, 51, 54, 58, 83, 87, 88], "smoother": [15, 53, 60, 61, 74, 76, 88], "calculate_new_offset": 15, "current_image_0": 15, "new_image_0": 15, "new_norm_fac": 15, "n_old_param": 15, "n_new_param": 15, "determine_auto_absorption_param": 15, "initialise_smooth_input": 15, "osc_rang": 15, "one_osc_width": 15, "norm_fac": 15, "make_combined_plot": 15, "plot_scaling_model": 15, "ih_tabl": 15, "reject_outli": 15, "determine_outlier_index_arrai": 15, "normdevoutlierreject": 15, "zmax": 15, "outlierrejectionbas": 15, "deviat": [15, 35, 40, 47, 53, 54, 61, 64, 71, 73, 75, 78, 80, 82, 83, 85, 86, 87, 94], "ihtabl": 15, "_do_outlier_reject": 15, "_outlier_indic": 15, "upon": [15, 77], "popul": [15, 26, 33, 85, 97], "final_outlier_arrai": 15, "simplenormdevoutlierreject": 15, "targetedoutlierreject": 15, "investig": [15, 75, 76, 78, 83, 84, 85, 87], "determine_esq_outlier_index_arrai": 15, "emax": [15, 43, 64, 73], "classifi": [15, 47], "ih": [15, 64, 83, 85, 87], "rejectiob": 15, "importantli": 15, "outlier_index_arrai": 15, "rais": [15, 52, 53, 60, 61], "valueerror": [15, 33], "invalid": [15, 50, 75, 83, 86, 87], "compar": [15, 37, 38, 44, 64, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 97], "outlier_in_sc": 15, "unscal": [15, 44, 76, 79, 83, 87, 88], "prefilt": 15, "finder": [16, 83, 87], "extractpixelsfromimag": [16, 19], "threshold_funct": 16, "region_of_interest": [16, 47], "max_strong_pixel_fract": [16, 47], "compute_mean_background": [16, 47], "extractpixelsfromimage2dnoshoebox": [16, 19], "min_spot_s": [16, 47, 49, 74, 76, 82, 83, 86, 87], "max_spot_s": [16, 47, 76], "filter_spot": 16, "extractspot": [16, 19], "mp_method": 16, "mp_nproc": 16, "mp_njob": 16, "mp_chunksiz": 16, "no_shoeboxes_2d": 16, "min_chunks": [16, 47], "write_hot_pixel_mask": 16, "extractspotsparalleltask": [16, 19], "execut": [16, 75, 84], "task": [16, 54, 77, 83, 84, 87, 88], "cluster": [16, 18, 38, 40, 47, 48, 54, 73, 83, 84, 85, 87, 97], "spotfind": [16, 19, 47, 48, 59, 76, 80, 83, 87, 96, 97], "mask_gener": 16, "scan_rang": [16, 47, 54], "write_hot_mask": [16, 47], "hot_mask_prefix": [16, 47], "hot_mask": [16, 47], "is_stil": 16, "advanc": [16, 81, 83, 84, 87, 88, 90, 98], "remap": 16, "stills_process": [16, 97], "pixel_list_to_reflection_t": [16, 19], "pixel_label": 16, "pixellistlabel": 16, "pixel_list_to_shoebox": [16, 19], "shoeboxes_to_reflection_t": [16, 19], "backgroundgradientfilt": [16, 19], "background_s": [16, 47], "gradient_cutoff": [16, 47], "filterrunn": [16, 19], "success": [16, 18, 74, 75, 76, 77, 83, 84, 87, 88, 97], "check_flag": 16, "re": [16, 34, 48, 61, 62, 73, 76, 77, 84, 85, 86], "equal": [16, 18, 35, 43, 47, 53, 54, 56, 60, 61, 64, 67, 73, 78, 85], "peakcentroiddistancefilt": [16, 19], "maxd": 16, "spotdensityfilt": [16, 19], "nbin": [16, 43, 64, 73], "002": [16, 46, 47, 50, 51, 85], "spotfinderfactori": [16, 19], "configure_filt": 16, "configure_threshold": 16, "load_imag": 16, "filename_or_data": 16, "reflection_predictor": 17, "reflectionpredictor": [17, 19], "dmin": [17, 75, 83, 84, 86, 87], "dmax": [17, 75, 83, 84, 86, 87], "margin": [17, 41, 51, 54, 78], "force_stat": [17, 41, 51, 53, 54, 58, 60, 61, 74, 76], "pad": [17, 23, 41, 45, 51, 54, 82], "proper": [17, 33, 74], "resolution_filter_from_arrai": [18, 19], "min_i_mean_over_sigma_mean": [18, 40, 70, 73], "min_cc_half": [18, 40, 70, 73], "resolution_filter_from_reflections_experi": [18, 19], "nativ": [18, 80, 82, 85, 86], "symmetry_bas": [18, 19], "ml_aniso": [18, 40, 70, 73], "lattice_symmetry_max_delta": [18, 40, 70, 73], "autotyp": 18, "kernel": [18, 40, 47, 51, 70, 73], "quasi": [18, 40, 70, 73, 85, 95], "ml_iso": [18, 40, 70, 73], "altogeth": 18, "1982": [18, 40, 85], "cc\u00bd": [18, 40, 43, 73, 74, 77, 83, 85, 87], "median": [18, 40, 44, 53, 60, 61, 64, 85], "monoclin": [18, 40, 61, 70, 73, 75, 83, 87, 88], "center": [18, 40, 61, 70, 73, 78, 83, 87], "i2": [18, 40, 61, 70, 73, 75, 83], "c2": [18, 40, 61, 70, 73, 75, 83, 87], "obliqu": [18, 40, 61, 70, 73], "smaller": [18, 40, 53, 55, 60, 61, 67, 70, 73, 74, 75], "kernel_normalis": 18, "ml_aniso_normalis": 18, "anisotrop": [18, 85], "likelihood": [18, 40, 41, 51, 54, 58, 70, 74, 77, 83, 85, 86, 87, 88], "ml_iso_normalis": 18, "laue_group": [18, 70, 73, 85], "correlationcoefficientaccumul": [18, 19], "increment": [18, 64, 75, 77], "coeffici": [18, 35, 37, 40, 61, 73, 79, 82, 83, 87, 88], "pearson": 18, "en": 18, "wikipedia": 18, "org": [18, 47, 48, 53, 60, 61, 76, 83, 89], "pearson_correlation_coeffici": 18, "for_a_sampl": 18, "denomin": 18, "lauegroupanalysi": [18, 19], "pointless": [18, 40, 44, 70, 76, 78, 85, 87], "d62": [18, 70], "72": [18, 40, 70, 74, 75, 80, 82, 83, 84, 85, 87, 88, 96], "82": [18, 70, 74, 79, 80, 82, 83, 85, 86, 87, 96], "2011": [18, 70, 80, 96], "d67": [18, 70, 80], "282": [18, 70, 74, 83, 87], "292": [18, 70, 74, 77, 82, 83, 85, 87], "as_dict": 18, "as_json": [18, 24], "pretti": [18, 79, 88], "scorecorrelationcoeffici": [18, 19], "cc": [18, 40, 43, 73, 74, 75, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89], "sigma_cc": 18, "expected_cc": 18, "lower_bound": 18, "upper_bound": 18, "p_cc_given_not_": 18, "sym": 18, "op": [18, 74, 78, 79, 80, 83, 86, 87, 89], "NOT": [18, 93], "p_cc_given_": 18, "cauchi": 18, "cc_true": 18, "p_s_given_cc": 18, "scoresubgroup": [18, 19], "subgroup": 18, "sym_op_scor": 18, "absent": [18, 40, 69, 73, 83, 85, 86, 87], "overal": [18, 40, 41, 44, 51, 53, 54, 58, 60, 61, 73, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 97], "zcc": [18, 40, 74, 77, 83, 85, 86, 87, 88], "appendix": 18, "lattice_symmetri": 18, "metric_subgroup": 18, "scoresymmetryel": [18, 19], "patterson_group": 18, "confid": [18, 37, 40, 74, 75, 77, 83, 85, 86, 87, 88], "z_cc_for": 18, "z_cc_against": 18, "z_cc_net": 18, "net": [18, 48, 80, 83, 88, 91], "cc_for": 18, "cc_against": 18, "max_angular_differ": 18, "symmetris": 18, "p1": [18, 22, 53, 74, 75, 77, 83, 87, 97], "sym_op": 18, "cc_sig_fac": 18, "analys": [18, 37, 40, 52, 53, 60, 61, 75, 83, 84, 85, 87, 88, 91], "presenc": [18, 40, 78, 85, 89, 96], "a1": [18, 83, 87], "rt_mx": 18, "z_cc": 18, "n_ref": 18, "xyz": 18, "trunccauchy_pdf": [18, 19], "loc": 18, "truncat": [18, 53, 54, 60, 61, 83, 85, 86, 87], "pdf": [18, 53, 57, 60, 61, 72], "upper": [18, 54, 64, 73, 88], "reindex": [18, 24, 40, 53, 61, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 89], "reindex_to_refer": 18, "determine_reindex_operator_against_refer": [18, 19], "test_miller_set": 18, "reference_miller_set": 18, "twin": [18, 62, 77, 80], "2018": [18, 40, 76, 80, 85, 96], "d74": [18, 40, 80, 85], "405": [18, 40, 82, 83, 84, 85, 87, 96], "410": [18, 40, 83, 85, 87, 96], "patterson": [18, 40, 74, 77, 83, 85, 86, 87, 88, 96], "ambigu": [18, 40, 62, 73, 77, 78, 85, 96], "cosymanalysi": [18, 19], "seed_dataset": 18, "subject": 18, "scope_extract": [18, 21], "seed": [18, 40, 53, 54, 60, 61, 65, 70, 73], "star": [18, 78], "symmetryanalysi": [18, 19], "coord": 18, "cb_op_inp_min": 18, "subgroups_t": 18, "summary_t": 18, "sym_ops_t": 18, "extract_reference_intens": [18, 19], "iotbx": 18, "lattice_id": 18, "min_pair": [18, 40, 73], "lattice_group": [18, 40, 70, 73], "np": 18, "ndarrai": 18, "count": [18, 40, 67, 73, 75, 77, 79, 83, 85, 86, 87, 88, 98], "standard_error": [18, 40, 73], "rij": [18, 40, 73], "w_": 18, "ij": 18, "www": [18, 48], "sjsu": 18, "edu": 18, "faculti": 18, "gerstman": 18, "statprim": 18, "greater": [18, 41, 47, 51, 54, 58, 64, 65, 79, 84, 97], "coordin": [18, 22, 23, 25, 47, 50, 51, 52, 59], "dimension": [18, 53, 83, 87], "compute_gradi": 18, "grad": 18, "respect": [18, 35, 39, 64, 77, 80, 85], "compute_gradients_fd": 18, "ep": [18, 53], "06": [18, 23, 24, 25, 40, 48, 64, 74, 75, 77, 82, 83, 84, 85, 86, 87], "finit": 18, "curv": [18, 43, 75, 79, 82], "curvatures_fd": 18, "set_dimens": 18, "lbfgs_with_curv": [18, 19], "use_curvatur": [18, 40, 73], "termination_param": 18, "termination_paramet": 18, "progress": [18, 33, 86, 95], "minimize_scipi": [18, 19], "max_cal": [18, 40, 73], "wrapper": 18, "scipi": [18, 40, 73], "minimize_scitbx_lbfg": [18, 19], "stills_index": 19, "lattice_search": 19, "model_evalu": 19, "max_cel": [19, 53, 65, 83, 87, 88], "outlier_reject": [19, 64, 73], "spot_find": [19, 32], "spot_predict": [19, 32], "cosym": [19, 32, 64, 72, 73, 74, 77, 85], "beamfactori": [21, 27], "encapsul": [21, 23, 25], "sample_to_sourc": 21, "polarization_plane_norm": 21, "constructor": [21, 33], "know": [21, 23, 25, 54, 73, 74, 75, 78, 83, 84, 85, 87, 88], "polychromaticbeam": 21, "cif_fil": [21, 23, 25, 29], "polar": [21, 38, 52, 83, 85, 87], "imgcif_h": [21, 23, 25, 29], "cbf_handl": [21, 23, 25, 29], "cbf_handle_struct": 21, "make_beam": 21, "unit_s0": 21, "make_polarized_beam": 21, "flux": [21, 52, 83, 87], "transmiss": [21, 52, 83, 87], "probe": [21, 52, 83, 87], "dxtbx_model_ext": 21, "xrai": 21, "make_polychromatic_beam": 21, "sample_to_source_dist": [21, 52], "unpolar": 21, "simple_direct": 21, "crystalbas": [22, 24], "api": [22, 24, 25, 26, 84], "vec3": [22, 23, 25], "space_group_symbol": 22, "__cxx11": [22, 23, 24, 25, 26], "basic_str": [22, 23, 24, 25, 26], "char": [22, 23, 24, 25, 26], "char_trait": [22, 23, 24, 25, 26], "alloc": [22, 23, 24, 25, 26, 54], "mat3": [22, 25], "as_str": 22, "show_scan_vari": [22, 66], "get_crystal_symmetri": 22, "assert_is_compatible_unit_cel": 22, "mosaiccrystalkabsch2010": [22, 27], "get_mosa": 22, "is_similar_to": [22, 23, 25], "angle_toler": 22, "01": [22, 35, 40, 54, 74, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 96, 97], "uc_rel_length_toler": 22, "uc_abs_angle_toler": 22, "mosaicity_toler": 22, "set_mosa": 22, "mosaiccrystalsauter2014": [22, 27], "get_a_as_sqr": 22, "get_a_inverse_as_sqr": 22, "get_domain_size_ang": 22, "get_half_mosaicity_deg": 22, "half_mosaicity_toler": 22, "domain_size_toler": 22, "set_domain_size_ang": 22, "domain_size_ang": 22, "set_half_mosaicity_deg": 22, "half_mosaicity_deg": 22, "crystalfactori": [22, 27], "from_mosflm_matrix": 22, "mosflm_a_matrix": 22, "ve": [22, 75, 77], "yd": 22, "spread": [22, 64, 77, 79, 80], "add_group": 23, "detectornod": 23, "node": [23, 88], "add_panel": 23, "imagedoubl": 23, "get_max_inscribed_resolut": 23, "get_max_resolut": 23, "get_nam": [23, 25], "std_string": [23, 24, 25], "get_panel_intersect": 23, "get_ray_intersect": 23, "vec2": 23, "has_projection_2d": 23, "fast_axis_toler": [23, 24], "slow_axis_toler": [23, 24], "origin_toler": [23, 24], "static_onli": 23, "ignore_trusted_rang": 23, "iter_levelord": 23, "breadth": 23, "iter_panel": 23, "iter_preord": 23, "rotate_around_origin": [23, 25], "detectorfactori": [23, 27], "littl": [23, 25, 74, 75, 76, 77, 82, 83, 87, 89], "easier": [23, 25, 75, 83, 87], "fast": [23, 33, 38, 47, 50, 51, 52, 53, 59, 60, 61, 74, 75, 76, 84, 87, 96], "px_mm": 23, "pedest": [23, 26, 52, 83, 87], "rigaku": 23, "saturn": 23, "generate_from_phil": 23, "make_detector": 23, "stype": 23, "thick": [23, 35, 52, 53, 54, 60, 61, 83, 87], "overwrite_from_phil": 23, "overwrit": [23, 25, 38, 52, 82, 85], "token": 23, "ccd": [23, 42, 79, 83, 87, 88], "image_pl": 23, "everywher": [23, 79], "beam_centr": [23, 59], "fast_direct": 23, "slow_direct": 23, "presum": [23, 75], "two_theta": [23, 73], "two_theta_direct": 23, "two_theta_angl": 23, "theta": [23, 89], "move": [23, 33, 53, 60, 61, 74, 78, 82, 84, 85, 87, 88], "merge_panel_scope_extracts_by_id": [23, 27], "panel_param": 23, "all_sequ": 24, "all_stil": 24, "as_fil": 24, "dump": [24, 32, 33], "uniqu": [24, 52, 53, 64, 73, 75, 77, 80, 83, 85, 86, 87, 88, 89], "change_basi": 24, "in_plac": 24, "empti": [24, 33, 48], "from_templ": [24, 26], "is_consist": 24, "nullify_all_single_file_reader_format_inst": 24, "hdf5": 24, "mess": [24, 54], "fork": [24, 95], "reopen": 24, "remove_on_experiment_identifi": 24, "scaling_model": 24, "select_on_experiment_identifi": 24, "beamcomparison": [24, 27], "wavelength_toler": [24, 33, 44, 73], "direction_toler": 24, "polarization_normal_toler": 24, "polarization_fraction_toler": 24, "detectorcomparison": [24, 27], "experimentlistfactori": [24, 27], "from_arg": 24, "unhandl": [24, 33, 52], "serialis": 24, "recognis": [24, 75, 79], "datablock": [24, 76], "metadata": [24, 33, 44, 52, 64, 74, 75, 76, 83, 87, 88, 97], "from_filenam": 24, "compare_beam": [24, 33], "compare_detector": [24, 33], "compare_goniomet": [24, 33], "scan_toler": [24, 33], "format_kwarg": [24, 26, 33], "load_model": [24, 33, 51], "from_imageset_and_cryst": 24, "from_json": 24, "from_pickle_fil": 24, "decod": 24, "from_sequence_and_cryst": 24, "from_serialized_format": 24, "from_stills_and_cryst": 24, "from_xd": 24, "xds_inp": [24, 30], "xds_other": 24, "goniometercomparison": [24, 27], "rotation_axis_toler": [24, 25], "fixed_rotation_toler": [24, 25], "setting_rotation_toler": [24, 25], "goniometerbas": 25, "fixed_rotation_matrix": 25, "setting_rotation_matrix": 25, "get_num_scan_point": 25, "get_rotation_axi": 25, "get_setting_rotation_at_scan_point": 25, "mat3_doubl": 25, "num_scan_point": 25, "reset_scan_point": 25, "set_fixed_rot": 25, "set_rotation_axi": 25, "set_rotation_axis_datum": 25, "set_setting_rot": 25, "set_setting_rotation_at_scan_point": 25, "goniometerfactori": [25, 27], "peachi": 25, "kappa": [25, 52], "scan_axi": [25, 52], "primari": [25, 33, 34, 75], "arm": 25, "attach": 25, "known_axi": 25, "noth": [25, 52, 75], "make_goniomet": 25, "make_kappa_goniomet": 25, "make_multi_axis_goniomet": 25, "multi_axi": 25, "multi_axis_goniometer_from_phil": 25, "single_axi": 25, "canon": 25, "single_axis_goniometer_from_phil": 25, "kappagoniomet": [25, 27], "kappadirect": 25, "kappascanaxi": 25, "scanaxi": 25, "arg7": 25, "get_alpha_angl": 25, "get_direct": 25, "get_kappa_angl": 25, "get_kappa_axi": 25, "get_omega_angl": 25, "get_omega_axi": 25, "get_phi_angl": 25, "get_phi_axi": 25, "get_scan_axi": 25, "multiaxisgoniomet": [25, 27], "get_angl": 25, "get_ax": 25, "set_angl": 25, "set_ax": 25, "externallookup": [26, 27], "dx": [26, 52, 53, 60, 61, 76], "dy": [26, 52, 53, 60, 61, 76], "externallookupitembool": [26, 27], "externallookupitemdoubl": [26, 27], "imagegrid": [26, 27], "imagesetdata": [26, 27], "grid_siz": [26, 41, 51, 52, 54, 58, 63, 82], "from_imageset": 26, "get_grid_s": 26, "complete_set": 26, "get_beam": [26, 30], "get_detector": [26, 30], "get_goniomet": [26, 30], "get_scan": [26, 30], "get_templ": [26, 30, 84], "partial_set": 26, "set_beam": 26, "set_detector": 26, "set_goniomet": 26, "set_scan": 26, "update_detector_px_mm_data": 26, "inject": [26, 96], "as_imageset": 26, "clear_cach": 26, "external_lookup": 26, "get_corrected_data": 26, "get_detectorbas": 26, "detectorbas": 26, "get_format_class": 26, "get_gain": 26, "get_image_identifi": 26, "get_mask": 26, "get_path": 26, "get_pedest": 26, "get_raw_data": 26, "get_spectrum": 26, "spectrum": 26, "get_vendortyp": 26, "vendor": 26, "has_dynamic_mask": 26, "is_marked_for_reject": 26, "mark_for_reject": 26, "masker": 26, "reader": [26, 32, 33, 72, 75, 79], "get_data": [26, 33], "imagebuff": 26, "get_master_path": 26, "get_param": 26, "get_vendor": 26, "has_single_file_read": 26, "goniometershadowmask": 26, "partial_data": 26, "set_format_class": 26, "set_param": 26, "set_templ": 26, "set_vendor": 26, "imagesetfactori": [26, 27], "check_head": 26, "imageset_from_anyset": 26, "make_imageset": 26, "format_class": 26, "single_file_indic": 26, "make_sequ": 26, "ignore_unknown": 26, "imagesetlazi": [26, 27], "lazi": 26, "doesn": 26, "necessit": 26, "ahead": [26, 75, 78, 79, 84], "derefer": 26, "pointer": 26, "_detector": 26, "member": 26, "memread": [26, 27], "is_single_file_read": 26, "master_path": 26, "profilemodelfactori": [27, 28], "scanfactori": [27, 29], "basic_imageset_from_dict": [27, 30], "basic_imageset_to_dict": [27, 30], "filename_or_non": [27, 30], "filename_to_absolut": [27, 30], "imagesequence_from_dict": [27, 30], "imagesequence_to_dict": [27, 30], "imageset_from_dict": [27, 30], "imageset_to_dict": [27, 30], "to_cryst": [27, 30], "to_imageset": [27, 30], "to_xd": [27, 30], "xds_detector_nam": [27, 30], "circumst": [29, 53, 60, 61, 94], "wrap": [29, 97, 98], "slightli": [29, 75, 82, 83, 84, 87, 88], "clumsi": 29, "idiomat": 29, "make_scan": 29, "batch_offset": [29, 33, 52], "impli": [29, 53, 60, 61, 64, 79, 83, 87, 88, 93], "henc": [29, 35, 83, 85], "single_fil": 29, "osc_start": 29, "osc_width": 29, "infil": 30, "xparm": [30, 33, 44], "input_filenam": 30, "extra_filenam": 30, "inp": [30, 44], "intgrat": 30, "xds_ascii": [30, 44], "content": [30, 33, 74, 75, 83, 84, 86, 87, 88], "space_group_numb": 30, "job_card": 30, "xycorr": 30, "init": [30, 33], "colspot": 30, "idxref": 30, "defpix": 30, "xparm_xd": 30, "dxtbx_name": 30, "translat": [30, 53, 60, 61, 78, 83, 85, 87], "xia2": [30, 72, 74, 81, 83, 87, 89, 96], "simple_background_ext": 31, "simplebackgroundext": [31, 32], "subtract": [31, 41, 54, 74, 79, 88], "compute_background": 31, "image_volum": 31, "null_background_ext": 31, "nullbackgroundext": [31, 32], "null": [31, 53, 54, 60, 61, 82, 84], "dispersion_spotfinder_threshold_ext": 31, "dispersionspotfinderthresholdext": [31, 32], "dispers": [31, 45, 47, 51, 76], "compute_threshold": 31, "arbitrari": 31, "keyword": 31, "foreground": [31, 54, 75, 83, 86, 87], "estimate_global_threshold": [31, 32], "simple_centroid_ext": 31, "simplecentroidext": [31, 32], "compute_centroid": 31, "gaussianrsprofilemodelext": [31, 32], "famili": 32, "progressbar": [32, 33], "progressbartim": [32, 33], "colour": [32, 33, 45, 63, 69, 83, 87, 88], "head": [32, 33], "madmergedmtzwrit": [32, 33], "mtzwriterbas": [32, 33], "mergedmtzwrit": [32, 33], "unmergedmtzwrit": [32, 33], "wavelengthgroup": [32, 33], "convert_to_cambridg": [32, 33], "export_mtz": [32, 33, 84], "match_wavelength": [32, 33], "rotate_cryst": [32, 33], "export_text": [32, 33], "get_inverse_ub_matrix_from_xparm": [32, 33], "get_space_group_type_from_xparm": [32, 33], "get_entri": [32, 33], "argumenthandlingerrorinfo": [32, 33], "argumentparserbas": [32, 33], "invalidphilerror": [32, 33], "optionpars": [32, 33], "philcommandpars": [32, 33], "reflections_and_experiments_from_fil": [32, 33], "command_lin": [33, 84], "nice": [33, 74, 75], "info": [33, 83, 84, 85, 87], "max_length": 33, "print_tim": 33, "titl": [33, 74, 85, 86], "spinner": 33, "bar": 33, "estimate_tim": 33, "fpercent": 33, "percentag": [33, 54, 64, 73], "timer": 33, "get_elapsed_tim": 33, "percent": [33, 78], "writer": 33, "add_dataset": 33, "merged_arrai": 33, "anom_arrai": 33, "amplitud": [33, 64, 78, 85, 86], "anom_amplitud": 33, "dano": [33, 85], "anom_multipl": 33, "suffix": [33, 40], "half_dataset": [33, 43, 73], "mergedhalfdataset": 33, "r_free_arrai": 33, "recent": [33, 80, 85, 91, 98], "imean": [33, 85, 86, 87], "helper": 33, "ad": [33, 60, 71, 74, 75, 77, 82, 83, 87, 95], "add_cryst": 33, "crystal_nam": [33, 44, 64], "project_nam": [33, 44, 64], "add_empty_dataset": 33, "add_batch_list": 33, "dataset_id": 33, "force_static_model": [33, 44], "write_column": 33, "AND": [33, 93], "min_wl": 33, "max_possible_wl": 33, "exp_no": 33, "weighted_mean": 33, "add_experi": 33, "loc_in_list": 33, "wl": 33, "calculate_weighted_mean": 33, "cambridg": [33, 100], "best_unit_cel": [33, 44, 64], "combine_parti": [33, 44], "min_isigi": [33, 44, 64, 83, 85, 87], "filter_ice_r": [33, 44], "0001": [33, 64, 73, 83], "hklout": [33, 44, 74, 76, 82, 84, 87, 89, 94], "absolute_toler": 33, "rmat": 33, "integrated_data": 33, "read_fil": 33, "colorama": 33, "ansitowin32": 33, "streamwrapp": 33, "base_package_opt": 33, "configure_modul": 33, "mmtbx": 33, "smtbx": 33, "cbflib": 33, "annlib_adaptbx": 33, "wxtbx": 33, "gltbx": 33, "dest_dir_prefix": 33, "include_gui_packag": 33, "installer_dir": 33, "dl": [33, 79, 80, 83, 87], "scisoft": [33, 80, 83], "build_dial": 33, "make_app": 33, "product_nam": 33, "product_specific_finalize_instal": 33, "cleanup": 33, "ons": 33, "remove_sources_default": 33, "source_packag": 33, "cctbx_bundl": 33, "annlib": 33, "ioutil": 33, "inverse_ub_matrix": 33, "tyoe": 33, "nexu": [33, 42, 44], "traceback": 33, "read_experiments_from_imag": 33, "sort_opt": 33, "formatter_class": 33, "argpars": 33, "rawdescriptionhelpformatt": 33, "diff_phil": 33, "diff": 33, "format_help": 33, "formatt": 33, "return_unhandl": 33, "ignore_unhandl": [33, 52], "quick_pars": 33, "system_phil": 33, "config_opt": 33, "format_epilog": 33, "parse_known_arg": 33, "verbos": [33, 48, 53, 60, 61, 83, 87, 97], "intellig": 33, "tri": [33, 47], "try_read_experi": 33, "try_read_experiments_from_imag": 33, "try_read_reflect": 33, "filename_object_list": 33, "renumb": 33, "clash": 33, "experiment_identifi": 33, "reflection_file_object_list": 33, "experiment_file_object_list": 33, "cusp": 34, "perpendicular": [34, 69, 77], "attenu": 35, "anvil": 35, "pressur": 35, "sandwich": 35, "plate": [35, 77, 83, 84, 87, 88], "passag": 35, "incid": [35, 53, 60, 61], "amount": [35, 41, 51, 54, 58, 64, 74, 85], "caption": 35, "3510": 35, "kg": 35, "cubic": 35, "metr": 35, "synthet": [35, 86], "allow_non": [35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "5925": 35, "i19": 35, "un": 35, "l_0": 35, "l_1": 35, "illustr": [35, 77, 98], "schemat": 35, "perfectli": 35, "hat": 35, "_0": 35, "lambda": 35, "l_i": 35, "alpha_i": 35, "exp": [35, 47, 54, 64, 70, 73, 74, 75, 79, 82, 83, 84, 86, 87], "rho": 35, "tabul": 35, "mass": [35, 41, 51, 54, 58, 83, 87], "carbon": 35, "collat": 35, "technologi": 35, "nist": 35, "recov": 35, "absenc": [35, 70, 73, 80, 83, 85, 87, 89], "multipli": [35, 41, 47, 51, 53, 54, 58, 60, 61], "subtli": 35, "contradict": 35, "anticip": [35, 83, 87], "signific": [35, 38, 43, 47, 54, 64, 73, 76, 82, 83, 84, 85, 87, 88], "hubbel": 35, "seltzer": 35, "onlin": [35, 75, 76], "xaamdi": 35, "2020": [35, 83, 85, 87, 96], "gaithersburg": 35, "md": 35, "augment": 36, "hand": 36, "crucial": 36, "pixels1": 36, "pixels2": 36, "belong": [37, 52, 78, 84], "misindex": [37, 53, 79], "pattern": [37, 74, 76, 78, 79, 82, 83, 84, 85, 87, 96, 98], "incorrect": [37, 53, 75, 78, 79, 89], "symop_threshold": 37, "grid_l": 37, "d_max": [37, 41, 46, 47, 50, 51, 54, 56, 64, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88], "grid_h": 37, "grid_k": 37, "asu": [37, 74], "normalise_bin": 37, "consid": [37, 41, 47, 50, 51, 54, 58, 75, 77, 78, 83, 85, 87, 89], "symm": [37, 74], "No": [38, 40, 83, 84, 85, 86, 87, 97], "repeat": [38, 47, 64, 74, 75, 76, 82, 84, 85, 88, 97], "experiments_0": [38, 40, 85, 89], "experiments_1": [38, 40, 82, 85, 89], "reflections_0": [38, 40, 85, 89], "reflections_1": [38, 40, 85, 89], "reference_from_experi": [38, 82, 84, 94], "average_detector": 38, "compare_model": [38, 84], "average_hierarchy_level": 38, "dendrogram": [38, 40, 73, 84], "1000": [38, 47, 53, 54, 60, 61, 74, 83, 84, 86, 87], "max_clust": [38, 73], "exclude_single_crystal_clust": 38, "experiments_filenam": [38, 67], "reflections_filenam": [38, 67], "n_subset": 38, "n_subset_method": 38, "n_refl": [38, 83, 85, 87], "significance_filt": [38, 54], "n_refl_panel_list": 38, "Not": [38, 45, 51, 52, 53, 60, 61], "compat": [38, 75, 79], "fall": [38, 47, 50, 51, 54, 75, 82, 83, 87], "hierarch": [38, 40, 53, 60, 61, 73, 82], "5e": [38, 89], "setting_rot": [38, 52], "03": [38, 40, 74, 77, 80, 82, 83, 85, 86, 87, 96, 97], "sig": [38, 40, 44, 83, 85, 86, 87], "max_batch_s": 38, "5500": 38, "917": [38, 74, 83], "916": [38, 83], "delete_shoebox": [38, 54], "comb": 38, "ining": 38, "min_reflections_per_experi": 38, "throw": [38, 47], "fewer": [38, 75, 97], "max_reflections_per_experi": 38, "sigi": [38, 43, 54, 64, 73, 75, 80, 82, 83, 85, 86, 87], "isigi_cutoff": [38, 54], "falloff": [38, 43, 54, 85], "past": [38, 54, 75, 82], "retain": [38, 44, 54, 77, 93], "euler": 39, "models_1": 39, "models_2": 39, "sequenti": [39, 75], "i23": 40, "unit_cell_clust": [40, 73], "5000": [40, 73, 74], "reference_model": [40, 62, 64], "min_reflect": [40, 64], "230": [40, 70, 83, 87], "_reindex": 40, "experiments_2": [40, 85, 89], "experiments_3": [40, 85, 89], "reflections_2": [40, 85, 89], "reflections_3": [40, 85, 89], "metric": [40, 43, 53, 61, 73, 74, 75, 78, 79, 83, 84, 85, 86, 87, 88], "aren": 40, "carri": [40, 83, 84, 87, 88], "forward": [40, 54, 77], "47": [40, 75, 76, 82, 83, 84, 85, 86, 87, 96], "346": [40, 74, 77, 83, 85, 87], "singleton": [40, 85], "cluster_id": [40, 85, 97], "n_xtal": [40, 85, 97], "med_a": [40, 85, 97], "med_b": [40, 85, 97], "med_c": [40, 85, 97], "med_alpha": [40, 85, 97], "med_beta": [40, 85, 97], "med_gamma": [40, 85, 97], "cluster_1": [40, 85, 97], "68": [40, 49, 74, 76, 79, 83, 85, 86, 87], "36": [40, 53, 60, 61, 74, 77, 82, 83, 84, 85, 86, 87], "103": [40, 74, 83, 85, 86, 87], "00": [40, 42, 50, 74, 75, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 97], "123": [40, 74, 79, 83, 85, 87], "bracket": [40, 85], "bravai": [40, 61, 75, 79, 85, 86], "niggli": [40, 85], "dev": [40, 53, 60, 61, 76, 80, 83, 85, 86, 87, 92], "lepag": [40, 85], "255": [40, 74, 76, 83, 85, 87], "3deg": [40, 85], "wilson": [40, 74, 80, 83, 85, 87], "ml": [40, 74, 83, 85, 87], "13": [40, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 97], "52": [40, 74, 79, 82, 83, 84, 85, 86, 87], "04": [40, 44, 74, 75, 77, 79, 80, 82, 83, 85, 86, 87, 89, 96, 97], "11": [40, 74, 75, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 96], "96": [40, 74, 77, 79, 82, 83, 85, 86, 87, 89, 97], "67": [40, 74, 79, 83, 85, 86, 87], "\u03c3": [40, 73, 83, 85, 87], "83": [40, 74, 79, 83, 85, 86, 87], "148639": [40, 85], "abl": [40, 83, 87, 88], "747": [40, 85], "8561": [40, 85], "5986": [40, 85], "9292": [40, 85], "3244": [40, 85], "8874": [40, 85], "2239": [40, 85], "8612": [40, 85], "fact": [40, 75, 76, 78, 79, 82, 84], "genuin": 40, "diederich": [40, 98], "2017": [40, 96], "933": [40, 83, 85], "69": [40, 74, 82, 83, 85, 86, 87, 88, 96], "97": [40, 74, 75, 77, 79, 80, 82, 83, 85, 86, 87, 88, 96], "934": [40, 83, 85], "932": [40, 74, 83, 85], "936": [40, 75, 83, 85], "73": [40, 74, 75, 82, 83, 84, 85, 87], "937": [40, 74, 83, 85, 86, 87], "74": [40, 75, 76, 79, 80, 82, 83, 85, 87, 96], "rank": 40, "sub": [40, 46, 53, 60, 61, 74, 77, 78, 83, 85, 86, 87, 88, 91], "netzcc": [40, 74, 77, 83, 85, 86, 87, 88], "71": [40, 74, 75, 80, 82, 83, 84, 85, 86, 87, 96], "3603": [40, 85], "953": [40, 74, 75, 85], "000": [40, 76, 77, 80, 82, 83, 85, 86, 87, 89], "conclud": [40, 78, 82, 83, 86, 87, 88], "hide": [40, 83, 85, 87], "1024": 74, "gad69d9734": [], "76079": [40, 85], "54367": [40, 85], "1127": [40, 85], "75607": [40, 85], "54845": [40, 85], "1284": [40, 83, 85, 87], "77983": [40, 85], "54461": [40, 85], "1404": [40, 83, 85, 87], "76468": [40, 85], "53877": [40, 85], "1062": [40, 83, 85], "explain": [40, 75, 77, 85], "0063": [40, 85], "0052": [40, 83, 85], "0044": [40, 75, 85], "0043": [40, 85], "004": [40, 41, 51, 54, 58, 74, 77, 85, 86], "0036": [40, 85, 87], "7e": [40, 85, 89], "23": [40, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87], "19": [40, 74, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 96], "00098": [40, 85], "short_capt": [40, 43, 47, 52, 53, 54, 60, 61, 64, 70, 73], "max": [40, 41, 46, 51, 52, 53, 54, 58, 64, 65, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 97], "\u03b4": [40, 73, 88], "\u03b2": [40, 73, 75], "occas": [41, 77], "independ": [41, 53, 60, 61, 77, 82, 83, 85, 87, 88, 89, 97], "models_with_profil": 41, "ellipsoid": [41, 51, 54, 58, 97], "rlp_mosaic": [41, 51, 54, 58], "simple1": [41, 51, 54, 58], "simple6": [41, 51, 54, 58], "simple1angular1": [41, 51, 54, 58], "simple1angular3": [41, 51, 54, 58], "simple6angular1": [41, 51, 54, 58], "wavelength_spread": [41, 51, 54, 58], "fail_on_bad_index": [41, 51, 54, 58], "max_separ": [41, 47, 51, 54, 58, 74], "outlier_prob": [41, 51, 54, 58], "975": [41, 51, 53, 54, 58, 60, 61, 70, 74, 82], "n_macro_cycl": [41, 51, 53, 54, 58, 65, 79], "n_cycl": [41, 51, 54, 58], "min_n_reflect": [41, 51, 54, 58], "max_it": [41, 51, 54, 58], "ll_toler": [41, 51, 54, 58], "997300": [41, 51, 54, 58], "scan_vari": [41, 51, 53, 54, 58, 60, 61, 74, 75, 76, 82, 83, 84, 94], "min_spot": [41, 51, 54, 58, 97], "per_degre": [41, 51, 54, 58], "sigma_m_algorithm": [41, 51, 54, 58], "centroid_definit": [41, 51, 54, 58], "n_sigma": [41, 51, 54, 58], "sigma_b": [41, 45, 51, 54, 58], "sigma_m": [41, 51, 54, 58, 83, 87, 88], "min_zeta": [41, 51, 54, 58], "scan_step": [41, 51, 54, 58], "grid_method": [41, 51, 54, 58], "regular_grid": [41, 51, 54, 58], "circular_grid": [41, 51, 54, 58], "spherical_grid": [41, 51, 54, 58], "fit_method": [41, 51, 54, 58], "reciprocal_spac": [41, 51, 54, 58], "detector_spac": [41, 51, 54, 58], "deconvolut": [41, 51, 54, 58], "subtract_background": 41, "multivari": [41, 51, 54, 58, 88], "total_reflect": [41, 51, 54, 58], "reflections_per_degre": [41, 51, 53, 54, 58, 60, 61], "min": [41, 46, 51, 52, 54, 58, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87], "zeta": [41, 51, 54, 58, 83, 87, 88], "behav": [42, 83, 87], "poisson": [42, 79, 83, 87, 88], "older": [42, 88], "amongst": [42, 84], "abil": 42, "nois": [42, 47, 51, 76, 83, 85, 87], "kernel_s": [42, 45, 47, 51], "max_imag": 42, "gain_map": [42, 47], "cc_half": [43, 73, 80, 85], "isigma": [43, 73], "misigma": [43, 73], "i_mean_over_sigma_mean": [43, 73], "cc_ref": [43, 73], "rmerg": [43, 73, 75, 77, 80, 83, 85, 87, 88, 89], "lowest": [43, 64, 75, 79, 83, 87, 88], "tanh": [43, 73], "half": [43, 53, 75, 78, 80, 83, 85, 87, 88, 89], "steep": [43, 87], "polynomi": [43, 73], "scaled_unmerg": [43, 44, 77], "cc_half_method": [43, 73], "sigma_tau": [43, 73], "reflections_per_bin": [43, 73], "batch_rang": 43, "outer": [43, 48, 73, 82, 89], "ccref": [43, 73], "cc_half_significance_level": [43, 73], "cc_half_fit": [43, 73], "binning_method": [43, 73], "counting_sort": [43, 73], "downstream": [44, 64, 73, 75, 76, 77, 83, 85, 86, 87, 88, 89], "nx": [44, 47], "nxmx": 44, "mmcif": [44, 71, 77], "sadab": 44, "cosin": 44, "ersatz": 44, "evalccd": 44, "mat": 44, "pet": 44, "dynam": [44, 45, 51, 52, 54, 58, 96], "jana2020": 44, "shelx": [44, 71, 74, 89], "xtal": [44, 64, 84, 85, 86], "sad": [44, 89], "instrument_nam": 44, "instrument_short_nam": 44, "source_nam": 44, "source_short_nam": 44, "gz": [44, 48, 87, 89, 92], "bz2": [44, 79, 86], "pdb_version": 44, "v5": 44, "v5_next": 44, "n_digit": 44, "ins": [44, 74, 89], "scale_rang": 44, "9999": [44, 85], "filename_prefix": 44, "dials_dyn": 44, "partiality_cutoff": [44, 64, 73, 83, 85, 87], "99": [44, 70, 74, 75, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 97], "flag_filt": 44, "virtual_fram": 44, "excitation_error_cutoff": 44, "n_merg": 44, "applic": [44, 54, 73, 74, 83, 85, 87, 88, 92], "unfeas": 44, "ic": [44, 45, 46, 47, 49, 50, 51, 53, 54, 82, 83, 85, 87, 96], "ring": [44, 45, 46, 47, 49, 50, 51, 53, 54, 75, 76, 82, 83, 85, 86, 87, 96], "instrument": [44, 82, 95], "acronym": 44, "facil": [44, 84, 85, 98], "compli": 44, "decim": [44, 53, 60, 61], "maximis": 44, "precis": [44, 83, 87], "2f": 44, "999999": 44, "9999999": 44, "cif_pet": 44, "deem": 44, "integrated_sum": 44, "integrated_prf": 44, "restrict": [44, 53, 60, 61, 84, 85], "excit": 44, "virtual": 44, "bitmap": 45, "intermedi": [45, 54, 84], "sigma_": [45, 51], "alter": [45, 75, 77, 88], "bright": [45, 51, 74, 83, 87], "colour_schem": 45, "inverse_greyscal": 45, "greyscal": 45, "rainbow": [45, 51], "heatmap": [45, 51, 63], "global_threshold": [45, 47, 51, 76], "nsigma_b": [45, 51], "nsigma_": [45, 51], "min_loc": [45, 47, 51], "satur": 45, "show_mask": [45, 51], "resolution_r": 45, "d_space": [45, 46, 47, 50, 51, 85], "fontsiz": 45, "fill": 45, "red": [45, 74, 75, 83, 87, 88], "ice_r": [45, 46, 47, 50, 51, 54], "blue": [45, 75, 83, 87, 88], "compress_level": 45, "jpeg": 45, "tiff": 45, "imageset_index": 45, "498": [45, 46, 47, 50, 51, 83, 86, 87], "338": [45, 46, 47, 50, 51, 77, 83, 87], "powder": [45, 46, 47, 50, 51, 75, 76, 82, 83, 86, 87], "194": [45, 46, 47, 50, 51, 74, 83, 85, 87], "zlib": 45, "worst": 45, "dynamic_shadow": [45, 51, 52], "multi_panel": [45, 51, 52], "sens": 45, "flag_express": 46, "parenthes": 46, "reference_spot": 46, "failed_during_summ": 46, "failed_during_profile_fit": 46, "select_good_intens": 46, "dead_tim": 46, "reject_fract": 46, "intersect": 46, "trustworthi": [46, 83, 87, 88], "dead": [46, 82], "exposur": [46, 52, 83, 87, 88], "overlap": [46, 53, 75, 83, 87, 88, 89], "logic": 47, "connect": [47, 56, 63, 85], "config": [47, 84], "image1": 47, "imager_00": 47, "per_image_statist": 47, "lookup": [47, 52, 53, 54, 76], "force_2d": 47, "border": [47, 50, 51, 53], "disable_parallax_correct": [47, 50, 51], "resolution_rang": [47, 50, 51], "untrust": [47, 50, 51, 74, 76], "rectangl": [47, 50, 51, 76], "polygon": [47, 50, 51], "mp": [47, 53, 54, 60, 61, 74, 78, 79, 80, 83, 86, 87], "drmaa": [47, 54], "sge": [47, 54], "lsf": [47, 54], "pb": [47, 54], "njob": [47, 54], "chunksiz": [47, 83, 87], "dispersion_extend": 47, "radial_profil": 47, "n_iqr": [47, 51], "blur": [47, 51], "insid": [47, 77, 84], "hot": 47, "maximum_trusted_valu": 47, "j0": [47, 53, 65, 67], "j1": [47, 53, 65, 67], "liter": 47, "wherea": [47, 64, 75, 82, 83, 87, 88], "go": [47, 54, 64, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "150": [47, 54, 64, 70, 73, 74, 80, 82, 83, 85, 86, 87, 88], "200": [47, 50, 53, 54, 64, 70, 73, 74, 77, 83, 85, 86, 87], "250": [47, 54, 64, 70, 73, 77, 82, 83, 85, 87, 96], "x0": [47, 50, 51], "x1": [47, 50, 51], "y0": [47, 50, 51], "y1": [47, 50, 51], "roi": 47, "height": [47, 53, 54, 60, 61, 85], "contigu": [47, 94], "mark": [47, 75, 83, 87, 88], "background_gradi": 47, "spot_dens": 47, "edg": [47, 50, 51, 53, 54, 60, 61, 74, 76, 77, 89, 98], "faster": [47, 50, 51, 53, 60, 61], "parallax": [47, 50, 51, 52], "xc": [47, 50, 51, 82, 83, 84, 87], "yc": [47, 50, 51, 82, 83, 84, 87], "corner": [47, 50, 51, 82, 83, 87, 88], "act": [47, 51], "cannot": [47, 74, 75, 79, 82, 94], "conjunct": [47, 54], "ny": 47, "sigma_background": 47, "sigma_strong": [47, 76], "global": [47, 53, 54, 60, 61, 65, 75, 84], "iqr": [47, 51, 53, 54, 60, 61], "2\u03b8": [47, 51, 71, 73], "particularli": [47, 75, 76, 79, 84, 85, 88, 89, 97], "consider": [47, 78, 83, 87, 88], "inelast": [47, 75], "insensit": [47, 85], "respons": [47, 49, 75], "peakfind": 47, "doi": [47, 53, 60, 61, 76, 83], "1107": [47, 53, 60, 61, 76], "s1600576714007626": 47, "preprocess": [47, 51, 83, 85, 87], "convolut": [47, 51], "webserv": 48, "labelit": [48, 79], "client_serv": 48, "raster": [48, 77], "balanc": 48, "throughput": 48, "07": [48, 75, 76, 77, 78, 82, 83, 84, 85, 87], "cento": 48, "mod_python": 48, "apr": [48, 96], "webpag": 48, "ask": [48, 77, 84, 85], "mirror": [48, 75, 83, 85, 87, 91], "closest": [48, 83], "visit": 48, "web": [48, 72, 74], "dyn": 48, "closer": [48, 75, 82, 84], "cgi": 48, "httpd": 48, "folder": [48, 77, 85, 87, 88], "project_root": 48, "mkdir": [48, 74, 75, 76, 77, 82, 84, 85], "project_src": 48, "cctbx_project": 48, "master": [48, 74, 76, 77], "apache_install_di": 48, "dist": [48, 76], "modpython": 48, "tgz": 48, "motorlogi": 48, "hour": 48, "mpm_prefork_modul": 48, "conf": 48, "mpm": 48, "better": [48, 65, 74, 75, 77, 83, 84, 85, 87, 88, 94], "capabl": [48, 75, 91], "machin": [48, 49, 97, 98], "host": [48, 49, 80], "localhost": 48, "8125": [48, 83], "signal_strength": 48, "from_sunbird": 48, "rawdata": 48, "ssrl_p6": 48, "i3_1_0001": 48, "stat": [48, 64], "eiger": [48, 77], "dectri": [48, 82], "eiger16mnov2015": 48, "2015_11_10": 48, "insu6_1_mast": 48, "h5": 48, "frame_numb": 48, "44": [48, 79, 82, 83, 84, 85, 86, 87], "disk": 48, "analyz": 48, "feedback": 49, "port": 49, "1234": [49, 85, 87], "find_spots_cli": 49, "hostnam": 49, "xml": [49, 54], "image_0001": 49, "spot_count": 49, "352": [49, 74, 83, 87, 96], "spot_count_no_ic": 49, "263": [49, 74, 77, 83, 85, 86, 87], "46": [49, 74, 77, 80, 82, 83, 84, 85, 86, 87], "d_min_method_1": 49, "92": [49, 74, 75, 77, 80, 82, 83, 85, 86, 87, 96], "d_min_method_2": 49, "total_intens": 49, "56215": 49, "distl": [49, 72], "1701": [49, 87], "unwant": 50, "few": [50, 53, 60, 61, 74, 75, 78, 79, 82, 84, 85, 97], "shape": [50, 64, 83, 87, 88, 89], "overlaid": 51, "color_schem": 51, "grayscal": 51, "invert": [51, 52, 79, 83, 87], "show_beam_cent": 51, "show_resolution_r": 51, "show_ice_r": 51, "show_ctr_mass": 51, "show_max_pix": 51, "show_all_pix": 51, "show_threshold_pix": 51, "show_shoebox": 51, "show_predict": 51, "show_miller_indic": 51, "show_index": 51, "show_integr": 51, "show_rotation_axi": [51, 59], "stack_mod": 51, "powder_arc": 51, "calibrate_silv": 51, "calibrate_pdb": 51, "calibrate_unit_cel": 51, "show_hkl": 51, "mask_param": 51, "predict_reflect": 51, "stack_imag": 51, "arc": [51, 75], "fetch": 51, "internet": [51, 63], "gui": 51, "metrologi": [51, 81], "silver": [51, 98], "behen": 51, "calibr": [51, 74, 75, 76, 82], "spacegroup": [51, 76, 80], "matter": [51, 89], "stdin": 52, "digit": 52, "manual": [52, 74, 75, 84, 89], "reference_geometri": [52, 76], "mosflm_beam_centr": 52, "image_": [52, 55, 66], "image_1_": 52, "image_2_": 52, "eof": [52, 76, 87], "image_1": 52, "image_2": 52, "identifier_typ": 52, "uuid": 52, "timestamp": [52, 97], "allow_multiple_sequ": [52, 94], "as_grid_scan": 52, "check_reference_geometri": 52, "use_beam_refer": 52, "use_gonio_refer": 52, "use_detector_refer": 52, "monochromat": [52, 95], "polychromat": 52, "beam_typ": 52, "beam_prob": 52, "parallax_correct": 52, "fast_slow_beam_centr": [52, 74], "size_min": 52, "size_max": 52, "slow_fast_beam_centr": 52, "prioriti": 52, "invert_rotation_axi": 52, "extrapolate_scan": 52, "extrapol": 52, "convert_stills_to_sequ": 52, "convert_sequences_to_stil": 52, "offsetparallaxcorrectedpxmmstrategi": 52, "autoindex": [53, 80, 83, 87, 88], "fourier": [53, 70], "proce": [53, 60, 61, 77, 79, 83, 85, 86, 87, 88, 89, 94], "enforc": [53, 75, 78, 83, 84, 87], "p43212": [53, 77], "known_symmetri": 53, "hkl_toler": 53, "check_misindex": 53, "grid_search_scop": 53, "refinement_protocol": 53, "d_min_step": [53, 83, 87], "d_min_start": 53, "d_min_fin": 53, "ewald_proximity_resolution_cutoff": 53, "refine_all_candid": 53, "rmsd_min_px": 53, "ewald_proximal_volume_max": 53, "0025": 53, "isoform": 53, "lookup_symbol": 53, "rmsd_target_mm": 53, "beam_restraint": 53, "set_domain_size_ang_valu": 53, "set_mosaic_half_deg_valu": 53, "joint_index": 53, "interval_width_degre": [53, 60, 61], "set_scan_varying_error": [53, 60, 61], "in_spindle_plan": [53, 60, 61, 74, 76], "out_spindle_plan": [53, 60, 61, 74, 76], "in_beam_plan": [53, 60, 61], "out_beam_plan": [53, 60, 61], "mcd": [53, 60, 61, 83, 84, 87, 88], "tukei": [53, 54, 60, 61, 82, 83, 84, 86, 87, 88], "sauter_poon": [53, 60, 61, 84], "mm_search_scop": [53, 65], "radiu": [53, 65], "wide_search_bin": [53, 65], "coars": [53, 65], "min_cell_volum": 53, "max_cell_estim": 53, "nn": 53, "logarithm": 53, "nearest": [53, 54, 56, 67, 88], "neighbour": [53, 56, 83, 87, 88], "sigma_phi_deg": 53, "mainli": [53, 54, 78], "shot": [53, 96], "almost": [53, 75, 77, 78, 83, 87], "certainli": 53, "ness": 53, "index_error": 53, "index_magnitud": 53, "index_qu": 53, "combine_scan": 53, "refine_shel": 53, "repredict_onli": 53, "macro": [53, 60, 65, 79, 82, 83, 87, 88], "ever": [53, 79, 98], "disable_unit_cell_volume_sanity_check": 53, "saniti": 53, "unrealist": 53, "multiple_lattice_search": 53, "recycle_unindexed_reflections_cutoff": 53, "unindex": [53, 54, 59, 74, 75, 79, 83, 86, 87, 88], "cluster_analysi": 53, "dbscan": 53, "hcluster": 53, "linkag": 53, "ward": 53, "euclidean": 53, "cutoff_criterion": 53, "inconsist": 53, "min_sampl": 53, "min_cluster_s": 53, "intersection_union_ratio_cutoff": 53, "candidate_outlier_reject": 53, "refine_candidates_with_known_symmetri": 53, "proxim": 53, "pointgroup": 53, "assur": 53, "domain": [53, 75], "ang": 53, "nave": 53, "basis_vector_combin": 53, "agreement": [53, 83, 85, 87, 88, 89], "max_refin": 53, "sys_absent_threshold": 53, "solution_scor": 53, "optimise_initial_basis_vector": 53, "peak_search": 53, "flood_fil": 53, "clean": [53, 75, 82], "reciprocal_space_grid": 53, "256": [53, 74, 76, 79, 83, 87, 88], "max_vector": 53, "candidate_spot": 53, "limit_resolution_bi": 53, "n_spot": 53, "d_star_toler": 53, "band": [53, 75], "use_p1_indices_as_se": 53, "search_depth": 53, "triplet": 53, "quad": [53, 76], "bootstrap_cryst": 53, "max_pair": 53, "max_triplet": 53, "600": [53, 85, 87], "max_quad": 53, "slice": [53, 67, 75, 98], "auto_reduct": [53, 60, 61], "behaviour": [53, 60, 61, 75], "min_nref_per_paramet": [53, 60, 61], "action": [53, 60, 61], "trigger": [53, 60, 61, 64], "excis": [53, 60, 61], "eman": [53, 60, 61], "macrocycl": [53, 60, 61, 75, 79, 82, 83, 87, 88], "checkpoint": [53, 60, 61], "compose_model_p": [53, 60, 61], "trade": [53, 60, 61], "accuraci": [53, 60, 61], "block_width": [53, 60, 61, 74, 76], "fine": [53, 60, 61, 75, 82, 83, 87, 88, 94, 98], "grain": [53, 60, 61], "covari": [53, 60, 61, 88], "moment": [53, 60, 61, 82], "trim_scan_to_observ": [53, 60, 61], "trim": [53, 60, 61, 74], "failur": [53, 60, 61, 73, 79], "extrem": [53, 60, 61, 63, 79, 82, 84, 85, 96, 98], "debug_centroid_analysi": [53, 60, 61], "plot_centroid_analysi": [53, 60, 61], "dials_scratch": [53, 60, 61], "fix_list": [53, 60, 61, 76], "suffic": [53, 60, 61], "detector1": [53, 60, 61], "absolute_num_interv": [53, 60, 61, 74, 76], "tie_to_target": [53, 60, 61, 75, 76], "tie_to_group": [53, 60, 61], "low_memory_mean": [53, 60, 61], "tie": [53, 60, 61], "treat": [53, 60, 61, 77, 82, 94], "rigid": [53, 60, 61, 82], "bodi": [53, 60, 61], "hierarchy_level": [53, 60, 61, 82], "treat_single_image_as_stil": [53, 60, 61], "spherical_relp_model": [53, 60, 61], "relp": [53, 60, 61], "gaussnewton": [53, 60, 61, 64], "levmar": [53, 60, 61, 64], "sparselevmar": [53, 60, 61], "track_step": [53, 60, 61], "track_gradi": [53, 60, 61], "track_parameter_correl": [53, 60, 61, 84], "track_jacobian_structur": [53, 60, 61], "track_condition_numb": [53, 60, 61], "track_normal_matrix": [53, 60, 61], "track_out_of_sample_rmsd": [53, 60, 61], "fraction_of_bin_s": [53, 60, 61], "discret": [53, 60, 61], "bin_size_fract": [53, 60, 61, 82], "natur": [53, 60, 61, 85, 87, 88, 96], "viz": [53, 60, 61, 89], "wider": [53, 60, 61], "minimum_sample_s": [53, 54, 60, 61], "maximum_sample_s": [53, 54, 60, 61], "random_se": [53, 54, 60, 61], "parallelepip": [53, 60, 61], "bia": [53, 60, 61], "external_deltapsi": [53, 60, 61], "identif": [53, 60, 61], "minimum_number_of_reflect": [53, 60, 61], "separate_experi": [53, 60, 61], "separate_panel": [53, 60, 61], "separate_block": [53, 60, 61], "divid": [53, 60, 61, 64], "18": [53, 60, 61, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 96], "enough": [53, 60, 61, 74, 79, 82, 84, 94], "separate_imag": [53, 60, 61], "rejector": [53, 54, 60, 61], "iqr_multipli": [53, 60, 61], "rule": [53, 60, 61], "rousseeuw": [53, 60, 61], "van": [53, 60, 61, 96], "driessen": [53, 60, 61], "1080": [53, 60, 61], "00401706": [53, 60, 61], "10485670": [53, 60, 61], "max_n_group": [53, 60, 61], "twice": [53, 60, 61, 83, 87, 88], "min_group_s": [53, 60, 61], "300": [53, 60, 61, 76, 77, 83, 84, 85, 87], "maxim": [53, 60, 61], "n_trial": [53, 60, 61], "500": [53, 60, 61, 74, 76, 83, 87], "k1": [53, 60, 61], "concentr": [53, 60, 61], "k2": [53, 60, 61], "k3": [53, 60, 61], "threshold_prob": [53, 60, 61], "quantil": [53, 60, 61], "chi": [53, 60, 61], "robust": [53, 54, 60, 61, 77, 96], "mahalanobi": [53, 60, 61], "s0021889810010782": [53, 60, 61], "px_sz": [53, 60, 61], "graph": [53, 56, 60, 61, 74, 88], "reintegr": 54, "glm": 54, "include_bad_refer": 54, "create_profile_model": [54, 72], "max_memory_usag": 54, "use_dynamic_mask": 54, "reference_profil": 54, "separate_fil": 54, "split_experi": [54, 82, 84, 86, 89, 94], "number_of_partit": 54, "min_partition_s": 54, "overlaps_filt": 54, "foreground_foreground": 54, "foreground_background": 54, "n_subset_split": 54, "detector_gain": 54, "gmodel": 54, "tuning_const": 54, "345": [54, 74, 76, 83, 86, 87], "constant2d": 54, "constant3d": 54, "loglinear2d": 54, "loglinear3d": 54, "min_pixel": 54, "nsigma": 54, "linear2d": 54, "linear3d": 54, "fuller_kapton": 54, "kapton_2019": 54, "xtal_height_above_kapton_mm": 54, "rotation_angle_deg": 54, "kapton_half_width_mm": 54, "5875": [54, 82], "kapton_thickness_mm": 54, "005": [54, 74, 80, 85], "smart_sigma": 54, "within_spot_sigma": 54, "output_unintegrated_reflect": 54, "unintegr": [54, 83, 87], "bad_refer": 54, "integrate_all_reflect": 54, "nframe": 54, "guarante": [54, 88, 89], "immedi": [54, 76, 82, 87, 88], "i_over_sigma": 54, "reflection_table_selector": 54, "subsampl": 54, "neighbor": 54, "imping": 54, "tune": [54, 83, 87, 88], "thereof": 54, "irradi": 54, "kapton": 54, "tape": 54, "merge_n_imag": 55, "image_prefix": 55, "sum_": 55, "get_raw_data_from_imageset": 55, "modif": [55, 93], "bypass": 55, "miss": [56, 74, 75, 82, 85, 90], "asymmetr": [56, 78, 95], "min_component_s": 56, "orientation_decomposit": [57, 63], "e1": [57, 63], "e3": [57, 63], "relative_to_static_orient": [57, 63], "decomposit": [57, 63], "ignore_shadow": 58, "buffer_s": 58, "buffer": [58, 73], "visualis": 59, "reverse_phi": 59, "crystal_fram": 59, "beam_centre_panel": 59, "z_min": 59, "z_max": 59, "n_min": 59, "n_max": 59, "partiality_min": 59, "partiality_max": 59, "outlier_displai": 59, "inlier": 59, "experiment_id": 59, "black_background": 59, "show_beam_vector": 59, "show_reciprocal_cel": 59, "label_nearest_point": 59, "marker_s": [59, 69], "autospin": 59, "model_view_matrix": 59, "max_experi": 59, "black": 59, "white": [59, 95, 96, 98], "n_static_macrocycl": 60, "separate_independent_set": 60, "include_unused_reflect": 60, "unus": 60, "purpos": [60, 75, 78, 82, 83, 84, 87, 88, 93], "parameter_t": 60, "correlation_plot": [60, 71, 84], "matplotlib": [60, 71], "later": [60, 71, 74, 88, 89], "replot": [60, 71], "triclin": [61, 71, 75, 76, 83, 87, 88, 89], "bravais_setting_1": [61, 83, 87], "bravais_setting_": 61, "lepage_max_delta": 61, "cc_n_bin": 61, "crystal_id": [61, 86], "external_depend": 63, "remot": [63, 80], "emb": 63, "pixels_per_bin": 63, "40": [63, 74, 75, 77, 82, 83, 84, 85, 86, 87, 88, 97], "relocat": 63, "inflat": 63, "centroid_diff_max": 63, "centroid_diff_x": [63, 82], "centroid_diff_i": [63, 82], "motiv": [64, 83, 84, 87], "refelct": 64, "previou": [64, 76, 77, 82, 83, 85, 87, 88], "1_integr": 64, "2_integr": 64, "integrated_2": [64, 73, 76, 89], "overwrite_existing_model": 64, "reset_error_model": 64, "cut_data": [64, 85], "scaling_opt": 64, "check_consistent_index": 64, "cross_valid": 64, "deltacchalf": [64, 73, 75], "max_cycl": [64, 73], "max_percent_remov": [64, 73], "min_complet": [64, 73, 77], "image_group": [64, 73, 75], "group_siz": [64, 73, 75], "stdcutoff": [64, 73], "scale_and_filter_result": 64, "dataset_select": 64, "analytical_correct": 64, "relative_b_correct": 64, "resolution_depend": 64, "quadrat": 64, "dose": [64, 73, 82], "1e6": 64, "fix_initi": 64, "reliabl": [64, 74, 83, 85, 87, 89], "weakli": [64, 82], "needl": 64, "protein": [64, 74, 75, 76, 83, 84, 96], "absorb": 64, "100um": 64, "1a": 64, "5e5": 64, "filepath": 64, "use_internal_vari": 64, "additional_stat": 64, "delete_integration_shoebox": 64, "discard": 64, "randomli": [64, 73, 83, 85, 87, 98], "min_group": 64, "2000": [64, 73, 83, 86], "50000": [64, 74], "min_parti": [64, 73, 83, 85, 87], "midpoint": 64, "rmea": [64, 75, 77, 80, 83, 85, 87, 88, 89], "joint_analysi": 64, "weighting_schem": 64, "invvar": 64, "uniti": [64, 79], "reweight": 64, "min_ih": [64, 75], "oppos": 64, "target_cycl": 64, "only_save_target": 64, "target_model": 64, "deprec": 64, "target_mtz": 64, "use_free_set": 64, "free": [64, 73, 74, 75, 78, 80, 83, 84, 87, 91, 96, 98], "overbias": 64, "alongisd": 64, "free_set_percentag": 64, "free_set_offset": 64, "gn": [64, 96], "lm": [64, 96], "outlier_zmax": [64, 88], "cross_validation_mod": 64, "cross": [64, 75, 76, 83, 85, 87], "docstr": 64, "discreet": 64, "parameter_valu": 64, "nfold": 64, "fold": 64, "repetit": 64, "scaling_refineri": 64, "refinement_ord": 64, "rmsd_toler": 64, "full_matrix_engin": 64, "cchalf": [64, 73], "\u03b4cc\u00bd": [64, 73, 75, 77, 85], "use_dataset": 64, "et": [65, 73, 74, 80, 85], "al": [65, 73, 80, 85], "plot_search_scop": 65, "max_reflect": [65, 66], "10000": [65, 79], "show_shared_model": 66, "show_all_reflection_data": 66, "show_intens": 66, "show_centroid": 66, "show_profile_fit": 66, "show_flag": 66, "show_identifi": 66, "image_statist": 66, "show_correct": 66, "show_raw": 66, "resolution_analysi": 68, "split_json": 68, "joint_json": 68, "stereograph": [69, 77], "hkl_limit": 69, "expand_to_p1": 69, "eliminate_sys_abs": 69, "indexed_1": 69, "indexed_2": 69, "phi_angl": 69, "use_starting_angl": 69, "plane_norm": 69, "save_coordin": 69, "label_indic": 69, "font_siz": 69, "colour_map": 69, "gridsiz": 69, "systematic_abs": 70, "significance_level": 70, "signfic": 70, "axial": [70, 89], "corrplot": [71, 84], "refined_cel": [71, 89], "p4p": [71, 77, 89], "filter_integrated_centroid": 71, "combine_crystal_model": [71, 73], "xprep": [71, 74, 89], "refine_bravais_set": [72, 74, 75, 76, 78, 79, 83, 86, 87, 88, 89], "two_theta_refin": [72, 73, 77, 89], "multiplex": [72, 81, 96], "image_view": [72, 74, 75, 76, 78, 79, 82, 83, 87, 88], "reciprocal_lattice_view": [72, 75, 77, 78, 79, 82, 83, 87, 88, 89], "generate_mask": [72, 74, 76], "check_indexing_symmetri": [72, 79], "search_beam_posit": [72, 79], "plot_scan_varying_model": [72, 75], "find_spots_serv": 72, "client": 72, "apach": 72, "apply_mask": 72, "estimate_gain": 72, "estimate_resolut": [72, 73, 77, 85], "merge_cbf": 72, "export_bitmap": 72, "slice_sequ": 72, "spot_counts_per_imag": 72, "stereographic_project": 72, "combine_experi": [72, 82, 84, 94], "align_cryst": 72, "anvil_correct": 72, "missing_reflect": 72, "filter_reflect": 72, "printabl": 72, "adob": 72, "browser": [72, 74, 77, 83, 85, 87], "click": [72, 74, 75, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92], "Or": [72, 92], "tab": [72, 77, 85, 88], "pathologi": 73, "isomorph": [73, 77, 84], "preliminari": 73, "cite": 73, "2022": [73, 85, 93, 96], "d78": [73, 85], "752": [73, 74, 85, 96], "769": [73, 74, 85, 96], "integrated_1": [73, 76, 89, 97], "brotat": 73, "secondari": 73, "resolve_indexing_ambigu": 73, "rescale_after_resolution_cutoff": 73, "multi_crystal_analysi": 73, "min_multipl": 73, "cluster_method": 73, "cos_angl": 73, "remove_profile_fitting_failur": 73, "r_free_flag": 73, "use_lattice_symmetri": 73, "use_dataman_shel": 73, "n_shell": 73, "relative_to_complete_set": 73, "resolv": [73, 75, 77, 83, 87, 88], "rescal": [73, 83, 87], "bold": 73, "noauto": 73, "max_fre": 73, "bias": 73, "old_test_flag_valu": 73, "guess": 73, "phenix": 73, "d_ep": 73, "sca": 73, "significantli": [73, 74, 83, 85, 87, 88, 97], "loss": [73, 93], "author": 74, "jessica": 74, "bruhn": 74, "nanoimag": 74, "servic": [74, 93], "thermofish": 74, "glacio": 74, "tem": 74, "ceta": 74, "camera": 74, "leginon": 74, "deposit": 74, "ccdc": 74, "biotin16": 74, "p2": [74, 83, 87], "featur": [74, 75, 76, 78, 84, 91], "cheng": 74, "negro": 74, "jf": [74, 96], "rice": 74, "wj": 74, "dallakyan": 74, "eng": 74, "dg": [74, 76, 96], "potter": 74, "carragh": 74, "sci": [74, 96], "jan": [74, 96], "2021": [74, 75], "pmid": [74, 75, 76, 96], "33030237": 74, "pmc": [74, 75, 76, 96], "reprint": [74, 75, 76, 96], "pmc7737759": 74, "microcryst": [74, 75, 96], "pharmaceut": 74, "industri": 74, "lesson": 74, "learn": [74, 75, 82], "fifti": 74, "scapin": 74, "mercado": 74, "bq": 74, "ganesh": 74, "bn": 74, "nieusma": 74, "lucier": 74, "kw": 74, "mayer": 74, "chiang": 74, "nj": 74, "poweleit": 74, "mcgilvrai": 74, "pt": 74, "mashor": 74, "hennessi": 74, "thomson": 74, "wang": 74, "front": 74, "mol": 74, "biosci": 74, "648603": 74, "34327213": 74, "pmc8313502": 74, "801406_1": 74, "801574_1": 74, "802003_1": 74, "810542_1": 74, "magnif": 74, "footprint": 74, "yellow": 74, "pictur": 74, "tilt": 74, "movi": 74, "neg": [74, 76, 77, 80, 85], "valuabl": 74, "smv": [74, 75], "beyond": [74, 83, 87, 88, 95], "benefici": [74, 88], "leginon_offset": 74, "suggest": [74, 75, 77, 80, 82, 83, 84, 86, 87, 89], "image_pedest": 74, "plug": [74, 76], "dxtbx_ed_format": [74, 76], "formatsmvcetad_tui": 74, "img": [74, 75, 79, 84], "980": [74, 83], "editor": [74, 75, 84], "slider": [74, 83, 87], "zoom": [74, 75, 77, 78, 83, 87], "weaker": [74, 78], "mous": [74, 75, 88], "beamstop": 74, "friedel": [74, 79, 83, 87], "draw": 74, "bottom": [74, 75, 79, 88], "1059": 74, "988": [74, 83, 86, 87], "diamet": 74, "max_spot": 74, "consum": [74, 84], "26": [74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 96, 97], "zinger": [74, 84], "27": [74, 76, 78, 79, 82, 83, 84, 85, 86, 87], "160": [74, 83, 85, 86, 87], "276": [74, 83, 85, 87], "347": [74, 83, 87], "598": [74, 87], "584": [74, 87], "483": [74, 83, 87], "506": [74, 76, 83, 87, 96], "327": [74, 79, 82, 83, 85, 87], "422": [74, 77, 83, 85, 87], "17": [74, 75, 77, 80, 82, 83, 84, 85, 86, 87, 96], "286": [74, 82, 83, 85, 86, 87], "328": [74, 75, 80, 83, 87], "21": [74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89], "142": [74, 77, 83, 85, 87], "189": [74, 83, 86, 87], "140": [74, 77, 82, 83, 85, 87], "24": [74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 96], "424": [74, 83, 87], "1031": [74, 87], "735": [74, 83, 87], "419": [74, 75, 83, 87], "374": [74, 83, 87], "29": [74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 97], "670": [74, 87], "718": [74, 87], "32": [74, 76, 77, 82, 83, 84, 85, 86, 87, 97], "evid": [74, 75, 77, 78], "mental": 74, "carefulli": [74, 75, 77], "microscop": [74, 76], "nref": [74, 75, 79, 82, 83, 84, 85, 86, 87, 88], "rmsd_z": [74, 75, 79, 82, 83, 84, 86, 87], "8365": 74, "34229": 74, "okai": [74, 75, 84], "1101": [74, 83], "299": [74, 83, 84, 85, 87], "78": [74, 75, 77, 78, 80, 82, 83, 84, 85, 86, 87, 96], "chiral": [74, 75, 83, 85, 87], "ap": [74, 75, 78, 79, 80, 83, 86, 87], "p21": [74, 87], "p222": [74, 86, 89], "p2221": 74, "p21212": 74, "p212121": 74, "4889": 74, "08": [74, 77, 82, 83, 85, 86, 87], "763": [74, 86], "873": 74, "990": [74, 83, 85], "1112": 74, "4856": 74, "079": [74, 77, 85, 86], "798": 74, "979": [74, 83, 86, 87], "81": [74, 75, 80, 82, 83, 85, 86, 87], "1114": 74, "074": [74, 77, 85, 86], "996": [74, 77, 79, 83, 84, 85, 87], "1115": 74, "4718": 74, "068": [74, 83, 85, 86, 88], "1009": [74, 83], "062": [74, 80, 83, 85, 87], "989": [74, 83], "33": [74, 76, 77, 78, 82, 83, 84, 85, 86, 87, 97], "1121": [74, 83, 87], "straightforward": [74, 77, 78, 89], "doubt": 74, "addsym": 74, "platon": 74, "great": [74, 78, 88], "orthorhomb": [74, 76, 78, 79], "decreas": [74, 75, 82, 83, 84, 85, 86, 87, 88], "890": 74, "79025": 74, "1428": [74, 83], "24032": 74, "mind": 74, "incomplet": [74, 75, 76, 89], "wait": 74, "scroll": [74, 88], "bring": [74, 77, 84], "focu": [74, 77, 86, 91, 95], "orang": 74, "uptick": 74, "suboptim": [74, 85], "hint": [74, 77, 79, 88], "1022": [74, 83], "992": [74, 77, 85, 86], "831": [74, 77, 82, 83, 85], "1026": [74, 83], "986": [74, 85, 86], "791": 74, "998": [74, 80, 83, 85, 87, 88], "1619": [74, 87], "715": [74, 83, 87], "43": [74, 79, 80, 82, 83, 84, 85, 86, 87], "149": [74, 77, 80, 83, 85, 87], "071": [74, 77, 78, 85, 86, 87], "033": [74, 77, 79, 83, 85, 88], "032": [74, 80, 85, 87, 89], "77": [74, 75, 76, 79, 80, 82, 83, 85, 86, 87, 88], "19032": 74, "8498": 74, "2916": [74, 82], "2178": 74, "636": [74, 87], "fed": 74, "reprocess": [74, 87, 88], "rememb": [74, 79, 82, 84], "saw": 74, "129": [74, 77, 79, 83, 85, 87], "101": [74, 78, 83, 85, 87], "128": [74, 77, 79, 82, 83, 85, 87], "011": [74, 83, 85, 87], "39": [74, 78, 79, 82, 83, 84, 85, 86, 87, 97], "007": [74, 89], "56": [74, 76, 78, 79, 82, 83, 84, 85, 87], "57": [74, 75, 79, 80, 82, 83, 84, 85, 86, 87], "19159": 74, "2937": [74, 83], "8531": 74, "49": [74, 82, 83, 84, 85, 86, 87, 89, 96], "had": [74, 78, 82, 83, 84, 85, 87, 88], "fairli": [74, 75, 76, 79, 82, 83, 87, 88], "ob": [74, 83, 85, 86, 87, 96], "uniq": [74, 83, 85, 86, 87], "mult": [74, 83, 85, 86, 87], "comp": [74, 83, 85, 86, 87], "si": [74, 83, 85, 86, 87], "r_mrg": [74, 83, 85, 86, 87], "r_mea": [74, 83, 85, 86, 87], "r_pim": [74, 83, 85, 86, 87], "r_anom": [74, 83, 85, 87], "cc_ano": [74, 83, 85, 86, 87], "86": [74, 83, 85, 86, 87], "941": [74, 83, 85], "87": [74, 77, 79, 82, 83, 84, 85, 86, 87], "104": [74, 75, 76, 83, 85, 86, 87, 88], "109": [74, 82, 83, 85, 86, 87, 96], "085": [74, 77, 85, 86], "994": [74, 77, 85], "943": [74, 83, 85, 86], "98": [74, 75, 76, 77, 79, 80, 82, 83, 85, 86, 87, 88], "158": [74, 77, 82, 83, 85, 87], "164": [74, 77, 83, 85, 87], "044": [74, 85], "935": 74, "84": [74, 75, 82, 83, 85, 86, 87, 88], "161": [74, 77, 83, 85, 87], "169": [74, 77, 83, 85, 86, 87], "046": [74, 77, 85, 86], "114": [74, 83, 85, 86, 87], "983": [74, 83, 85, 86], "1013": [74, 83], "265": [74, 79, 82, 83, 87], "067": [74, 77, 83, 85, 87, 89], "966": [74, 83, 85], "523": [74, 83, 85, 87], "865": [74, 83], "63": [74, 75, 82, 83, 85, 86, 87], "277": [74, 83, 85, 87], "288": [74, 83, 87], "076": [74, 76, 77, 83, 85, 86, 89], "225": [74, 77, 83, 86, 87], "942": [74, 77, 83, 85], "051": [74, 76, 77, 83, 85, 86], "970": 74, "76": [74, 75, 79, 80, 82, 83, 85, 86, 87, 96], "307": [74, 82, 83, 85, 87], "322": [74, 77, 83, 85, 87], "091": [74, 79, 85, 86, 88], "213": [74, 77, 83, 85, 87], "816": [74, 83, 85], "612": [74, 87], "65": [74, 79, 82, 83, 85, 86, 87], "310": [74, 83, 87], "323": [74, 83, 85, 87], "259": [74, 79, 82, 83, 85, 87], "881": [74, 83, 86, 87], "306": [74, 83, 87], "09": [74, 75, 77, 79, 80, 82, 83, 85, 86, 87, 96], "993": [74, 75, 77, 83, 85, 86], "393": [74, 83, 87], "408": [74, 83, 87], "272": [74, 77, 79, 83, 87], "965": [74, 83], "167": [74, 79, 83, 85, 87], "920": [74, 83, 85], "58": [74, 82, 83, 84, 85, 86, 87, 89], "428": [74, 83, 87], "442": [74, 83, 87], "110": [74, 83, 85, 87], "915": 74, "078": [74, 77, 79, 80, 83, 86, 87], "607": [74, 79, 83, 87], "155": [74, 77, 82, 83, 85, 87], "842": [74, 79, 83], "856": [74, 83], "61": [74, 75, 82, 83, 85, 86, 87], "622": [74, 77, 82, 83, 87], "647": [74, 87], "166": [74, 83, 86, 87, 97], "520": [74, 83, 87], "931": [74, 77], "910": [74, 83, 85], "246": [74, 77, 83, 84, 87], "628": [74, 83, 85, 87], "495": [74, 83, 85, 87], "876": [74, 83], "70": [74, 75, 77, 83, 85, 86, 87, 96], "964": [74, 83, 87], "268": [74, 79, 82, 83, 87], "696": [74, 83, 87], "333": [74, 82, 83, 87], "261": [74, 79, 83, 87, 96], "751": [74, 83], "62": [74, 79, 83, 85, 87, 96], "146": [74, 82, 83, 85, 87], "326": [74, 83, 87], "805": [74, 83], "491": [74, 83, 87, 96], "324": [74, 82, 83, 85, 87], "88": [74, 75, 79, 82, 83, 85, 86, 87], "631": [74, 75, 77, 86, 87], "556": [74, 87], "648": [74, 87], "505": [74, 83, 85, 87], "224": [74, 82, 83, 87], "554": [74, 87], "572": [74, 87], "503": [74, 80, 83, 85, 87], "459": [74, 83, 87], "251": [74, 83, 85, 87, 89], "260": [74, 76, 82, 83, 87], "050": [74, 77, 83, 85, 87, 88], "513": [74, 83, 87], "939": [74, 84, 87], "673": [74, 83, 87], "371": [74, 77, 83, 86, 87], "427": [74, 83, 87], "48": [74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 96], "808": [74, 83, 87], "947": [74, 77, 83, 85], "666": [74, 77, 87], "389": [74, 77, 83, 87], "423": [74, 83, 87], "817": [74, 83], "054": [74, 77, 85, 87], "099": [74, 87, 89], "173": [74, 75, 83, 87], "285": [74, 83, 85, 87], "312": [74, 83, 87], "477": [74, 83, 87], "003": [74, 83, 85], "432": [74, 83, 87], "85": [74, 76, 77, 79, 80, 82, 83, 85, 86, 87, 96, 97], "15798": 74, "1361": [74, 82, 83], "257": [74, 79, 80, 83, 87], "111": [74, 75, 77, 82, 83, 85, 87, 96], "968": [74, 85, 87], "94": [74, 75, 77, 82, 83, 85, 86, 87, 88, 97], "116": [74, 79, 83, 87], "034": [74, 80, 83, 85], "995": [74, 77, 83, 86, 87], "080": [74, 75, 77, 83, 85, 86], "961": [74, 85], "54": [74, 75, 82, 83, 84, 85, 86, 87], "170": [74, 77, 83, 85, 87], "045": [74, 77, 85, 86], "075": [74, 77, 80, 85, 86], "492": [74, 82, 83, 87], "178": [74, 79, 83, 85, 87], "185": [74, 77, 83, 85, 87, 88], "1034": [74, 83], "960": [74, 76, 83], "365": [74, 77, 83, 85, 87], "891": [74, 83, 87], "332": [74, 83, 87], "090": [74, 77, 86, 87], "906": [74, 83, 85, 87], "148": [74, 77, 82, 83, 85, 87], "1003": [74, 83], "364": [74, 82, 83, 87], "379": [74, 83, 87], "267": [74, 82, 83, 86, 87], "708": [74, 83, 87], "34": [74, 77, 79, 82, 83, 84, 85, 86, 87], "361": [74, 83, 87], "096": [74, 85, 87], "296": [74, 83, 85, 87], "905": [74, 83], "020": [74, 77, 80, 85, 87], "439": [74, 77, 83, 87], "455": [74, 75, 83, 86, 87], "302": [74, 83, 87], "242": [74, 80, 83, 85, 86, 87, 96], "493": [74, 83, 87], "121": [74, 77, 78, 79, 83, 85, 87], "812": [74, 83], "1081": [74, 82], "672": [74, 87], "699": [74, 77, 87], "180": [74, 77, 83, 85, 87], "739": [74, 78], "879": [74, 83], "710": [74, 83, 87], "736": [74, 78, 83, 85, 87], "184": [74, 83, 85, 87], "264": [74, 83, 85, 87], "951": [74, 76, 83, 85], "249": [74, 83, 85, 87], "481": [74, 83, 87], "571": [74, 83, 87], "105": [74, 83, 85, 86, 87], "897": [74, 83, 85], "082": [74, 75, 77, 85, 86], "124": [74, 75, 77, 79, 83, 85, 86, 87], "294": [74, 82, 83, 87], "796": 74, "386": [74, 83, 85, 87], "760": [74, 83, 86], "262": [74, 76, 83, 84, 85, 87], "642": [74, 87], "777": [74, 83], "866": [74, 77, 85], "544": [74, 87], "208": [74, 79, 83, 87], "514": [74, 76, 83, 87], "190": [74, 80, 83, 85, 87], "593": [74, 87], "706": [74, 83, 87], "827": 74, "605": [74, 87], "290": [74, 83, 87], "089": [74, 77, 86], "538": [74, 83, 85, 87], "195": [74, 79, 83, 85, 87], "744": 74, "534": [74, 77, 82, 87], "289": [74, 83, 85, 87], "436": [74, 83, 87], "314": [74, 83, 85, 87], "799": [74, 83], "353": [74, 79, 83, 87], "363": [74, 83, 85, 87], "472": [74, 82, 83, 87], "794": [74, 83, 86, 87], "137": [74, 75, 83, 85, 86, 87, 89], "052": [74, 77, 85, 86, 87], "291": [74, 75, 83, 87], "041": [74, 77, 82, 83, 85, 87], "519": [74, 77, 79, 82, 83, 87], "851": [74, 83], "350": [74, 83, 87], "490": [74, 77, 83, 87], "16205": 74, "1373": [74, 87], "266": [74, 79, 83, 87], "072": [74, 77, 85, 86, 87], "201": [74, 77, 82, 83, 87], "127": [74, 77, 79, 82, 83, 85, 87], "lot": [74, 77, 82, 86, 88], "954": [74, 79, 83], "077": [74, 77, 80, 83, 85, 86, 97], "028": [74, 77, 79, 85, 86], "168": [74, 83, 85, 87, 89], "991": [74, 83, 85, 87, 89], "957": [74, 85], "186": [74, 77, 80, 83, 87], "971": [74, 82, 83, 84, 85], "053": [74, 85, 86, 88], "1017": [74, 83], "073": [74, 77, 85, 87], "177": [74, 82, 83, 85, 87], "956": [74, 76, 86], "203": [74, 82, 83, 85, 86, 87], "885": [74, 85], "334": [74, 83, 85, 87], "908": [74, 83], "017": [74, 83, 85], "359": [74, 77, 83, 84, 87], "375": [74, 83, 87, 88], "102": [74, 83, 85, 86, 87], "722": [74, 83], "331": [74, 77, 79, 82, 83, 86, 87], "914": [74, 83, 87], "366": [74, 77, 82, 83, 87], "295": [74, 83, 87], "900": [74, 83], "452": [74, 75, 83, 87], "304": [74, 83, 85, 87], "870": 74, "475": [74, 83, 87], "122": [74, 77, 79, 83, 85, 87], "761": 74, "397": [74, 83, 87], "1072": 74, "637": [74, 75, 77, 84, 87], "663": [74, 87], "394": [74, 82, 83, 86, 87], "775": [74, 85, 86], "869": 74, "714": [74, 87], "741": 74, "560": [74, 85, 86, 87], "608": [74, 87], "175": [74, 82, 83, 87], "921": [74, 83], "253": [74, 83, 85, 87], "486": [74, 83, 87, 96], "755": [74, 83], "151": [74, 77, 82, 83, 85, 86, 87], "888": [74, 83], "059": [74, 83, 85, 86, 87, 88], "746": [74, 75, 79, 83, 87], "471": [74, 83, 85, 87], "421": [74, 77, 83, 85, 86, 87], "911": [74, 83], "218": [74, 83, 87], "629": [74, 83, 87], "635": [74, 87], "719": [74, 85, 87], "507": [74, 83, 87], "550": [74, 83, 87], "023": [74, 77, 83, 85, 89], "679": [74, 87], "800": [74, 83], "602": [74, 77, 79, 87], "315": [74, 77, 83, 87], "212": [74, 79, 83, 85, 87], "147": [74, 83, 87], "529": [74, 83, 86, 87], "107": [74, 75, 83, 85, 87], "790": [74, 87], "577": [74, 83, 87], "223": [74, 83, 87], "429": [74, 75, 82, 83, 87], "274": [74, 82, 83, 87], "802": [74, 82], "318": [74, 83, 85, 87], "569": [74, 86, 87], "426": [74, 83, 87], "047": [74, 75, 77, 85, 87], "232": [74, 83, 84, 87, 96], "220": [74, 83, 85, 87], "287": [74, 83, 85, 87], "537": [74, 87], "340": [74, 82, 83, 87, 96], "650": [74, 83, 84, 87], "15973": 74, "248": [74, 83, 85, 87], "biotin_p222": 74, "viewhkl": 74, "middl": 74, "variat": [74, 83, 84, 85, 87, 88, 89], "happen": [74, 79, 83, 86, 87, 88], "goe": 74, "to_shelx": [74, 89], "chno": [74, 89], "shelxt": [74, 89], "shelxd": 74, "biotin_p212121": 74, "02501": 74, "19177": 74, "29400": 74, "84910": 74, "0000": [74, 75, 79, 82, 83, 86, 87, 89], "zerr": 74, "00104": [74, 87], "00206": 74, "00417": 74, "latt": 74, "sfac": 74, "64": [74, 75, 76, 79, 82, 83, 85, 87, 97], "plop": 74, "ntry": 74, "hklf": 74, "organ": [74, 89], "m1000": 74, "realli": [74, 77, 82, 84], "ni": 74, "difficulti": [74, 78, 79], "figur": [74, 75, 79, 82, 84], "again": [74, 75, 79, 82, 83, 84, 86, 87, 88, 89, 94], "molecular": [74, 75, 76, 78, 96, 99], "phaser": 74, "freerflag": 74, "solvent": 74, "struggl": 74, "grow": [74, 77, 78], "ones": 74, "luck": 74, "myd88": [75, 81], "tir": [75, 81], "assembli": 75, "micro": [75, 81], "sfx": 75, "insight": [75, 77], "toll": 75, "receptor": 75, "transduct": 75, "articl": 75, "reveal": [75, 78], "femtosecond": [75, 96], "clabber": [75, 76, 96], "mtb": [75, 76, 96], "holm": 75, "muuss": 75, "tw": 75, "vajjhala": 75, "pr": 75, "thygesen": 75, "sj": 75, "mald": 75, "ak": 75, "hunter": 75, "djb": 75, "croll": 75, "ti": 75, "flueckig": 75, "nanson": 75, "jd": 75, "rahaman": 75, "mh": 75, "aquila": 75, "liang": 75, "yoon": 75, "ch": 75, "zhao": [75, 96], "zatsepin": 75, "na": 75, "abbei": 75, "sierecki": 75, "gambin": 75, "stacei": 75, "kj": 75, "darmanin": 75, "kobe": 75, "xu": 75, "nat": [75, 96], "2578": 75, "33972532": 75, "pmc8110528": 75, "reproduc": [75, 76, 78, 83, 84, 87, 88, 93], "sbgrid": 75, "mt": 75, "zou": 75, "myeloid": 75, "differenti": [75, 83, 87, 88], "7beq": 75, "bank": 75, "814": 75, "eighteen": 75, "subdirectori": [75, 77, 85, 87, 88], "prompt": 75, "proc": [75, 76, 96], "dive": 75, "feel": [75, 83, 84, 87], "00001": 75, "00072": 75, "inde": [75, 79, 80], "Near": 75, "formatsmvtimepix_su_516x516": 75, "193": [75, 77, 83, 87], "earlier": [75, 76], "055": [75, 77, 85, 86, 87], "timepix": [75, 76], "\u00b5m": 75, "\u00e5ngstr\u00f6m": 75, "rigor": 75, "despit": [75, 79, 82, 87, 88], "2193": [75, 87], "overwritten": 75, "plai": [75, 83, 87], "improperli": 75, "photon": [75, 96, 98], "tick": [75, 88], "overlai": 75, "big": [75, 83, 87, 88], "pick": [75, 76, 78, 88], "occur": [75, 76, 83, 87, 88], "ll": [75, 82, 84, 85, 87, 88], "leav": [75, 88], "art": [75, 88], "633": [75, 85, 87], "launch": [75, 88], "But": [75, 85], "782563": 75, "622571": 75, "find_rotation_axi": 75, "627963": 75, "778243": 75, "checkbox": [75, 88], "0251": 75, "simultan": [75, 84, 88, 96], "hardli": 75, "neglig": [75, 83, 87, 93], "wander": 75, "unreason": 75, "latter": [75, 83, 87], "proport": 75, "562": [75, 83, 84, 87], "528": [75, 77, 83, 87], "51747": 75, "67141": 75, "28935": 75, "mi": [75, 79, 82, 96], "4508": 75, "118": [75, 79, 83, 87], "533": [75, 85, 87], "115": [75, 83, 87, 89], "267504": 75, "89": [75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88], "134383": 75, "knew": 75, "beforehand": 75, "cheat": 75, "paper": [75, 76, 96], "\u03b1": [75, 96], "\u03b3": 75, "favour": [75, 78, 83, 87, 88], "mc": [75, 78, 79, 80, 83, 86, 87, 96], "117": [75, 83, 85, 86, 87], "highli": [75, 84, 98], "bravais_setting_2": [75, 83, 87], "push": 75, "thu": [75, 83, 84, 87, 88], "break": [75, 94], "degeneraci": 75, "awkward": 75, "twist": 75, "sophist": [75, 83, 84, 88], "1843": [75, 87], "prudent": [75, 88], "skip": [75, 97], "drift": [75, 76], "59": [75, 82, 83, 85, 86, 87, 89], "2799": [75, 83], "6495": 75, "7070": 75, "2456": [75, 83, 87], "7603": 75, "6013": 75, "9281": 75, "0053": [75, 83, 87], "3723": 75, "0101": 75, "0321": 75, "0032": 75, "0194": [75, 83], "0051": 75, "0209": 75, "0137": 75, "0244": 75, "0117": [75, 83, 86], "0082": 75, "0002": [75, 83, 86], "0072": 75, "tell": [75, 78, 82, 84, 88, 94], "won": [75, 77, 82], "4328": [75, 87], "540": [75, 80, 87], "950": [75, 83], "403": [75, 83, 84, 87], "4849": 75, "643": [75, 87, 88], "4917": [75, 82], "335": [75, 77, 83, 87], "ibg": [75, 82, 83, 86, 87], "cc_pearson": [75, 83, 86, 87], "cc_spearman": [75, 83, 86, 87], "rock": 75, "454": [75, 83, 87], "003907": 75, "083698": 75, "came": 75, "chmod": 75, "snapshot": [75, 96, 98], "tend": [75, 76], "pai": [75, 77, 88], "attent": [75, 77, 88], "contrast": [75, 88], "synchrotron": [75, 79, 91, 95, 97, 98], "regard": [75, 88], "3ded": [75, 81], "435": [75, 83, 87], "317": [75, 83, 87], "886": [75, 79, 83, 84, 85], "460": [75, 83, 86, 87], "336": [75, 83, 87], "830": 75, "113": [75, 77, 82, 83, 85, 87], "657": [75, 85, 87], "154": [75, 77, 79, 82, 83, 86, 87], "106": [75, 82, 83, 85, 87], "787": 75, "919": [75, 83, 87], "773": [75, 77, 85], "slope": [75, 77, 80, 83, 85, 87, 88, 89], "015": [75, 80, 85, 87, 88], "df": [75, 77, 83, 85, 87, 88, 89], "di": [75, 77, 83, 85, 87, 88, 89, 96], "811": [75, 83, 86], "36662": 75, "2125": [75, 85], "974": [75, 82, 85], "2705": [75, 87], "144": [75, 77, 83, 87], "xdg": 75, "successfulli": [76, 84], "protocol": [76, 84], "peculiar": 76, "gruen": [76, 96], "jm": [76, 96], "abraham": [76, 96], "jp": [76, 96], "biol": [76, 96], "518": [76, 83, 85, 87, 96], "jun": [76, 96], "29872002": [76, 96], "pmc6096487": [76, 96], "2084": 76, "g06727c3": 76, "posix": 76, "compliant": 76, "seven": 76, "gzip": 76, "lys_ed_dataset_": 76, "lys_ed_dataset_1": 76, "shall": [76, 79, 85, 86, 93], "parent": [76, 88], "data_par": 76, "pwd": 76, "minicbf": 76, "unusu": [76, 84], "formatcbfminitimepix": 76, "fi": 76, "outlin": [76, 79, 83, 87], "dummi": 76, "distort": [76, 79, 83, 87, 88], "s2059798317010348": 76, "ellipt": 76, "six": [76, 89], "ellips": 76, "generate_distortion_map": 76, "lys_ed_dataset_2": 76, "frame_value_018": 76, "l1": 76, "l2": 76, "centre_xi": 76, "2475": [76, 86], "subsect": 76, "cat": 76, "018138": 76, "999803": 76, "008012": 76, "3525": [76, 87], "535": [76, 83, 87], "1890": [76, 87], "frame_value_": 76, "tendenc": 76, "recreat": 76, "515": [76, 83, 87], "504": [76, 83, 85, 87], "438": [76, 83, 87], "1615": [76, 87], "309": [76, 83, 87, 96], "2055": 76, "0344": 76, "lys_ed_dataset_3": 76, "0481": 76, "485": [76, 79, 83, 87], "lys_ed_dataset_4": 76, "lys_ed_dataset_5": 76, "305": [76, 83, 87], "952": [76, 83, 87], "lys_ed_dataset_6": 76, "blank": 76, "222": [76, 77, 83, 85, 86, 87], "358": [76, 83, 87], "207": [76, 83, 85, 87], "lys_ed_dataset_7": 76, "833": [76, 83, 86], "stabilis": 76, "tau_2": 76, "tau_3": 76, "tau2": 76, "tau3": 76, "bravais_setting_5": [76, 78, 86, 87], "poor": [76, 78, 81, 82, 83, 84, 87, 88], "soft": 76, "awai": [76, 82], "did": [76, 78, 82, 84, 98], "impos": [76, 86], "obviou": [76, 83, 84, 87], "refined_experi": 76, "compens": [76, 87], "seen": [76, 82, 83, 87, 88], "longer": [76, 82, 83, 84, 85, 86, 87], "itself": [76, 82], "meant": 76, "chose": [76, 82, 88], "integrated_experi": 76, "integrated_3": [76, 89], "integrated_4": [76, 89], "integrated_5": 76, "integrated_6": 76, "integrated_7": 76, "2_1": [76, 78, 85], "declar": 76, "hklin": [76, 87], "integrated_": [76, 84, 94], "sorted_": 76, "pointless_reindex_": 76, "sorted_1": 76, "sorted_2": 76, "sorted_3": 76, "sorted_4": 76, "sorted_5": 76, "sorted_6": 76, "sorted_7": 76, "pointless_combin": 76, "outofsequencefil": 76, "come": [77, 84], "tool": [77, 78, 79, 83, 85, 87, 88, 90, 91], "cumbersom": 77, "dispos": [77, 79], "kindli": [77, 79], "school": 77, "spring": 77, "bl32xu_group2_data": 77, "zoo": 77, "9m": 77, "tetragon": [77, 82], "lysozym": 77, "outset": 77, "care": [77, 82, 83, 84, 87, 88], "dozen": 77, "hundr": 77, "organis": [77, 100], "yourself": 77, "sweep00": 77, "sweep30": 77, "combine0": 77, "spell": 77, "printf": 77, "02d": [77, 84], "ten": 77, "somewher": 77, "p4": [77, 82, 97], "mmm": 77, "0015": 77, "0013": [77, 82, 83, 86], "0012": [77, 87], "00078": 77, "00062": 77, "00047": 77, "081": [77, 83, 85, 86, 87], "946": [77, 83], "93": [77, 79, 82, 83, 85, 86, 87, 89, 96], "2189": 77, "2723": [77, 87], "firefox": [77, 85], "graphic": [77, 83, 87, 88], "critic": [77, 82, 98], "275": [77, 83, 85, 87], "156": [77, 83, 85, 87], "063": [77, 82, 83, 86, 87, 88, 89], "141": [77, 83, 85, 86, 87], "134": [77, 79, 82, 83, 85, 86, 87], "130": [77, 79, 83, 87], "525": [77, 82, 83, 87, 96], "163": [77, 83, 87], "048": [77, 85], "064": [77, 85, 86], "061": [77, 85, 86, 87], "165": [77, 83, 85, 87], "278": [77, 82, 83, 85, 86, 87], "039": [77, 85, 86, 87], "095": [77, 86, 87, 89], "167233": 77, "9155": 77, "8507": 77, "247651": 77, "22555": 77, "1278": [77, 87], "1104": [77, 82, 83, 86], "42048": 77, "enthusiast": 77, "676": [77, 87], "588": [77, 86, 87], "131": [77, 79, 82, 83, 87], "801": 77, "823": 77, "060": [77, 80, 83, 85], "864": [77, 85], "370": [77, 82, 83, 87], "258": [77, 82, 83, 87], "087": [77, 85], "094": [77, 85], "158400": 77, "8650": 77, "8072": 77, "21401": 77, "1212": [77, 85], "1054": 77, "worth": [77, 79, 83, 84, 85, 86, 87, 88], "227": [77, 82, 83, 86, 87], "793": 77, "749": [77, 85], "084": [77, 83, 85, 87], "892": [77, 87], "021": [77, 79, 83, 85, 86], "728": 77, "026": [77, 83, 85, 87, 88], "018": [77, 83, 85], "997": [77, 83, 85, 86, 87], "240": [77, 83, 87], "086": [77, 83, 85, 87], "549": [77, 82, 87], "301412": 77, "16640": 77, "15140": 77, "321968": 77, "20324": 77, "1149": 77, "21649": 77, "somehow": 77, "compute_delta_cchalf": [77, 85], "625": [77, 83, 87], "599": [77, 83, 87], "254": [77, 79, 82, 83, 87], "056": [77, 83, 85, 86, 87], "463": [77, 83, 87], "508": [77, 83, 85, 86, 87], "527": [77, 83, 87], "758": [77, 82, 83], "770": 77, "843": [77, 87], "854": [77, 83], "898": [77, 83], "705": [77, 80, 83, 87], "delta_cc_half": [77, 85], "3674101744536096": 77, "stddev": [77, 85], "1112402970091422": 77, "0775510135829585": 77, "139": [77, 83, 86, 87], "238": [77, 82, 83, 87], "038": [77, 86, 97], "482": [77, 83, 87], "196": [77, 83, 85, 87], "153": [77, 79, 82, 83, 85, 87], "316": [77, 83, 85, 86, 87], "088": [77, 85, 86, 87], "522": [77, 79, 83, 87], "300879": 77, "16563": 77, "15320": 77, "304888": 77, "21363": 77, "1203": [77, 83], "21637": 77, "textrm": [77, 82], "pim": [77, 85, 86], "069": [77, 85, 86], "135": [77, 82, 83, 87], "448": [77, 83, 87], "619": [77, 87], "092": 77, "255800": 77, "14071": 77, "13145": 77, "21540": 77, "1061": [77, 83], "realist": 77, "revisit": 77, "198": [77, 83, 85, 87], "239": [77, 83, 86, 87, 96], "025": [77, 83, 85, 87, 89], "639": [77, 87], "231": [77, 82, 83, 85, 87], "626": [77, 87, 96], "415898": 77, "22943": 77, "21222": 77, "21636": 77, "1220": [77, 87], "1065": [77, 83], "252": [77, 82, 83, 85, 87], "319": [77, 83, 87], "400": [77, 82, 83, 86, 87], "461": [77, 83, 87], "674": [77, 83, 87], "724": [77, 85], "824": [77, 83], "097": [77, 83, 85, 86], "187": [77, 83, 87], "321": [77, 83, 85, 87], "042": [77, 85, 86], "083": [77, 83, 85], "019": [77, 83, 85, 87, 88], "973": [77, 83, 86], "226": [77, 83, 87], "616": [77, 84, 85, 87], "400223": 77, "22084": 77, "20368": 77, "21639": 77, "1221": [77, 83, 85, 87], "1063": [77, 83], "chanc": [77, 83, 87, 88, 97], "snow": 77, "blind": 77, "ceas": 77, "blame": 77, "substructur": 77, "far": [77, 82, 84, 89], "focuss": 77, "someth": [77, 79, 83, 84, 87], "outward": [77, 79], "xia": 77, "manner": [77, 83, 87, 88, 97], "mplex": 77, "tricki": 77, "question": [77, 79, 81, 85], "risk": 77, "situ": [77, 84, 85], "repeatedli": 77, "dot": [77, 83, 87], "visibl": [77, 83, 87, 88], "appar": [77, 82, 87, 88], "detract": 77, "touch": 77, "rapidli": 77, "mayb": 77, "ran": [77, 84], "cluster_20": 77, "27_dial": 77, "multiplicities_h_0": 77, "two_theta_refine_2theta": 77, "27_refined_cel": 77, "multiplicities_k_0": 77, "28_dial": 77, "28_scale": 77, "multiplicities_l_0": 77, "28_scaled_unmerg": 77, "29_dial": 77, "highlight": [77, 88], "thought": [78, 79], "solv": [78, 79, 83, 87, 88, 89], "late": 78, "warn": [78, 79, 84, 85, 87], "pipelin": [78, 80, 83, 85, 87, 96], "accordingli": 78, "ctruncat": [78, 87], "nc": [78, 85], "face": [78, 82, 91], "spend": 78, "notic": [78, 82, 83, 87, 88, 93], "subtl": 78, "suspect": [78, 79], "central": [78, 80, 82], "5th": 78, "odd": 78, "theori": [78, 93], "easi": [78, 83, 84, 87, 88], "a222": 78, "unconvent": 78, "839": [78, 84], "20000": [78, 79, 83, 87], "oc": [78, 79, 80, 86, 87], "678848": 78, "678373": 78, "678914": 78, "338728": 78, "338516": 78, "mimick": 78, "exercis": [78, 79], "diagnost": [78, 79], "isol": 78, "onward": 78, "rebuild": 78, "5i3l": 78, "contrari": 78, "firstli": 78, "pseudo": [78, 85], "dimer": 78, "superpos": 78, "wors": [78, 82, 83, 84, 85, 87, 88], "disord": 78, "undergon": 78, "transit": 78, "thorough": 78, "ultim": 78, "thank": [78, 79, 84], "wolfram": [78, 79], "tempel": [78, 79], "andrei": 78, "lebedev": 78, "versu": [78, 83, 87, 88], "pseudocentr": 79, "dealt": 79, "pernici": 79, "outright": 79, "careless": 79, "useless": [79, 84], "cautionari": 79, "tale": 79, "moral": 79, "xvf": 79, "dpf3_247398": 79, "x247398": 79, "t1": 79, "unrecognis": 79, "asid": 79, "whatev": [79, 83, 84, 87, 88], "keen": 79, "ei": 79, "button": [79, 83, 87, 88], "worri": [79, 82, 88], "neat": [79, 82], "spiral": 79, "grossli": 79, "understand": [79, 83, 86, 87, 88, 98], "inaccur": 79, "succe": 79, "word": 79, "straight": [79, 82, 83, 87, 88], "increasingli": 79, "imagin": 79, "unwarp": 79, "98416": 79, "6552": 79, "4345": 79, "23317": 79, "119": [79, 82, 83, 85, 87, 97], "682": [79, 87], "experienc": 79, "paus": 79, "66": [79, 82, 83, 85, 86, 87, 88, 96], "sceptic": 79, "messi": 79, "messier": 79, "heed": 79, "7490": 79, "hp": [79, 96], "1702991": 79, "043": [79, 80, 83, 85, 87], "057": [79, 85], "215": [79, 83, 85, 87], "3484342": 79, "601": [79, 85, 87], "027": [79, 83, 85, 87], "214": [79, 83, 87], "53": [79, 80, 82, 83, 84, 85, 86, 87], "3466356": 79, "3289": [79, 86], "564": [79, 85, 87], "3297608": 79, "3233": [79, 87], "040": [79, 85, 87, 88], "3624346": 79, "210": [79, 83, 87, 88], "3205385": 79, "1761030": 79, "2564": [79, 87], "437": [79, 83, 87], "3358310": 79, "1535": [79, 87], "3057089": 79, "0684": 79, "031": [79, 85, 86, 87], "204": [79, 83, 87], "91": [79, 83, 85, 86, 87], "2949728": 79, "6885": 79, "3288791": 79, "19928": 79, "1576060": 79, "jump": [79, 87], "rough": 79, "latch": 79, "bragg": 79, "offer": [79, 98], "dh": 79, "dk": 79, "2996": 79, "171": [79, 83, 85, 86, 87], "3151": 79, "241": [79, 82, 83, 85, 87], "3147": 79, "2924": 79, "159": [79, 83, 84, 85, 87], "3097": [79, 87], "3232": [79, 87], "2729": 79, "2904": [79, 87], "3139": 79, "1573": [79, 87], "2876": 79, "2992": 79, "3135": [79, 87], "2851": 79, "3005": [79, 87], "3156": 79, "339": [79, 80, 83, 87], "2792": [79, 83], "244": [79, 83, 85, 87], "3073": 79, "283": [79, 83, 87], "3718": 79, "symop": 79, "culprit": 79, "badli": [79, 88], "sit": 79, "macrocyl": [79, 83, 87, 88], "dp": [79, 88, 96], "old": 79, "1562": [79, 83, 87], "1508": [79, 84, 87], "152": [79, 82, 83, 85, 87], "1560": [79, 87], "1490": [79, 87], "162": [79, 82, 83, 84, 85, 87], "1584": [79, 87], "1498": [79, 87], "convinc": 79, "50948": 79, "56722": 79, "20791": 79, "62669": 79, "521": [79, 82, 83, 87], "9765": 79, "9914": 79, "0028": 79, "0250": 79, "679306": 79, "0237": 79, "679612": 79, "679516": 79, "0091": [79, 83, 86], "678570": 79, "678646": 79, "foreseen": 79, "earli": [79, 84], "circumv": 79, "topic": 79, "wrongli": 79, "life": 79, "encount": [79, 80, 84], "excel": 79, "troubleshoot": 79, "manifest": 79, "insidi": 79, "nightli": [80, 92], "mx": [80, 83, 85, 87, 89, 98], "dials_tutori": 80, "i04_thaumatin": 80, "dev20191028": 80, "python2": 80, "dls_sw": 80, "app": 80, "clibd": 80, "lib": 80, "ccp4_scr": 80, "tmp": 80, "tmp4xxusn": 80, "thaumatin": [80, 82], "4229": 80, "gb": [80, 82, 83, 87], "cs03r": 80, "sc": 80, "serv": 80, "contact": 80, "gmail": 80, "g73f70f18": 80, "1038": [80, 83], "gf37b0db7a": 80, "sweep1": 80, "120152": 80, "2197": 80, "tp": [80, 86], "ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo": 80, "oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo": 80, "ok": [80, 88, 89], "abandon": 80, "97625": 80, "th_8_2_": 80, "13_integr": 80, "070": [80, 83, 87], "356": [80, 83, 87], "035": [80, 83, 85, 86, 87, 88], "012": [80, 85, 86, 87, 89], "321472": 80, "25415": 80, "70801": 80, "4729": [80, 87], "78346": 80, "9943": 80, "automatic_default_fre": 80, "mtz_unmerg": 80, "automatic_default_scaled_unmerg": 80, "took": [80, 82, 84], "00h": 80, "06m": 80, "citat": [80, 85], "bibtex": [80, 85], "bib": [80, 85], "winn": 80, "235": [80, 83, 86, 87], "love": 80, "hear": 80, "sourceforg": [80, 91], "dui": 81, "introductori": 81, "molecul": 81, "sar": 81, "cov": 81, "proteas": 81, "mpro": 81, "dpf3": 81, "tile": [81, 83, 87, 88], "blend": 81, "biotin": 81, "analyse_output": 82, "characteris": 82, "p6m": 82, "isn": 82, "mechan": [82, 84], "workaround": 82, "p6m_60_panel": 82, "thaum_m10s15_3_": 82, "matur": 82, "adxv": [82, 87], "albula": 82, "360": [82, 83, 87, 88], "supercel": 82, "plenti": 82, "q1": [82, 83, 84, 87], "med": [82, 83, 84, 87, 96], "q3": [82, 83, 84, 87], "xo": [82, 83, 84, 87], "04261": 82, "0004832": 82, "0424": 82, "yo": [82, 83, 84, 87], "697": [82, 83, 87], "03481": 82, "001733": 82, "03682": 82, "656": [82, 87], "phic": [82, 83, 84, 87], "phio": [82, 83, 84, 87], "9645": 82, "06454": 82, "0007655": 82, "06379": 82, "8353": 82, "133": [82, 83, 85, 87], "18025": 82, "067273": 82, "063827": 82, "086195": 82, "067369": 82, "063706": 82, "086197": 82, "067439": 82, "063629": 82, "086155": 82, "067531": 82, "063529": 82, "086115": 82, "067587": 82, "063456": 82, "086122": 82, "067607": 82, "063419": 82, "067617": 82, "063401": 82, "086176": 82, "06762": 82, "063395": 82, "086181": 82, "39314": 82, "36858": 82, "24623": 82, "53322": 82, "82846": 82, "14379": 82, "37822": 82, "43153": 82, "26887": 82, "297": [82, 83, 84, 85, 87], "41585": 82, "40848": 82, "26118": 82, "5563": 82, "40867": 82, "27493": 82, "49115": 82, "43483": 82, "21656": [82, 87], "41713": 82, "46071": 82, "27804": [82, 86], "44932": 82, "51832": 82, "26569": 82, "33153": 82, "28766": 82, "25461": 82, "478": [82, 83, 87], "38555": 82, "40525": 82, "26244": 82, "47338": 82, "45054": 82, "24652": 82, "40191": 82, "959": [82, 83, 86, 87], "2976": 82, "701": [82, 83, 85, 87], "31004": 82, "3035": [82, 87], "24597": 82, "1128": 82, "37366": 82, "24303": 82, "24016": 82, "33404": 82, "32094": 82, "24614": 82, "50746": 82, "47124": 82, "27169": 82, "40185": 82, "56122": 82, "3029": 82, "745": 82, "21926": 82, "30075": 82, "21426": 82, "17864": 82, "17706": 82, "2176": [82, 83], "778": 82, "36795": 82, "21167": 82, "20696": 82, "269": [82, 83, 85, 87], "44757": 82, "40028": 82, "23809": 82, "48078": 82, "65283": 82, "34241": 82, "467": [82, 83, 87], "37577": 82, "35789": 82, "20992": 82, "22329": 82, "29697": 82, "20943": 82, "447": [82, 83, 87], "36708": 82, "22722": 82, "20176": 82, "28466": 82, "52795": 82, "31729": 82, "36377": 82, "1547": 82, "70452": 82, "14842": 82, "29869": 82, "23437": 82, "13375": 82, "17175": 82, "1222": [82, 83, 87], "14108": 82, "17261": 82, "40725": 82, "85708": 82, "42044": 82, "60805": 82, "57195": 82, "43388": 82, "281": [82, 83, 87], "18353": 82, "21351": 82, "2061": 82, "19984": 82, "15417": 82, "1993": 82, "15006": 82, "27665": 82, "21823": 82, "44084": 82, "50436": 82, "38365": 82, "86526": 82, "47248": 82, "32568": 82, "54992": 82, "31614": 82, "19036": 82, "22611": 82, "12494": 82, "21894": 82, "624": [82, 87], "23105": 82, "20793": [82, 85], "22246": 82, "43408": 82, "43312": 82, "2724": 82, "55289": 82, "3935": 82, "26933": 82, "29543": 82, "24331": [82, 86], "23127": 82, "771": 82, "46252": 82, "19655": 82, "2348": 82, "658": [82, 86, 87], "24901": 82, "31232": 82, "24217": 82, "44994": 82, "43547": 82, "28695": 82, "5679": 82, "44719": 82, "23983": 82, "44117": 82, "44019": 82, "24586": 82, "592": [82, 83, 87], "3056": [82, 87], "44653": 82, "24795": 82, "411": [82, 83, 87], "67885": 82, "39219": 82, "2588": 82, "45355": 82, "5659": 82, "2611": 82, "0009": [82, 87], "46232": 82, "21423": 82, "72162": 82, "36619": 82, "23884": 82, "51574": 82, "48569": 82, "2488": 82, "41145": 82, "40151": 82, "2671": [82, 87], "5362": 82, "50568": 82, "21454": 82, "85351": 82, "57076": 82, "24389": 82, "72428": 82, "38373": 82, "27121": 82, "80208": 82, "98469": 82, "27939": 82, "5144": 82, "3281": 82, "30346": 82, "33371": 82, "50058": 82, "24425": 82, "192715": 82, "834": [82, 87], "022": [82, 83, 85], "4122": 82, "9018": 82, "1299": [82, 87], "2361": [82, 83], "0320": 82, "9712": 82, "8800": 82, "4310": [82, 87], "0173": 82, "0067": 82, "0071": 82, "0156": [82, 83], "0041": [82, 83, 87], "0006": 82, "0065": 82, "0152": 82, "0075": 82, "quarter": [82, 85, 88], "quicker": 82, "yet": [82, 83, 84, 87, 88], "use_all_reflect": 82, "refined_lev0": 82, "487": [82, 83, 85, 86, 87], "04174": 82, "000276": 82, "03468": 82, "00168": 82, "03656": 82, "654": [82, 87], "06627": 82, "002108": 82, "6375": 82, "2933": 82, "04128": 82, "167e": 82, "04112": 82, "3725": 82, "4707": [82, 85], "03376": 82, "001821": 82, "03588": 82, "4945": 82, "6965": 82, "06574": 82, "002213": 82, "06229": 82, "7919": 82, "186203": 82, "064091": 82, "057786": 82, "086136": 82, "064045": 82, "057829": 82, "08608": 82, "063949": 82, "05791": 82, "086068": 82, "063825": 82, "058023": 82, "086026": 82, "063734": 82, "058114": 82, "085958": 82, "063682": 82, "058167": 82, "085909": 82, "063654": 82, "058198": 82, "085887": 82, "063645": 82, "058208": 82, "085882": 82, "063644": 82, "05821": 82, "37002": 82, "33843": 82, "24538": 82, "47216": 82, "59331": 82, "22352": 82, "1363": [82, 87], "35019": 82, "46301": 82, "26549": 82, "3076": 82, "4128": 82, "40658": 82, "26659": 82, "1630": [82, 83, 87], "39692": 82, "25547": 82, "112": [82, 83, 86, 87], "39711": 82, "42575": 82, "23841": 82, "35145": 82, "51263": 82, "25474": 82, "3489": 82, "3238": 82, "48667": 82, "25694": 82, "6172": [82, 83], "30869": 82, "27402": 82, "25323": 82, "3908": 82, "37309": 82, "38322": 82, "25577": 82, "680": [82, 87], "46698": 82, "44533": 82, "24812": 82, "1178": [82, 83], "33544": 82, "51129": 82, "26289": 82, "5690": 82, "28409": 82, "29009": 82, "24376": 82, "9385": 82, "36731": 82, "23495": 82, "23873": 82, "6878": 82, "31962": 82, "31088": 82, "23691": 82, "1749": [82, 87], "43068": 82, "47078": 82, "25696": 82, "1870": [82, 86], "29306": 82, "46181": 82, "26494": 82, "6328": 82, "19137": 82, "29002": 82, "21465": 82, "7599": 82, "17418": 82, "1739": [82, 83], "22093": 82, "7072": 82, "36776": 82, "18662": 82, "20821": 82, "2609": 82, "37377": 82, "42663": 82, "24206": 82, "1806": 82, "40342": 82, "57026": 82, "32007": 82, "4247": 82, "35488": 82, "34512": 82, "19181": 82, "3558": 82, "21403": 82, "30996": 82, "20695": 82, "4103": 82, "36559": 82, "19154": 82, "17851": 82, "2270": [82, 86], "25744": 82, "48077": 82, "26616": 82, "480": [82, 83, 85, 87], "38505": 82, "0035": [82, 86, 87], "73284": 82, "930": 82, "15033": 82, "26661": 82, "34611": 82, "11836": 82, "19105": 82, "18709": 82, "11907": 82, "25901": 82, "30046": 82, "41024": 82, "95027": 82, "72705": 82, "1478": [82, 87], "56625": 82, "3835": [82, 87], "34664": 82, "3216": [82, 87], "16373": 82, "19856": 82, "19257": 82, "2826": 82, "20149": 82, "14689": 82, "19485": 82, "3285": 82, "12942": 82, "30274": 82, "20848": 82, "1965": [82, 87], "38874": 82, "45564": 82, "38875": 82, "1934": [82, 83, 87], "61707": 82, "35339": 82, "25067": 82, "55413": 82, "29556": 82, "19246": 82, "5992": 82, "2137": [82, 87], "12029": 82, "21502": 82, "6589": 82, "2254": 82, "21047": 82, "21193": 82, "2763": [82, 87], "39851": 82, "41673": 82, "27272": 82, "1512": [82, 83, 87], "50654": 82, "36893": 82, "25051": 82, "6476": 82, "28308": 82, "21635": 82, "22668": 82, "9212": 82, "40577": 82, "18283": 82, "2252": [82, 83], "7521": 82, "22936": 82, "29881": 82, "23864": 82, "2392": 82, "40816": 82, "42881": 82, "2751": [82, 87], "611": [82, 87], "56917": 82, "48084": 82, "26191": 82, "4379": [82, 87], "42672": 82, "42447": 82, "25285": 82, "7749": 82, "29309": 82, "4378": 82, "24631": 82, "5470": 82, "67537": 82, "37528": 82, "25187": 82, "1210": [82, 84, 87], "42778": 82, "53938": 82, "27266": 82, "92194": 82, "45501": 82, "24629": 82, "2235": [82, 87], "71785": 82, "33424": 82, "25781": 82, "41055": 82, "38155": 82, "25735": 82, "2757": 82, "44268": 82, "40149": 82, "26646": 82, "52856": 82, "51306": 82, "28205": 82, "60967": 82, "26482": 82, "1507": [82, 83, 87], "70752": 82, "67612": 82, "25844": 82, "786": [82, 83, 87], "53669": 82, "50635": 82, "27127": 82, "43205": 82, "65796": 82, "25585": 82, "backstop": 82, "thrown": 82, "notabl": 82, "hieararchy_level": 82, "lcl": 82, "deep": 82, "refined_lev1": 82, "never": 82, "rate": [82, 84, 88, 98], "underwai": [82, 95], "minut": [82, 84, 85, 98], "desktop": [82, 84], "i7": [82, 84], "cpu": [82, 84, 98], "07ghz": [82, 84], "ram": 82, "496": [82, 83, 87], "04178": 82, "0004518": 82, "04222": 82, "903": [82, 85], "03577": 82, "0006705": 82, "576": [82, 83, 87], "06467": 82, "0007391": 82, "06414": 82, "6433": 82, "04138": 82, "0001204": 82, "3683": [82, 87], "4838": 82, "0008164": 82, "03518": 82, "6969": 82, "06416": 82, "0008647": 82, "06351": 82, "7644": 82, "186145": 82, "063617": 82, "058127": [82, 83], "085801": 82, "056976": 82, "05538": 82, "085719": 82, "049808": 82, "052619": 82, "085597": 82, "04634": 82, "051408": 82, "085475": 82, "045568": 82, "051142": 82, "085391": 82, "04538": [82, 83], "051014": 82, "085337": 82, "045228": 82, "050729": 82, "085285": 82, "045054": 82, "050076": 82, "085215": 82, "044868": 82, "049034": 82, "085115": 82, "044746": 82, "048167": 82, "085025": 82, "044708": 82, "047833": 82, "08498": 82, "044695": 82, "047759": 82, "084969": 82, "04468": 82, "047738": 82, "084967": 82, "044668": 82, "047726": 82, "044662": 82, "047721": 82, "04466": [82, 83], "047719": 82, "25965": 82, "27743": 82, "24276": 82, "32036": 82, "57819": 82, "22482": 82, "34304": [82, 83], "4111": [82, 83], "26504": 82, "3079": [82, 87], "3561": 82, "36483": 82, "26682": 82, "1632": [82, 86, 87], "37843": 82, "37838": 82, "25453": 82, "39065": 82, "39675": 82, "23706": 82, "30539": 82, "48132": 82, "25442": 82, "3490": [82, 87], "29682": 82, "35249": 82, "25661": 82, "6178": 82, "28525": 82, "27486": 82, "25318": 82, "3909": 82, "31728": 82, "30551": 82, "25565": 82, "675": [82, 83, 87], "39465": 82, "42802": 82, "24507": 82, "1175": [82, 83], "30057": 82, "46365": 82, "26215": 82, "5685": 82, "23485": 82, "27143": 82, "24326": 82, "9386": 82, "20171": 82, "18887": 82, "23872": 82, "6880": 82, "23494": 82, "23081": 82, "23689": 82, "1746": [82, 83, 87], "31911": 82, "40137": 82, "25357": 82, "27575": 82, "44911": 82, "26334": 82, "6321": 82, "18338": 82, "21691": 82, "21382": 82, "7608": 82, "14673": 82, "13459": 82, "22118": 82, "7075": 82, "15323": 82, "1772": [82, 85], "20816": 82, "2608": 82, "27977": 82, "40106": 82, "23663": 82, "1803": 82, "24748": 82, "54944": 82, "31271": 82, "4249": 82, "15151": 82, "21436": 82, "18971": 82, "3560": 82, "11336": 82, "12431": 82, "20676": 82, "10087": 82, "16239": 82, "17534": 82, "2271": 82, "20061": 82, "46907": 82, "24929": 82, "476": [82, 83, 87], "26774": 82, "94809": 82, "69743": 82, "927": [82, 83, 85], "10167": 82, "22193": 82, "33398": 82, "097735": 82, "13559": 82, "1876": [82, 85], "977": [82, 85, 86], "069491": 82, "1907": 82, "29589": 82, "19349": 82, "91362": 82, "67233": 82, "1474": [82, 83, 87], "31601": 82, "36268": 82, "32879": 82, "3209": 82, "13728": 82, "15038": 82, "18643": 82, "2829": 82, "10162": 82, "11078": 82, "19453": 82, "3276": [82, 87], "10363": 82, "17357": 82, "2043": 82, "1951": 82, "20521": 82, "4038": 82, "36983": 82, "1931": 82, "37408": 82, "28915": 82, "24379": 82, "5869": 82, "18862": 82, "14476": 82, "1912": [82, 87, 96], "5991": 82, "13887": 82, "11716": 82, "21506": 82, "6591": 82, "15001": 82, "19861": 82, "21179": 82, "25238": 82, "36458": 82, "26476": 82, "1511": [82, 87], "47841": 82, "27181": 82, "24826": 82, "6461": 82, "27368": 82, "18468": 82, "22587": 82, "9213": 82, "19848": 82, "15776": [82, 83], "22531": 82, "21923": 82, "24706": 82, "2383": 82, "2390": 82, "32645": 82, "40052": 82, "27085": 82, "55212": 82, "29673": 82, "26008": 82, "38894": 82, "24988": 82, "25198": 82, "7747": 82, "2824": 82, "2289": 82, "29905": 82, "31716": 82, "25135": 82, "41311": 82, "47572": 82, "2691": [82, 83, 87], "69191": 82, "39228": 82, "2447": 82, "2231": 82, "47797": 82, "32129": 82, "25717": 82, "38899": 82, "31331": 82, "25676": 82, "2758": [82, 87], "39246": 82, "40955": 82, "26575": 82, "48186": 82, "52671": 82, "2798": 82, "57234": 82, "42803": 82, "2643": 82, "494": [82, 83, 84, 86, 87], "41177": 82, "25741": 82, "48028": 82, "48906": 82, "26898": 82, "39499": 82, "38962": 82, "2466": 82, "mv": 82, "analysis_lev0": 82, "analysis_lev1": 82, "rewrit": 82, "incorpor": [82, 99], "tutorial_data": [82, 87], "th_8_2": 82, "53916": 82, "26341": 82, "21858": 82, "sv_refin": 82, "1093": 82, "1100": [82, 87], "984": [82, 83, 87], "2317": 82, "2331": 82, "2138": 82, "3776": [82, 87], "3803": 82, "3581": 82, "5416": 82, "5450": 82, "5100": 82, "7235": 82, "7289": 82, "6806": 82, "9504": 82, "9567": 82, "8952": 82, "12495": 82, "12582": 82, "11826": 82, "16967": [82, 83], "17078": 82, "16125": 82, "20187": 82, "20340": 82, "19437": 82, "23623": 82, "23881": 82, "22761": 82, "24126": 82, "271": [82, 83, 85, 87], "24397": 82, "23289": 82, "25506": 82, "25787": 82, "24863": 82, "24269": 82, "24510": 82, "23389": 82, "24780": 82, "25018": 82, "24019": 82, "25710": 82, "25988": 82, "25059": 82, "24757": 82, "25031": 82, "24000": 82, "25673": 82, "25925": 82, "25119": 82, "25214": 82, "25511": 82, "24607": 82, "25766": 82, "303": [82, 83, 87], "26069": 82, "25226": 82, "338720": 82, "4747": 82, "331984": 82, "317541": 82, "uncorrect": [82, 83, 85, 87, 88], "misorient": 82, "bewar": 82, "forgiv": 82, "corrected_refin": 82, "snippet": 82, "4049": 82, "688": [82, 83, 87], "019202": 82, "28874": 82, "30251": 82, "045937": 82, "045205": 82, "4701": 82, "02988": 82, "01025": 82, "02159": 82, "6902": 82, "7267": 82, "02846": 82, "005739": 82, "02339": 82, "247": [82, 83, 85, 87], "01035": 82, "562e": 82, "01104": 82, "4029": 82, "2382": 82, "1148": [82, 85], "02997": 82, "01092": 82, "01966": 82, "1397": [82, 87], "02791": 82, "005742": 82, "02263": 82, "2531": 82, "1881": 82, "009998": 82, "0001419": 82, "0109": [82, 83], "1176": 82, "53738": 82, "04524": [82, 83], "04251": 82, "015875": 82, "043495": 82, "041514": 82, "015395": 82, "042657": 82, "040762": 82, "01535": 82, "040455": 82, "038826": 82, "015287": 82, "0356": 82, "034575": 82, "015251": 82, "028146": 82, "027998": 82, "015246": 82, "021919": 82, "022913": 82, "015245": 82, "019867": 82, "021931": 82, "015256": 82, "019579": 82, "02202": 82, "015267": 82, "019553": 82, "02204": 82, "015269": 82, "019552": 82, "022041": 82, "11368": 82, "12815": 82, "10179": 82, "18212": 82, "28586": 82, "12145": 82, "15295": 82, "24972": 82, "12934": 82, "609": [82, 87], "1286": [82, 83, 87], "21324": 82, "12291": 82, "1243": [82, 83], "21443": 82, "10878": 82, "1189": [82, 83, 85, 87], "14339": 82, "19084": 82, "10244": 82, "2389": 82, "097393": 82, "16185": 82, "1550": [82, 87], "084417": 82, "14168": 82, "098364": 82, "14653": 82, "17253": 82, "11116": 82, "21387": 82, "15463": 82, "10746": 82, "2728": [82, 83], "11345": 82, "15427": 82, "081722": 82, "4265": 82, "060489": 82, "096919": 82, "2952": [82, 87], "07167": 82, "092076": 82, "093342": 82, "565": [82, 83, 85, 87], "1626": [82, 86, 87], "11391": 82, "11975": 82, "18454": 82, "16728": 82, "16016": 82, "2772": 82, "092555": 82, "12647": 82, "076534": 82, "2873": 82, "047736": 82, "10398": 82, "090391": 82, "2686": 82, "063075": 82, "074814": 82, "075038": 82, "729": 82, "16869": 82, "11128": 82, "14306": 82, "81495": 82, "29087": 82, "44711": 82, "406": [82, 83, 87], "080441": 82, "12121": 82, "098888": 82, "425": [82, 83, 86, 87], "052654": 82, "15365": 82, "0754": 82, "06931": 82, "066238": 82, "073655": 82, "85448": 82, "22713": 82, "24889": 82, "579": [82, 83, 86, 87], "21735": 82, "11564": 82, "18439": 82, "1994": 82, "061756": 82, "09509": 82, "068866": 82, "1924": 82, "091952": 82, "11146": 82, "083513": 82, "2166": 82, "088252": 82, "10009": 82, "085247": 82, "13737": 82, "16646": 82, "1872": 82, "634": [82, 83, 87], "16379": 82, "093519": 82, "12164": 82, "2835": 82, "067371": 82, "080697": 82, "081958": 82, "3737": [82, 87], "094318": 82, "086918": 82, "10408": 82, "2806": 82, "098988": 82, "13001": 82, "082836": 82, "417": [82, 83, 86, 87], "17099": 82, "18814": 82, "12774": 82, "20834": 82, "14785": 82, "10324": 82, "1817": 82, "082715": 82, "1174": [82, 85], "10219": 82, "2385": 82, "1096": [82, 83], "12543": 82, "10965": 82, "1589": [82, 87], "12167": 82, "17861": 82, "099929": 82, "21088": 82, "2111": [82, 87], "10221": [82, 85], "19222": 82, "16491": 82, "16288": 82, "094714": 82, "15589": 82, "1232": [82, 84], "1047": [82, 83, 84], "11775": 82, "17961": 82, "12234": 82, "12735": 82, "22443": 82, "11915": 82, "11972": 82, "18238": 82, "11037": 82, "12845": 82, "24552": 82, "1396": 82, "corrected_sv_refin": 82, "corrected_integr": 82, "343": [82, 83, 86, 87], "1125": 82, "1131": [82, 83], "1011": [82, 83], "2346": 82, "2359": 82, "3800": 82, "3565": [82, 83], "5448": 82, "5485": 82, "5123": 82, "7241": 82, "7293": 82, "6804": 82, "9522": 82, "9593": 82, "8986": 82, "12528": 82, "12612": 82, "11851": 82, "16954": 82, "17067": 82, "16130": 82, "20247": 82, "20401": 82, "19499": 82, "23553": 82, "23820": 82, "22740": 82, "24022": 82, "24289": 82, "23215": 82, "25479": 82, "25765": 82, "24860": 82, "24305": 82, "24546": 82, "23395": 82, "24742": 82, "236": [82, 83, 87], "24978": 82, "23965": 82, "25657": 82, "25938": 82, "24999": 82, "24755": 82, "25023": 82, "24005": 82, "25596": 82, "25846": 82, "25058": 82, "25140": 82, "298": [82, 83, 85, 87], "25438": 82, "24540": 82, "25720": 82, "26023": 82, "25193": 82, "338446": 82, "4836": 82, "331750": 82, "317393": 82, "nicer": 82, "artefact": 82, "sigma_i": [82, 83, 87, 88], "d_": 82, "mid": 82, "modular": 82, "satisfi": [82, 88], "dave": [82, 98], "hall": [82, 96], "pcm": 83, "0102340": 83, "xchem": 83, "fragment": 83, "screen": [83, 87], "campaign": 83, "i04": [83, 86, 87, 88], "x0692": 83, "5rel": 83, "5281": 83, "zenodo": [83, 89], "3730940": 83, "mx27124": 83, "dials_data": 83, "mpro_x0692": 83, "x0692_1_0": 83, "x0692_1_": 83, "num": [83, 84, 86, 87], "\u2460": [83, 87], "marker": [83, 87], "\u2461": [83, 87], "omit": [83, 87], "1424": [83, 87], "1578": 83, "1555": [83, 87], "1634": [83, 87], "1590": 83, "1533": [83, 87], "1773": 83, "1920": [83, 87], "1873": [83, 86], "1743": 83, "1923": 83, "2118": 83, "2179": 83, "1838": [83, 87], "2168": [83, 87], "2128": 83, "2363": 83, "2597": 83, "2275": 83, "2157": [83, 87], "2565": 83, "2623": 83, "2604": 83, "2438": 83, "2474": 83, "2613": [83, 87], "2594": [83, 87], "2503": [83, 87], "2499": [83, 84], "2585": 83, "2706": 83, "2532": 83, "2576": 83, "2424": 83, "2177": 83, "2352": [83, 87], "2439": [83, 87], "2259": 83, "2377": 83, "2284": 83, "2381": [83, 87], "2183": 83, "2512": [83, 86], "2313": 83, "2272": [83, 86], "2327": 83, "2234": [83, 87, 88], "2298": 83, "2342": [83, 87], "2513": 83, "2494": [83, 86], "2557": 83, "2388": 83, "2290": 83, "2316": 83, "2071": 83, "2069": [83, 87], "2268": 83, "2247": 83, "2187": 83, "2266": 83, "2243": [83, 87], "2260": [83, 87], "2237": [83, 86], "2253": 83, "1969": 83, "2299": 83, "2351": 83, "2319": [83, 87], "2145": 83, "2371": [83, 87], "2332": [83, 87], "2194": 83, "1995": [83, 98], "2333": [83, 87], "2238": 83, "2063": [83, 84], "2099": 83, "2129": 83, "2312": 83, "2236": 83, "1930": [83, 87], "1752": [83, 87], "1792": 83, "1798": [83, 87], "1762": [83, 87], "1452": [83, 87], "1729": [83, 87], "1782": [83, 87], "1795": [83, 87], "1787": [83, 87], "1703": [83, 87], "1536": [83, 87], "1621": [83, 87], "108": [83, 85, 86, 87, 89], "1522": 83, "1473": [83, 84, 87], "1651": 83, "1454": [83, 84, 87], "1401": 83, "1623": [83, 87], "1704": 83, "1372": 83, "1276": [83, 87], "1281": [83, 87], "1399": [83, 84, 87], "1419": [83, 87], "1476": [83, 87], "1487": 83, "1477": [83, 84, 87], "1505": [83, 87], "1495": 83, "1351": [83, 87], "1325": [83, 87], "1365": 83, "1500": [83, 87], "1345": [83, 87], "1414": [83, 87], "1264": [83, 87], "1165": 83, "1185": 83, "138": [83, 86, 87], "1219": [83, 87], "1226": [83, 85, 87], "1202": 83, "1032": 83, "143": [83, 85, 87], "1086": [83, 84], "1347": [83, 87], "1214": [83, 87], "1186": [83, 87], "1166": 83, "923": 83, "1126": 83, "1109": 83, "1191": [83, 85, 87], "1266": 83, "868": 83, "877": [83, 96], "1058": 83, "1005": 83, "1060": [83, 84], "1132": 83, "1223": [83, 87], "1020": 83, "174": [83, 85, 87], "176": [83, 85, 86, 87], "179": [83, 87], "181": [83, 85, 87], "182": [83, 85, 86, 87, 96], "922": [83, 85, 87], "183": [83, 85, 87], "188": [83, 85, 87], "1090": 83, "191": [83, 87, 97], "1006": 83, "1014": 83, "197": [83, 85, 86, 87], "857": 83, "904": [83, 86], "1097": [83, 84], "202": [83, 87], "1130": [83, 84, 87], "826": 83, "206": [83, 87], "849": 83, "737": 83, "901": [83, 87], "209": [83, 85, 87], "1043": 83, "216": [83, 85, 87], "867": 83, "217": [83, 85, 87], "785": 83, "909": [83, 87, 88], "221": [83, 87, 97], "1069": 83, "896": 83, "228": [83, 85, 87], "229": [83, 87], "969": [83, 86], "804": 83, "233": [83, 87], "234": [83, 87], "887": [83, 88], "829": 83, "860": 83, "237": [83, 86, 87], "893": [83, 86, 87], "958": [83, 85], "243": [83, 85, 87], "859": 83, "907": [83, 85, 87], "945": [83, 85], "940": 83, "918": [83, 85], "972": [83, 87], "1025": 83, "1041": [83, 86], "813": 83, "1045": 83, "1042": [83, 84], "878": [83, 85], "889": [83, 85], "270": [83, 87], "1010": 83, "928": [83, 85, 87], "273": [83, 87], "846": [83, 85], "963": [83, 85, 87], "1089": 83, "279": [83, 87], "1079": 83, "280": [83, 87, 88], "1067": [83, 87], "1076": [83, 87], "1193": [83, 85], "284": [83, 87], "1001": 83, "944": [83, 84, 85], "293": [83, 87], "1037": 83, "894": [83, 96], "948": [83, 85, 87], "976": [83, 87], "301": [83, 85, 87], "1094": [83, 84, 87], "1056": 83, "1145": 83, "308": [83, 87, 88], "1030": 83, "311": [83, 87], "1140": 83, "313": [83, 85, 86, 87], "981": [83, 84, 86], "1141": 83, "1309": [83, 87], "1257": [83, 87], "1233": [83, 85, 87], "1225": [83, 85], "1238": [83, 87], "320": [83, 87], "1253": [83, 87], "1068": [83, 89], "1240": [83, 87], "325": [83, 85, 87], "1429": [83, 84, 87], "1204": [83, 87], "1258": [83, 85, 87], "329": [83, 85, 87], "1384": [83, 87], "330": [83, 87], "1241": 83, "1296": [83, 87], "1666": 83, "337": [83, 85, 87], "1308": [83, 84], "1207": [83, 85], "1447": [83, 87], "1360": 83, "341": [83, 85, 87], "1252": [83, 87], "342": [83, 85, 87], "1440": [83, 87], "1392": 83, "344": [83, 85, 87], "1576": [83, 87], "1616": 83, "1412": 83, "348": [83, 87], "1503": [83, 87], "349": [83, 87], "1479": 83, "1493": [83, 87], "351": [83, 87], "1514": 83, "1625": [83, 87], "1655": [83, 87], "354": [83, 87], "1544": 83, "355": [83, 87], "1430": [83, 84, 87], "1379": [83, 87], "357": [83, 87, 96], "1458": [83, 87], "1598": [83, 87], "1668": [83, 87], "1662": [83, 87], "362": [83, 85, 87, 88], "1848": 83, "1833": 83, "1731": [83, 87], "1648": [83, 87], "1837": [83, 85], "367": [83, 87], "2029": 83, "368": [83, 85, 87], "1853": 83, "369": [83, 86, 87, 96], "1871": [83, 87], "1741": [83, 87], "1842": [83, 87], "372": [83, 86, 87], "1697": [83, 87], "373": [83, 85, 87], "1611": 83, "1563": [83, 84, 87], "376": [83, 87], "1705": [83, 87], "377": [83, 87], "1586": [83, 87], "378": [83, 84, 87], "1883": [83, 87], "1955": 83, "380": [83, 87], "1720": 83, "381": [83, 85, 87], "1742": [83, 87], "382": [83, 87], "1667": 83, "383": [83, 85, 87], "384": [83, 86, 87], "1724": [83, 87], "385": [83, 85, 87, 96], "1661": [83, 87], "1672": [83, 87], "387": [83, 87], "388": [83, 87], "1464": [83, 84, 87], "390": [83, 84, 85, 87], "391": [83, 87, 88], "392": [83, 84, 85, 87], "1592": 83, "395": [83, 87], "396": [83, 87], "1421": [83, 87], "398": [83, 87], "1287": [83, 87], "30376": 83, "7811": 83, "22562": 83, "21740": 83, "newli": [83, 87], "green": [83, 87, 88], "pink": [83, 87], "incorrectli": [83, 87], "\u2462": [83, 87], "preview": [83, 87, 88], "ey": [83, 87, 88], "20836": 83, "rmsd_xy": [83, 87], "131784": 83, "21005": 83, "130920": 83, "20874": 83, "131244": 83, "20815": 83, "130947": 83, "20903": 83, "130988": 83, "20817": 83, "131302": 83, "20905": 83, "131333": 83, "20942": 83, "131615": 83, "20979": 83, "131757": 83, "20988": 83, "131478": 83, "20971": 83, "131699": 83, "20934": 83, "130748": 83, "20887": 83, "131505": 83, "20977": 83, "131181": 83, "20949": [83, 87], "131653": 83, "20929": 83, "131143": 83, "20978": 83, "130878": 83, "131446": 83, "131949": 83, "132001": 83, "20924": 83, "131286": 83, "20982": 83, "131102": 83, "20975": 83, "131553": 83, "20964": 83, "131729": 83, "20986": 83, "130749": 83, "20972": 83, "131689": 83, "20935": 83, "130961": 83, "20990": 83, "131849": 83, "20950": 83, "131547": 83, "20966": 83, "131909": 83, "20958": 83, "131574": 83, "20984": 83, "131360": 83, "21022": 83, "131075": 83, "21001": 83, "131936": 83, "21025": 83, "131503": 83, "20944": [83, 85], "131107": 83, "20976": 83, "20899": 83, "131398": 83, "20985": 83, "131818": 83, "20938": 83, "131032": 83, "21000": 83, "131708": 83, "20936": 83, "131069": 83, "20967": 83, "131138": 83, "20999": 83, "131546": 83, "132052": 83, "20961": 83, "131474": 83, "20941": 83, "131072": 83, "20983": 83, "131363": 83, "131706": 83, "21012": 83, "630": [83, 87], "9000": 83, "4121": 83, "2959": 83, "8170": 83, "4949": 83, "3200": 83, "4034": 83, "8572": 83, "0224": 83, "0187": 83, "0090": 83, "0181": [83, 86], "0193": 83, "0026": 83, "0108": 83, "0153": 83, "0155": [83, 87], "734": [83, 85], "20952": 83, "703": [83, 87, 88], "6229": 83, "3916": 83, "1449": 83, "013": [83, 85, 86, 87, 88], "2842": 83, "2246": 83, "016": [83, 85, 87], "00306": 83, "551": [83, 85, 87], "2347": [83, 87], "18605": 83, "684": [83, 87], "3968": 83, "1734": [83, 84, 87], "9907": 83, "2767": [83, 85], "1807": [83, 87], "5715": 83, "9351": 83, "1436": [83, 85, 87], "001552": 83, "7571": 83, "51841": 83, "26874": 83, "22605": 83, "1268": [83, 87], "10007": 83, "23108": 83, "097838": 83, "098106": 83, "23331": 83, "096656": 83, "096297": 83, "23343": 83, "096506": 83, "095677": 83, "23386": 83, "096504": 83, "095601": 83, "23402": 83, "095596": 83, "23403": 83, "56107": 83, "55579": 83, "46806": 83, "738": 83, "7872": 83, "8996": 83, "4114": 83, "2938": [83, 87], "8183": 83, "4940": 83, "3230": [83, 87], "4014": 83, "8570": 83, "0040": 83, "0089": 83, "21029": 83, "21163": 83, "9265": 83, "04435": 83, "002579": 83, "05266": 83, "6455": 83, "04679": 83, "003802": 83, "04913": 83, "1087": 83, "05362": 83, "1561": 83, "2632": [83, 87], "18343": 83, "3699": 83, "03984": 83, "003241": 83, "05068": 83, "3939": 83, "03613": 83, "005551": 83, "04528": 83, "4172": 83, "8813": 83, "08308": 83, "05629": 83, "1488": [83, 87], "6562": 83, "080738": 83, "083417": 83, "21845": 83, "079354": 83, "082036": 83, "22074": 83, "07875": 83, "082035": 83, "2202": 83, "078446": 83, "082152": 83, "21934": 83, "078361": 83, "08228": 83, "21896": 83, "078348": 83, "082315": 83, "21889": 83, "078347": 83, "082318": 83, "45551": 83, "47859": 83, "43778": 83, "499": [83, 85, 86, 87], "2255": [83, 86], "7863": 83, "9931": 83, "8997": 83, "4112": 83, "8184": 83, "4015": 83, "0225": 83, "0188": [83, 87], "0195": 83, "0027": 83, "21028": 83, "21054": 83, "685": [83, 87], "20974": 83, "8873": 83, "04424": 83, "00171": 83, "04794": 83, "6379": 83, "717": [83, 85, 87], "05087": 83, "001016": 83, "04519": 83, "1071": 83, "05102": 83, "1496": 83, "18246": 83, "3408": [83, 87], "03953": 83, "002804": 83, "04673": 83, "3899": [83, 87], "04049": 83, "001011": 83, "04132": 83, "412": [83, 86, 87], "8957": 83, "08015": 83, "05445": 83, "6317": 83, "0772": [83, 87], "081515": 83, "21713": 83, "076915": 83, "081075": 83, "21844": 83, "076743": 83, "081138": 83, "2184": 83, "076641": 83, "081227": 83, "21821": 83, "076606": 83, "081288": 83, "21809": 83, "0766": 83, "081303": 83, "21806": 83, "081305": 83, "44535": 83, "4727": 83, "43612": 83, "470": [83, 87], "7854": 83, "2936": 83, "3229": [83, 86], "0182": [83, 86], "711": [83, 87], "21039": 83, "04434": 83, "001314": 83, "04642": 83, "6643": 83, "0511": 83, "001655": 83, "1074": 83, "04974": 83, "662": [83, 87], "2689": 83, "18285": 83, "3321": [83, 87], "03982": 83, "002306": 83, "3082": [83, 86], "3898": 83, "04183": [83, 87], "738e": 83, "04119": 83, "4075": 83, "9054": 83, "08134": 83, "05293": 83, "1411": [83, 87], "6249": 83, "076424": 83, "081591": 83, "21765": 83, "076361": 83, "081373": 83, "21833": 83, "076313": 83, "081403": 83, "21832": 83, "076281": 83, "081442": 83, "21826": [83, 87], "076268": 83, "081466": 83, "21822": 83, "076266": 83, "081471": 83, "44341": 83, "47367": 83, "43642": 83, "2250": [83, 87], "7844": 83, "9899": 83, "21027": 83, "21033": 83, "20973": 83, "9039": 83, "001238": 83, "04604": 83, "6737": 83, "721": [83, 87], "05114": 83, "001455": 83, "04477": 83, "05018": 83, "1486": 83, "955": 83, "2679": 83, "18294": 83, "3319": 83, "03988": 83, "002168": 83, "04478": 83, "3091": [83, 87], "3894": 83, "04171": 83, "155e": 83, "04124": 83, "4076": [83, 87], "9195": 83, "08125": 83, "05369": 83, "1407": [83, 85, 87], "6192": 83, "076338": 83, "081412": 83, "21795": [83, 85], "076296": 83, "081315": 83, "081329": 83, "076252": 83, "081346": 83, "076246": 83, "081356": 83, "21831": 83, "076245": 83, "081358": 83, "44329": 83, "47301": 83, "43661": 83, "2251": 83, "7837": 83, "9895": 83, "712": [83, 87], "captur": [83, 84, 87, 88], "gone": [83, 87, 88], "why": [83, 87, 98], "256\u00b3": [83, 87, 88], "eventu": [83, 87, 88], "domin": [83, 87, 88], "unabl": [83, 87], "didn": [83, 84, 87, 88], "irrespect": 83, "0252": 83, "743": [83, 85], "18268": 83, "259466": 83, "18292": 83, "129876": 83, "bravais_summari": [83, 87], "adher": [83, 87, 88], "propos": [83, 87, 88], "bravais_setting_n": [83, 87], "plausibl": [83, 87], "9033": 83, "04467": 83, "001113": 83, "04686": 83, "6841": 83, "05039": 83, "000498": 83, "0441": 83, "1057": 83, "05334": 83, "4006": 83, "03718": 83, "002731": 83, "0445": [83, 85], "3007": 83, "4479": 83, "03614": 83, "001424": 83, "03842": 83, "4335": 83, "8575": 83, "06504": 83, "05968": 83, "1383": [83, 87], "5736": 83, "069855": 83, "076289": 83, "21058": 83, "069841": 83, "07608": 83, "21094": 83, "069746": 83, "075965": 83, "21131": 83, "069583": 83, "075866": 83, "21178": 83, "069463": 83, "075811": 83, "21212": 83, "069424": 83, "075799": 83, "21221": 83, "069418": 83, "0758": [83, 87], "40359": 83, "4407": 83, "42443": 83, "880": 83, "0373": 83, "3455": 83, "8436": 83, "5477": [83, 85], "1745": 83, "7620": 83, "4018": [83, 87], "5079": [83, 87], "0021": [83, 85], "0231": 83, "0077": 83, "0045": 83, "0154": 83, "0078": 83, "0076": 83, "9124": 83, "0002905": 83, "04459": 83, "695": [83, 87], "05097": 83, "00175": 83, "04269": 83, "05077": 83, "4022": 83, "16950": 83, "3629": [83, 87], "03772": 83, "002061": 83, "0421": 83, "3225": 83, "4409": 83, "03702": 83, "0001993": 83, "03677": 83, "4927": 83, "8777": 83, "06567": 83, "05753": 83, "1366": [83, 87], "5653": 83, "069571": 83, "075489": 83, "21208": 83, "058325": 83, "069796": 83, "18766": 83, "057132": 83, "066282": 83, "17174": 83, "05548": 83, "062547": 83, "1527": 83, "053552": 83, "060443": 83, "13032": 83, "051597": 83, "058975": 83, "11425": 83, "050233": 83, "10841": 83, "049665": 83, "057789": [83, 87], "04951": 83, "057702": 83, "049395": 83, "057682": 83, "10611": 83, "049289": 83, "057678": 83, "10618": 83, "049221": 83, "057686": 83, "049202": 83, "057689": 83, "10636": 83, "057688": 83, "28606": 83, "33539": 83, "21272": 83, "401": [83, 84, 87], "unphys": [41, 51, 54, 58, 83, 87], "shortli": [83, 87], "lack": [83, 87, 88], "mostli": [83, 87, 88], "9126": 83, "00197242": 83, "999998": 83, "14122e": 83, "sensor_pad": [83, 87], "94172": 83, "21948": 83, "999994": 83, "00340502": 83, "000208751": 83, "00340524": 83, "00105736": 83, "882": 83, "764": 83, "millimet": [83, 87], "t0": [83, 87], "713": [83, 87], "4077": [83, 85], "4790": 83, "junk": [83, 87], "1510": [83, 87], "198713": 83, "039475": [83, 87], "329180": 83, "boundari": [83, 87], "swap": [83, 87], "ulimit": [83, 87], "4641": 83, "4839": 83, "4574": 83, "416": [83, 87], "2923": [83, 87], "4483": 83, "4813": 83, "4556": 83, "2878": [83, 86], "im": [83, 87], "1231": [83, 85, 87], "561": [83, 86, 87], "2052": [83, 87], "526": [83, 86, 87], "1263": [83, 87], "902": 83, "2105": [83, 87], "858": 83, "759": [83, 85], "1354": [83, 87], "1489": [83, 87], "1301": 83, "1432": [83, 87], "795": 83, "1332": [83, 87], "1273": [83, 87], "1418": [83, 87], "1305": 83, "1209": [83, 85, 87], "1338": [83, 87], "1156": 83, "1188": 83, "837": 83, "1173": 83, "1123": 83, "766": 83, "1103": 83, "1116": 83, "1180": 83, "1078": 83, "586": [83, 87], "661": [83, 87], "618": [83, 87], "1129": [83, 85], "1035": 83, "1106": 83, "1012": 83, "517": [83, 86, 87], "566": [83, 84, 85, 87], "539": [83, 86, 87], "1051": 83, "1039": 83, "531": [83, 87], "511": [83, 87], "1073": 83, "536": [83, 87], "558": [83, 87, 96], "1195": 83, "1099": 83, "1122": 83, "559": [83, 87], "578": [83, 87], "1198": [83, 87], "1167": [83, 87], "1154": 83, "644": [83, 87], "623": [83, 86, 87], "1254": 83, "1334": [83, 84], "1227": [83, 85], "1321": [83, 87], "589": [83, 86, 87], "640": [83, 87], "1340": [83, 87], "1236": 83, "1339": [83, 87], "1298": [83, 87], "1310": [83, 87], "1382": [83, 87], "1269": [83, 85, 87], "704": [83, 87, 88], "1380": [83, 85, 87], "1329": 83, "1343": [83, 87], "1415": [83, 87], "1292": [83, 87], "732": 83, "693": [83, 84, 87], "1400": [83, 96], "1328": [83, 87], "1279": 83, "707": [83, 87], "748": [83, 87], "1420": [83, 87], "1285": [83, 87], "716": [83, 85, 87], "1387": 83, "1451": 83, "1316": 83, "1327": [83, 87], "1391": [83, 87], "1256": [83, 85, 87], "809": 83, "762": 83, "1408": [83, 85, 87], "1491": [83, 87], "1362": [83, 87], "1335": [83, 87], "1417": [83, 87], "1288": [83, 87, 89], "803": 83, "871": [83, 84], "819": [83, 85], "1433": [83, 87], "1530": [83, 87], "1336": [83, 84], "1427": [83, 87], "806": [83, 86], "861": 83, "1425": [83, 87], "1300": [83, 87], "1389": [83, 87], "1534": [83, 87], "1445": [83, 87], "1259": [83, 87], "1385": [83, 87], "1344": [83, 87], "1422": [83, 84], "1208": [83, 85, 87], "1337": [83, 87], "1462": [83, 84, 87], "1199": 83, "1248": [83, 87], "875": 83, "855": 83, "1393": [83, 87], "1182": 83, "835": [83, 85], "1217": [83, 86, 87], "1323": [83, 87], "1242": [83, 87], "774": 83, "1150": 83, "1255": [83, 87], "1095": 83, "1194": 83, "780": 83, "1161": 83, "727": [83, 85, 87], "1172": [83, 84], "1137": 83, "667": [83, 87], "1110": [83, 85], "1092": 83, "1083": [83, 84], "1046": [83, 84], "596": [83, 87], "659": [83, 86, 87], "587": [83, 87], "929": [83, 85], "797": 83, "828": 83, "456": [83, 87], "484": [83, 87], "730": [83, 87], "783": 83, "441": [83, 85, 86, 87], "692": [83, 87], "725": [83, 86], "440": [83, 87], "681": [83, 87], "52199": 83, "47641": 83, "47756": 83, "51458": 83, "2535": 83, "49664": 83, "47418": 83, "2483": [83, 87], "48975": 83, "xy": [83, 87], "1469": [83, 87], "431": [83, 87], "430": [83, 87], "469": [83, 87], "466": [83, 87], "510": [83, 87], "451": [83, 87], "473": [83, 87], "443": [83, 85, 87], "468": [83, 87], "446": [83, 87], "404": [83, 87], "501": [83, 85, 87], "474": [83, 85, 87], "420": [83, 85, 87], "449": [83, 87], "434": [83, 87], "509": [83, 87], "453": [83, 87], "445": [83, 86, 87], "502": [83, 84, 85, 87], "418": [83, 85, 87], "512": [83, 87], "415": [83, 85, 87], "462": [83, 87], "488": [83, 87], "402": [83, 85, 87], "450": [83, 87], "479": [83, 87], "497": [83, 87], "414": [83, 87], "433": [83, 87], "530": [83, 85, 87, 89], "489": [83, 85, 87], "524": [83, 87], "542": [83, 87], "548": [83, 87], "516": [83, 87], "591": [83, 87], "567": [83, 87], "1082": 83, "1307": [83, 87], "2213": [83, 87], "1963": 83, "2049": [83, 87], "2979": [83, 87], "2473": 83, "2649": 83, "4341": 83, "3734": 83, "3944": 83, "5293": 83, "5649": [83, 84], "8672": 83, "7676": 83, "7975": 83, "9833": 83, "8693": 83, "8970": 83, "10956": 83, "9414": 83, "9838": 83, "12248": 83, "10251": 83, "10730": 83, "13279": 83, "11943": 83, "12280": 83, "14619": 83, "12987": 83, "13349": 83, "16875": 83, "14610": 83, "15144": 83, "17479": 83, "15719": 83, "16051": 83, "17482": 83, "14510": 83, "15067": 83, "17440": 83, "595": [83, 87], "15812": 83, "16141": 83, "17610": 83, "15398": 83, "17776": 83, "570": [83, 87], "15652": 83, "16001": 83, "193373": 83, "6021": 83, "52769": 83, "4243": 83, "30000": 83, "2658": 83, "169054": 83, "174758": 83, "24296": 83, "2309": 83, "22837": 83, "199394": 83, "176557": 83, "advantag": [83, 84, 87, 88], "lorentz": [83, 87, 88], "anywai": [83, 87, 88], "sigma_d": [83, 87, 88], "167255": 83, "b_cart": [83, 85, 87], "60297": 83, "3888": 83, "1283": 83, "3788": 83, "7954": 83, "2227": [83, 84], "unrel": [83, 87], "sd": [83, 87, 89], "50048": 83, "852": 83, "49404": 83, "law": [83, 87], "macromolecul": [83, 85, 87], "illumin": [83, 85, 87, 88], "unequ": [83, 87, 88], "1875": 83, "1654": [83, 84], "176234": 83, "00000": [83, 87], "02000": [83, 87], "\u00b2": [83, 85, 87], "a\u00b2": [83, 85, 87], "\u03c3\u00b2": [83, 85, 87], "bi": [83, 85, 87], "asymptot": [83, 85, 87], "2495": 83, "172960": 83, "preselect": [83, 87], "174580": 83, "174531": 83, "173009": 83, "15286": 83, "48771": 83, "50054": 83, "rmsd_i": [83, 85, 87], "49280": 83, "88595": 83, "8622": 83, "71025": 83, "65791": 83, "62675": 83, "61245": 83, "57406": 83, "55722": 83, "55538": 83, "55363": 83, "55299": 83, "55226": 83, "55199": 83, "5516": 83, "55136": 83, "55117": 83, "55101": 83, "55071": 83, "55056": 83, "55039": 83, "55019": 83, "54984": 83, "54914": 83, "54846": 83, "54746": 83, "54628": 83, "54479": 83, "54405": 83, "54358": 83, "54302": 83, "54286": 83, "54241": 83, "54234": 83, "54231": 83, "99431": 83, "09881": 83, "99146": 83, "12652": 83, "99342": 83, "10504": 83, "3237": 83, "99428": 83, "09887": 83, "99406": 83, "09961": 83, "99283": 83, "11312": 83, "50021": 83, "60266": 83, "60082": 83, "58804": 83, "58752": 83, "58706": 83, "58663": 83, "5862": 83, "5859": 83, "58574": 83, "58567": 83, "58557": 83, "58551": 83, "51786": 83, "05512": 83, "036": [83, 85, 86, 87], "2417": 83, "009": 83, "1779": 83, "3567": 83, "3799": 83, "3030": 83, "50030": 83, "99941": 83, "99341": 83, "98782": 83, "98299": 83, "98074": 83, "97961": 83, "97892": 83, "97871": 83, "97868": 83, "49604": 83, "05454": 83, "2415": 83, "594": [83, 85, 87], "841": 83, "982": [83, 85, 86], "1764": [83, 85, 87], "3505": 83, "3805": [83, 87], "3008": 83, "2510": 84, "172395": 83, "2040": 83, "1523": [83, 87], "15831": 83, "4256": 83, "030": [83, 85, 86, 88, 89], "15553": 83, "4161": 83, "987": [83, 84, 87], "16022": 83, "4148": 83, "010": [83, 85, 89], "14918": 83, "4147": 83, "15842": 83, "4141": 83, "15070": 83, "4102": 83, "742": [83, 84], "13299": 83, "4152": 83, "12281": 83, "4130": 83, "10701": 83, "553": [83, 85, 87], "9802": 83, "4043": 83, "683": [83, 87], "581": [83, 87, 88], "782": 83, "8951": 83, "3933": 83, "3864": 83, "024": [83, 85, 89], "5725": 83, "3403": [83, 87], "756": 83, "4011": 83, "2783": 83, "726": [83, 87], "2773": 83, "2065": 83, "1435": [83, 87], "037": [83, 85, 86, 87, 88], "610": [83, 87], "822": [83, 87], "174268": 83, "62208": 83, "093": [83, 85, 86], "006": [83, 85, 87], "121864": 83, "6721": 83, "4792": 83, "1789": 83, "1674": [83, 87], "dials_scale_user_guid": [83, 85, 87], "disproportion": [83, 87, 88], "navig": [83, 85, 88], "happi": [83, 84, 86, 87, 88], "strictli": [83, 85, 86, 87], "globular": [83, 87, 88], "companion": [83, 87, 88], "uniform": [83, 87, 88], "complic": 84, "feasibl": 84, "sacrifici": 84, "teha": 84, "membran": 84, "crystallis": [84, 85], "room": [84, 96], "temperatur": [84, 96], "xta": 84, "annoy": 84, "happili": 84, "2711": 84, "compris": 84, "abruptli": 84, "tcsh": 84, "perl": 84, "rubi": 84, "comfort": [84, 88], "grep": 84, "process_teha": 84, "uncom": 84, "tasklist": 84, "easy_run": 84, "easy_mp": 84, "process_sequ": 84, "newdir": 84, "getcwd": 84, "sequence_": 84, "chdir": 84, "cmd": 84, "fully_buff": 84, "p1_model": 84, "isfil": 84, "dirti": 84, "got": 84, "argv": 84, "expt_path": 84, "abspath": 84, "enumer": 84, "get_process": 84, "parallel_map": 84, "func": 84, "preserve_ord": 84, "good_result": 84, "serlial": 84, "familiar": [84, 88], "feed": 84, "intervent": 84, "errant": 84, "bother": 84, "carrier": 84, "terribl": 84, "rescu": 84, "xta30_1_": 84, "xta31_1_": 84, "xtal7_1_": 84, "xtal8_1_": 84, "sequence_00": 84, "sequence_01": 84, "sequence_02": 84, "sequence_03": 84, "sequence_04": 84, "sequence_08": 84, "sequence_09": 84, "sequence_11": 84, "sequence_12": 84, "sequence_13": 84, "sequence_14": 84, "sequence_16": 84, "sequence_17": 84, "sequence_19": 84, "sequence_20": 84, "sequence_21": 84, "sequence_22": 84, "sequence_23": 84, "sequence_24": 84, "sequence_25": 84, "sequence_26": 84, "sequence_27": 84, "sequence_28": 84, "sequence_29": 84, "sequence_31": 84, "sequence_32": 84, "sequence_33": 84, "sequence_35": 84, "sequence_38": 84, "sequence_39": 84, "sequence_40": 84, "sequence_41": 84, "sequence_42": 84, "sequence_43": 84, "sequence_44": 84, "sequence_45": 84, "sequence_46": 84, "sequence_47": 84, "sequence_48": 84, "sequence_50": 84, "sequence_53": 84, "sequence_54": 84, "sequence_55": 84, "sequence_57": 84, "sequence_58": 84, "sequence_59": 84, "sequence_60": 84, "sequence_61": 84, "sequence_62": 84, "sequence_63": 84, "sequence_64": 84, "sequence_65": 84, "sequence_66": 84, "sequence_67": 84, "sequence_68": 84, "sequence_69": 84, "sequence_70": 84, "sequence_71": 84, "9m56": 84, "29m36": 84, "8m3": 84, "individual_mtz": 84, "dat": [84, 85], "echo": [84, 94], "final_list_of_fil": 84, "rerun": [84, 85, 86, 89], "corrplot_x": 84, "experiments_and_reflect": 84, "1471": [84, 87], "1381": [84, 87], "1588": [84, 87], "1642": 84, "1529": [84, 87], "1261": [84, 87], "1587": [84, 87], "1727": [84, 87], "1358": [84, 87], "1049": 84, "1830": 84, "2033": 84, "1856": 84, "1048": 84, "1695": [84, 87], "2398": 84, "2173": 84, "2869": [84, 87], "3181": 84, "2810": 84, "3508": 84, "2985": 84, "2526": 84, "2453": 84, "1738": [84, 87], "1152": 84, "1331": [84, 87], "641": [84, 87], "1052": [84, 87], "1364": [84, 87], "2114": 84, "2139": 84, "1570": [84, 87], "2334": 84, "1645": [84, 87], "2376": 84, "1211": 84, "1190": [84, 86], "652": [84, 87], "unwieldi": 84, "ongo": [84, 98], "96848": 84, "8559": 84, "04029": 84, "8264": 84, "02585": 84, "4819": 84, "001499": 84, "1756": [84, 87], "9352": 84, "87496": 84, "02594": 84, "8807": 84, "5064": 84, "02297": 84, "4352": 84, "001485": 84, "6408": 84, "1569": [84, 87], "79118": 84, "0856": 84, "83106": [84, 87], "52798": 84, "91236": 84, "7085": 84, "50131": 84, "70048": 84, "54736": 84, "46902": 84, "46951": 84, "36137": 84, "40123": 84, "29632": 84, "21747": 84, "28785": 84, "20347": 84, "15376": 84, "17079": 84, "16762": 84, "13534": 84, "11626": 84, "16252": 84, "13282": [84, 89], "10889": 84, "16223": 84, "13265": 84, "16213": 84, "13258": 84, "16204": 84, "13254": 84, "10869": 84, "13252": 84, "10877": 84, "16199": 84, "10879": 84, "1438": [84, 87], "55006": 84, "36386": 84, "39245": 84, "1377": 84, "60375": 84, "35395": 84, "37074": 84, "81377": 84, "55378": 84, "74578": 84, "71331": 84, "50699": 84, "29662": 84, "7057": 84, "0768": 84, "70272": 84, "76136": 84, "54465": 84, "91579": 84, "2153": 84, "38596": 84, "1033": 84, "50161": 84, "37586": 84, "24255": 84, "49387": 84, "35304": 84, "27443": 84, "8339": 84, "58238": 84, "27862": 84, "51758": 84, "29764": 84, "26121": 84, "1297": [84, 87], "0496": 84, "0934": 84, "62916": 84, "56529": 84, "41568": 84, "35943": 84, "52573": 84, "34911": 84, "2364": 84, "1581": [84, 87], "64887": 84, "3499": 84, "27855": 84, "1142": 84, "3555": [84, 87], "0016": 84, "81589": 84, "57376": 84, "46291": 84, "30225": 84, "68198": 84, "55891": 84, "48053": 84, "62128": 84, "55331": 84, "34444": 84, "1814": 84, "97204": 84, "80027": 84, "48625": 84, "82146": 84, "47213": 84, "41469": 84, "1696": [84, 87], "65721": 84, "34464": 84, "28293": 84, "1700": 84, "59074": 84, "37139": 84, "28981": 84, "1472": [84, 87], "72438": 84, "69007": 84, "39294": 84, "81814": 84, "64633": 84, "39922": 84, "1413": [84, 87], "5227": 84, "90807": 84, "2374": [84, 87], "52255": 84, "2912": 84, "24541": 84, "29952": 84, "23895": 84, "2620": [84, 87], "5181": 84, "30387": 84, "25139": 84, "2928": 84, "51628": 84, "29307": 84, "27191": 84, "51078": 84, "3342": 84, "29667": 84, "68191": 84, "38606": 84, "2856": 84, "3240": [84, 87], "80437": 84, "50846": 84, "5801": [84, 86], "2330": 84, "5782": 84, "0468": 84, "59145": 84, "2409": 84, "64632": 84, "28538": 84, "26755": 84, "2226": 84, "6115": 84, "86348": 84, "1551": [84, 87], "91913": 84, "90458": 84, "64259": 84, "75458": 84, "54531": 84, "30649": 84, "6069": 84, "0673": 84, "3176": 84, "1205": [84, 87], "2038": 84, "94187": 84, "0289": 84, "1200": [84, 85], "3346": [84, 87], "98056": 84, "46257": 84, "6651": 84, "7142": 84, "2596": 84, "5491": 84, "0847": 84, "1105": 84, "1467": [84, 87], "86945": 84, "0626": [84, 87], "1929": 84, "55025": 84, "2708": [84, 87], "25013": 84, "1786": [84, 87], "60951": 84, "27533": 84, "27842": 84, "56749": 84, "35204": 84, "33809": 84, "53203": 84, "31578": 84, "27452": 84, "2016": [84, 96], "1326": [84, 87], "2978": 84, "59713": 84, "1481": 84, "97476": 84, "0774": 84, "32288": 84, "2412": [84, 87], "54143": 84, "47678": 84, "25686": 84, "2005": 84, "0293": [84, 89], "77775": 84, "46855": 84, "924": 84, "97306": 84, "64495": 84, "28243": 84, "63827": 84, "42478": 84, "58041": 84, "2180": 84, "58521": 84, "32623": 84, "31898": 84, "63002": 84, "40298": 84, "26934": 84, "1070": 84, "3311": [84, 87], "0275": 84, "73719": 84, "3765": 84, "2727": 84, "78839": 84, "exhibit": 84, "logfil": 84, "54278": 84, "30358": 84, "2555": 84, "realiti": 84, "stabil": 84, "fair": 84, "split_00": 84, "split_57": 84, "logger": 84, "getlogg": 84, "export_al": 84, "split_": 84, "joint_export": 84, "joint_mtz": 84, "tree": [84, 88], "lcv": 84, "alcv": 84, "depict": 84, "truth": 84, "shortcut": 84, "synthesi": 84, "unsuccess": 84, "scientist": 84, "danni": 84, "nien": 84, "jen": 84, "hu": 84, "foadi": 84, "hassanul": 84, "ghani": 84, "choudhuri": 84, "iwata": 84, "konstantino": 84, "bei": 84, "pierr": 84, "aller": [84, 96], "yilmaz": 84, "alguel": 84, "inher": 85, "vmxi": 85, "autom": [85, 98], "proteinas": 85, "vmxi_proteinase_k_sweep": 85, "bag": 85, "train": [85, 87, 88], "bagtrain": 85, "integrated_fil": 85, "multi_cryst": 85, "easiest": 85, "216892": 85, "21172": 85, "20799": 85, "049": [85, 86, 87, 88], "ranom": 85, "ccano": 85, "20606": 85, "014": 85, "20449": 85, "20533": 85, "20413": 85, "1230": [85, 89], "066": [85, 86, 87], "20254": 85, "16541": 85, "12326": 85, "10344": 85, "8654": 85, "6964": 85, "5481": 85, "4333": 85, "1108": 85, "3142": [85, 87], "1028": [85, 87], "2119": 85, "0033": 85, "00087": 85, "d76": 85, "fourth": 85, "furthest": 85, "cc_": 85, "confirm": 85, "74952": 85, "54372": 85, "74323": 85, "54522": 85, "76579": 85, "54045": 85, "75406": 85, "53972": 85, "57758": 85, "1774": [85, 87], "20037": 85, "12546": 85, "79283": 85, "05866": 85, "7432": 85, "58232": 85, "1917": 85, "19172": 85, "11927": 85, "57792": 85, "1869": 85, "14121": 85, "57424": 85, "20789": 85, "12917": 85, "multiscal": 85, "17132": 85, "203702": 85, "11465": 85, "13758": 85, "1277": [85, 87], "13392": 85, "n_group": 85, "689": [85, 87], "649": [85, 87], "617": [85, 87], "912": [85, 86], "832": 85, "818": [85, 86], "582": [85, 87], "614": [85, 87], "838": 85, "792": [85, 86], "52727": 85, "4603": 85, "6250": 85, "11840": 85, "4257": 85, "4759": 85, "6416": 85, "13937": 85, "3631": 85, "4673": 85, "6395": 85, "13354": 85, "3628": [85, 87], "4801": 85, "6405": 85, "13596": 85, "18836": 85, "25466": 85, "1235": [85, 87], "1228": [85, 87], "2925": 85, "99903": 85, "05534": 85, "99904": 85, "06074": 85, "872": 85, "99921": 85, "05405": 85, "11484": 85, "99924": 85, "05421": 85, "99922": 85, "05394": 85, "99915": 85, "0572": 85, "52646": 85, "0447": 85, "0443": 85, "0442": 85, "75291": 85, "06519": 85, "10323": 85, "1835": 85, "1183": [85, 87], "12300": 85, "21114": 85, "29070": 85, "31597": 85, "26284": 85, "16237": 85, "52644": 85, "0465": 85, "0438": 85, "0436": 85, "0434": 85, "0433": 85, "75047": 85, "06534": 85, "1184": 85, "825": 85, "2863": [85, 87], "12375": 85, "21135": 85, "29032": 85, "31551": 85, "26165": 85, "16219": 85, "4525": [], "301260": 85, "246904": 85, "2533": [85, 87], "5463": 85, "46360": 85, "21419": 85, "20916": 85, "1271": [85, 87], "20682": 85, "20830": 85, "20700": 85, "21302": 85, "065": [85, 87], "20395": 85, "1197": [85, 87], "16676": 85, "12527": 85, "1213": 85, "10416": 85, "8636": 85, "6956": 85, "1147": 85, "4340": [85, 87], "3144": 85, "1029": 85, "2115": [85, 87], "967": 85, "1171": [85, 87], "962": [85, 86], "219143": 85, "844": 85, "varieti": 85, "mention": [85, 89], "assmann": 85, "216937": 85, "815": 85, "781": 85, "delta_cchalf": 85, "warrant": 85, "answer": 85, "drawn": 85, "17133": 85, "203731": 85, "52237": 85, "4675": [85, 87], "6304": 85, "11892": 85, "4706": 85, "6334": 85, "13802": 85, "6376": 85, "13260": 85, "4831": 85, "6341": 85, "13283": 85, "18919": 85, "25355": 85, "2349": [85, 87], "99873": [85, 87], "05684": 85, "06057": 85, "99925": 85, "05389": 85, "99909": 85, "05536": 85, "99926": 85, "05383": 85, "99916": 85, "05704": 85, "52160": 85, "0418": 85, "75067": 85, "06535": 85, "12373": 85, "21130": 85, "29043": 85, "31552": 85, "26175": 85, "16214": 85, "52161": 85, "0413": 85, "0411": 85, "0409": 85, "75439": 85, "06472": 85, "10189": 85, "2892": 85, "12386": 85, "21127": 85, "29034": 85, "31532": 85, "26136": 85, "16235": 85, "9106": [], "21418": 85, "20917": 85, "20683": 85, "20831": 85, "21300": 85, "20394": 85, "16674": 85, "949": 85, "219140": 85, "845": [85, 86], "222563": 85, "166095": 85, "16534": 85, "16285": 85, "redund": [85, 86], "mea": [85, 86], "sigific": 85, "screw": [85, 86], "4_1": 85, "54879": 85, "55061": 85, "54689": 85, "54511": 85, "41c": 85, "21a": [85, 86], "847": 85, "008": [85, 89], "42c": 85, "enantiomorph": 85, "french": 85, "treatment": 85, "mislead": 85, "anisotropi": 85, "u_cif": 85, "eigen": 85, "cart": 85, "eigenvector": 85, "span": 85, "behavior": 85, "gaug": 85, "induc": 85, "amplif": 85, "28e": 85, "31e": 85, "82e": 85, "72e": 85, "bernoulli": 85, "patholog": 85, "morri": 85, "synch": 85, "worrisom": 85, "z_score": 85, "iob": 85, "820": 85, "unexpect": 85, "elev": 85, "satellit": 85, "elsewher": 85, "abnorm": 85, "d55": 85, "1759": 85, "acentr": 85, "centric": 85, "06e": 85, "21e": 85, "erf": 85, "n_acentr": 85, "rm": 85, "theoret": 85, "crystallin": [85, 96], "processs": 85, "669": [85, 87], "750": 85, "671": [85, 87], "883": [85, 87], "\u03b4f": 85, "884": 85, "925": [85, 87], "655": [85, 87], "21412": 85, "20908": 85, "20673": 85, "20824": 85, "20684": 85, "21289": 85, "20382": 85, "16670": 85, "12524": 85, "10412": 85, "219058": 85, "p41212": 85, "78117": 85, "2023": 85, "bst": 85, "hkl_base": 85, "freer_flag": 85, "979493": 85, "5534": 85, "sigimean": [85, 86, 87], "q": [85, 86, 96], "20798": 85, "sigf": [85, 86], "20519": 85, "14678": 85, "3635": [85, 87], "20518": 85, "14677": 85, "14397": 85, "sigdano": 85, "semi": 86, "trypsin": 86, "semisynthetic_multilattice_data_2": 86, "semisynthetic_multilattice_data": 86, "ag": 86, "trp_ag_": 86, "formatcbfminipilatusdls6msn100": [86, 87], "tweak": 86, "46332": 86, "8863": 86, "37466": 86, "35422": 86, "41832": 86, "25232": 86, "15582": 86, "33596": 86, "17531": 86, "16636": 86, "9778": 86, "7632": 86, "6185": 86, "0427": 86, "6227": 86, "7813": 86, "9814": 86, "1725": 86, "0838": 86, "0185": 86, "0172": 86, "0150": 86, "0131": 86, "0093": 86, "0008": 86, "0107": 86, "0030": [86, 87], "17247": 86, "0060": 86, "0094": 86, "6714": 86, "7410": 86, "3813": 86, "6875": 86, "6180": 86, "9244": 86, "2768": [86, 87], "2625": 86, "0115": 86, "0111": 86, "0070": 86, "0118": 86, "0171": 86, "0048": 86, "0039": 86, "33883": 86, "1539": 86, "895": 86, "2490": 86, "251517": 86, "500054": 86, "499425": 86, "498876": 86, "209657": 86, "209735": 86, "209715": 86, "209787": 86, "209725": 86, "2639": 86, "740": [86, 87], "240463": 86, "709": [86, 87], "487536": 86, "472000": 86, "466492": 86, "0497": 86, "209775": 86, "209773": 86, "0453": 86, "209673": 86, "0221": 86, "209642": 86, "209577": 86, "45694": 86, "26413": 86, "16573": 86, "35593": 86, "20011": 86, "16635": 86, "2684": 86, "7630": 86, "6186": 86, "0429": 86, "6228": 86, "7812": 86, "1728": [86, 87], "0839": [86, 87], "17249": 86, "2882": [86, 87], "3810": 86, "6874": 86, "6182": 86, "9245": 86, "2621": [86, 87], "0047": [86, 87], "33884": 86, "1538": [86, 87], "similarli": 86, "079758": 86, "046104": 86, "018187": 86, "066176": 86, "042452": 86, "017411": 86, "065727": 86, "042236": 86, "016897": 86, "065412": 86, "042413": 86, "016653": 86, "065282": 86, "042591": 86, "016592": 86, "065257": 86, "042631": 86, "016585": 86, "065253": 86, "042632": 86, "13833": 86, "48806": 86, "27504": 86, "14752": 86, "35492": 86, "2951": 86, "20587": 86, "25027": 86, "1859": 86, "9850": 86, "10448": 86, "5595": 86, "29114": 86, "2208": 86, "23507": 86, "1796": 86, "11202": 86, "24816": 86, "1800": 86, "10172": 86, "9013": 86, "5147": 86, "29676": 86, "24069": 86, "1812": 86, "10754": 86, "2822": 86, "5198": 86, "21b": 86, "16592": 86, "21c": 86, "28257": 86, "46152": 86, "34551": 86, "2288": [86, 87], "3375": 86, "2366": 86, "15165": 86, "3400": 86, "2285": 86, "3369": 86, "4059": 86, "3297": 86, "2143": [86, 87], "3226": [86, 87], "1506": [86, 87], "3246": 86, "2372": 86, "1133": 86, "2387": [86, 89], "840": 86, "2481": [86, 87], "3177": [86, 87], "2480": 86, "3207": [86, 87], "2540": [86, 87], "2306": [86, 87], "1845": 86, "1293": [86, 87], "651": [86, 87], "p22121": 86, "32658": 86, "8871": 86, "06499": 86, "gf88516da7": 86, "2019": [86, 96], "gmt": 86, "97949": 86, "213880": 86, "5046": 86, "24848": 86, "12695": 86, "180658": 86, "4263": [86, 87], "split_0": 86, "split_1": 86, "lactamas": [87, 88], "c2sum_1": [87, 88], "720": 87, "i03": [], "mx19576": [], "c2sum_1_": 87, "1439": 87, "1593": 87, "1663": 87, "1597": 87, "1605": 87, "1519": 87, "1504": 87, "1368": 87, "1518": 87, "1470": 87, "1540": 87, "1591": 87, "1357": 87, "1350": 87, "1441": 87, "1394": 87, "1304": 87, "1444": 87, "1270": 87, "1465": [87, 96], "1431": 87, "1168": 87, "1311": 87, "1333": 87, "1353": 87, "1502": 87, "1317": 87, "1295": 87, "1289": 87, "1320": 87, "1306": 87, "1456": 87, "1388": 87, "1282": 87, "1245": 87, "1355": 87, "1410": 87, "1455": 87, "1405": 87, "1553": 87, "1318": 87, "1702": 87, "1526": 87, "1453": 87, "1577": 87, "1484": 87, "1497": 87, "1537": 87, "1596": 87, "1640": 87, "1461": 87, "1448": 87, "1552": 87, "1610": 87, "1617": 87, "1575": 87, "1572": 87, "1643": 87, "1601": 87, "1633": 87, "1715": 87, "1585": 87, "1622": 87, "1475": 87, "1583": [87, 89], "1582": 87, "1747": 87, "1603": 87, "1532": 87, "1760": 87, "1542": 87, "1509": 87, "1437": 87, "1732": 87, "1777": 87, "1673": 87, "1559": 87, "1868": 87, "1376": 87, "1680": 87, "1658": 87, "1638": 87, "1416": 87, "1580": 87, "1501": 87, "1710": 87, "1649": 87, "1736": 87, "1770": 87, "1692": 87, "1776": 87, "1660": 87, "1628": 87, "1913": 87, "1708": 87, "1564": 87, "1744": 87, "1687": 87, "1783": 87, "1765": 87, "1612": 87, "1763": 87, "1671": 87, "1613": 87, "1712": 87, "1599": 87, "1805": 87, "1790": 87, "1740": 87, "1683": 87, "1928": 87, "1950": 87, "1641": 87, "1723": 87, "1903": 87, "1627": 87, "1664": 87, "1614": 87, "1810": 87, "1865": 87, "1717": 87, "1531": 87, "1644": 87, "1635": 87, "1694": 87, "1574": 87, "1799": 87, "1879": 87, "1682": 87, "1659": 87, "1499": 87, "1568": 87, "1679": 87, "1754": 87, "1466": 87, "1459": [87, 96], "1820": 87, "1646": 87, "1665": 87, "1480": 87, "1348": 87, "1426": 87, "1721": 87, "1403": 87, "1520": 87, "1442": 87, "1201": 87, "1409": 87, "1390": 87, "1546": 87, "1324": 87, "1545": 87, "1367": 87, "1688": 87, "1371": 87, "1460": 87, "1349": 87, "1315": 87, "1375": 87, "1267": 87, "1457": 87, "1423": 87, "1319": 87, "1406": 87, "1291": 87, "1341": 87, "1290": 87, "1262": 87, "1275": [87, 89], "1265": 87, "1463": 87, "1322": 87, "1352": 87, "465": 87, "1346": 87, "1492": 87, "1181": 87, "1135": 87, "1369": 87, "1187": 87, "1155": 87, "1485": 87, "1434": 87, "1312": 87, "1356": 87, "1229": 87, "1558": 87, "532": 87, "1515": 87, "541": 87, "545": [87, 96], "546": 87, "547": 87, "1294": 87, "1631": 87, "1579": 87, "552": 87, "555": 87, "1656": 87, "563": 87, "1374": 87, "568": 87, "1722": 87, "1629": 87, "573": 87, "574": 87, "575": 87, "1549": 87, "1398": 87, "580": 87, "1689": 87, "583": 87, "1657": 87, "585": 87, "1794": 87, "1678": 87, "590": 87, "1513": 87, "1750": 87, "1781": 87, "597": 87, "1618": 87, "1949": 87, "603": 87, "604": 87, "1594": 87, "606": 87, "1719": 87, "1711": 87, "613": 87, "615": 87, "1521": 87, "620": 87, "621": 87, "1713": 87, "1896": 87, "627": 87, "1904": 87, "1681": 87, "632": 87, "1937": 87, "1784": 87, "1730": 87, "638": [87, 96], "1894": 87, "1947": 87, "1916": 87, "1676": 87, "645": 87, "646": 87, "1606": 87, "1699": 87, "1851": 87, "653": 87, "1852": 87, "1528": 87, "1693": 87, "1716": 87, "660": 87, "664": 87, "1609": 87, "665": 87, "668": 87, "1735": 87, "1650": 87, "677": 87, "1677": 87, "678": 87, "1769": 87, "1608": 87, "1707": 87, "1709": 87, "686": 87, "687": 87, "1636": 87, "690": 87, "691": 87, "694": 87, "698": 87, "702": 87, "1653": 87, "1482": 87, "124946": 87, "16738": 87, "108207": 87, "107999": 87, "91203": 87, "114154": 87, "94166": 87, "114243": 87, "94215": 87, "113803": 87, "93959": 87, "114214": 87, "93867": 87, "114144": 87, "94275": 87, "114123": 87, "93742": 87, "113784": 87, "93870": 87, "114124": 87, "94101": 87, "114140": 87, "94077": 87, "114518": 87, "94017": 87, "114292": 87, "93749": 87, "113958": 87, "93595": 87, "114230": 87, "114431": 87, "93838": 87, "114065": 87, "94173": 87, "114507": 87, "93960": 87, "114109": 87, "94103": 87, "114277": 87, "93862": 87, "114113": 87, "94089": 87, "114110": 87, "93890": 87, "114017": 87, "93302": 87, "113865": 87, "93126": 87, "114178": 87, "94031": 87, "114275": 87, "94063": 87, "114151": 87, "94188": 87, "113599": 87, "93047": 87, "114191": 87, "93419": 87, "113880": 87, "93138": 87, "114543": 87, "92656": 87, "114150": 87, "93970": 87, "114266": 87, "94194": 87, "114199": 87, "94373": 87, "94065": 87, "114470": 87, "93872": 87, "113637": 87, "93709": 87, "114013": 87, "94057": 87, "113621": 87, "92029": 87, "114555": 87, "91895": 87, "114816": 87, "92639": 87, "114242": 87, "93340": 87, "113913": 87, "92296": 87, "113990": 87, "93360": 87, "114207": 87, "94097": 87, "114482": 87, "93092": 87, "114024": 87, "93886": 87, "114325": 87, "93248": 87, "114060": 87, "93703": 87, "113906": 87, "92940": 87, "114265": 87, "91089": 87, "114137": 87, "93712": 87, "8417": 87, "5364": 87, "1836": 87, "1751": 87, "9673": 87, "8256": 87, "2459": 87, "0246": 87, "0248": 87, "0010": 87, "0144": 87, "0227": 87, "0134": 87, "0029": 87, "0139": 87, "0097": 87, "0202": 87, "93816": 87, "2047": 87, "3707": 87, "731": 87, "6009": 87, "2953": 87, "00193": 87, "08649": 87, "01357": 87, "3106": 87, "90710": 87, "6121": 87, "3087": 87, "03742": 87, "08685": 87, "01122": 87, "4516": 87, "36000": [87, 88], "56197": [87, 88], "55131": [87, 88], "13413": [87, 88], "24338": [87, 88], "26503": [87, 88], "15575": [87, 88], "10648": [87, 88], "13198": [87, 88], "13476": [87, 88], "055785": [87, 88], "059567": [87, 88], "10888": [87, 88], "051066": [87, 88], "052336": [87, 88], "10514": [87, 88], "050906": [87, 88], "052372": [87, 88], "10505": [87, 88], "050901": [87, 88], "052378": [87, 88], "29594": 87, "30452": 87, "2101": 87, "93847": 87, "5519": 87, "5591": 87, "2964": 87, "9752": 87, "0783": 87, "8429": 87, "5343": 87, "0638": [85, 87], "1841": 87, "9672": 87, "5056": 87, "8270": 87, "0247": 87, "0249": 87, "0145": 87, "0140": 87, "0098": 87, "0203": 87, "101813": 87, "102009": 87, "101460": 87, "3659": 87, "03707": 87, "002529": 87, "03158": 87, "3623": 87, "8234": 87, "03127": 87, "0002209": 87, "03123": 87, "9301": 87, "8541": 87, "0814": 87, "0005383": 87, "08299": 87, "4886": 87, "96574": 87, "03646": 87, "002887": 87, "03019": 87, "03001": 87, "000363": 87, "02939": 87, "1893": 87, "3509": 87, "08067": 87, "0001275": 87, "08135": 87, "3266": 87, "048834": 87, "046981": 87, "10531": 87, "048722": 87, "046957": 87, "10525": 87, "048696": 87, "04698": 87, "10522": 87, "048684": 87, "046993": 87, "048681": 87, "046997": 87, "28303": 87, "27324": 87, "2104": 87, "5520": 87, "5588": 87, "0189": 87, "9731": 87, "2458": 87, "105712": 87, "105724": 87, "105342": 87, "3602": 87, "03583": 87, "0009226": 87, "03338": 87, "3599": 87, "03272": 87, "0005848": 87, "03157": 87, "08148": 87, "001034": 87, "08422": 87, "5469": 87, "03485": 87, "03209": 87, "03096": 87, "0005444": 87, "02996": 87, "3535": 87, "08055": 87, "0006649": 87, "08254": 87, "3272": 87, "049172": 87, "04859": 87, "10641": 87, "049153": 87, "04854": 87, "10638": 87, "049152": 87, "048515": 87, "10639": 87, "049155": 87, "048503": 87, "1064": 87, "049156": 87, "0485": 87, "28579": 87, "28197": 87, "21281": 87, "5583": 87, "0190": 87, "9725": 87, "0761": 87, "107089": 87, "107097": 87, "723": 87, "106715": 87, "0006477": 87, "03379": 87, "3619": 87, "03302": 87, "0004506": 87, "03208": 87, "9716": 87, "08205": 87, "0008108": 87, "08438": 87, "5604": 87, "101111": 87, "03501": 87, "0007897": 87, "03243": 87, "03118": 87, "0004102": 87, "03034": 87, "1979": 87, "08096": 87, "0004804": 87, "08264": 87, "3495": 87, "049499": 87, "048536": 87, "049483": 87, "048491": 87, "10673": 87, "049474": 87, "048479": 87, "10676": 87, "049473": 87, "048472": 87, "10677": 87, "04847": 87, "28764": 87, "2818": 87, "21355": 87, "5513": 87, "5578": 87, "2911": 87, "0192": 87, "9728": 87, "107264": [87, 88], "107277": 87, "106891": 87, "03563": 87, "0001711": 87, "03425": 87, "3641": 87, "03295": 87, "0004634": 87, "0322": 87, "9614": 87, "08213": 87, "0006723": 87, "08443": 87, "5626": 87, "101265": 87, "0347": 87, "0003111": 87, "03288": 87, "1637": 87, "03122": 87, "0004946": 87, "3539": 87, "08118": 87, "0003692": 87, "08282": 87, "049518": 87, "04852": 87, "10693": 87, "049498": 87, "048528": 87, "10688": 87, "049495": 87, "048535": 87, "10686": 87, "049494": 87, "048537": 87, "28776": 87, "28219": 87, "21371": 87, "5585": 87, "2922": 87, "0198": 87, "9722": 87, "0759": 87, "733": [87, 88], "c2221": 87, "c222": 87, "0457": 87, "35999": 87, "218334": 87, "0455": 87, "218080": 87, "108857": 87, "0326": 87, "225340": 87, "112674": 87, "bravais_setting_4": 87, "bravais_setting_3": 87, "cost": 87, "worsen": 87, "03532": 87, "621e": 87, "03409": 87, "3577": 87, "03515": 87, "0003891": 87, "03422": 87, "08285": 87, "0008039": 87, "08427": 87, "11205": [], "95686": [], "1758": 87, "03395": 87, "001028": [], "03026": [], "03204": 87, "0007549": [], "02983": [], "3632": 87, "07953": 87, "0008095": [], "08144": [], "3193": 87, "046339": [], "048041": [], "10463": [87, 88], "046276": [], "047965": [], "10467": [87, 88], "046257": [], "047943": [], "10473": [], "046261": [], "04793": [], "10474": [87, 88], "046264": [], "047926": [], "10475": [87, 88], "27864": [], "2095": [], "106889": 87, "03432": [], "0006167": [], "03482": 87, "03496": [], "0001026": [], "0345": 87, "08391": [], "42e": [], "08361": [], "11450": [], "95439": [], "1802": [], "03294": 87, "0003782": [], "03065": 87, "1822": 87, "0315": [], "0003596": [], "2338": 87, "3681": 87, "08069": 87, "311e": [], "3162": 87, "046025": [], "047842": [], "10469": 87, "043161": [], "040664": [], "10341": 87, "041165": [], "039697": [], "10279": [], "04062": [], "039492": [], "10246": 87, "040505": [], "039483": [], "10225": [], "040482": [], "039479": [], "10215": 87, "040477": [], "039477": [], "10213": 87, "040476": [], "039478": [], "23532": [], "22953": [], "20426": [], "1698": 87, "2426": 87, "2883": 87, "04558": 87, "9560": 87, "0639": 87, "0114": 87, "2539": 87, "2931": 87, "9239": 87, "2460": 87, "0163": 87, "0180": 87, "0151": 87, "23985": 87, "000831581": [], "22424e": 87, "89652": 87, "999913": 87, "00556552": [], "0119317": [], "00567845": [], "999939": 87, "00945217": [], "965028": 87, "0598562": 87, "255222": 87, "128604": 87, "74028": 87, "659883": 87, "228434": 87, "669628": 87, "706694": 87, "gon_phi": 87, "gon_kappa": 87, "gon_omega": 87, "95438": [], "12561": [], "368590": 87, "95437": [], "044181": 87, "26304": [], "22778": 87, "23891": [], "22477": [], "26213": [], "22771": 87, "22402": [], "2008": 87, "2341": 87, "2815": 87, "2569": 87, "2560": 87, "3052": 87, "2733": 87, "3546": 87, "4266": 87, "3869": 87, "2654": 87, "3274": 87, "2634": 87, "3140": 87, "2788": 87, "3881": 87, "3202": 87, "2874": 87, "2843": 87, "3644": 87, "3900": [], "2562": 87, "3129": [], "2808": [], "3265": 87, "2895": 87, "4291": 87, "2446": [], "2968": [], "2687": [], "3328": [], "2946": 87, "3837": 87, "2379": [], "2867": [], "2875": 87, "3404": [], "2988": 87, "3630": 87, "4267": [], "3816": [], "2303": [], "2764": [], "2501": [], "3538": [], "3075": 87, "3675": [], "4329": [], "3833": 87, "2245": [], "2704": [], "2429": 87, "3137": 87, "4370": [], "3863": 87, "2172": [], "2403": 87, "3145": [], "3750": 87, "3231": [], "3744": [], "4443": [], "3906": [], "2161": [], "2642": 87, "2396": [], "3175": [], "3786": [], "3751": [], "4451": [], "3927": 87, "2131": [], "2603": [], "3277": 87, "3889": 87, "3348": 87, "4492": 87, "3929": 87, "2150": 87, "2605": 87, "2354": 87, "3825": [], "3261": [], "3716": [], "3789": [], "2133": [], "2574": 87, "2307": [], "3775": [], "4290": [], "3682": [], "2142": [], "2572": [], "2281": [], "3112": 87, "3658": 87, "3104": 87, "4165": 87, "3586": 87, "2149": 87, "3047": 87, "3578": 87, "3061": 87, "3493": 87, "4087": 87, "3549": 87, "2583": 87, "2302": 87, "3024": 87, "3019": 87, "3479": 87, "4061": 87, "3515": 87, "2950": 87, "3464": 87, "3394": 87, "3961": 87, "3423": 87, "2188": 87, "2626": 87, "2894": 87, "3330": 87, "3883": 87, "3358": 87, "2215": 87, "2647": 87, "2796": 87, "3295": 87, "2816": 87, "3221": 87, "3767": 87, "3273": 87, "2667": 87, "3184": 87, "2719": 87, "3107": 87, "3647": 87, "3163": 87, "2660": 87, "2329": 87, "2631": 87, "3588": 87, "2230": 87, "2670": 87, "2530": 87, "2982": 87, "2525": 87, "2966": 87, "3496": 87, "3016": 87, "2198": 87, "2637": 87, "2296": 87, "2567": 87, "2543": 87, "3048": 87, "3572": 87, "3084": 87, "2282": 87, "2716": 87, "2367": 87, "2548": 87, "2524": 87, "3057": 87, "3582": 87, "3080": 87, "2744": 87, "2380": 87, "2591": 87, "3157": 87, "3693": 87, "3182": 87, "2834": 87, "2452": 87, "2616": 87, "3037": 87, "3211": 87, "3731": 87, "3187": 87, "2443": 87, "2619": 87, "3771": 87, "3215": 87, "2498": 87, "2482": 87, "2939": 87, "3286": 87, "3760": 87, "3194": 87, "2554": 87, "2981": 87, "2491": 87, "2500": 87, "2896": 87, "2464": 87, "3777": 87, "3014": 87, "2467": 87, "2871": 87, "3298": 87, "3817": 87, "3088": 87, "2457": 87, "3327": 87, "2662": 87, "2408": 87, "2825": 87, "2436": 87, "3302": 87, "2680": 87, "3148": 87, "2358": 87, "2791": 87, "2420": 87, "3317": 87, "3870": 87, "2676": 87, "2633": 87, "2357": 87, "2461": 87, "3347": 87, "3407": 87, "2697": 87, "3188": 87, "2879": 87, "2546": 87, "3428": 87, "4021": 87, "3532": 87, "2722": 87, "3218": 87, "2766": 87, "2434": 87, "2934": 87, "2618": 87, "3439": 87, "4052": 87, "3601": 87, "2681": 87, "2961": 87, "2657": 87, "3465": 87, "4071": 87, "3620": 87, "2650": 87, "3132": 87, "2472": 87, "2688": 87, "3435": 87, "4047": 87, "3609": 87, "2558": 87, "3033": 87, "2646": 87, "2519": 87, "3053": 87, "3477": 87, "4101": 87, "2529": 87, "3000": 87, "2622": 87, "2553": [], "2803": 87, "3447": [], "4080": [], "3670": [], "2593": 87, "2881": 87, "3431": 87, "4094": 87, "2356": 87, "2812": 87, "2507": 87, "3242": 87, "4078": [], "2441": [], "2673": 87, "3310": [], "3364": 87, "4062": [], "3703": [], "2192": [], "3363": [], "3044": [], "3324": 87, "3649": [], "2112": [], "2804": [], "3482": [], "3154": [], "3360": [], "2085": 87, "2469": [], "2224": [], "3552": [], "3205": [], "3390": [], "3712": [], "2430": 87, "2186": 87, "2891": [], "3344": [], "4064": [], "3679": [], "2147": 87, "2828": 87, "3512": 87, "3164": 87, "3220": 87, "3923": 87, "1940": 87, "2311": 87, "2077": 87, "2759": 87, "3450": 87, "3109": 87, "3819": 87, "3449": 87, "1900": 87, "2278": 87, "3100": 87, "3790": 87, "3430": 87, "1932": 87, "2308": 87, "2701": 87, "3345": 87, "3023": 87, "3021": 87, "3692": 87, "1914": 87, "2301": 87, "2053": 87, "2683": 87, "3011": 87, "2973": 87, "3304": 87, "1897": 87, "2039": 87, "2598": 87, "3253": 87, "2888": 87, "3564": 87, "3239": 87, "2295": 87, "2044": 87, "2590": 87, "2972": 87, "2859": 87, "3554": 87, "1887": 87, "2066": 87, "3191": 87, "2907": 87, "3502": 87, "2127": 87, "3101": 87, "2819": 87, "2745": [], "3421": [], "1921": 96, "2375": [], "2116": [], "3072": 87, "2793": 87, "3468": [], "3143": 87, "2212": [], "2395": 87, "3491": [], "3172": [], "2534": [], "2435": 87, "2817": 87, "2905": 87, "3622": 87, "2123": 87, "2664": 87, "3063": 87, "2795": 87, "2940": 87, "3662": 87, "3349": 87, "2185": 87, "2730": 87, "2462": 87, "2479": 87, "2800": 87, "3732": 87, "3383": 87, "2811": 87, "2516": 87, "2427": 87, "3012": 87, "2700": 87, "2962": 87, "3655": 87, "2263": 87, "2517": 87, "2577": 87, "3526": 87, "3180": 87, "2790": 87, "2492": 87, "2801": 87, "3192": 87, "2315": 87, "2571": 87, "2827": 87, "2508": 87, "3676": 87, "3296": 87, "2411": 87, "3018": 87, "2551": 87, "2807": 87, "2344": 87, "2884": 87, "2559": 87, "3123": 87, "3868": 87, "3463": 87, "2570": 87, "2845": 87, "2839": 87, "3159": 87, "3877": 87, "3472": 87, "2615": 87, "2877": 87, "3199": 87, "3954": 87, "3534": 87, "3293": 87, "2814": 87, "3309": 87, "4074": 87, "3648": 87, "3386": 87, "1566": 87, "1818": 87, "2294": 87, "2045": 87, "91596": 87, "92165": 87, "92093": 87, "91556": 87, "91153": 87, "90889": 87, "1177": 87, "2606": 87, "2965": 87, "5312": 87, "4368": 87, "4822": 87, "7648": 87, "6425": 87, "6912": 87, "11094": 87, "9253": 87, "9881": 87, "15371": 87, "12970": 87, "13814": 87, "20779": 87, "17869": 87, "18839": 87, "23748": 87, "20760": 87, "21529": 87, "24455": 87, "20311": 87, "21238": 87, "24341": 87, "20604": 87, "21460": 87, "24576": 87, "21432": 87, "22117": 87, "24712": 87, "21140": 87, "21781": 87, "25045": 87, "21339": [], "21958": [], "25192": 87, "22294": 87, "25082": 87, "21759": 87, "22206": 87, "25616": 87, "22282": 87, "22785": 87, "25697": 87, "22620": 87, "23008": 87, "26130": 87, "22429": 87, "22949": 87, "26279": 87, "22938": 87, "23278": 87, "366022": 87, "2677": 87, "95698": [], "5239": 87, "3548": 87, "313908": [], "325383": [], "42883": [], "3208": 87, "41623": [], "368699": 87, "327076": [], "312215": [], "155107": [], "5515": 87, "9961": 87, "0721": 87, "150956": [], "150228": [], "327038": [], "6490": 87, "325072": [], "325379": 87, "325378": [], "325073": 87, "7479": 87, "48533": 87, "50269": [], "49244": [], "0492": [], "98314": [], "88497": [], "83685": [], "83191": [], "81492": [], "80985": [], "80038": [], "79666": [], "79613": [], "79537": [], "7952": [], "79495": [], "79486": [], "79475": [], "79465": 87, "79458": [], "99897": 87, "06033": [], "99888": [], "06695": [], "99899": 87, "06025": [], "39733": 87, "06032": 87, "3973": 87, "06017": [], "99892": [], "06294": 87, "50239": [], "83161": 87, "83107": [], "82989": 87, "82981": 87, "70557": [], "03885": [], "9939": [], "2075": [], "5974": [], "9786": [], "14802": [], "19577": [], "20600": [], "12910": [], "50244": [], "0456": [], "0415": [], "0375": 87, "0372": 87, "0371": [], "67892": [], "9949": 87, "1933": 87, "2097": 87, "5993": 87, "9810": 87, "14768": 87, "19581": 87, "20450": 87, "12834": 87, "5938": [], "324979": [], "23046": 87, "22762": 87, "22907": 87, "3267": 87, "22699": 87, "3258": 87, "21992": 87, "098": 87, "22185": 87, "3190": 87, "21825": [], "3167": 87, "985": [87, 89], "21507": 87, "3115": 87, "22177": 87, "3126": 87, "21416": 87, "3095": 87, "20945": 87, "21449": 87, "19024": 87, "3010": 87, "14334": 87, "9982": 87, "6959": 87, "5117": 87, "3119": 87, "325189": [], "49118": 87, "nativig": 87, "trough": [87, 88], "colin": 87, "driven": 88, "resiz": 88, "layout": 88, "wildcard": 88, "branch": 88, "steadi": 88, "drop": 88, "cyan": 88, "cursor": 88, "heat": 88, "pop": 88, "heurist": 88, "polish": 88, "rougher": 88, "fifth": 88, "demand": 88, "tight": 88, "hypothesi": 88, "revis": [88, 96], "283277": 88, "15064": 88, "11794": 88, "41136": 88, "1935": 88, "understood": 88, "untick": 88, "fresh": 88, "cloud": 88, "ccp4i2": 88, "51405": 89, "cyst_0": 89, "unconstrain": 89, "yield": 89, "unlik": 89, "substanti": 89, "metal": 89, "12198": 89, "perspect": [89, 98], "42183": 89, "02218": 89, "6983": 89, "6749": 89, "5789": 89, "7429": 89, "3362": 89, "4212": 89, "6254": 89, "6569": 89, "1844": 89, "0832": 89, "0561": 89, "0913": 89, "0280": 89, "0777": 89, "0769": 89, "0546": 89, "3e": 89, "0222": 89, "00356": 89, "And": 89, "jiffi": 89, "lcy": 89, "reflections_": [89, 94], "experiments_": [89, 94], "ssx": 90, "ssx_index": 90, "ssx_integr": 90, "biologi": [91, 98, 99], "year": [91, 98], "deliv": 91, "micron": 91, "xfel": 91, "endeavour": 91, "bug": 91, "east": 91, "west": [91, 100], "employe": 91, "stfc": [91, 95], "218270": 91, "biomed": 91, "research": [91, 93], "pkg": 92, "dev20150903": 92, "platform": 92, "diamond_build": 92, "conda3": 92, "macosx": 92, "xzf": 92, "sudo": 92, "copyright": 93, "2012": [93, 96, 100], "kingdom": 93, "innov": 93, "reserv": 93, "redistribut": 93, "binari": 93, "permit": 93, "met": 93, "disclaim": 93, "neither": 93, "holder": 93, "nor": 93, "endors": 93, "promot": 93, "BY": 93, "THE": 93, "AS": [93, 96], "OR": 93, "warranti": 93, "BUT": 93, "TO": 93, "OF": 93, "merchant": 93, "FOR": 93, "IN": 93, "NO": 93, "event": 93, "owner": 93, "BE": 93, "liabl": 93, "indirect": 93, "incident": 93, "exemplari": 93, "consequenti": 93, "procur": 93, "profit": 93, "busi": 93, "interrupt": [47, 54, 64, 70, 73, 93], "ON": 93, "liabil": 93, "strict": 93, "tort": 93, "aris": 93, "IF": 93, "SUCH": 93, "blah_": 94, "sorri": 94, "recombin": 94, "mere": 94, "reli": 94, "ada": 95, "lovelac": 95, "scientif": 95, "isi": 95, "muon": 95, "flight": 95, "tof": 95, "sxd": 95, "diffus": [95, 96], "spallat": 95, "plan": 95, "futur": [95, 98, 99], "rj": 96, "horrel": 96, "sandi": 96, "sanchez": 96, "weatherbi": 96, "owen": 96, "lukacik": 96, "strain": 96, "damerel": 96, "rl": 96, "walsh": 96, "ma": [96, 100], "35647922": 96, "pmc9159281": 96, "mcdonagh": 96, "pascal": 96, "bh": 96, "34747533": 96, "pmc8740827": 96, "32254063": 96, "pmc7137103": 96, "paterson": 96, "ng": 96, "beal": 96, "vollmar": 96, "mcaulei": 96, "ke": 96, "flaig": 96, "aw": 96, "mar": 96, "30950396": 96, "pmc6450062": 96, "lj": 96, "yano": 96, "nk": 96, "sep": 96, "30198898": 96, "pmc6130462": 96, "29717711": 96, "pmc5930348": 96, "feb": 96, "29533234": 96, "pmc5947772": 96, "thorn": 96, "iucrj": 96, "28989718": 96, "pmc5619854": 96, "dec": 96, "27980508": 96, "pmc5139990": 96, "27050135": 96, "pmc4822564": 96, "oct": 96, "25286849": 96, "pmc4188007": 96, "aug": 96, "25242914": 96, "pmc4119952": 96, "motion": 96, "wall": 96, "me": 96, "pd": 96, "fraser": 96, "24507780": 96, "pmc4070675": 96, "rw": 96, "1274": 96, "jul": 96, "2013": [96, 100], "23793153": 96, "pmc3689530": 96, "fortran": 96, "convers": 96, "fabl": 96, "terwillig": 96, "tc": 96, "22640868": 96, "pmc3448510": 96, "toxic": 96, "synuclein": 96, "invis": 96, "rodriguez": 96, "ja": 96, "ivanova": 96, "sawaya": 96, "mr": 96, "cascio": 96, "rey": 96, "fe": 96, "shi": 96, "sangwan": 96, "guenther": 96, "el": 96, "johnson": 96, "zhang": 96, "jiang": 96, "arb": 96, "nannenga": 96, "bl": 96, "whitelegg": 96, "messerschmidt": 96, "boutet": 96, "gonen": 96, "eisenberg": 96, "2015": [96, 100], "26352473": 96, "pmc4791177": 96, "architectur": 96, "synaptotagmin": 96, "snare": 96, "machineri": 96, "neuron": 96, "exocytosi": 96, "zhou": 96, "lai": 96, "bacaj": 96, "lyubimov": 96, "ai": 96, "uervirojnangkoorn": 96, "cohen": 96, "ae": 96, "solti": 96, "sm": 96, "alonso": 96, "mori": 96, "chollet": 96, "lemk": 96, "ht": 96, "pfuetzner": 96, "ra": 96, "choi": 96, "wei": 96, "wi": 96, "diao": 96, "s\u00fcdhof": 96, "brunger": 96, "AT": 96, "26280336": 96, "pmc4607316": 96, "laser": [96, 98], "ginn": 96, "hm": 96, "wagner": 96, "grime": 96, "26057680": 96, "pmc4461207": 96, "biolog": 96, "elif": 96, "25781634": 96, "pmc4397907": 96, "cpv17": 96, "polyhedrin": 96, "ji": 96, "6435": 96, "25751308": 96, "pmc4403592": 96, "25723925": 96, "pmc4344359": 96, "amyloid": 96, "peptid": 96, "mcfarlan": 96, "25664747": 96, "pmc4321489": 96, "25664746": 96, "pmc4321488": 96, "zwart": 96, "ph": 96, "3299": 96, "25478847": 96, "pmc4257623": 96, "gonz\u00e1lez": 96, "aguila": 96, "barn": 96, "baxter": 96, "brehmer": 96, "calero": 96, "ehrensberg": 96, "eriksson": 96, "tl": 96, "feng": 96, "hedman": 96, "hollenbeck": 96, "holton": 96, "keabl": 96, "kobilka": 96, "bk": 96, "kovaleva": 96, "eg": 96, "kruse": 96, "lin": 96, "manglik": 96, "mathew": 96, "ii": 96, "mcphillip": 96, "se": 96, "nelson": 96, "peter": 96, "jw": 96, "smith": 96, "ca": [96, 100], "song": 96, "stevenson": 96, "tsai": 96, "vinetski": 96, "wakatsuki": 96, "zadvornyi": 96, "oa": 96, "zhu": 96, "hodgson": 96, "ko": 96, "acad": 96, "17122": 96, "25362050": 96, "pmc4260607": 96, "bacteri": 96, "gingeri": 96, "goldschmidt": 96, "colleti": 96, "koglin": 96, "je": 96, "gj": 96, "nass": 96, "botha": 96, "doak": 96, "rb": 96, "shoeman": 96, "depont": 96, "park": 96, "hw": 96, "federici": 96, "ba": 96, "schlicht": 96, "12769": 96, "25136092": 96, "pmc4156696": 96, "spectroscopi": 96, "metalloenzym": 96, "kern": 96, "tran": 96, "laksmono": 96, "gul": 96, "sierra": 96, "rg": 96, "rehanek": 96, "erko": 96, "mitzner": 96, "wernet": 96, "bergmann": 96, "yachandra": 96, "philo": 96, "soc": 96, "lond": 96, "20130590": 96, "24914169": 96, "pmc4052878": 96, "mn\u2084ca": 96, "photosynthet": 96, "water": 96, "oxid": 96, "catalyst": 96, "koroidov": 96, "hellmich": 96, "messing": 96, "zouni": 96, "vk": 96, "20130324": 96, "24914152": 96, "pmc4052861": 96, "ibrahim": 96, "han": 96, "lassal": 96, "kaiser": 96, "chatterje": 96, "stan": 96, "gl\u00f6ckner": 96, "lamp": 96, "difior": 96, "milathianaki": 96, "fry": 96, "seibert": 96, "gallo": 96, "uhlig": 96, "sokara": 96, "weng": 96, "skinner": 96, "bogan": 96, "mj": 96, "glatzel": 96, "4371": 96, "25006873": 96, "pmc4151126": 96, "miahnahri": 96, "schafer": 96, "dw": 96, "sellberg": 96, "latim": 96, "24633409": 96, "pmc4008696": 96, "photosystem": 96, "23413188": 96, "pmc3732582": 96, "mcqueen": 96, "ta": 96, "9721": 96, "22665786": 96, "pmc3382516": 96, "conform": 96, "microsecond": 96, "simul": 96, "benschoten": 96, "ah": 96, "17887": 96, "25453071": 96, "pmc4273327": 96, "tightli": 96, "jbluic": 96, "pothineni": 96, "sb": 96, "venugopalan": 96, "ogata": 96, "cm": 96, "hilgart": 96, "stepanov": 96, "sanishvili": 96, "becker": 96, "jl": 96, "fischetti": 96, "rf": 96, "25484844": 96, "pmc4248568": 96, "imagecif": 96, "hj": 96, "deliver": 96, "biostruct": [96, 98], "month": 96, "stepwis": 97, "simplic": 97, "cluster_2": 97, "vv": 97, "underli": 97, "batch_siz": 97, "integrated_0": 97, "technolog": 98, "brilliant": 98, "3rd": 98, "tandem": 98, "microfocu": 98, "optic": 98, "brought": 98, "fel": 98, "nano": 98, "tantalis": 98, "prospect": 98, "era": 98, "concomit": 98, "methodologi": 98, "shutterless": 98, "utilis": 98, "techniqu": 98, "gpu": 98, "comprehens": 98, "wp6": 98, "forum": 98, "technic": 98, "survei": 98, "scene": 98, "emphasi": 98, "formal": 98, "todai": 98, "learnt": 98, "trek": 98, "adventur": 98, "wolfgang": 98, "retrospect": 98, "kai": 98, "beaten": 98, "miniut": 98, "tom": 98, "crystfel": 98, "anastassi": 98, "tasso": 98, "perraki": 98, "tbc": 98, "frank": 98, "vondelft": 98, "nick": 98, "individualist": 98, "bullet": 98, "wast": 98, "1976": 98, "loe": 98, "kroon": 98, "batenburg": 98, "eval": 98, "mrc": 99, "dai": 99, "parametr": 99, "12th": 100, "13th": 100, "june": 100, "committe": 100, "juli": 100, "boston": 100, "februari": 100, "22nd": 100, "attende": 100, "4a": 100, "septemb": 100, "4b": 100, "octob": 100, "novemb": 100, "g484c773cc": [], "8905": [], "4228": [], "8486": [], "betalactamase_sum": 87, "11207": 87, "95684": [87, 88], "00103": 87, "03025": 87, "0007586": 87, "02982": 87, "0008083": 87, "08143": 87, "046337": [87, 88], "048039": [87, 88], "046274": [87, 88], "047964": [87, 88], "046255": [87, 88], "047941": [87, 88], "10472": [87, 88], "046259": [87, 88], "047928": [87, 88], "046263": [87, 88], "047924": [87, 88], "26897": 87, "27863": 87, "03433": 87, "0006215": 87, "03495": 87, "53e": 87, "781e": 87, "08362": 87, "11457": 87, "95432": 87, "000379": 87, "03149": 87, "0003546": 87, "365e": 87, "08057": 87, "04602": 87, "047837": 87, "043154": 87, "040661": 87, "041158": 87, "039695": 87, "040613": 87, "039489": 87, "040498": 87, "03948": 87, "10226": 87, "040475": 87, "039476": 87, "040471": 87, "10214": 87, "040469": 87, "23529": 87, "22951": 87, "20427": 87, "000831161": 87, "00556579": 87, "011931": 87, "00567871": 87, "00945197": 87, "11833": 87, "95431": 87, "12568": 87, "95430": 87, "26302": 87, "23887": 87, "22476": 87, "26211": 87, "23877": 87, "22401": 87, "3128": 87, "3264": 87, "4289": 87, "3867": 87, "2445": 87, "2685": 87, "2945": 87, "2378": 87, "2865": 87, "2987": 87, "3815": 87, "2984": 87, "3537": 87, "3674": 87, "2244": 87, "2703": 87, "3028": 87, "3618": 87, "3680": 87, "4369": 87, "2171": 87, "2648": 87, "3748": 87, "3742": 87, "4441": 87, "3905": 87, "2159": 87, "2640": 87, "3174": 87, "3785": 87, "3280": 87, "4450": 87, "3926": 87, "2130": 87, "2602": 87, "3234": 87, "3826": 87, "3262": 87, "3717": 87, "2134": 87, "2575": 87, "3210": 87, "3660": 87, "2573": 87, "2552": 87, "3103": 87, "2802": 87, "3446": 87, "4079": 87, "3669": 87, "2638": 87, "3241": 87, "2949": 87, "3402": 87, "3714": 87, "2269": 87, "3013": 87, "4060": 87, "3701": 87, "2191": 87, "2355": 87, "2710": 87, "3361": 87, "3042": 87, "3323": 87, "3646": 87, "2504": 87, "3480": 87, "3152": 87, "3359": 87, "4073": 87, "2468": 87, "2223": 87, "3551": 87, "3204": 87, "3389": 87, "4100": 87, "3711": 87, "2890": 87, "3580": 87, "3343": 87, "4063": 87, "3678": 87, "3420": 87, "2782": 87, "3467": 87, "2211": 87, "3171": 87, "21338": 87, "21959": 87, "95699": 87, "54359": 87, "313907": 87, "325384": 87, "42882": 87, "41622": 87, "327077": 87, "312214": 87, "155114": 87, "150962": 87, "150234": 87, "327039": 87, "325380": 87, "325074": 87, "50270": 87, "49246": 87, "2242": 87, "1753": 87, "0494": 87, "98356": 87, "88594": 87, "83668": 87, "83299": 87, "8151": 87, "81007": 87, "80047": 87, "79677": 87, "7962": 87, "79545": 87, "79528": 87, "79502": 87, "79494": 87, "79482": 87, "79473": 87, "99893": 87, "06694": 87, "06024": 87, "06016": 87, "99889": 87, "50240": 87, "70559": 87, "03884": 87, "9938": 87, "2076": 87, "5976": 87, "9783": 87, "14804": 87, "20596": 87, "12908": 87, "50245": 87, "0416": 87, "67891": 87, "5582": [], "324980": 87, "325190": 87, "7035": [], "2037": [], "g0ab5c7d9a": [], "4001": [], "0852": [], "9381": [], "0737": [], "g71877ce00": [], "4322": [], "0910": [], "6887": [], "g7cbc05313": [], "3065": [], "7174": [], "8773": [], "ge9cce9605": [], "exclude_images_multipl": [47, 54, 64, 70, 73], "shorthand": [47, 54, 64, 70, 73], "cred": [47, 54, 64, 70, 73], "20th": [47, 54, 64, 70, 73], "1443": [], "8655": [], "4901": [], "5033": [], "mosaicity_max_limit": [41, 51, 54, 58], "1044": [40, 83, 85, 87], "g103ed65a1": [40, 83, 85, 87], "4237": [], "0123": [], "5488": [], "5110": [], "max_cell_volume_change_fract": [41, 51, 54, 58], "8530": [], "0498": [], "3069": 83, "4405": 85, "0162": 87}, "objects": {"dials.algorithms": [[10, 0, 0, "-", "background"], [11, 0, 0, "-", "indexing"], [13, 0, 0, "-", "profile_model"], [15, 0, 0, "-", "scaling"], [18, 0, 0, "-", "symmetry"]], "dials.algorithms.background": [[10, 1, 1, "", "RadialAverage"], [10, 3, 1, "", "set_shoebox_background_value"]], "dials.algorithms.background.RadialAverage": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "add"], [10, 2, 1, "", "inv_d2"], [10, 2, 1, "", "mean"], [10, 2, 1, "", "weight"]], "dials.algorithms.indexing": [[11, 4, 1, "", "DialsIndexError"], [11, 4, 1, "", "DialsIndexRefineError"], [11, 0, 0, "-", "assign_indices"], [11, 0, 0, "-", "basis_vector_search"], [11, 0, 0, "-", "compare_orientation_matrices"], [11, 0, 0, "-", "indexer"], [11, 0, 0, "-", "lattice_search"], [11, 0, 0, "-", "max_cell"], [11, 0, 0, "-", "model_evaluation"], [11, 0, 0, "-", "nearest_neighbor"], [11, 0, 0, "-", "refinement"], [11, 0, 0, "-", "stills_indexer"], [11, 0, 0, "-", "symmetry"]], "dials.algorithms.indexing.assign_indices": [[11, 1, 1, "", "AssignIndicesGlobal"], [11, 1, 1, "", "AssignIndicesLocal"], [11, 1, 1, "", "AssignIndicesStrategy"]], "dials.algorithms.indexing.assign_indices.AssignIndicesGlobal": [[11, 2, 1, "", "__init__"]], "dials.algorithms.indexing.assign_indices.AssignIndicesLocal": [[11, 2, 1, "", "__init__"]], "dials.algorithms.indexing.assign_indices.AssignIndicesStrategy": [[11, 2, 1, "", "__init__"]], "dials.algorithms.indexing.basis_vector_search": [[11, 1, 1, "", "FFT1D"], [11, 1, 1, "", "FFT3D"], [11, 1, 1, "", "RealSpaceGridSearch"], [11, 1, 1, "", "Strategy"], [11, 0, 0, "-", "combinations"], [11, 0, 0, "-", "optimise"]], "dials.algorithms.indexing.basis_vector_search.FFT1D": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_basis_vectors"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.basis_vector_search.FFT3D": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_basis_vectors"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "compute_functional"], [11, 2, 1, "", "find_basis_vectors"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"], [11, 2, 1, "", "score_vectors"], [11, 6, 1, "", "search_directions"], [11, 6, 1, "", "search_vectors"]], "dials.algorithms.indexing.basis_vector_search.Strategy": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_basis_vectors"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.basis_vector_search.combinations": [[11, 3, 1, "", "candidate_orientation_matrices"], [11, 3, 1, "", "filter_known_symmetry"], [11, 3, 1, "", "filter_similar_orientations"]], "dials.algorithms.indexing.basis_vector_search.optimise": [[11, 1, 1, "", "BasisVectorMinimiser"], [11, 1, 1, "", "BasisVectorTarget"], [11, 3, 1, "", "optimise_basis_vectors"]], "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorMinimiser": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "compute_functional_and_gradients"]], "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "compute_functional"], [11, 2, 1, "", "compute_functional_and_gradients"]], "dials.algorithms.indexing.compare_orientation_matrices": [[11, 3, 1, "", "difference_rotation_matrix_axis_angle"], [11, 3, 1, "", "rotation_matrix_differences"]], "dials.algorithms.indexing.indexer": [[11, 1, 1, "", "Indexer"], [11, 3, 1, "", "apply_hkl_offset"]], "dials.algorithms.indexing.indexer.Indexer": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "export_as_json"], [11, 2, 1, "", "export_reflections"], [11, 2, 1, "", "find_lattices"], [11, 2, 1, "", "find_max_cell"], [11, 2, 1, "", "from_parameters"], [11, 2, 1, "", "index"], [11, 2, 1, "", "index_reflections"], [11, 2, 1, "", "refine"], [11, 2, 1, "", "setup_indexing"], [11, 2, 1, "", "show_experiments"]], "dials.algorithms.indexing.lattice_search": [[11, 1, 1, "", "LowResSpotMatch"], [11, 1, 1, "", "Strategy"]], "dials.algorithms.indexing.lattice_search.LowResSpotMatch": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_crystal_models"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.lattice_search.Strategy": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "find_crystal_models"], [11, 5, 1, "", "phil_help"], [11, 5, 1, "", "phil_scope"]], "dials.algorithms.indexing.max_cell": [[11, 3, 1, "", "find_max_cell"]], "dials.algorithms.indexing.model_evaluation": [[11, 1, 1, "", "ModelEvaluation"], [11, 1, 1, "", "ModelRank"], [11, 1, 1, "", "ModelRankFilter"], [11, 1, 1, "", "ModelRankWeighted"], [11, 1, 1, "", "Result"], [11, 1, 1, "", "Strategy"], [11, 3, 1, "", "filter_doubled_cell"]], "dials.algorithms.indexing.model_evaluation.ModelEvaluation": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "evaluate"]], "dials.algorithms.indexing.model_evaluation.ModelRank": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "append"], [11, 2, 1, "", "best_model"], [11, 2, 1, "", "extend"]], "dials.algorithms.indexing.model_evaluation.ModelRankFilter": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "append"], [11, 2, 1, "", "best_model"], [11, 2, 1, "", "extend"], [11, 2, 1, "", "filter_by_likelihood"], [11, 2, 1, "", "filter_by_n_indexed"], [11, 2, 1, "", "filter_by_volume"], [11, 2, 1, "", "update_analysis"]], "dials.algorithms.indexing.model_evaluation.ModelRankWeighted": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "best_model"], [11, 2, 1, "", "combined_scores"], [11, 2, 1, "", "score_by_fraction_indexed"], [11, 2, 1, "", "score_by_rmsd_xy"], [11, 2, 1, "", "score_by_volume"]], "dials.algorithms.indexing.model_evaluation.Result": [[11, 5, 1, "", "crystal"], [11, 5, 1, "", "fraction_indexed"], [11, 5, 1, "", "hkl_offset"], [11, 5, 1, "", "model_likelihood"], [11, 5, 1, "", "n_indexed"], [11, 5, 1, "", "rmsds"]], "dials.algorithms.indexing.model_evaluation.Strategy": [[11, 2, 1, "", "evaluate"]], "dials.algorithms.indexing.nearest_neighbor": [[11, 1, 1, "", "NeighborAnalysis"]], "dials.algorithms.indexing.nearest_neighbor.NeighborAnalysis": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "plot_histogram"]], "dials.algorithms.indexing.refinement": [[11, 3, 1, "", "refine"]], "dials.algorithms.indexing.stills_indexer": [[11, 1, 1, "", "StillsIndexer"], [11, 1, 1, "", "StillsIndexerBasisVectorSearch"], [11, 1, 1, "", "StillsIndexerKnownOrientation"], [11, 1, 1, "", "StillsIndexerLatticeSearch"], [11, 3, 1, "", "calc_2D_rmsd_and_displacements"], [11, 3, 1, "", "e_refine"], [11, 3, 1, "", "plot_displacements"]], "dials.algorithms.indexing.stills_indexer.StillsIndexer": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "choose_best_orientation_matrix"], [11, 2, 1, "", "experiment_list_for_crystal"], [11, 2, 1, "", "identify_outliers"], [11, 2, 1, "", "index"], [11, 2, 1, "", "refine"]], "dials.algorithms.indexing.symmetry": [[11, 1, 1, "", "SymmetryHandler"], [11, 3, 1, "", "calc_acentric_subgroups"], [11, 3, 1, "", "find_matching_symmetry"], [11, 3, 1, "", "groups_cache"], [11, 3, 1, "", "metric_supergroup"]], "dials.algorithms.indexing.symmetry.SymmetryHandler": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "apply_symmetry"]], "dials.algorithms.integration": [[12, 0, 0, "-", "integrator"]], "dials.algorithms.integration.integrator": [[12, 1, 1, "", "Executor"], [12, 1, 1, "", "Integrator"], [12, 1, 1, "", "Integrator2D"], [12, 1, 1, "", "Integrator3D"], [12, 1, 1, "", "Integrator3DThreaded"], [12, 1, 1, "", "IntegratorExecutor"], [12, 1, 1, "", "IntegratorFlat3D"], [12, 1, 1, "", "IntegratorSingle2D"], [12, 1, 1, "", "IntegratorStills"], [12, 1, 1, "", "JobList"], [12, 1, 1, "", "Parameters"], [12, 1, 1, "", "Processor2D"], [12, 1, 1, "", "Processor3D"], [12, 1, 1, "", "ProcessorFlat3D"], [12, 1, 1, "", "ProcessorSingle2D"], [12, 1, 1, "", "ProcessorStills"], [12, 1, 1, "", "ProfileModellerExecutor"], [12, 1, 1, "", "ProfileValidatorExecutor"], [12, 1, 1, "", "ReflectionManager"], [12, 3, 1, "", "frame_hist"], [12, 3, 1, "", "generate_phil_scope"], [12, 3, 1, "", "hist"], [12, 3, 1, "", "nframes_hist"]], "dials.algorithms.integration.integrator.Executor": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "process"]], "dials.algorithms.integration.integrator.Integrator": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "fit_profiles"], [12, 2, 1, "", "integrate"], [12, 2, 1, "", "report"], [12, 2, 1, "", "summary"]], "dials.algorithms.integration.integrator.Integrator2D": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.Integrator3D": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.Integrator3DThreaded": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "finalise"], [12, 2, 1, "", "initialise"], [12, 2, 1, "", "integrate"], [12, 2, 1, "", "report"], [12, 2, 1, "", "summary"]], "dials.algorithms.integration.integrator.IntegratorExecutor": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "data"], [12, 2, 1, "", "finalize"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "process"]], "dials.algorithms.integration.integrator.IntegratorFlat3D": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.IntegratorSingle2D": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.IntegratorStills": [[12, 5, 1, "", "ProcessorClass"], [12, 2, 1, "", "finalize_reflections"], [12, 2, 1, "", "initialize_reflections"]], "dials.algorithms.integration.integrator.JobList": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "add"], [12, 2, 1, "", "shoebox_memory"], [12, 2, 1, "", "split"]], "dials.algorithms.integration.integrator.Parameters": [[12, 1, 1, "", "Filter"], [12, 1, 1, "", "Profile"], [12, 2, 1, "", "__init__"], [12, 2, 1, "", "from_phil"]], "dials.algorithms.integration.integrator.Parameters.Filter": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.Parameters.Profile": [[12, 1, 1, "", "Validation"], [12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.Parameters.Profile.Validation": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.Processor2D": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.Processor3D": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.ProcessorFlat3D": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.ProcessorSingle2D": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.ProcessorStills": [[12, 2, 1, "", "__init__"]], "dials.algorithms.integration.integrator.ProfileModellerExecutor": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "data"], [12, 2, 1, "", "finalize"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "process"]], "dials.algorithms.integration.integrator.ProfileValidatorExecutor": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "data"], [12, 2, 1, "", "finalize"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "process"]], "dials.algorithms.integration.integrator.ReflectionManager": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "accumulate"], [12, 2, 1, "", "data"], [12, 2, 1, "", "finished"], [12, 2, 1, "", "job"], [12, 2, 1, "", "num_reflections"], [12, 2, 1, "", "split"]], "dials.algorithms.refinement": [[14, 0, 0, "-", "engine"], [14, 0, 0, "-", "refiner"], [14, 0, 0, "-", "reflection_manager"], [14, 0, 0, "-", "target"], [14, 0, 0, "-", "target_stills"], [14, 0, 0, "-", "weighting_strategies"]], "dials.algorithms.refinement.engine": [[14, 1, 1, "", "AdaptLbfgs"], [14, 1, 1, "", "AdaptLstbx"], [14, 1, 1, "", "DisableMPmixin"], [14, 1, 1, "", "GaussNewtonIterations"], [14, 1, 1, "", "Journal"], [14, 1, 1, "", "LBFGScurvs"], [14, 1, 1, "", "LevenbergMarquardtIterations"], [14, 1, 1, "", "Refinery"], [14, 1, 1, "", "SimpleLBFGS"]], "dials.algorithms.refinement.engine.AdaptLbfgs": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "callback_after_step"], [14, 2, 1, "", "compute_functional_and_gradients"], [14, 2, 1, "", "compute_functional_gradients_and_curvatures"], [14, 2, 1, "", "run_lbfgs"]], "dials.algorithms.refinement.engine.AdaptLstbx": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "build_up"], [14, 2, 1, "", "calculate_esds"], [14, 2, 1, "", "parameter_vector_norm"], [14, 2, 1, "", "restart"], [14, 2, 1, "", "set_cholesky_factor"], [14, 2, 1, "", "step_backward"], [14, 2, 1, "", "step_forward"]], "dials.algorithms.refinement.engine.DisableMPmixin": [[14, 2, 1, "", "set_nproc"]], "dials.algorithms.refinement.engine.GaussNewtonIterations": [[14, 2, 1, "", "__init__"], [14, 5, 1, "", "convergence_as_shift_over_esd"], [14, 5, 1, "", "damping_value"], [14, 5, 1, "", "gradient_threshold"], [14, 5, 1, "", "max_shift_over_esd"], [14, 2, 1, "", "run"], [14, 5, 1, "", "step_threshold"]], "dials.algorithms.refinement.engine.Journal": [[14, 2, 1, "", "add_column"], [14, 2, 1, "", "add_row"], [14, 2, 1, "", "del_last_row"], [14, 2, 1, "", "from_json_file"], [14, 2, 1, "", "get_nrows"], [14, 5, 1, "", "reason_for_termination"], [14, 2, 1, "", "set_last_cell"], [14, 2, 1, "", "to_json_file"]], "dials.algorithms.refinement.engine.LBFGScurvs": [[14, 2, 1, "", "compute_functional_gradients_diag"], [14, 2, 1, "", "run"]], "dials.algorithms.refinement.engine.LevenbergMarquardtIterations": [[14, 2, 1, "", "add_constant_to_diagonal"], [14, 6, 1, "", "mu"], [14, 2, 1, "", "report_progress"], [14, 2, 1, "", "run"], [14, 2, 1, "", "setup_mu"], [14, 5, 1, "", "tau"]], "dials.algorithms.refinement.engine.Refinery": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "get_correlation_matrix_for_step"], [14, 2, 1, "", "get_num_steps"], [14, 2, 1, "", "jacobian_condition_number"], [14, 2, 1, "", "prepare_for_step"], [14, 2, 1, "", "run"], [14, 2, 1, "", "set_nproc"], [14, 2, 1, "", "split_jacobian_into_blocks"], [14, 2, 1, "", "test_for_termination"], [14, 2, 1, "", "test_objective_increasing_but_not_nref"], [14, 2, 1, "", "test_rmsd_convergence"], [14, 2, 1, "", "update_journal"]], "dials.algorithms.refinement.engine.SimpleLBFGS": [[14, 2, 1, "", "run"]], "dials.algorithms.refinement.refiner": [[14, 1, 1, "", "Refiner"], [14, 1, 1, "", "RefinerFactory"], [14, 1, 1, "", "ScanVaryingRefiner"]], "dials.algorithms.refinement.refiner.Refiner": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "calc_exp_rmsd_table"], [14, 2, 1, "", "get_experiments"], [14, 2, 1, "", "get_free_reflections"], [14, 2, 1, "", "get_matches"], [14, 2, 1, "", "get_param_reporter"], [14, 2, 1, "", "get_parameter_correlation_matrix"], [14, 6, 1, "", "history"], [14, 2, 1, "", "predict_for_indexed"], [14, 2, 1, "", "predict_for_reflection_table"], [14, 2, 1, "", "print_exp_rmsd_table"], [14, 2, 1, "", "print_out_of_sample_rmsd_table"], [14, 2, 1, "", "print_panel_rmsd_table"], [14, 2, 1, "", "print_step_table"], [14, 2, 1, "", "rmsds"], [14, 2, 1, "", "rmsds_for_reflection_table"], [14, 2, 1, "", "run"], [14, 2, 1, "", "selection_used_for_refinement"]], "dials.algorithms.refinement.refiner.RefinerFactory": [[14, 2, 1, "", "config_refinery"], [14, 2, 1, "", "config_restraints"], [14, 2, 1, "", "config_sparse"], [14, 2, 1, "", "config_target"], [14, 2, 1, "", "from_parameters_data_experiments"], [14, 2, 1, "", "reflections_after_outlier_rejection"]], "dials.algorithms.refinement.reflection_manager": [[14, 1, 1, "", "BlockCalculator"], [14, 1, 1, "", "ReflectionManager"], [14, 1, 1, "", "ReflectionManagerFactory"], [14, 1, 1, "", "StillsReflectionManager"]], "dials.algorithms.refinement.reflection_manager.BlockCalculator": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "per_image"], [14, 2, 1, "", "per_width"]], "dials.algorithms.refinement.reflection_manager.ReflectionManager": [[14, 2, 1, "", "__init__"], [14, 5, 1, "", "experiment_type"], [14, 2, 1, "", "filter_obs"], [14, 2, 1, "", "finalise"], [14, 2, 1, "", "get_accepted_refs_size"], [14, 2, 1, "", "get_centroid_analyser"], [14, 2, 1, "", "get_free_reflections"], [14, 2, 1, "", "get_indexed"], [14, 2, 1, "", "get_matches"], [14, 2, 1, "", "get_obs"], [14, 2, 1, "", "get_sample_size"], [14, 2, 1, "", "print_stats_on_matches"], [14, 2, 1, "", "reset_accepted_reflections"]], "dials.algorithms.refinement.reflection_manager.ReflectionManagerFactory": [[14, 2, 1, "", "from_parameters_reflections_experiments"]], "dials.algorithms.refinement.reflection_manager.StillsReflectionManager": [[14, 5, 1, "", "experiment_type"], [14, 2, 1, "", "print_stats_on_matches"]], "dials.algorithms.refinement.target": [[14, 1, 1, "", "LeastSquaresPositionalResidualWithRmsdCutoff"], [14, 1, 1, "", "LeastSquaresPositionalResidualWithRmsdCutoffSparse"], [14, 1, 1, "", "SparseGradientsMixin"], [14, 1, 1, "", "Target"], [14, 1, 1, "", "TargetFactory"]], "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoff": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "achieved"]], "dials.algorithms.refinement.target.Target": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "achieved"], [14, 2, 1, "", "calculate_gradients"], [14, 2, 1, "", "compute_functional_gradients_and_curvatures"], [14, 2, 1, "", "compute_residuals"], [14, 2, 1, "", "compute_residuals_and_gradients"], [14, 2, 1, "", "compute_restraints_functional_gradients_and_curvatures"], [14, 2, 1, "", "compute_restraints_residuals_and_gradients"], [14, 6, 1, "", "dim"], [14, 2, 1, "", "get_num_matches"], [14, 2, 1, "", "get_num_matches_for_experiment"], [14, 2, 1, "", "get_num_matches_for_panel"], [14, 2, 1, "", "predict"], [14, 2, 1, "", "predict_for_free_reflections"], [14, 2, 1, "", "predict_for_reflection_table"], [14, 5, 1, "", "rmsd_names"], [14, 5, 1, "", "rmsd_units"], [14, 2, 1, "", "rmsds"], [14, 2, 1, "", "rmsds_for_experiment"], [14, 2, 1, "", "rmsds_for_panel"], [14, 2, 1, "", "rmsds_for_reflection_table"], [14, 2, 1, "", "split_matches_into_blocks"], [14, 2, 1, "", "update_matches"]], "dials.algorithms.refinement.target.TargetFactory": [[14, 2, 1, "", "from_parameters_and_experiments"]], "dials.algorithms.refinement.target_stills": [[14, 1, 1, "", "LeastSquaresStillsResidualWithRmsdCutoff"], [14, 1, 1, "", "LeastSquaresStillsResidualWithRmsdCutoffSparse"]], "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "achieved"], [14, 2, 1, "", "predict_for_reflection_table"], [14, 5, 1, "", "rmsd_names"], [14, 5, 1, "", "rmsd_units"]], "dials.algorithms.refinement.weighting_strategies": [[14, 1, 1, "", "ConstantWeightingStrategy"], [14, 1, 1, "", "ExternalDelPsiWeightingStrategy"], [14, 1, 1, "", "StatisticalWeightingStrategy"], [14, 1, 1, "", "StillsWeightingStrategy"]], "dials.algorithms.refinement.weighting_strategies.ConstantWeightingStrategy": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "calculate_weights"]], "dials.algorithms.refinement.weighting_strategies.ExternalDelPsiWeightingStrategy": [[14, 2, 1, "", "calculate_weights"]], "dials.algorithms.refinement.weighting_strategies.StatisticalWeightingStrategy": [[14, 2, 1, "", "calculate_weights"]], "dials.algorithms.refinement.weighting_strategies.StillsWeightingStrategy": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "calculate_weights"]], "dials.algorithms.scaling.model": [[15, 0, 0, "-", "model"]], "dials.algorithms.scaling.model.model": [[15, 1, 1, "", "ArrayScalingModel"], [15, 1, 1, "", "DoseDecay"], [15, 1, 1, "", "KBScalingModel"], [15, 1, 1, "", "PhysicalScalingModel"], [15, 1, 1, "", "ScalingModelBase"], [15, 3, 1, "", "calc_n_param_from_bins"], [15, 3, 1, "", "calculate_new_offset"], [15, 3, 1, "", "determine_auto_absorption_params"], [15, 3, 1, "", "initialise_smooth_input"], [15, 3, 1, "", "make_combined_plots"], [15, 3, 1, "", "plot_scaling_models"]], "dials.algorithms.scaling.model.model.ArrayScalingModel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "configure_components"], [15, 6, 1, "", "consecutive_refinement_order"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 5, 1, "", "id_"], [15, 2, 1, "", "limit_image_range"], [15, 5, 1, "", "phil_scope"], [15, 2, 1, "", "plot_model_components"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling.model.model.DoseDecay": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "configure_components"], [15, 6, 1, "", "consecutive_refinement_order"], [15, 2, 1, "", "fix_initial_parameter"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "get_shared_components"], [15, 5, 1, "", "id_"], [15, 2, 1, "", "limit_image_range"], [15, 5, 1, "", "phil_scope"], [15, 2, 1, "", "plot_model_components"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling.model.model.KBScalingModel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "configure_components"], [15, 6, 1, "", "consecutive_refinement_order"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 5, 1, "", "id_"], [15, 5, 1, "", "phil_scope"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling.model.model.PhysicalScalingModel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "configure_components"], [15, 6, 1, "", "consecutive_refinement_order"], [15, 2, 1, "", "fix_initial_parameter"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "get_shared_components"], [15, 5, 1, "", "id_"], [15, 2, 1, "", "limit_image_range"], [15, 5, 1, "", "phil_scope"], [15, 2, 1, "", "plot_model_components"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling.model.model.ScalingModelBase": [[15, 2, 1, "", "__init__"], [15, 6, 1, "", "components"], [15, 6, 1, "", "configdict"], [15, 2, 1, "", "configure_components"], [15, 2, 1, "", "consecutive_refinement_order"], [15, 6, 1, "", "error_model"], [15, 2, 1, "", "fix_initial_parameter"], [15, 6, 1, "", "fixed_components"], [15, 2, 1, "", "from_data"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "get_shared_components"], [15, 5, 1, "", "id_"], [15, 6, 1, "", "is_scaled"], [15, 2, 1, "", "limit_image_range"], [15, 2, 1, "", "load_error_model"], [15, 6, 1, "", "n_params"], [15, 2, 1, "", "plot_model_components"], [15, 2, 1, "", "record_intensity_combination_Imid"], [15, 2, 1, "", "set_error_model"], [15, 2, 1, "", "set_scaling_model_as_scaled"], [15, 2, 1, "", "set_scaling_model_as_unscaled"], [15, 2, 1, "", "set_valid_image_range"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "update"]], "dials.algorithms.scaling": [[15, 0, 0, "-", "outlier_rejection"]], "dials.algorithms.scaling.outlier_rejection": [[15, 1, 1, "", "NormDevOutlierRejection"], [15, 1, 1, "", "OutlierRejectionBase"], [15, 1, 1, "", "SimpleNormDevOutlierRejection"], [15, 1, 1, "", "TargetedOutlierRejection"], [15, 3, 1, "", "determine_Esq_outlier_index_arrays"], [15, 3, 1, "", "determine_outlier_index_arrays"], [15, 3, 1, "", "reject_outliers"]], "dials.algorithms.scaling.outlier_rejection.NormDevOutlierRejection": [[15, 2, 1, "", "__init__"]], "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase": [[15, 2, 1, "", "__init__"], [15, 5, 1, "", "final_outlier_arrays"], [15, 2, 1, "", "run"]], "dials.algorithms.scaling.outlier_rejection.SimpleNormDevOutlierRejection": [[15, 2, 1, "", "__init__"]], "dials.algorithms.scaling.outlier_rejection.TargetedOutlierRejection": [[15, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding": [[16, 0, 0, "-", "factory"], [16, 0, 0, "-", "finder"]], "dials.algorithms.spot_finding.factory": [[16, 1, 1, "", "BackgroundGradientFilter"], [16, 1, 1, "", "FilterRunner"], [16, 1, 1, "", "PeakCentroidDistanceFilter"], [16, 1, 1, "", "SpotDensityFilter"], [16, 1, 1, "", "SpotFinderFactory"], [16, 3, 1, "", "generate_phil_scope"]], "dials.algorithms.spot_finding.factory.BackgroundGradientFilter": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "run"]], "dials.algorithms.spot_finding.factory.FilterRunner": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "check_flags"]], "dials.algorithms.spot_finding.factory.PeakCentroidDistanceFilter": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "run"]], "dials.algorithms.spot_finding.factory.SpotDensityFilter": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "run"]], "dials.algorithms.spot_finding.factory.SpotFinderFactory": [[16, 2, 1, "", "configure_filter"], [16, 2, 1, "", "configure_threshold"], [16, 2, 1, "", "from_parameters"], [16, 2, 1, "", "load_image"]], "dials.algorithms.spot_finding.finder": [[16, 1, 1, "", "ExtractPixelsFromImage"], [16, 1, 1, "", "ExtractPixelsFromImage2DNoShoeboxes"], [16, 1, 1, "", "ExtractSpots"], [16, 1, 1, "", "ExtractSpotsParallelTask"], [16, 1, 1, "", "SpotFinder"], [16, 3, 1, "", "pixel_list_to_reflection_table"], [16, 3, 1, "", "pixel_list_to_shoeboxes"], [16, 3, 1, "", "shoeboxes_to_reflection_table"]], "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage2DNoShoeboxes": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding.finder.ExtractSpots": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding.finder.ExtractSpotsParallelTask": [[16, 2, 1, "", "__init__"]], "dials.algorithms.spot_finding.finder.SpotFinder": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "find_spots"]], "dials.algorithms.spot_prediction": [[17, 0, 0, "-", "reflection_predictor"]], "dials.algorithms.spot_prediction.reflection_predictor": [[17, 1, 1, "", "ReflectionPredictor"]], "dials.algorithms.spot_prediction.reflection_predictor.ReflectionPredictor": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "predictor"]], "dials.algorithms.symmetry": [[18, 0, 0, "-", "cosym"], [18, 0, 0, "-", "laue_group"], [18, 0, 0, "-", "reindex_to_reference"], [18, 3, 1, "", "resolution_filter_from_array"], [18, 3, 1, "", "resolution_filter_from_reflections_experiments"], [18, 1, 1, "", "symmetry_base"]], "dials.algorithms.symmetry.cosym": [[18, 1, 1, "", "CosymAnalysis"], [18, 1, 1, "", "ScoreSubGroup"], [18, 1, 1, "", "ScoreSymmetryElement"], [18, 1, 1, "", "SymmetryAnalysis"], [18, 0, 0, "-", "engine"], [18, 3, 1, "", "extract_reference_intensities"], [18, 0, 0, "-", "target"]], "dials.algorithms.symmetry.cosym.CosymAnalysis": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 2, 1, "", "as_json"], [18, 2, 1, "", "run"]], "dials.algorithms.symmetry.cosym.ScoreSubGroup": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 6, 1, "", "stars"]], "dials.algorithms.symmetry.cosym.ScoreSymmetryElement": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 6, 1, "", "stars"]], "dials.algorithms.symmetry.cosym.SymmetryAnalysis": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 2, 1, "", "subgroups_table"], [18, 2, 1, "", "summary_table"], [18, 2, 1, "", "sym_ops_table"]], "dials.algorithms.symmetry.cosym.engine": [[18, 1, 1, "", "lbfgs_with_curvs"], [18, 3, 1, "", "minimize_scipy"], [18, 3, 1, "", "minimize_scitbx_lbfgs"]], "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "callback_after_step"], [18, 2, 1, "", "compute_functional_and_gradients"], [18, 2, 1, "", "compute_functional_gradients_and_curvatures"], [18, 2, 1, "", "compute_functional_gradients_diag"]], "dials.algorithms.symmetry.cosym.target": [[18, 1, 1, "", "Target"]], "dials.algorithms.symmetry.cosym.target.Target": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "compute_functional"], [18, 2, 1, "", "compute_gradients"], [18, 2, 1, "", "compute_gradients_fd"], [18, 2, 1, "", "curvatures"], [18, 2, 1, "", "curvatures_fd"], [18, 5, 1, "", "dim"], [18, 2, 1, "", "set_dimensions"]], "dials.algorithms.symmetry.laue_group": [[18, 1, 1, "", "CorrelationCoefficientAccumulator"], [18, 1, 1, "", "LaueGroupAnalysis"], [18, 1, 1, "", "ScoreCorrelationCoefficient"], [18, 1, 1, "", "ScoreSubGroup"], [18, 1, 1, "", "ScoreSymmetryElement"], [18, 3, 1, "", "trunccauchy_pdf"]], "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "accumulate"], [18, 2, 1, "", "coefficient"], [18, 2, 1, "", "denominator"], [18, 2, 1, "", "n"], [18, 2, 1, "", "numerator"]], "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"], [18, 2, 1, "", "as_json"]], "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient": [[18, 2, 1, "", "__init__"], [18, 6, 1, "", "p_cc_given_not_s"], [18, 6, 1, "", "p_cc_given_s"], [18, 6, 1, "", "p_s_given_cc"]], "dials.algorithms.symmetry.laue_group.ScoreSubGroup": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"]], "dials.algorithms.symmetry.laue_group.ScoreSymmetryElement": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "as_dict"]], "dials.algorithms.symmetry.reindex_to_reference": [[18, 3, 1, "", "determine_reindex_operator_against_reference"]], "dials.algorithms.symmetry.symmetry_base": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "kernel_normalisation"], [18, 2, 1, "", "ml_aniso_normalisation"], [18, 2, 1, "", "ml_iso_normalisation"]], "dials.array_family": [[20, 0, 0, "-", "flex"]], "dials.extensions": [[31, 0, 0, "-", "dispersion_spotfinder_threshold_ext"], [31, 0, 0, "-", "gaussian_rs_profile_model_ext"], [31, 0, 0, "-", "null_background_ext"], [31, 0, 0, "-", "simple_background_ext"], [31, 0, 0, "-", "simple_centroid_ext"]], "dials.extensions.dispersion_spotfinder_threshold_ext": [[31, 1, 1, "", "DispersionSpotFinderThresholdExt"], [31, 3, 1, "", "estimate_global_threshold"]], "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "compute_threshold"], [31, 5, 1, "", "name"], [31, 2, 1, "", "phil"]], "dials.extensions.gaussian_rs_profile_model_ext": [[31, 1, 1, "", "GaussianRSProfileModelExt"]], "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt": [[31, 2, 1, "", "algorithm"], [31, 5, 1, "", "default"], [31, 2, 1, "", "from_dict"], [31, 5, 1, "", "name"], [31, 2, 1, "", "phil"]], "dials.extensions.null_background_ext": [[31, 1, 1, "", "NullBackgroundExt"]], "dials.extensions.null_background_ext.NullBackgroundExt": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "compute_background"], [31, 5, 1, "", "name"]], "dials.extensions.simple_background_ext": [[31, 1, 1, "", "SimpleBackgroundExt"]], "dials.extensions.simple_background_ext.SimpleBackgroundExt": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "compute_background"], [31, 5, 1, "", "name"], [31, 2, 1, "", "phil"]], "dials.extensions.simple_centroid_ext": [[31, 1, 1, "", "SimpleCentroidExt"]], "dials.extensions.simple_centroid_ext.SimpleCentroidExt": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "compute_centroid"], [31, 5, 1, "", "default"], [31, 5, 1, "", "name"]], "dials.util": [[33, 0, 0, "-", "command_line"], [33, 0, 0, "-", "export_mtz"], [33, 0, 0, "-", "export_text"], [33, 0, 0, "-", "image"], [33, 0, 0, "-", "installer"], [33, 0, 0, "-", "ioutil"], [33, 0, 0, "-", "nexus"], [33, 0, 0, "-", "options"]], "dials.util.command_line": [[33, 1, 1, "", "Command"], [33, 1, 1, "", "ProgressBar"], [33, 1, 1, "", "ProgressBarTimer"], [33, 3, 1, "", "coloured"], [33, 3, 1, "", "heading"]], "dials.util.command_line.Command": [[33, 2, 1, "", "end"], [33, 5, 1, "", "indent"], [33, 5, 1, "", "max_length"], [33, 5, 1, "", "print_time"], [33, 2, 1, "", "start"]], "dials.util.command_line.ProgressBar": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "finished"], [33, 2, 1, "", "update"]], "dials.util.command_line.ProgressBarTimer": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "get_elapsed_time"], [33, 2, 1, "", "update"]], "dials.util.export_mtz": [[33, 1, 1, "", "MADMergedMTZWriter"], [33, 1, 1, "", "MTZWriterBase"], [33, 1, 1, "", "MergedMTZWriter"], [33, 1, 1, "", "UnmergedMTZWriter"], [33, 1, 1, "", "WavelengthGroup"], [33, 3, 1, "", "convert_to_cambridge"], [33, 3, 1, "", "export_mtz"], [33, 3, 1, "", "match_wavelengths"], [33, 3, 1, "", "rotate_crystal"]], "dials.util.export_mtz.MADMergedMTZWriter": [[33, 2, 1, "", "add_dataset"]], "dials.util.export_mtz.MTZWriterBase": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "add_crystal"], [33, 2, 1, "", "add_empty_dataset"]], "dials.util.export_mtz.MergedMTZWriter": [[33, 2, 1, "", "add_dataset"]], "dials.util.export_mtz.UnmergedMTZWriter": [[33, 2, 1, "", "add_batch_list"], [33, 2, 1, "", "write_columns"]], "dials.util.export_mtz.WavelengthGroup": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "add_experiment"], [33, 2, 1, "", "calculate_weighted_mean"], [33, 5, 1, "", "exp_nos"], [33, 5, 1, "", "identifiers"], [33, 5, 1, "", "max_possible_wl"], [33, 5, 1, "", "min_wl"], [33, 5, 1, "", "wavelengths"], [33, 5, 1, "", "weighted_mean"]], "dials.util.export_text": [[33, 3, 1, "", "export_text"]], "dials.util.image": [[33, 1, 1, "", "reader"]], "dials.util.image.reader": [[33, 2, 1, "", "get_data"], [33, 2, 1, "", "read_file"]], "dials.util.installer": [[33, 1, 1, "", "installer"]], "dials.util.installer.installer": [[33, 5, 1, "", "base_package_options"], [33, 5, 1, "", "configure_modules"], [33, 5, 1, "", "dest_dir_prefix"], [33, 5, 1, "", "include_gui_packages"], [33, 5, 1, "", "installer_dir"], [33, 5, 1, "", "make_apps"], [33, 5, 1, "", "product_name"], [33, 2, 1, "", "product_specific_finalize_install"], [33, 5, 1, "", "remove_sources_default"], [33, 5, 1, "", "source_packages"]], "dials.util.ioutil": [[33, 3, 1, "", "get_inverse_ub_matrix_from_xparm"], [33, 3, 1, "", "get_space_group_type_from_xparm"]], "dials.util.nexus": [[33, 3, 1, "", "dump"], [33, 3, 1, "", "get_entry"], [33, 3, 1, "", "load"]], "dials.util.options": [[33, 1, 1, "", "ArgumentHandlingErrorInfo"], [33, 1, 1, "", "ArgumentParser"], [33, 1, 1, "", "ArgumentParserBase"], [33, 1, 1, "", "Importer"], [33, 4, 1, "", "InvalidPhilError"], [33, 1, 1, "", "OptionParser"], [33, 1, 1, "", "PhilCommandParser"], [33, 3, 1, "", "flatten_experiments"], [33, 3, 1, "", "flatten_reflections"], [33, 3, 1, "", "reflections_and_experiments_from_files"]], "dials.util.options.ArgumentHandlingErrorInfo": [[33, 5, 1, "", "exception"], [33, 5, 1, "", "message"], [33, 5, 1, "", "name"], [33, 5, 1, "", "traceback"], [33, 5, 1, "", "type"], [33, 5, 1, "", "validation"]], "dials.util.options.ArgumentParser": [[33, 2, 1, "", "__init__"], [33, 6, 1, "", "diff_phil"], [33, 2, 1, "", "format_help"], [33, 2, 1, "", "parse_args"], [33, 6, 1, "", "phil"], [33, 6, 1, "", "system_phil"]], "dials.util.options.ArgumentParserBase": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "format_epilog"], [33, 2, 1, "", "parse_known_args"]], "dials.util.options.Importer": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "try_read_experiments"], [33, 2, 1, "", "try_read_experiments_from_images"], [33, 2, 1, "", "try_read_reflections"]], "dials.util.options.OptionParser": [[33, 2, 1, "", "__init__"]], "dials.util.options.PhilCommandParser": [[33, 2, 1, "", "__init__"], [33, 6, 1, "", "diff_phil"], [33, 2, 1, "", "parse_args"], [33, 6, 1, "", "phil"], [33, 6, 1, "", "system_phil"]], "dxtbx": [[26, 0, 0, "-", "imageset"]], "dxtbx.imageset": [[26, 1, 1, "", "ExternalLookup"], [26, 1, 1, "", "ExternalLookupItemBool"], [26, 1, 1, "", "ExternalLookupItemDouble"], [26, 1, 1, "", "ImageGrid"], [26, 1, 1, "", "ImageSequence"], [26, 1, 1, "", "ImageSet"], [26, 1, 1, "", "ImageSetData"], [26, 1, 1, "", "ImageSetFactory"], [26, 1, 1, "", "ImageSetLazy"], [26, 1, 1, "", "MemReader"]], "dxtbx.imageset.ExternalLookup": [[26, 2, 1, "", "__init__"], [26, 6, 1, "", "dx"], [26, 6, 1, "", "dy"], [26, 6, 1, "", "gain"], [26, 6, 1, "", "mask"], [26, 6, 1, "", "pedestal"]], "dxtbx.imageset.ExternalLookupItemBool": [[26, 2, 1, "", "__init__"], [26, 6, 1, "", "data"], [26, 6, 1, "", "filename"]], "dxtbx.imageset.ExternalLookupItemDouble": [[26, 2, 1, "", "__init__"], [26, 6, 1, "", "data"], [26, 6, 1, "", "filename"]], "dxtbx.imageset.ImageGrid": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "from_imageset"], [26, 2, 1, "", "get_grid_size"]], "dxtbx.imageset.ImageSequence": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "complete_set"], [26, 2, 1, "", "get_array_range"], [26, 2, 1, "", "get_beam"], [26, 2, 1, "", "get_detector"], [26, 2, 1, "", "get_goniometer"], [26, 2, 1, "", "get_scan"], [26, 2, 1, "", "get_template"], [26, 2, 1, "", "partial_set"], [26, 2, 1, "", "set_beam"], [26, 2, 1, "", "set_detector"], [26, 2, 1, "", "set_goniometer"], [26, 2, 1, "", "set_scan"], [26, 2, 1, "", "update_detector_px_mm_data"]], "dxtbx.imageset.ImageSet": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "as_imageset"], [26, 2, 1, "", "clear_cache"], [26, 2, 1, "", "complete_set"], [26, 2, 1, "", "data"], [26, 6, 1, "", "external_lookup"], [26, 2, 1, "", "get_beam"], [26, 2, 1, "", "get_corrected_data"], [26, 2, 1, "", "get_detector"], [26, 2, 1, "", "get_detectorbase"], [26, 2, 1, "", "get_format_class"], [26, 2, 1, "", "get_gain"], [26, 2, 1, "", "get_goniometer"], [26, 2, 1, "", "get_image_identifier"], [26, 2, 1, "", "get_mask"], [26, 2, 1, "", "get_path"], [26, 2, 1, "", "get_pedestal"], [26, 2, 1, "", "get_raw_data"], [26, 2, 1, "", "get_scan"], [26, 2, 1, "", "get_spectrum"], [26, 2, 1, "", "get_vendortype"], [26, 2, 1, "", "has_dynamic_mask"], [26, 2, 1, "", "indices"], [26, 2, 1, "", "is_marked_for_rejection"], [26, 2, 1, "", "mark_for_rejection"], [26, 2, 1, "", "masker"], [26, 2, 1, "", "params"], [26, 2, 1, "", "partial_set"], [26, 2, 1, "", "paths"], [26, 2, 1, "", "reader"], [26, 2, 1, "", "set_beam"], [26, 2, 1, "", "set_detector"], [26, 2, 1, "", "set_goniometer"], [26, 2, 1, "", "set_scan"], [26, 2, 1, "", "size"], [26, 2, 1, "", "update_detector_px_mm_data"]], "dxtbx.imageset.ImageSetData": [[26, 2, 1, "", "__init__"], [26, 6, 1, "", "external_lookup"], [26, 2, 1, "", "get_beam"], [26, 2, 1, "", "get_data"], [26, 2, 1, "", "get_detector"], [26, 2, 1, "", "get_format_class"], [26, 2, 1, "", "get_goniometer"], [26, 2, 1, "", "get_image_identifier"], [26, 2, 1, "", "get_master_path"], [26, 2, 1, "", "get_params"], [26, 2, 1, "", "get_path"], [26, 2, 1, "", "get_scan"], [26, 2, 1, "", "get_template"], [26, 2, 1, "", "get_vendor"], [26, 2, 1, "", "has_single_file_reader"], [26, 2, 1, "", "is_marked_for_rejection"], [26, 2, 1, "", "mark_for_rejection"], [26, 2, 1, "", "masker"], [26, 2, 1, "", "partial_data"], [26, 2, 1, "", "reader"], [26, 2, 1, "", "set_beam"], [26, 2, 1, "", "set_detector"], [26, 2, 1, "", "set_format_class"], [26, 2, 1, "", "set_goniometer"], [26, 2, 1, "", "set_params"], [26, 2, 1, "", "set_scan"], [26, 2, 1, "", "set_template"], [26, 2, 1, "", "set_vendor"]], "dxtbx.imageset.ImageSetFactory": [[26, 2, 1, "", "from_template"], [26, 2, 1, "", "imageset_from_anyset"], [26, 2, 1, "", "make_imageset"], [26, 2, 1, "", "make_sequence"], [26, 2, 1, "", "new"]], "dxtbx.imageset.ImageSetLazy": [[26, 2, 1, "", "get_beam"], [26, 2, 1, "", "get_corrected_data"], [26, 2, 1, "", "get_detector"], [26, 2, 1, "", "get_gain"], [26, 2, 1, "", "get_goniometer"], [26, 2, 1, "", "get_mask"], [26, 2, 1, "", "get_scan"]], "dxtbx.imageset.MemReader": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "identifiers"], [26, 2, 1, "", "is_single_file_reader"], [26, 2, 1, "", "master_path"], [26, 2, 1, "", "paths"], [26, 2, 1, "", "read"]], "dxtbx.model": [[22, 1, 1, "", "Crystal"], [23, 1, 1, "", "Detector"], [24, 1, 1, "", "ExperimentList"], [22, 1, 1, "", "MosaicCrystalKabsch2010"], [22, 1, 1, "", "MosaicCrystalSauter2014"], [21, 0, 0, "-", "beam"], [22, 0, 0, "-", "crystal"], [23, 0, 0, "-", "detector"], [24, 0, 0, "-", "experiment_list"], [25, 0, 0, "-", "goniometer"], [28, 0, 0, "-", "profile"], [29, 0, 0, "-", "scan"]], "dxtbx.model.Crystal": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "as_str"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_crystal_symmetry"], [22, 2, 1, "", "show"], [22, 2, 1, "", "to_dict"]], "dxtbx.model.Detector": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "add_group"], [23, 2, 1, "", "add_panel"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "get_max_inscribed_resolution"], [23, 2, 1, "", "get_max_resolution"], [23, 2, 1, "", "get_names"], [23, 2, 1, "", "get_panel_intersection"], [23, 2, 1, "", "get_ray_intersection"], [23, 2, 1, "", "has_projection_2d"], [23, 2, 1, "", "hierarchy"], [23, 2, 1, "", "is_similar_to"], [23, 2, 1, "", "iter_levelorder"], [23, 2, 1, "", "iter_panels"], [23, 2, 1, "", "iter_preorder"], [23, 2, 1, "", "rotate_around_origin"], [23, 2, 1, "", "to_dict"]], "dxtbx.model.ExperimentList": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "all_sequences"], [24, 2, 1, "", "all_stills"], [24, 2, 1, "", "append"], [24, 2, 1, "", "as_file"], [24, 2, 1, "", "as_json"], [24, 2, 1, "", "beams"], [24, 2, 1, "", "change_basis"], [24, 2, 1, "", "clear"], [24, 2, 1, "", "crystals"], [24, 2, 1, "", "detectors"], [24, 2, 1, "", "empty"], [24, 2, 1, "", "extend"], [24, 2, 1, "", "find"], [24, 2, 1, "", "from_file"], [24, 2, 1, "", "from_templates"], [24, 2, 1, "", "goniometers"], [24, 2, 1, "", "identifiers"], [24, 2, 1, "", "imagesets"], [24, 2, 1, "", "indices"], [24, 2, 1, "", "is_consistent"], [24, 2, 1, "", "nullify_all_single_file_reader_format_instances"], [24, 2, 1, "", "profiles"], [24, 2, 1, "", "remove_on_experiment_identifiers"], [24, 2, 1, "", "replace"], [24, 2, 1, "", "scaling_models"], [24, 2, 1, "", "scans"], [24, 2, 1, "", "select_on_experiment_identifiers"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "where"]], "dxtbx.model.MosaicCrystalKabsch2010": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "as_str"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_mosaicity"], [22, 2, 1, "", "is_similar_to"], [22, 2, 1, "", "set_mosaicity"], [22, 2, 1, "", "to_dict"]], "dxtbx.model.MosaicCrystalSauter2014": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "as_str"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_A_as_sqr"], [22, 2, 1, "", "get_A_inverse_as_sqr"], [22, 2, 1, "", "get_domain_size_ang"], [22, 2, 1, "", "get_half_mosaicity_deg"], [22, 2, 1, "", "is_similar_to"], [22, 2, 1, "", "set_domain_size_ang"], [22, 2, 1, "", "set_half_mosaicity_deg"], [22, 2, 1, "", "to_dict"]], "dxtbx.model.beam": [[21, 1, 1, "", "BeamFactory"]], "dxtbx.model.beam.BeamFactory": [[21, 2, 1, "", "complex"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_phil"], [21, 2, 1, "", "imgCIF"], [21, 2, 1, "", "imgCIF_H"], [21, 2, 1, "", "make_beam"], [21, 2, 1, "", "make_polarized_beam"], [21, 2, 1, "", "make_polychromatic_beam"], [21, 2, 1, "", "simple"], [21, 2, 1, "", "simple_directional"]], "dxtbx.model.crystal": [[22, 1, 1, "", "CrystalFactory"]], "dxtbx.model.crystal.CrystalFactory": [[22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_mosflm_matrix"]], "dxtbx.model.detector": [[23, 1, 1, "", "DetectorFactory"], [23, 3, 1, "", "merge_panel_scope_extracts_by_id"]], "dxtbx.model.detector.DetectorFactory": [[23, 2, 1, "", "complex"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "from_phil"], [23, 2, 1, "", "generate_from_phil"], [23, 2, 1, "", "imgCIF"], [23, 2, 1, "", "imgCIF_H"], [23, 2, 1, "", "make_detector"], [23, 2, 1, "", "overwrite_from_phil"], [23, 2, 1, "", "sensor"], [23, 2, 1, "", "simple"], [23, 2, 1, "", "two_theta"]], "dxtbx.model.experiment_list": [[24, 1, 1, "", "BeamComparison"], [24, 1, 1, "", "DetectorComparison"], [24, 1, 1, "", "ExperimentListFactory"], [24, 1, 1, "", "GoniometerComparison"]], "dxtbx.model.experiment_list.BeamComparison": [[24, 2, 1, "", "__init__"]], "dxtbx.model.experiment_list.DetectorComparison": [[24, 2, 1, "", "__init__"]], "dxtbx.model.experiment_list.ExperimentListFactory": [[24, 2, 1, "", "from_args"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_filenames"], [24, 2, 1, "", "from_imageset_and_crystal"], [24, 2, 1, "", "from_json"], [24, 2, 1, "", "from_json_file"], [24, 2, 1, "", "from_pickle_file"], [24, 2, 1, "", "from_sequence_and_crystal"], [24, 2, 1, "", "from_serialized_format"], [24, 2, 1, "", "from_stills_and_crystal"], [24, 2, 1, "", "from_templates"], [24, 2, 1, "", "from_xds"]], "dxtbx.model.experiment_list.GoniometerComparison": [[24, 2, 1, "", "__init__"]], "dxtbx.model.goniometer": [[25, 1, 1, "", "Goniometer"], [25, 1, 1, "", "GoniometerFactory"], [25, 1, 1, "", "KappaGoniometer"], [25, 1, 1, "", "MultiAxisGoniometer"]], "dxtbx.model.goniometer.Goniometer": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_fixed_rotation"], [25, 2, 1, "", "get_num_scan_points"], [25, 2, 1, "", "get_rotation_axis"], [25, 2, 1, "", "get_rotation_axis_datum"], [25, 2, 1, "", "get_setting_rotation"], [25, 2, 1, "", "get_setting_rotation_at_scan_point"], [25, 2, 1, "", "get_setting_rotation_at_scan_points"], [25, 2, 1, "", "is_similar_to"], [25, 6, 1, "", "num_scan_points"], [25, 2, 1, "", "reset_scan_points"], [25, 2, 1, "", "rotate_around_origin"], [25, 2, 1, "", "set_fixed_rotation"], [25, 2, 1, "", "set_rotation_axis"], [25, 2, 1, "", "set_rotation_axis_datum"], [25, 2, 1, "", "set_setting_rotation"], [25, 2, 1, "", "set_setting_rotation_at_scan_points"], [25, 2, 1, "", "to_dict"]], "dxtbx.model.goniometer.GoniometerFactory": [[25, 2, 1, "", "from_dict"], [25, 2, 1, "", "from_phil"], [25, 2, 1, "", "imgCIF"], [25, 2, 1, "", "imgCIF_H"], [25, 2, 1, "", "kappa"], [25, 2, 1, "", "known_axis"], [25, 2, 1, "", "make_goniometer"], [25, 2, 1, "", "make_kappa_goniometer"], [25, 2, 1, "", "make_multi_axis_goniometer"], [25, 2, 1, "", "multi_axis"], [25, 2, 1, "", "multi_axis_goniometer_from_phil"], [25, 2, 1, "", "single_axis"], [25, 2, 1, "", "single_axis_goniometer_from_phil"], [25, 2, 1, "", "single_axis_reverse"]], "dxtbx.model.goniometer.KappaGoniometer": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "get_alpha_angle"], [25, 2, 1, "", "get_direction"], [25, 2, 1, "", "get_kappa_angle"], [25, 2, 1, "", "get_kappa_axis"], [25, 2, 1, "", "get_omega_angle"], [25, 2, 1, "", "get_omega_axis"], [25, 2, 1, "", "get_phi_angle"], [25, 2, 1, "", "get_phi_axis"], [25, 2, 1, "", "get_scan_axis"]], "dxtbx.model.goniometer.MultiAxisGoniometer": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_angles"], [25, 2, 1, "", "get_axes"], [25, 2, 1, "", "get_names"], [25, 2, 1, "", "get_scan_axis"], [25, 2, 1, "", "set_angles"], [25, 2, 1, "", "set_axes"], [25, 2, 1, "", "to_dict"]], "dxtbx.model.profile": [[28, 1, 1, "", "ProfileModelFactory"]], "dxtbx.model.profile.ProfileModelFactory": [[28, 2, 1, "", "from_dict"]], "dxtbx.model.scan": [[29, 1, 1, "", "ScanFactory"]], "dxtbx.model.scan.ScanFactory": [[29, 2, 1, "", "add"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "from_phil"], [29, 2, 1, "", "imgCIF"], [29, 2, 1, "", "imgCIF_H"], [29, 2, 1, "", "make_scan"], [29, 2, 1, "", "search"], [29, 2, 1, "", "single_file"]], "dxtbx.serialize": [[30, 0, 0, "-", "imageset"], [30, 0, 0, "-", "load"], [30, 0, 0, "-", "xds"]], "dxtbx.serialize.imageset": [[30, 3, 1, "", "basic_imageset_from_dict"], [30, 3, 1, "", "basic_imageset_to_dict"], [30, 3, 1, "", "filename_or_none"], [30, 3, 1, "", "filename_to_absolute"], [30, 3, 1, "", "imagesequence_from_dict"], [30, 3, 1, "", "imagesequence_to_dict"], [30, 3, 1, "", "imageset_from_dict"], [30, 3, 1, "", "imageset_to_dict"]], "dxtbx.serialize.load": [[30, 3, 1, "", "crystal"], [30, 3, 1, "", "experiment_list"], [30, 3, 1, "", "imageset"]], "dxtbx.serialize.xds": [[30, 3, 1, "", "to_crystal"], [30, 3, 1, "", "to_imageset"], [30, 1, 1, "", "to_xds"], [30, 3, 1, "", "xds_detector_name"]], "dxtbx.serialize.xds.to_xds": [[30, 2, 1, "", "XDS_INP"], [30, 2, 1, "", "__init__"], [30, 2, 1, "", "get_beam"], [30, 2, 1, "", "get_detector"], [30, 2, 1, "", "get_goniometer"], [30, 2, 1, "", "get_scan"], [30, 2, 1, "", "get_template"], [30, 2, 1, "", "xparm_xds"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:exception", "5": "py:attribute", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "titleterms": {"about": [0, 74], "develop": [0, 5, 9, 92], "team": 0, "dial": [0, 1, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 80, 82, 84, 85, 90, 91, 92, 93, 95, 96, 97, 98, 99], "east": 0, "west": 0, "acknowledg": [0, 78, 79, 82, 84], "user": 1, "guid": [1, 90, 97], "scale": [1, 4, 15, 64, 74, 75, 76, 83, 85, 86, 87, 88, 89], "data": [1, 3, 6, 9, 74, 75, 76, 77, 83, 87, 88, 89, 97], "common": 1, "option": [1, 74], "practic": 1, "larg": 1, "dataset": [1, 74, 76, 84], "against": 1, "refer": [1, 32], "advanc": [1, 91], "us": [1, 43, 73, 80], "control": 1, "model": [1, 2, 4, 15, 21, 22, 23, 24, 25, 28, 29, 76, 79], "choos": 1, "reflect": [1, 3], "minimis": 1, "convent": 2, "coordin": 2, "frame": [2, 74], "The": 2, "diffractomet": 2, "equat": 2, "orthogonalis": 2, "orient": [2, 75, 77], "matrix": 2, "laboratori": 2, "summari": 2, "dxtbx": [2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "goniomet": [2, 25], "file": 3, "experi": [3, 6, 77], "list": 3, "extend": 4, "content": [4, 20, 31], "entri": 4, "point": 4, "ad": 4, "new": 4, "format": 4, "class": 4, "write": 4, "understand": 4, "static": [4, 76], "method": 4, "index": [4, 11, 53, 74, 75, 76, 79, 83, 86, 87, 88, 89, 97], "basi": 4, "vector": 4, "search": 4, "strategi": 4, "lattic": [4, 74, 75, 78, 83, 86, 87, 88, 89], "profil": [4, 28], "defin": 4, "exampl": [5, 40, 43, 73], "read": 6, "get": 7, "start": 7, "instal": [7, 9, 92], "sourc": [7, 80, 91, 98], "environ": [7, 9], "built": 7, "help": 7, "paramet": [7, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "next": [7, 82, 84], "step": 7, "document": [8, 72], "set": [9, 77], "up": 9, "linux": [9, 92], "mac": [9, 92], "modulenotfounderror": 9, "No": 9, "modul": 9, "name": 9, "gltbx_gl_ext": 9, "download": 9, "regress": 9, "test": [9, 48], "keep": 9, "current": 9, "algorithm": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "background": 10, "stills_index": 11, "basis_vector_search": 11, "lattice_search": 11, "model_evalu": 11, "max_cel": 11, "integr": [12, 54, 74, 75, 76, 83, 86, 87, 88, 89, 91, 97], "profile_model": 13, "refin": [14, 60, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 94], "outlier_reject": 15, "spot_find": 16, "spot_predict": 17, "symmetri": [18, 70, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89], "cosym": [18, 40], "arrai": 20, "famili": 20, "tabl": [20, 31], "beam": [21, 74, 79], "crystal": [22, 77, 84, 85], "detector": [23, 75, 82], "experiment_list": 24, "imageset": 26, "scan": [29, 76], "serial": 30, "extens": 31, "librari": 32, "util": 33, "align_cryst": 34, "introduct": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89], "basic": [34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "full": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "definit": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "anvil_correct": 35, "detail": [35, 87, 88], "apply_mask": 36, "check_indexing_symmetri": 37, "combine_experi": 38, "compare_orientation_matric": 39, "create_profile_model": 41, "estimate_gain": 42, "estimate_resolut": 43, "case": [43, 73], "export": [44, 74, 83, 87, 88, 89, 94], "export_bitmap": 45, "filter_reflect": 46, "find_spot": 47, "distl": 48, "apach": 48, "server": 48, "build": [48, 92], "instruct": 48, "find_spots_serv": 49, "client": 49, "generate_mask": 50, "image_view": 51, "import": [52, 74, 76, 79, 83, 86, 87, 88, 89, 94], "merge_cbf": 55, "missing_reflect": 56, "plot_scan_varying_model": 57, "predict": 58, "reciprocal_lattice_view": 59, "refine_bravais_set": 61, "reindex": 62, "report": [63, 83, 87, 96], "search_beam_posit": 65, "show": 66, "slice_sequ": 67, "spot_counts_per_imag": 68, "stereographic_project": 69, "two_theta_refin": 71, "program": [72, 98, 99], "xia2": [73, 77, 80, 85], "multiplex": [73, 77, 85], "process": [74, 75, 77, 84, 87, 88, 94, 97], "small": [74, 75, 89], "molecul": [74, 89], "micro": 74, "3ded": 74, "biotin": 74, "gener": [74, 80], "note": 74, "collect": 74, "video": 74, "pedest": 74, "offset": 74, "imag": [74, 94], "find": [74, 75, 76, 79, 83, 87, 88, 89], "centr": [74, 78, 79], "re": 74, "correct": [74, 79, 82], "center": 74, "mask": 74, "spot": [74, 75, 76, 79, 83, 87, 88, 89], "bravai": [74, 83, 87, 88, 89], "geometri": [74, 79], "other": 74, "multi": [74, 77, 82, 84, 85, 86], "determin": [74, 75, 89], "exclud": 74, "bad": 74, "togeth": 74, "solv": 74, "structur": 74, "myd88tir": 75, "wedg": 75, "exploratori": 75, "analysi": [75, 77, 83, 84, 85, 87], "distanc": 75, "tilt": 75, "axi": 75, "further": 75, "script": 75, "lysozym": 76, "nanocryst": 76, "1": [76, 79, 92, 98], "2": [76, 78, 83], "3": [76, 92, 99], "4": 76, "5": 76, "6": 76, "7": 76, "vari": 76, "merg": [76, 83, 86, 87], "bookkeep": 77, "0": 77, "9": 77, "10": 77, "19": 77, "20": 77, "29": 77, "explor": 77, "reciproc": 77, "space": 77, "post": 77, "preferenti": 77, "unit": [77, 89], "cell": [77, 89], "comparison": 77, "delta": 77, "cc": 77, "half": 77, "intens": 77, "cluster": 77, "dpf3": [78, 79], "part": [78, 79], "A": 78, "question": 78, "convert": 78, "pseudocentr": 78, "conclus": [78, 79], "poor": 79, "initi": 79, "check": [79, 88], "discov": 79, "better": 79, "experiment": 79, "diamond": [80, 98], "light": [80, 91, 98], "feedback": 80, "tutori": [81, 83, 86, 87, 88, 89], "tile": 82, "metrologi": 82, "prepar": 82, "appli": 82, "what": [82, 84], "do": [82, 84], "sar": 83, "cov": 83, "main": 83, "proteas": 83, "mpro": 83, "html": [83, 87], "unmerg": [83, 87], "mtz": [83, 87, 88], "blend": 84, "individu": 84, "v": 84, "joint": 84, "jointli": 84, "manual": 85, "reprocess": 85, "almost": 85, "spotfind": 86, "dui": 88, "inspect": 88, "result": 88, "reduct": 89, "output": 89, "sadab": 89, "altern": 89, "path": 89, "how": 90, "To": 90, "diffract": [91, 95], "contact": 91, "fund": 91, "stabl": 92, "releas": 92, "16": 92, "graphic": 92, "binari": 92, "licens": 93, "sequenc": 94, "miss": 94, "project": 95, "neutron": 95, "public": 96, "journal": 96, "articl": 96, "applic": 96, "xfel": 96, "crystallographi": 96, "synchrotron": 96, "newslett": 96, "ssx": 97, "ssx_index": 97, "ssx_integr": 97, "12th": 98, "13th": 98, "june": 98, "2012": 98, "uk": [98, 99], "organis": 98, "committe": 98, "present": [98, 99], "22nd": 99, "mai": 99, "2013": 99, "cambridg": 99, "attende": 99, "workshop": 100}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"]], "Development Teams": [[0, "development-teams"]], "DIALS East": [[0, "dials-east"]], "DIALS West": [[0, "dials-west"]], "Acknowledgements": [[0, "acknowledgements"], [78, "acknowledgements"], [79, "acknowledgements"], [82, "acknowledgements"], [84, "acknowledgements"]], "User guide for scaling data with DIALS": [[1, "user-guide-for-scaling-data-with-dials"]], "Guide to common scaling options": [[1, "guide-to-common-scaling-options"]], "Practicalities for large datasets": [[1, "practicalities-for-large-datasets"]], "Scaling against a reference dataset": [[1, "scaling-against-a-reference-dataset"]], "Advanced use - Controlling the scaling models": [[1, "advanced-use-controlling-the-scaling-models"]], "Advanced use - Choosing reflections to use for minimisation": [[1, "advanced-use-choosing-reflections-to-use-for-minimisation"]], "Conventions": [[2, "conventions"]], "Coordinate frames": [[2, "coordinate-frames"]], "The diffractometer equation": [[2, "the-diffractometer-equation"]], "Orthogonalisation convention": [[2, "orthogonalisation-convention"]], "Orientation matrix": [[2, "orientation-matrix"]], "The laboratory frame": [[2, "the-laboratory-frame"]], "Summary of coordinate frames": [[2, "summary-of-coordinate-frames"]], "The DXTBX goniometer model": [[2, "the-dxtbx-goniometer-model"]], "Data files": [[3, "data-files"]], "Experiment list files": [[3, "experiment-list-files"]], "Reflection files": [[3, "reflection-files"]], "Extending DIALS": [[4, "extending-dials"]], "Contents": [[4, "contents"]], "Entry points": [[4, "entry-points"]], "Adding new format classes": [[4, "adding-new-format-classes"]], "Writing a new format class": [[4, "writing-a-new-format-class"]], "understand Static Method": [[4, "understand-static-method"]], "Class Methods": [[4, "class-methods"]], "Extending dials.index": [[4, "extending-dials-index"]], "Basis vector search strategies": [[4, "basis-vector-search-strategies"]], "Lattice search strategies": [[4, "lattice-search-strategies"]], "Extending profile models": [[4, "extending-profile-models"]], "Extending dials.scale": [[4, "extending-dials-scale"]], "Defining a scaling model": [[4, "defining-a-scaling-model"]], "Developer Examples": [[5, "developer-examples"]], "Reading experiment and data": [[6, "reading-experiment-and-data"]], "Getting started": [[7, "getting-started"]], "Installation": [[7, "installation"], [92, "installation"], [92, "id1"]], "Sourcing the DIALS environment": [[7, "sourcing-the-dials-environment"]], "Built-in help": [[7, "built-in-help"]], "Parameters": [[7, "parameters"]], "Next steps": [[7, "next-steps"]], "Documentation": [[8, "documentation"]], "Installation for Developers": [[9, "installation-for-developers"]], "Setting up a Development Environment on Linux or Mac": [[9, "setting-up-a-development-environment-on-linux-or-mac"]], "ModuleNotFoundError: No module named \u2018gltbx_gl_ext\u2019": [[9, "modulenotfounderror-no-module-named-gltbx-gl-ext"]], "Downloading the DIALS regression test data": [[9, "downloading-the-dials-regression-test-data"]], "Keeping a Development Environment current": [[9, "keeping-a-development-environment-current"]], "dials.algorithms.background": [[10, "module-dials.algorithms.background"]], "dials.algorithms.indexing": [[11, "module-dials.algorithms.indexing"]], "dials.algorithms.indexing.indexer": [[11, "module-dials.algorithms.indexing.indexer"]], "dials.algorithms.indexing.stills_indexer": [[11, "module-dials.algorithms.indexing.stills_indexer"]], "dials.algorithms.indexing.basis_vector_search": [[11, "module-dials.algorithms.indexing.basis_vector_search"]], "dials.algorithms.indexing.lattice_search": [[11, "module-dials.algorithms.indexing.lattice_search"]], "dials.algorithms.indexing.model_evaluation": [[11, "module-dials.algorithms.indexing.model_evaluation"]], "dials.algorithms.indexing.max_cell": [[11, "module-dials.algorithms.indexing.max_cell"]], "dials.algorithms.integration": [[12, "module-dials.algorithms.integration.integrator"]], "dials.algorithms.profile_model": [[13, "module-dials.algorithms.profile_model"]], "dials.algorithms.refinement": [[14, "module-dials.algorithms.refinement.reflection_manager"]], "dials.algorithms.scaling": [[15, "module-dials.algorithms.scaling"]], "model.model": [[15, "module-dials.algorithms.scaling.model.model"]], "outlier_rejection": [[15, "module-dials.algorithms.scaling.outlier_rejection"]], "dials.algorithms.spot_finding": [[16, "module-dials.algorithms.spot_finding.finder"]], "dials.algorithms.spot_prediction": [[17, "module-dials.algorithms.spot_prediction.reflection_predictor"]], "dials.algorithms.symmetry": [[18, "module-dials.algorithms.symmetry"]], "dials.algorithms.symmetry.cosym": [[18, "module-dials.algorithms.symmetry.cosym"]], "Algorithms": [[19, "algorithms"]], "Array Family": [[20, "array-family"]], "Table of Contents": [[20, "table-of-contents"], [31, "table-of-contents"]], "dxtbx.model.beam": [[21, "module-dxtbx.model.beam"]], "dxtbx.model.crystal": [[22, "dxtbx-model-crystal"]], "dxtbx.model.detector": [[23, "dxtbx-model-detector"]], "dxtbx.model.experiment_list": [[24, "dxtbx-model-experiment-list"]], "dxtbx.model.goniometer": [[25, "module-dxtbx.model.goniometer"]], "dxtbx.imageset": [[26, "module-dxtbx.imageset"]], "dxtbx": [[27, "dxtbx"]], "dxtbx.model.profile": [[28, "module-dxtbx.model.profile"]], "dxtbx.model.scan": [[29, "module-dxtbx.model.scan"]], "dxtbx.serialize": [[30, "module-dxtbx.serialize.imageset"]], "Extensions": [[31, "extensions"]], "Library Reference": [[32, "library-reference"]], "Util": [[33, "util"]], "dials.align_crystal": [[34, "dials-align-crystal"]], "Introduction": [[34, "introduction"], [35, "introduction"], [36, "introduction"], [37, "introduction"], [38, "introduction"], [39, "introduction"], [40, "introduction"], [41, "introduction"], [42, "introduction"], [43, "introduction"], [44, "introduction"], [45, "introduction"], [46, "introduction"], [47, "introduction"], [48, "introduction"], [49, "introduction"], [50, "introduction"], [51, "introduction"], [52, "introduction"], [53, "introduction"], [54, "introduction"], [55, "introduction"], [56, "introduction"], [57, "introduction"], [58, "introduction"], [59, "introduction"], [60, "introduction"], [61, "introduction"], [62, "introduction"], [63, "introduction"], [64, "introduction"], [65, "introduction"], [66, "introduction"], [67, "introduction"], [68, "introduction"], [69, "introduction"], [70, "introduction"], [71, "introduction"], [73, "introduction"], [75, "introduction"], [76, "introduction"], [77, "introduction"], [78, "introduction"], [79, "introduction"], [82, "introduction"], [83, "introduction"], [84, "introduction"], [85, "introduction"], [86, "introduction"], [87, "introduction"], [88, "introduction"], [89, "introduction"]], "Basic parameters": [[34, "basic-parameters"], [36, "basic-parameters"], [37, "basic-parameters"], [38, "basic-parameters"], [39, "basic-parameters"], [40, "basic-parameters"], [41, "basic-parameters"], [42, "basic-parameters"], [43, "basic-parameters"], [44, "basic-parameters"], [45, "basic-parameters"], [46, "basic-parameters"], [47, "basic-parameters"], [49, "basic-parameters"], [50, "basic-parameters"], [51, "basic-parameters"], [52, "basic-parameters"], [53, "basic-parameters"], [54, "basic-parameters"], [55, "basic-parameters"], [57, "basic-parameters"], [58, "basic-parameters"], [59, "basic-parameters"], [60, "basic-parameters"], [61, "basic-parameters"], [62, "basic-parameters"], [63, "basic-parameters"], [64, "basic-parameters"], [65, "basic-parameters"], [66, "basic-parameters"], [67, "basic-parameters"], [68, "basic-parameters"], [69, "basic-parameters"], [70, "basic-parameters"], [71, "basic-parameters"], [73, "basic-parameters"]], "Full parameter definitions": [[34, "full-parameter-definitions"], [35, "full-parameter-definitions"], [36, "full-parameter-definitions"], [37, "full-parameter-definitions"], [38, "full-parameter-definitions"], [39, "full-parameter-definitions"], [40, "full-parameter-definitions"], [41, "full-parameter-definitions"], [42, "full-parameter-definitions"], [43, "full-parameter-definitions"], [44, "full-parameter-definitions"], [45, "full-parameter-definitions"], [46, "full-parameter-definitions"], [47, "full-parameter-definitions"], [49, "full-parameter-definitions"], [50, "full-parameter-definitions"], [51, "full-parameter-definitions"], [52, "full-parameter-definitions"], [53, "full-parameter-definitions"], [54, "full-parameter-definitions"], [55, "full-parameter-definitions"], [56, "full-parameter-definitions"], [57, "full-parameter-definitions"], [58, "full-parameter-definitions"], [59, "full-parameter-definitions"], [60, "full-parameter-definitions"], [61, "full-parameter-definitions"], [62, "full-parameter-definitions"], [63, "full-parameter-definitions"], [64, "full-parameter-definitions"], [65, "full-parameter-definitions"], [66, "full-parameter-definitions"], [67, "full-parameter-definitions"], [68, "full-parameter-definitions"], [69, "full-parameter-definitions"], [70, "full-parameter-definitions"], [71, "full-parameter-definitions"], [73, "full-parameter-definitions"]], "dials.anvil_correction": [[35, "dials-anvil-correction"]], "Details": [[35, "details"]], "dials.apply_mask": [[36, "dials-apply-mask"]], "dials.check_indexing_symmetry": [[37, "dials-check-indexing-symmetry"]], "dials.combine_experiments": [[38, "dials-combine-experiments"]], "dials.compare_orientation_matrices": [[39, "dials-compare-orientation-matrices"]], "dials.cosym": [[40, "dials-cosym"]], "Example": [[40, "example"]], "dials.create_profile_model": [[41, "dials-create-profile-model"]], "dials.estimate_gain": [[42, "dials-estimate-gain"]], "dials.estimate_resolution": [[43, "dials-estimate-resolution"]], "Example use cases": [[43, "example-use-cases"]], "dials.export": [[44, "dials-export"]], "dials.export_bitmaps": [[45, "dials-export-bitmaps"]], "dials.filter_reflections": [[46, "dials-filter-reflections"]], "dials.find_spots": [[47, "dials-find-spots"]], "distl/dials apache server": [[48, "distl-dials-apache-server"]], "Build instructions": [[48, "build-instructions"]], "Testing the server": [[48, "testing-the-server"]], "Distl parameters": [[48, "distl-parameters"]], "Dials parameters": [[48, "dials-parameters"]], "dials.find_spots_server/client": [[49, "dials-find-spots-server-client"]], "dials.generate_mask": [[50, "dials-generate-mask"]], "dials.image_viewer": [[51, "dials-image-viewer"]], "dials.import": [[52, "dials-import"]], "dials.index": [[53, "dials-index"]], "dials.integrate": [[54, "dials-integrate"]], "dials.merge_cbf": [[55, "dials-merge-cbf"]], "dials.missing_reflections": [[56, "dials-missing-reflections"]], "dials.plot_scan_varying_model": [[57, "dials-plot-scan-varying-model"]], "dials.predict": [[58, "dials-predict"]], "dials.reciprocal_lattice_viewer": [[59, "dials-reciprocal-lattice-viewer"]], "dials.refine": [[60, "dials-refine"]], "dials.refine_bravais_settings": [[61, "dials-refine-bravais-settings"]], "dials.reindex": [[62, "dials-reindex"]], "dials.report": [[63, "dials-report"]], "dials.scale": [[64, "dials-scale"]], "dials.search_beam_position": [[65, "dials-search-beam-position"]], "dials.show": [[66, "dials-show"]], "dials.slice_sequence": [[67, "dials-slice-sequence"]], "dials.spot_counts_per_image": [[68, "dials-spot-counts-per-image"]], "dials.stereographic_projection": [[69, "dials-stereographic-projection"]], "dials.symmetry": [[70, "dials-symmetry"]], "dials.two_theta_refine": [[71, "dials-two-theta-refine"]], "Program documentation": [[72, "program-documentation"]], "xia2.multiplex": [[73, "xia2-multiplex"], [85, "xia2-multiplex"]], "Examples use cases": [[73, "examples-use-cases"]], "Processing Small Molecule MicroED/3DED: Biotin": [[74, "processing-small-molecule-microed-3ded-biotin"]], "General Notes": [[74, "general-notes"]], "Data collection videos": [[74, "data-collection-videos"]], "Note about pedestal and offset": [[74, "note-about-pedestal-and-offset"]], "Import images": [[74, "import-images"]], "Find the beam centre": [[74, "find-the-beam-centre"]], "Re-import with the correct beam center": [[74, "re-import-with-the-correct-beam-center"]], "Generate a mask for the beam center (optional)": [[74, "generate-a-mask-for-the-beam-center-optional"]], "Find spots": [[74, "find-spots"]], "Indexing": [[74, "indexing"], [75, "indexing"], [76, "indexing"], [79, "indexing"], [83, "indexing"], [86, "indexing"], [87, "indexing"], [88, "indexing"], [89, "indexing"]], "Find the Bravais lattice (optional)": [[74, "find-the-bravais-lattice-optional"]], "Refine the geometry": [[74, "refine-the-geometry"]], "Integration": [[74, "integration"], [75, "integration"], [76, "integration"], [83, "integration"], [87, "integration"], [88, "integration"], [89, "integration"]], "Scaling": [[74, "scaling"], [75, "scaling"], [88, "scaling"], [89, "scaling"]], "Other datasets": [[74, "other-datasets"]], "Multi-dataset symmetry determination": [[74, "multi-dataset-symmetry-determination"]], "Excluding bad frames": [[74, "excluding-bad-frames"]], "Scale the data together": [[74, "scale-the-data-together"]], "Export the data": [[74, "export-the-data"]], "Solve the structure": [[74, "solve-the-structure"]], "MyD88TIR small wedges": [[75, "myd88tir-small-wedges"]], "Data": [[75, "data"], [76, "data"], [77, "data"], [89, "data"]], "Exploratory analysis": [[75, "exploratory-analysis"]], "Detector distance": [[75, "detector-distance"]], "Spot-finding": [[75, "spot-finding"], [76, "spot-finding"]], "Tilt axis orientation": [[75, "tilt-axis-orientation"]], "Determining lattice symmetry": [[75, "determining-lattice-symmetry"]], "Refining the detector distance": [[75, "refining-the-detector-distance"]], "Further refinement": [[75, "further-refinement"]], "Scripted processing": [[75, "scripted-processing"]], "Further processing": [[75, "further-processing"]], "Lysozyme nanocrystals": [[76, "lysozyme-nanocrystals"]], "Import": [[76, "import"], [79, "import"], [83, "import"], [87, "import"], [88, "import"], [89, "import"]], "Dataset 1": [[76, "dataset-1"], [76, "id1"], [76, "id11"]], "Dataset 2": [[76, "dataset-2"], [76, "id2"], [76, "id12"]], "Dataset 3": [[76, "dataset-3"], [76, "id3"], [76, "id13"]], "Dataset 4": [[76, "dataset-4"], [76, "id4"], [76, "id14"]], "Dataset 5": [[76, "dataset-5"], [76, "id5"], [76, "id15"]], "Dataset 6": [[76, "dataset-6"], [76, "id6"], [76, "id8"], [76, "id10"], [76, "id16"]], "Dataset 7": [[76, "dataset-7"], [76, "id7"], [76, "id17"]], "Datasets 1-5 & 7": [[76, "datasets-1-5-7"], [76, "id9"]], "Static model refinement": [[76, "static-model-refinement"]], "Scan-varying refinement": [[76, "scan-varying-refinement"]], "Scaling and merging": [[76, "scaling-and-merging"]], "Multi-crystal analysis with DIALS and xia2.multiplex": [[77, "multi-crystal-analysis-with-dials-and-xia2-multiplex"]], "Bookkeeping": [[77, "bookkeeping"]], "Process": [[77, "process"]], "Sets 0-9": [[77, "sets-0-9"]], "Sets 10-19": [[77, "sets-10-19"]], "Sets 20-29": [[77, "sets-20-29"]], "Explorations of Reciprocal Space": [[77, "explorations-of-reciprocal-space"]], "Post Experiment Processing": [[77, "post-experiment-processing"]], "Preferential Orientation": [[77, "preferential-orientation"]], "Unit Cell Comparisons": [[77, "unit-cell-comparisons"]], "Delta CC-half": [[77, "delta-cc-half"]], "Intensity Clustering": [[77, "intensity-clustering"]], "Cluster Comparisons": [[77, "cluster-comparisons"]], "DPF3 Part 2: A question of centring": [[78, "dpf3-part-2-a-question-of-centring"]], "Questioning the lattice symmetry": [[78, "questioning-the-lattice-symmetry"]], "Converting to a centred lattice": [[78, "converting-to-a-centred-lattice"]], "Centred or pseudocentred?": [[78, "centred-or-pseudocentred"]], "Conclusions": [[78, "conclusions"], [79, "conclusions"]], "DPF3 Part 1: Correcting poor initial geometry": [[79, "dpf3-part-1-correcting-poor-initial-geometry"]], "Find Spots": [[79, "find-spots"], [83, "find-spots"], [87, "find-spots"], [88, "find-spots"]], "Check indexing symmetry": [[79, "check-indexing-symmetry"]], "Discover a better experimental model": [[79, "discover-a-better-experimental-model"]], "Indexing with the corrected beam centre": [[79, "indexing-with-the-corrected-beam-centre"]], "Using DIALS at Diamond Light Source": [[80, "using-dials-at-diamond-light-source"]], "General": [[80, "general"]], "Using DIALS with xia2": [[80, "using-dials-with-xia2"]], "Feedback": [[80, "feedback"]], "Tutorials": [[81, "tutorials"]], "Refining multi-tile detector metrology with DIALS": [[82, "refining-multi-tile-detector-metrology-with-dials"]], "Preparing for multi-tile refinement": [[82, "preparing-for-multi-tile-refinement"]], "Multi-tile refinement": [[82, "multi-tile-refinement"]], "Applying the corrected metrology": [[82, "applying-the-corrected-metrology"]], "What to do next": [[82, "what-to-do-next"]], "SARS-CoV-2 main protease (Mpro)": [[83, "sars-cov-2-main-protease-mpro"]], "Tutorial data": [[83, "tutorial-data"], [87, "tutorial-data"], [88, "tutorial-data"]], "Bravais Lattice Refinement": [[83, "bravais-lattice-refinement"], [87, "bravais-lattice-refinement"], [88, "bravais-lattice-refinement"]], "Refinement": [[83, "refinement"], [87, "refinement"], [88, "refinement"], [89, "refinement"], [94, "refinement"]], "Symmetry analysis": [[83, "symmetry-analysis"], [87, "symmetry-analysis"]], "Scaling and Merging": [[83, "scaling-and-merging"], [87, "scaling-and-merging"]], "HTML report": [[83, "html-report"], [87, "html-report"]], "Exporting to unmerged MTZ": [[83, "exporting-to-unmerged-mtz"], [87, "exporting-to-unmerged-mtz"]], "Multi-crystal analysis with DIALS and BLEND: individual vs joint refinement": [[84, "multi-crystal-analysis-with-dials-and-blend-individual-vs-joint-refinement"]], "Individual processing": [[84, "individual-processing"]], "Analysis of individually processed datasets": [[84, "analysis-of-individually-processed-datasets"]], "Joint refinement": [[84, "joint-refinement"]], "Analysis of jointly refined datasets": [[84, "analysis-of-jointly-refined-datasets"]], "What to do next?": [[84, "what-to-do-next"]], "Multi-crystal symmetry analysis and scaling with DIALS": [[85, "multi-crystal-symmetry-analysis-and-scaling-with-dials"]], "Manual reprocessing": [[85, "manual-reprocessing"]], "Almost there": [[85, "almost-there"]], "Multi-lattice Tutorial": [[86, "multi-lattice-tutorial"]], "Import and Spotfinding": [[86, "import-and-spotfinding"]], "Refinement and Integration": [[86, "refinement-and-integration"]], "Symmetry, Scaling and Merging": [[86, "symmetry-scaling-and-merging"]], "Processing in Detail": [[87, "processing-in-detail"]], "Processing in Detail with DUI": [[88, "processing-in-detail-with-dui"]], "Checking the symmetry": [[88, "checking-the-symmetry"]], "Inspecting the results": [[88, "inspecting-the-results"]], "Exporting as MTZ": [[88, "exporting-as-mtz"]], "Small-molecule data reduction tutorial": [[89, "small-molecule-data-reduction-tutorial"]], "Spot finding": [[89, "spot-finding"]], "Bravais lattice determination": [[89, "bravais-lattice-determination"]], "Symmetry Determination": [[89, "symmetry-determination"]], "Unit cell refinement": [[89, "unit-cell-refinement"]], "Exporting": [[89, "exporting"]], "Output for SADABS (alternate path)": [[89, "output-for-sadabs-alternate-path"]], "DIALS How-To guides": [[90, "dials-how-to-guides"]], "DIALS: Diffraction Integration for Advanced Light Sources": [[91, "dials-diffraction-integration-for-advanced-light-sources"]], "Contact": [[91, "contact"]], "Funding": [[91, "funding"]], "Stable Release: DIALS 3.16.1": [[92, "stable-release-dials-3-16-1"]], "Development Builds": [[92, "development-builds"]], "Mac graphical binary installers": [[92, "mac-graphical-binary-installers"]], "Mac and Linux binary installers": [[92, "mac-and-linux-binary-installers"]], "DIALS License": [[93, "dials-license"]], "Processing Sequences with Missing Images": [[94, "processing-sequences-with-missing-images"]], "Importing": [[94, "importing"]], "Export": [[94, "export"]], "Projects": [[95, "projects"]], "DIALS for neutron diffraction": [[95, "dials-for-neutron-diffraction"]], "Publications": [[96, "publications"]], "DIALS Journal Articles": [[96, "dials-journal-articles"]], "DIALS Application to XFEL Crystallography": [[96, "dials-application-to-xfel-crystallography"]], "DIALS Synchrotron Applications": [[96, "dials-synchrotron-applications"]], "DIALS Newsletter Articles": [[96, "dials-newsletter-articles"]], "DIALS Reports": [[96, "dials-reports"]], "SSX processing guide": [[97, "ssx-processing-guide"]], "Indexing SSX data with dials.ssx_index": [[97, "indexing-ssx-data-with-dials-ssx-index"]], "Integrating SSX data with dials.ssx_integrate": [[97, "integrating-ssx-data-with-dials-ssx-integrate"]], "DIALS 1: 12th-13th June 2012 (Diamond Light Source, UK)": [[98, "dials-1-12th-13th-june-2012-diamond-light-source-uk"]], "Organising committee": [[98, "organising-committee"]], "Program and presentations": [[98, "program-and-presentations"], [99, "program-and-presentations"]], "DIALS-3: 22nd May 2013 (Cambridge, UK)": [[99, "dials-3-22nd-may-2013-cambridge-uk"]], "Attendees": [[99, "attendees"]], "Workshops": [[100, "workshops"]]}, "indexentries": {"radialaverage (class in dials.algorithms.background)": [[10, "dials.algorithms.background.RadialAverage"]], "__init__() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.__init__"]], "add() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.add"]], "dials.algorithms.background": [[10, "module-dials.algorithms.background"]], "inv_d2() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.inv_d2"]], "mean() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.mean"]], "module": [[10, "module-dials.algorithms.background"], [11, "module-dials.algorithms.indexing"], [11, "module-dials.algorithms.indexing.assign_indices"], [11, "module-dials.algorithms.indexing.basis_vector_search"], [11, "module-dials.algorithms.indexing.basis_vector_search.combinations"], [11, "module-dials.algorithms.indexing.basis_vector_search.optimise"], [11, "module-dials.algorithms.indexing.compare_orientation_matrices"], [11, "module-dials.algorithms.indexing.indexer"], [11, "module-dials.algorithms.indexing.lattice_search"], [11, "module-dials.algorithms.indexing.max_cell"], [11, "module-dials.algorithms.indexing.model_evaluation"], [11, "module-dials.algorithms.indexing.nearest_neighbor"], [11, "module-dials.algorithms.indexing.refinement"], [11, "module-dials.algorithms.indexing.stills_indexer"], [11, "module-dials.algorithms.indexing.symmetry"], [12, "module-dials.algorithms.integration.integrator"], [13, "module-dials.algorithms.profile_model"], [14, "module-dials.algorithms.refinement.engine"], [14, "module-dials.algorithms.refinement.refiner"], [14, "module-dials.algorithms.refinement.reflection_manager"], [14, "module-dials.algorithms.refinement.target"], [14, "module-dials.algorithms.refinement.target_stills"], [14, "module-dials.algorithms.refinement.weighting_strategies"], [15, "module-dials.algorithms.scaling"], [15, "module-dials.algorithms.scaling.model.model"], [15, "module-dials.algorithms.scaling.outlier_rejection"], [16, "module-dials.algorithms.spot_finding.factory"], [16, "module-dials.algorithms.spot_finding.finder"], [17, "module-dials.algorithms.spot_prediction.reflection_predictor"], [18, "module-dials.algorithms.symmetry"], [18, "module-dials.algorithms.symmetry.cosym"], [18, "module-dials.algorithms.symmetry.cosym.engine"], [18, "module-dials.algorithms.symmetry.cosym.target"], [18, "module-dials.algorithms.symmetry.laue_group"], [18, "module-dials.algorithms.symmetry.reindex_to_reference"], [20, "module-dials.array_family.flex"], [21, "module-dxtbx.model.beam"], [22, "module-dxtbx.model.crystal"], [23, "module-dxtbx.model.detector"], [24, "module-dxtbx.model.experiment_list"], [25, "module-dxtbx.model.goniometer"], [26, "module-dxtbx.imageset"], [28, "module-dxtbx.model.profile"], [29, "module-dxtbx.model.scan"], [30, "module-dxtbx.serialize.imageset"], [30, "module-dxtbx.serialize.load"], [30, "module-dxtbx.serialize.xds"], [31, "module-dials.extensions.dispersion_spotfinder_threshold_ext"], [31, "module-dials.extensions.gaussian_rs_profile_model_ext"], [31, "module-dials.extensions.null_background_ext"], [31, "module-dials.extensions.simple_background_ext"], [31, "module-dials.extensions.simple_centroid_ext"], [33, "module-dials.util.command_line"], [33, "module-dials.util.export_mtz"], [33, "module-dials.util.export_text"], [33, "module-dials.util.image"], [33, "module-dials.util.installer"], [33, "module-dials.util.ioutil"], [33, "module-dials.util.nexus"], [33, "module-dials.util.options"]], "set_shoebox_background_value() (in module dials.algorithms.background)": [[10, "dials.algorithms.background.set_shoebox_background_value"]], "weight() (dials.algorithms.background.radialaverage method)": [[10, "dials.algorithms.background.RadialAverage.weight"]], "assignindicesglobal (class in dials.algorithms.indexing.assign_indices)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesGlobal"]], "assignindiceslocal (class in dials.algorithms.indexing.assign_indices)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesLocal"]], "assignindicesstrategy (class in dials.algorithms.indexing.assign_indices)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesStrategy"]], "basisvectorminimiser (class in dials.algorithms.indexing.basis_vector_search.optimise)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorMinimiser"]], "basisvectortarget (class in dials.algorithms.indexing.basis_vector_search.optimise)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget"]], "dialsindexerror": [[11, "dials.algorithms.indexing.DialsIndexError"]], "dialsindexrefineerror": [[11, "dials.algorithms.indexing.DialsIndexRefineError"]], "fft1d (class in dials.algorithms.indexing.basis_vector_search)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D"]], "fft3d (class in dials.algorithms.indexing.basis_vector_search)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D"]], "indexer (class in dials.algorithms.indexing.indexer)": [[11, "dials.algorithms.indexing.indexer.Indexer"]], "lowresspotmatch (class in dials.algorithms.indexing.lattice_search)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch"]], "modelevaluation (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.ModelEvaluation"]], "modelrank (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank"]], "modelrankfilter (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter"]], "modelrankweighted (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted"]], "neighboranalysis (class in dials.algorithms.indexing.nearest_neighbor)": [[11, "dials.algorithms.indexing.nearest_neighbor.NeighborAnalysis"]], "realspacegridsearch (class in dials.algorithms.indexing.basis_vector_search)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch"]], "result (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.Result"]], "stillsindexer (class in dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer"]], "stillsindexerbasisvectorsearch (class in dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexerBasisVectorSearch"]], "stillsindexerknownorientation (class in dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexerKnownOrientation"]], "stillsindexerlatticesearch (class in dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexerLatticeSearch"]], "strategy (class in dials.algorithms.indexing.basis_vector_search)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy"]], "strategy (class in dials.algorithms.indexing.lattice_search)": [[11, "dials.algorithms.indexing.lattice_search.Strategy"]], "strategy (class in dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.Strategy"]], "symmetryhandler (class in dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.SymmetryHandler"]], "__init__() (dials.algorithms.indexing.assign_indices.assignindicesglobal method)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesGlobal.__init__"]], "__init__() (dials.algorithms.indexing.assign_indices.assignindiceslocal method)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesLocal.__init__"]], "__init__() (dials.algorithms.indexing.assign_indices.assignindicesstrategy method)": [[11, "dials.algorithms.indexing.assign_indices.AssignIndicesStrategy.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.fft1d method)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.fft3d method)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.realspacegridsearch method)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.strategy method)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectorminimiser method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorMinimiser.__init__"]], "__init__() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectortarget method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget.__init__"]], "__init__() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.__init__"]], "__init__() (dials.algorithms.indexing.lattice_search.lowresspotmatch method)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch.__init__"]], "__init__() (dials.algorithms.indexing.lattice_search.strategy method)": [[11, "dials.algorithms.indexing.lattice_search.Strategy.__init__"]], "__init__() (dials.algorithms.indexing.model_evaluation.modelevaluation method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelEvaluation.__init__"]], "__init__() (dials.algorithms.indexing.model_evaluation.modelrank method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank.__init__"]], "__init__() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.__init__"]], "__init__() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.__init__"]], "__init__() (dials.algorithms.indexing.nearest_neighbor.neighboranalysis method)": [[11, "dials.algorithms.indexing.nearest_neighbor.NeighborAnalysis.__init__"]], "__init__() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.__init__"]], "__init__() (dials.algorithms.indexing.symmetry.symmetryhandler method)": [[11, "dials.algorithms.indexing.symmetry.SymmetryHandler.__init__"]], "append() (dials.algorithms.indexing.model_evaluation.modelrank method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank.append"]], "append() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.append"]], "apply_hkl_offset() (in module dials.algorithms.indexing.indexer)": [[11, "dials.algorithms.indexing.indexer.apply_hkl_offset"]], "apply_symmetry() (dials.algorithms.indexing.symmetry.symmetryhandler method)": [[11, "dials.algorithms.indexing.symmetry.SymmetryHandler.apply_symmetry"]], "best_model() (dials.algorithms.indexing.model_evaluation.modelrank method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank.best_model"]], "best_model() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.best_model"]], "best_model() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.best_model"]], "calc_2d_rmsd_and_displacements() (in module dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.calc_2D_rmsd_and_displacements"]], "calc_acentric_subgroups() (in module dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.calc_acentric_subgroups"]], "candidate_orientation_matrices() (in module dials.algorithms.indexing.basis_vector_search.combinations)": [[11, "dials.algorithms.indexing.basis_vector_search.combinations.candidate_orientation_matrices"]], "choose_best_orientation_matrix() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.choose_best_orientation_matrix"]], "combined_scores() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.combined_scores"]], "compute_functional() (dials.algorithms.indexing.basis_vector_search.realspacegridsearch static method)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.compute_functional"]], "compute_functional() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectortarget method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget.compute_functional"]], "compute_functional_and_gradients() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectorminimiser method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorMinimiser.compute_functional_and_gradients"]], "compute_functional_and_gradients() (dials.algorithms.indexing.basis_vector_search.optimise.basisvectortarget method)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.BasisVectorTarget.compute_functional_and_gradients"]], "crystal (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.crystal"]], "dials.algorithms.indexing": [[11, "module-dials.algorithms.indexing"]], "dials.algorithms.indexing.assign_indices": [[11, "module-dials.algorithms.indexing.assign_indices"]], "dials.algorithms.indexing.basis_vector_search": [[11, "module-dials.algorithms.indexing.basis_vector_search"]], "dials.algorithms.indexing.basis_vector_search.combinations": [[11, "module-dials.algorithms.indexing.basis_vector_search.combinations"]], "dials.algorithms.indexing.basis_vector_search.optimise": [[11, "module-dials.algorithms.indexing.basis_vector_search.optimise"]], "dials.algorithms.indexing.compare_orientation_matrices": [[11, "module-dials.algorithms.indexing.compare_orientation_matrices"]], "dials.algorithms.indexing.indexer": [[11, "module-dials.algorithms.indexing.indexer"]], "dials.algorithms.indexing.lattice_search": [[11, "module-dials.algorithms.indexing.lattice_search"]], "dials.algorithms.indexing.max_cell": [[11, "module-dials.algorithms.indexing.max_cell"]], "dials.algorithms.indexing.model_evaluation": [[11, "module-dials.algorithms.indexing.model_evaluation"]], "dials.algorithms.indexing.nearest_neighbor": [[11, "module-dials.algorithms.indexing.nearest_neighbor"]], "dials.algorithms.indexing.refinement": [[11, "module-dials.algorithms.indexing.refinement"]], "dials.algorithms.indexing.stills_indexer": [[11, "module-dials.algorithms.indexing.stills_indexer"]], "dials.algorithms.indexing.symmetry": [[11, "module-dials.algorithms.indexing.symmetry"]], "difference_rotation_matrix_axis_angle() (in module dials.algorithms.indexing.compare_orientation_matrices)": [[11, "dials.algorithms.indexing.compare_orientation_matrices.difference_rotation_matrix_axis_angle"]], "e_refine() (in module dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.e_refine"]], "evaluate() (dials.algorithms.indexing.model_evaluation.modelevaluation method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelEvaluation.evaluate"]], "evaluate() (dials.algorithms.indexing.model_evaluation.strategy method)": [[11, "dials.algorithms.indexing.model_evaluation.Strategy.evaluate"]], "experiment_list_for_crystal() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.experiment_list_for_crystal"]], "export_as_json() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.export_as_json"]], "export_reflections() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.export_reflections"]], "extend() (dials.algorithms.indexing.model_evaluation.modelrank method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRank.extend"]], "extend() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.extend"]], "filter_by_likelihood() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.filter_by_likelihood"]], "filter_by_n_indexed() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.filter_by_n_indexed"]], "filter_by_volume() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.filter_by_volume"]], "filter_doubled_cell() (in module dials.algorithms.indexing.model_evaluation)": [[11, "dials.algorithms.indexing.model_evaluation.filter_doubled_cell"]], "filter_known_symmetry() (in module dials.algorithms.indexing.basis_vector_search.combinations)": [[11, "dials.algorithms.indexing.basis_vector_search.combinations.filter_known_symmetry"]], "filter_similar_orientations() (in module dials.algorithms.indexing.basis_vector_search.combinations)": [[11, "dials.algorithms.indexing.basis_vector_search.combinations.filter_similar_orientations"]], "find_basis_vectors() (dials.algorithms.indexing.basis_vector_search.fft1d method)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D.find_basis_vectors"]], "find_basis_vectors() (dials.algorithms.indexing.basis_vector_search.fft3d method)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D.find_basis_vectors"]], "find_basis_vectors() (dials.algorithms.indexing.basis_vector_search.realspacegridsearch method)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.find_basis_vectors"]], "find_basis_vectors() (dials.algorithms.indexing.basis_vector_search.strategy method)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy.find_basis_vectors"]], "find_crystal_models() (dials.algorithms.indexing.lattice_search.lowresspotmatch method)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch.find_crystal_models"]], "find_crystal_models() (dials.algorithms.indexing.lattice_search.strategy method)": [[11, "dials.algorithms.indexing.lattice_search.Strategy.find_crystal_models"]], "find_lattices() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.find_lattices"]], "find_matching_symmetry() (in module dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.find_matching_symmetry"]], "find_max_cell() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.find_max_cell"]], "find_max_cell() (in module dials.algorithms.indexing.max_cell)": [[11, "dials.algorithms.indexing.max_cell.find_max_cell"]], "fraction_indexed (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.fraction_indexed"]], "from_parameters() (dials.algorithms.indexing.indexer.indexer static method)": [[11, "dials.algorithms.indexing.indexer.Indexer.from_parameters"]], "groups_cache() (in module dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.groups_cache"]], "hkl_offset (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.hkl_offset"]], "identify_outliers() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.identify_outliers"]], "index() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.index"]], "index() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.index"]], "index_reflections() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.index_reflections"]], "metric_supergroup() (in module dials.algorithms.indexing.symmetry)": [[11, "dials.algorithms.indexing.symmetry.metric_supergroup"]], "model_likelihood (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.model_likelihood"]], "n_indexed (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.n_indexed"]], "optimise_basis_vectors() (in module dials.algorithms.indexing.basis_vector_search.optimise)": [[11, "dials.algorithms.indexing.basis_vector_search.optimise.optimise_basis_vectors"]], "phil_help (dials.algorithms.indexing.basis_vector_search.fft1d attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D.phil_help"]], "phil_help (dials.algorithms.indexing.basis_vector_search.fft3d attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D.phil_help"]], "phil_help (dials.algorithms.indexing.basis_vector_search.realspacegridsearch attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.phil_help"]], "phil_help (dials.algorithms.indexing.basis_vector_search.strategy attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy.phil_help"]], "phil_help (dials.algorithms.indexing.lattice_search.lowresspotmatch attribute)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch.phil_help"]], "phil_help (dials.algorithms.indexing.lattice_search.strategy attribute)": [[11, "dials.algorithms.indexing.lattice_search.Strategy.phil_help"]], "phil_scope (dials.algorithms.indexing.basis_vector_search.fft1d attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT1D.phil_scope"]], "phil_scope (dials.algorithms.indexing.basis_vector_search.fft3d attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.FFT3D.phil_scope"]], "phil_scope (dials.algorithms.indexing.basis_vector_search.realspacegridsearch attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.phil_scope"]], "phil_scope (dials.algorithms.indexing.basis_vector_search.strategy attribute)": [[11, "dials.algorithms.indexing.basis_vector_search.Strategy.phil_scope"]], "phil_scope (dials.algorithms.indexing.lattice_search.lowresspotmatch attribute)": [[11, "dials.algorithms.indexing.lattice_search.LowResSpotMatch.phil_scope"]], "phil_scope (dials.algorithms.indexing.lattice_search.strategy attribute)": [[11, "dials.algorithms.indexing.lattice_search.Strategy.phil_scope"]], "plot_displacements() (in module dials.algorithms.indexing.stills_indexer)": [[11, "dials.algorithms.indexing.stills_indexer.plot_displacements"]], "plot_histogram() (dials.algorithms.indexing.nearest_neighbor.neighboranalysis method)": [[11, "dials.algorithms.indexing.nearest_neighbor.NeighborAnalysis.plot_histogram"]], "refine() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.refine"]], "refine() (dials.algorithms.indexing.stills_indexer.stillsindexer method)": [[11, "dials.algorithms.indexing.stills_indexer.StillsIndexer.refine"]], "refine() (in module dials.algorithms.indexing.refinement)": [[11, "dials.algorithms.indexing.refinement.refine"]], "rmsds (dials.algorithms.indexing.model_evaluation.result attribute)": [[11, "dials.algorithms.indexing.model_evaluation.Result.rmsds"]], "rotation_matrix_differences() (in module dials.algorithms.indexing.compare_orientation_matrices)": [[11, "dials.algorithms.indexing.compare_orientation_matrices.rotation_matrix_differences"]], "score_by_fraction_indexed() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.score_by_fraction_indexed"]], "score_by_rmsd_xy() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.score_by_rmsd_xy"]], "score_by_volume() (dials.algorithms.indexing.model_evaluation.modelrankweighted method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankWeighted.score_by_volume"]], "score_vectors() (dials.algorithms.indexing.basis_vector_search.realspacegridsearch method)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.score_vectors"]], "search_directions (dials.algorithms.indexing.basis_vector_search.realspacegridsearch property)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.search_directions"]], "search_vectors (dials.algorithms.indexing.basis_vector_search.realspacegridsearch property)": [[11, "dials.algorithms.indexing.basis_vector_search.RealSpaceGridSearch.search_vectors"]], "setup_indexing() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.setup_indexing"]], "show_experiments() (dials.algorithms.indexing.indexer.indexer method)": [[11, "dials.algorithms.indexing.indexer.Indexer.show_experiments"]], "update_analysis() (dials.algorithms.indexing.model_evaluation.modelrankfilter method)": [[11, "dials.algorithms.indexing.model_evaluation.ModelRankFilter.update_analysis"]], "executor (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Executor"]], "integrator (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Integrator"]], "integrator2d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Integrator2D"]], "integrator3d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Integrator3D"]], "integrator3dthreaded (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded"]], "integratorexecutor (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor"]], "integratorflat3d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.IntegratorFlat3D"]], "integratorsingle2d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.IntegratorSingle2D"]], "integratorstills (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.IntegratorStills"]], "joblist (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.JobList"]], "parameters (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Parameters"]], "parameters.filter (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Parameters.Filter"]], "parameters.profile (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Parameters.Profile"]], "parameters.profile.validation (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Parameters.Profile.Validation"]], "processor2d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Processor2D"]], "processor3d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.Processor3D"]], "processorclass (dials.algorithms.integration.integrator.integrator2d attribute)": [[12, "dials.algorithms.integration.integrator.Integrator2D.ProcessorClass"]], "processorclass (dials.algorithms.integration.integrator.integrator3d attribute)": [[12, "dials.algorithms.integration.integrator.Integrator3D.ProcessorClass"]], "processorclass (dials.algorithms.integration.integrator.integratorflat3d attribute)": [[12, "dials.algorithms.integration.integrator.IntegratorFlat3D.ProcessorClass"]], "processorclass (dials.algorithms.integration.integrator.integratorsingle2d attribute)": [[12, "dials.algorithms.integration.integrator.IntegratorSingle2D.ProcessorClass"]], "processorclass (dials.algorithms.integration.integrator.integratorstills attribute)": [[12, "dials.algorithms.integration.integrator.IntegratorStills.ProcessorClass"]], "processorflat3d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProcessorFlat3D"]], "processorsingle2d (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProcessorSingle2D"]], "processorstills (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProcessorStills"]], "profilemodellerexecutor (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor"]], "profilevalidatorexecutor (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor"]], "reflectionmanager (class in dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.ReflectionManager"]], "__init__() (dials.algorithms.integration.integrator.executor method)": [[12, "dials.algorithms.integration.integrator.Executor.__init__"]], "__init__() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.__init__"]], "__init__() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.__init__"]], "__init__() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.__init__"]], "__init__() (dials.algorithms.integration.integrator.joblist method)": [[12, "dials.algorithms.integration.integrator.JobList.__init__"]], "__init__() (dials.algorithms.integration.integrator.parameters method)": [[12, "dials.algorithms.integration.integrator.Parameters.__init__"]], "__init__() (dials.algorithms.integration.integrator.parameters.filter method)": [[12, "dials.algorithms.integration.integrator.Parameters.Filter.__init__"]], "__init__() (dials.algorithms.integration.integrator.parameters.profile method)": [[12, "dials.algorithms.integration.integrator.Parameters.Profile.__init__"]], "__init__() (dials.algorithms.integration.integrator.parameters.profile.validation method)": [[12, "dials.algorithms.integration.integrator.Parameters.Profile.Validation.__init__"]], "__init__() (dials.algorithms.integration.integrator.processor2d method)": [[12, "dials.algorithms.integration.integrator.Processor2D.__init__"]], "__init__() (dials.algorithms.integration.integrator.processor3d method)": [[12, "dials.algorithms.integration.integrator.Processor3D.__init__"]], "__init__() (dials.algorithms.integration.integrator.processorflat3d method)": [[12, "dials.algorithms.integration.integrator.ProcessorFlat3D.__init__"]], "__init__() (dials.algorithms.integration.integrator.processorsingle2d method)": [[12, "dials.algorithms.integration.integrator.ProcessorSingle2D.__init__"]], "__init__() (dials.algorithms.integration.integrator.processorstills method)": [[12, "dials.algorithms.integration.integrator.ProcessorStills.__init__"]], "__init__() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.__init__"]], "__init__() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.__init__"]], "__init__() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.__init__"]], "accumulate() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.accumulate"]], "add() (dials.algorithms.integration.integrator.joblist method)": [[12, "dials.algorithms.integration.integrator.JobList.add"]], "data() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.data"]], "data() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.data"]], "data() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.data"]], "data() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.data"]], "dials.algorithms.integration.integrator": [[12, "module-dials.algorithms.integration.integrator"]], "finalise() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.finalise"]], "finalize() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.finalize"]], "finalize() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.finalize"]], "finalize() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.finalize"]], "finalize_reflections() (dials.algorithms.integration.integrator.integrator2d static method)": [[12, "dials.algorithms.integration.integrator.Integrator2D.finalize_reflections"]], "finalize_reflections() (dials.algorithms.integration.integrator.integrator3d static method)": [[12, "dials.algorithms.integration.integrator.Integrator3D.finalize_reflections"]], "finalize_reflections() (dials.algorithms.integration.integrator.integratorflat3d static method)": [[12, "dials.algorithms.integration.integrator.IntegratorFlat3D.finalize_reflections"]], "finalize_reflections() (dials.algorithms.integration.integrator.integratorsingle2d static method)": [[12, "dials.algorithms.integration.integrator.IntegratorSingle2D.finalize_reflections"]], "finalize_reflections() (dials.algorithms.integration.integrator.integratorstills static method)": [[12, "dials.algorithms.integration.integrator.IntegratorStills.finalize_reflections"]], "finished() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.finished"]], "fit_profiles() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.fit_profiles"]], "frame_hist() (in module dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.frame_hist"]], "from_phil() (dials.algorithms.integration.integrator.parameters static method)": [[12, "dials.algorithms.integration.integrator.Parameters.from_phil"]], "generate_phil_scope() (in module dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.generate_phil_scope"]], "hist() (in module dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.hist"]], "initialise() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.initialise"]], "initialize() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.initialize"]], "initialize() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.initialize"]], "initialize() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.initialize"]], "initialize_reflections() (dials.algorithms.integration.integrator.integrator2d static method)": [[12, "dials.algorithms.integration.integrator.Integrator2D.initialize_reflections"]], "initialize_reflections() (dials.algorithms.integration.integrator.integrator3d static method)": [[12, "dials.algorithms.integration.integrator.Integrator3D.initialize_reflections"]], "initialize_reflections() (dials.algorithms.integration.integrator.integratorflat3d static method)": [[12, "dials.algorithms.integration.integrator.IntegratorFlat3D.initialize_reflections"]], "initialize_reflections() (dials.algorithms.integration.integrator.integratorsingle2d static method)": [[12, "dials.algorithms.integration.integrator.IntegratorSingle2D.initialize_reflections"]], "initialize_reflections() (dials.algorithms.integration.integrator.integratorstills static method)": [[12, "dials.algorithms.integration.integrator.IntegratorStills.initialize_reflections"]], "integrate() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.integrate"]], "integrate() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.integrate"]], "job() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.job"]], "nframes_hist() (in module dials.algorithms.integration.integrator)": [[12, "dials.algorithms.integration.integrator.nframes_hist"]], "num_reflections() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.num_reflections"]], "process() (dials.algorithms.integration.integrator.executor method)": [[12, "dials.algorithms.integration.integrator.Executor.process"]], "process() (dials.algorithms.integration.integrator.integratorexecutor method)": [[12, "dials.algorithms.integration.integrator.IntegratorExecutor.process"]], "process() (dials.algorithms.integration.integrator.profilemodellerexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileModellerExecutor.process"]], "process() (dials.algorithms.integration.integrator.profilevalidatorexecutor method)": [[12, "dials.algorithms.integration.integrator.ProfileValidatorExecutor.process"]], "report() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.report"]], "report() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.report"]], "shoebox_memory() (dials.algorithms.integration.integrator.joblist method)": [[12, "dials.algorithms.integration.integrator.JobList.shoebox_memory"]], "split() (dials.algorithms.integration.integrator.joblist method)": [[12, "dials.algorithms.integration.integrator.JobList.split"]], "split() (dials.algorithms.integration.integrator.reflectionmanager method)": [[12, "dials.algorithms.integration.integrator.ReflectionManager.split"]], "summary() (dials.algorithms.integration.integrator.integrator method)": [[12, "dials.algorithms.integration.integrator.Integrator.summary"]], "summary() (dials.algorithms.integration.integrator.integrator3dthreaded method)": [[12, "dials.algorithms.integration.integrator.Integrator3DThreaded.summary"]], "dials.algorithms.profile_model": [[13, "module-dials.algorithms.profile_model"]], "adaptlbfgs (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs"]], "adaptlstbx (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx"]], "blockcalculator (class in dials.algorithms.refinement.reflection_manager)": [[14, "dials.algorithms.refinement.reflection_manager.BlockCalculator"]], "constantweightingstrategy (class in dials.algorithms.refinement.weighting_strategies)": [[14, "dials.algorithms.refinement.weighting_strategies.ConstantWeightingStrategy"]], "disablempmixin (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.DisableMPmixin"]], "externaldelpsiweightingstrategy (class in dials.algorithms.refinement.weighting_strategies)": [[14, "dials.algorithms.refinement.weighting_strategies.ExternalDelPsiWeightingStrategy"]], "gaussnewtoniterations (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations"]], "journal (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.Journal"]], "lbfgscurvs (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.LBFGScurvs"]], "leastsquarespositionalresidualwithrmsdcutoff (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoff"]], "leastsquarespositionalresidualwithrmsdcutoffsparse (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoffSparse"]], "leastsquaresstillsresidualwithrmsdcutoff (class in dials.algorithms.refinement.target_stills)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff"]], "leastsquaresstillsresidualwithrmsdcutoffsparse (class in dials.algorithms.refinement.target_stills)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoffSparse"]], "levenbergmarquardtiterations (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations"]], "refiner (class in dials.algorithms.refinement.refiner)": [[14, "dials.algorithms.refinement.refiner.Refiner"]], "refinerfactory (class in dials.algorithms.refinement.refiner)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory"]], "refinery (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.Refinery"]], "reflectionmanager (class in dials.algorithms.refinement.reflection_manager)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager"]], "reflectionmanagerfactory (class in dials.algorithms.refinement.reflection_manager)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManagerFactory"]], "scanvaryingrefiner (class in dials.algorithms.refinement.refiner)": [[14, "dials.algorithms.refinement.refiner.ScanVaryingRefiner"]], "simplelbfgs (class in dials.algorithms.refinement.engine)": [[14, "dials.algorithms.refinement.engine.SimpleLBFGS"]], "sparsegradientsmixin (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.SparseGradientsMixin"]], "statisticalweightingstrategy (class in dials.algorithms.refinement.weighting_strategies)": [[14, "dials.algorithms.refinement.weighting_strategies.StatisticalWeightingStrategy"]], "stillsreflectionmanager (class in dials.algorithms.refinement.reflection_manager)": [[14, "dials.algorithms.refinement.reflection_manager.StillsReflectionManager"]], "stillsweightingstrategy (class in dials.algorithms.refinement.weighting_strategies)": [[14, "dials.algorithms.refinement.weighting_strategies.StillsWeightingStrategy"]], "target (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.Target"]], "targetfactory (class in dials.algorithms.refinement.target)": [[14, "dials.algorithms.refinement.target.TargetFactory"]], "__init__() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.__init__"]], "__init__() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.__init__"]], "__init__() (dials.algorithms.refinement.engine.gaussnewtoniterations method)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.__init__"]], "__init__() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.__init__"]], "__init__() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.__init__"]], "__init__() (dials.algorithms.refinement.reflection_manager.blockcalculator method)": [[14, "dials.algorithms.refinement.reflection_manager.BlockCalculator.__init__"]], "__init__() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.__init__"]], "__init__() (dials.algorithms.refinement.target.leastsquarespositionalresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoff.__init__"]], "__init__() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.__init__"]], "__init__() (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.__init__"]], "__init__() (dials.algorithms.refinement.weighting_strategies.constantweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.ConstantWeightingStrategy.__init__"]], "__init__() (dials.algorithms.refinement.weighting_strategies.stillsweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.StillsWeightingStrategy.__init__"]], "achieved() (dials.algorithms.refinement.target.leastsquarespositionalresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target.LeastSquaresPositionalResidualWithRmsdCutoff.achieved"]], "achieved() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.achieved"]], "achieved() (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.achieved"]], "add_column() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.add_column"]], "add_constant_to_diagonal() (dials.algorithms.refinement.engine.levenbergmarquardtiterations method)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.add_constant_to_diagonal"]], "add_row() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.add_row"]], "build_up() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.build_up"]], "calc_exp_rmsd_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.calc_exp_rmsd_table"]], "calculate_esds() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.calculate_esds"]], "calculate_gradients() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.calculate_gradients"]], "calculate_weights() (dials.algorithms.refinement.weighting_strategies.constantweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.ConstantWeightingStrategy.calculate_weights"]], "calculate_weights() (dials.algorithms.refinement.weighting_strategies.externaldelpsiweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.ExternalDelPsiWeightingStrategy.calculate_weights"]], "calculate_weights() (dials.algorithms.refinement.weighting_strategies.statisticalweightingstrategy static method)": [[14, "dials.algorithms.refinement.weighting_strategies.StatisticalWeightingStrategy.calculate_weights"]], "calculate_weights() (dials.algorithms.refinement.weighting_strategies.stillsweightingstrategy method)": [[14, "dials.algorithms.refinement.weighting_strategies.StillsWeightingStrategy.calculate_weights"]], "callback_after_step() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.callback_after_step"]], "compute_functional_and_gradients() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.compute_functional_and_gradients"]], "compute_functional_gradients_and_curvatures() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.compute_functional_gradients_and_curvatures"]], "compute_functional_gradients_and_curvatures() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_functional_gradients_and_curvatures"]], "compute_functional_gradients_diag() (dials.algorithms.refinement.engine.lbfgscurvs method)": [[14, "dials.algorithms.refinement.engine.LBFGScurvs.compute_functional_gradients_diag"]], "compute_residuals() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_residuals"]], "compute_residuals_and_gradients() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_residuals_and_gradients"]], "compute_restraints_functional_gradients_and_curvatures() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_restraints_functional_gradients_and_curvatures"]], "compute_restraints_residuals_and_gradients() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.compute_restraints_residuals_and_gradients"]], "config_refinery() (dials.algorithms.refinement.refiner.refinerfactory static method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.config_refinery"]], "config_restraints() (dials.algorithms.refinement.refiner.refinerfactory static method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.config_restraints"]], "config_sparse() (dials.algorithms.refinement.refiner.refinerfactory static method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.config_sparse"]], "config_target() (dials.algorithms.refinement.refiner.refinerfactory static method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.config_target"]], "convergence_as_shift_over_esd (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.convergence_as_shift_over_esd"]], "damping_value (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.damping_value"]], "del_last_row() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.del_last_row"]], "dials.algorithms.refinement.engine": [[14, "module-dials.algorithms.refinement.engine"]], "dials.algorithms.refinement.refiner": [[14, "module-dials.algorithms.refinement.refiner"]], "dials.algorithms.refinement.reflection_manager": [[14, "module-dials.algorithms.refinement.reflection_manager"]], "dials.algorithms.refinement.target": [[14, "module-dials.algorithms.refinement.target"]], "dials.algorithms.refinement.target_stills": [[14, "module-dials.algorithms.refinement.target_stills"]], "dials.algorithms.refinement.weighting_strategies": [[14, "module-dials.algorithms.refinement.weighting_strategies"]], "dim (dials.algorithms.refinement.target.target property)": [[14, "dials.algorithms.refinement.target.Target.dim"]], "experiment_type (dials.algorithms.refinement.reflection_manager.reflectionmanager attribute)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.experiment_type"]], "experiment_type (dials.algorithms.refinement.reflection_manager.stillsreflectionmanager attribute)": [[14, "dials.algorithms.refinement.reflection_manager.StillsReflectionManager.experiment_type"]], "filter_obs() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.filter_obs"]], "finalise() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.finalise"]], "from_json_file() (dials.algorithms.refinement.engine.journal class method)": [[14, "dials.algorithms.refinement.engine.Journal.from_json_file"]], "from_parameters_and_experiments() (dials.algorithms.refinement.target.targetfactory static method)": [[14, "dials.algorithms.refinement.target.TargetFactory.from_parameters_and_experiments"]], "from_parameters_data_experiments() (dials.algorithms.refinement.refiner.refinerfactory class method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.from_parameters_data_experiments"]], "from_parameters_reflections_experiments() (dials.algorithms.refinement.reflection_manager.reflectionmanagerfactory static method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManagerFactory.from_parameters_reflections_experiments"]], "get_accepted_refs_size() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_accepted_refs_size"]], "get_centroid_analyser() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_centroid_analyser"]], "get_correlation_matrix_for_step() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.get_correlation_matrix_for_step"]], "get_experiments() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_experiments"]], "get_free_reflections() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_free_reflections"]], "get_free_reflections() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_free_reflections"]], "get_indexed() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_indexed"]], "get_matches() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_matches"]], "get_matches() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_matches"]], "get_nrows() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.get_nrows"]], "get_num_matches() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.get_num_matches"]], "get_num_matches_for_experiment() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.get_num_matches_for_experiment"]], "get_num_matches_for_panel() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.get_num_matches_for_panel"]], "get_num_steps() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.get_num_steps"]], "get_obs() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_obs"]], "get_param_reporter() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_param_reporter"]], "get_parameter_correlation_matrix() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.get_parameter_correlation_matrix"]], "get_sample_size() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.get_sample_size"]], "gradient_threshold (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.gradient_threshold"]], "history (dials.algorithms.refinement.refiner.refiner property)": [[14, "dials.algorithms.refinement.refiner.Refiner.history"]], "jacobian_condition_number() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.jacobian_condition_number"]], "max_shift_over_esd (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.max_shift_over_esd"]], "mu (dials.algorithms.refinement.engine.levenbergmarquardtiterations property)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.mu"]], "parameter_vector_norm() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.parameter_vector_norm"]], "per_image() (dials.algorithms.refinement.reflection_manager.blockcalculator method)": [[14, "dials.algorithms.refinement.reflection_manager.BlockCalculator.per_image"]], "per_width() (dials.algorithms.refinement.reflection_manager.blockcalculator method)": [[14, "dials.algorithms.refinement.reflection_manager.BlockCalculator.per_width"]], "predict() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.predict"]], "predict_for_free_reflections() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.predict_for_free_reflections"]], "predict_for_indexed() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.predict_for_indexed"]], "predict_for_reflection_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.predict_for_reflection_table"]], "predict_for_reflection_table() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.predict_for_reflection_table"]], "predict_for_reflection_table() (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff method)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.predict_for_reflection_table"]], "prepare_for_step() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.prepare_for_step"]], "print_exp_rmsd_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.print_exp_rmsd_table"]], "print_out_of_sample_rmsd_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.print_out_of_sample_rmsd_table"]], "print_panel_rmsd_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.print_panel_rmsd_table"]], "print_stats_on_matches() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.print_stats_on_matches"]], "print_stats_on_matches() (dials.algorithms.refinement.reflection_manager.stillsreflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.StillsReflectionManager.print_stats_on_matches"]], "print_step_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.print_step_table"]], "reason_for_termination (dials.algorithms.refinement.engine.journal attribute)": [[14, "dials.algorithms.refinement.engine.Journal.reason_for_termination"]], "reflections_after_outlier_rejection() (dials.algorithms.refinement.refiner.refinerfactory class method)": [[14, "dials.algorithms.refinement.refiner.RefinerFactory.reflections_after_outlier_rejection"]], "report_progress() (dials.algorithms.refinement.engine.levenbergmarquardtiterations method)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.report_progress"]], "reset_accepted_reflections() (dials.algorithms.refinement.reflection_manager.reflectionmanager method)": [[14, "dials.algorithms.refinement.reflection_manager.ReflectionManager.reset_accepted_reflections"]], "restart() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.restart"]], "rmsd_names (dials.algorithms.refinement.target.target attribute)": [[14, "dials.algorithms.refinement.target.Target.rmsd_names"]], "rmsd_names (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff attribute)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.rmsd_names"]], "rmsd_units (dials.algorithms.refinement.target.target attribute)": [[14, "dials.algorithms.refinement.target.Target.rmsd_units"]], "rmsd_units (dials.algorithms.refinement.target_stills.leastsquaresstillsresidualwithrmsdcutoff attribute)": [[14, "dials.algorithms.refinement.target_stills.LeastSquaresStillsResidualWithRmsdCutoff.rmsd_units"]], "rmsds() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.rmsds"]], "rmsds() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.rmsds"]], "rmsds_for_experiment() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.rmsds_for_experiment"]], "rmsds_for_panel() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.rmsds_for_panel"]], "rmsds_for_reflection_table() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.rmsds_for_reflection_table"]], "rmsds_for_reflection_table() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.rmsds_for_reflection_table"]], "run() (dials.algorithms.refinement.engine.gaussnewtoniterations method)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.run"]], "run() (dials.algorithms.refinement.engine.lbfgscurvs method)": [[14, "dials.algorithms.refinement.engine.LBFGScurvs.run"]], "run() (dials.algorithms.refinement.engine.levenbergmarquardtiterations method)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.run"]], "run() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.run"]], "run() (dials.algorithms.refinement.engine.simplelbfgs method)": [[14, "dials.algorithms.refinement.engine.SimpleLBFGS.run"]], "run() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.run"]], "run_lbfgs() (dials.algorithms.refinement.engine.adaptlbfgs method)": [[14, "dials.algorithms.refinement.engine.AdaptLbfgs.run_lbfgs"]], "selection_used_for_refinement() (dials.algorithms.refinement.refiner.refiner method)": [[14, "dials.algorithms.refinement.refiner.Refiner.selection_used_for_refinement"]], "set_cholesky_factor() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.set_cholesky_factor"]], "set_last_cell() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.set_last_cell"]], "set_nproc() (dials.algorithms.refinement.engine.disablempmixin method)": [[14, "dials.algorithms.refinement.engine.DisableMPmixin.set_nproc"]], "set_nproc() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.set_nproc"]], "setup_mu() (dials.algorithms.refinement.engine.levenbergmarquardtiterations method)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.setup_mu"]], "split_jacobian_into_blocks() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.split_jacobian_into_blocks"]], "split_matches_into_blocks() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.split_matches_into_blocks"]], "step_backward() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.step_backward"]], "step_forward() (dials.algorithms.refinement.engine.adaptlstbx method)": [[14, "dials.algorithms.refinement.engine.AdaptLstbx.step_forward"]], "step_threshold (dials.algorithms.refinement.engine.gaussnewtoniterations attribute)": [[14, "dials.algorithms.refinement.engine.GaussNewtonIterations.step_threshold"]], "tau (dials.algorithms.refinement.engine.levenbergmarquardtiterations attribute)": [[14, "dials.algorithms.refinement.engine.LevenbergMarquardtIterations.tau"]], "test_for_termination() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.test_for_termination"]], "test_objective_increasing_but_not_nref() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.test_objective_increasing_but_not_nref"]], "test_rmsd_convergence() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.test_rmsd_convergence"]], "to_json_file() (dials.algorithms.refinement.engine.journal method)": [[14, "dials.algorithms.refinement.engine.Journal.to_json_file"]], "update_journal() (dials.algorithms.refinement.engine.refinery method)": [[14, "dials.algorithms.refinement.engine.Refinery.update_journal"]], "update_matches() (dials.algorithms.refinement.target.target method)": [[14, "dials.algorithms.refinement.target.Target.update_matches"]], "arrayscalingmodel (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel"]], "dosedecay (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.DoseDecay"]], "kbscalingmodel (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel"]], "normdevoutlierrejection (class in dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.NormDevOutlierRejection"]], "outlierrejectionbase (class in dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase"]], "physicalscalingmodel (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel"]], "scalingmodelbase (class in dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase"]], "simplenormdevoutlierrejection (class in dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.SimpleNormDevOutlierRejection"]], "targetedoutlierrejection (class in dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.TargetedOutlierRejection"]], "__init__() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.__init__"]], "__init__() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.__init__"]], "__init__() (dials.algorithms.scaling.model.model.kbscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.__init__"]], "__init__() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.__init__"]], "__init__() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.__init__"]], "__init__() (dials.algorithms.scaling.outlier_rejection.normdevoutlierrejection method)": [[15, "dials.algorithms.scaling.outlier_rejection.NormDevOutlierRejection.__init__"]], "__init__() (dials.algorithms.scaling.outlier_rejection.outlierrejectionbase method)": [[15, "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase.__init__"]], "__init__() (dials.algorithms.scaling.outlier_rejection.simplenormdevoutlierrejection method)": [[15, "dials.algorithms.scaling.outlier_rejection.SimpleNormDevOutlierRejection.__init__"]], "__init__() (dials.algorithms.scaling.outlier_rejection.targetedoutlierrejection method)": [[15, "dials.algorithms.scaling.outlier_rejection.TargetedOutlierRejection.__init__"]], "calc_n_param_from_bins() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.calc_n_param_from_bins"]], "calculate_new_offset() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.calculate_new_offset"]], "components (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.components"]], "configdict (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.configdict"]], "configure_components() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.configure_components"]], "configure_components() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.configure_components"]], "configure_components() (dials.algorithms.scaling.model.model.kbscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.configure_components"]], "configure_components() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.configure_components"]], "configure_components() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.configure_components"]], "consecutive_refinement_order (dials.algorithms.scaling.model.model.arrayscalingmodel property)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.consecutive_refinement_order"]], "consecutive_refinement_order (dials.algorithms.scaling.model.model.dosedecay property)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.consecutive_refinement_order"]], "consecutive_refinement_order (dials.algorithms.scaling.model.model.kbscalingmodel property)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.consecutive_refinement_order"]], "consecutive_refinement_order (dials.algorithms.scaling.model.model.physicalscalingmodel property)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.consecutive_refinement_order"]], "consecutive_refinement_order() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.consecutive_refinement_order"]], "determine_esq_outlier_index_arrays() (in module dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.determine_Esq_outlier_index_arrays"]], "determine_auto_absorption_params() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.determine_auto_absorption_params"]], "determine_outlier_index_arrays() (in module dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.determine_outlier_index_arrays"]], "dials.algorithms.scaling": [[15, "module-dials.algorithms.scaling"]], "dials.algorithms.scaling.model.model": [[15, "module-dials.algorithms.scaling.model.model"]], "dials.algorithms.scaling.outlier_rejection": [[15, "module-dials.algorithms.scaling.outlier_rejection"]], "error_model (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.error_model"]], "final_outlier_arrays (dials.algorithms.scaling.outlier_rejection.outlierrejectionbase attribute)": [[15, "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase.final_outlier_arrays"]], "fix_initial_parameter() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.fix_initial_parameter"]], "fix_initial_parameter() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.fix_initial_parameter"]], "fix_initial_parameter() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.fix_initial_parameter"]], "fixed_components (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.fixed_components"]], "from_data() (dials.algorithms.scaling.model.model.arrayscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.from_data"]], "from_data() (dials.algorithms.scaling.model.model.dosedecay class method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.from_data"]], "from_data() (dials.algorithms.scaling.model.model.kbscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.from_data"]], "from_data() (dials.algorithms.scaling.model.model.physicalscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.from_data"]], "from_data() (dials.algorithms.scaling.model.model.scalingmodelbase class method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.from_data"]], "from_dict() (dials.algorithms.scaling.model.model.arrayscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.from_dict"]], "from_dict() (dials.algorithms.scaling.model.model.dosedecay class method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.from_dict"]], "from_dict() (dials.algorithms.scaling.model.model.kbscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.from_dict"]], "from_dict() (dials.algorithms.scaling.model.model.physicalscalingmodel class method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.from_dict"]], "from_dict() (dials.algorithms.scaling.model.model.scalingmodelbase class method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.from_dict"]], "get_shared_components() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.get_shared_components"]], "get_shared_components() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.get_shared_components"]], "get_shared_components() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.get_shared_components"]], "id_ (dials.algorithms.scaling.model.model.arrayscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.id_"]], "id_ (dials.algorithms.scaling.model.model.dosedecay attribute)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.id_"]], "id_ (dials.algorithms.scaling.model.model.kbscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.id_"]], "id_ (dials.algorithms.scaling.model.model.physicalscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.id_"]], "id_ (dials.algorithms.scaling.model.model.scalingmodelbase attribute)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.id_"]], "initialise_smooth_input() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.initialise_smooth_input"]], "is_scaled (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.is_scaled"]], "limit_image_range() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.limit_image_range"]], "limit_image_range() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.limit_image_range"]], "limit_image_range() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.limit_image_range"]], "limit_image_range() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.limit_image_range"]], "load_error_model() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.load_error_model"]], "make_combined_plots() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.make_combined_plots"]], "n_params (dials.algorithms.scaling.model.model.scalingmodelbase property)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.n_params"]], "phil_scope (dials.algorithms.scaling.model.model.arrayscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.phil_scope"]], "phil_scope (dials.algorithms.scaling.model.model.dosedecay attribute)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.phil_scope"]], "phil_scope (dials.algorithms.scaling.model.model.kbscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.phil_scope"]], "phil_scope (dials.algorithms.scaling.model.model.physicalscalingmodel attribute)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.phil_scope"]], "plot_model_components() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.plot_model_components"]], "plot_model_components() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.plot_model_components"]], "plot_model_components() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.plot_model_components"]], "plot_model_components() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.plot_model_components"]], "plot_scaling_models() (in module dials.algorithms.scaling.model.model)": [[15, "dials.algorithms.scaling.model.model.plot_scaling_models"]], "record_intensity_combination_imid() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.record_intensity_combination_Imid"]], "reject_outliers() (in module dials.algorithms.scaling.outlier_rejection)": [[15, "dials.algorithms.scaling.outlier_rejection.reject_outliers"]], "run() (dials.algorithms.scaling.outlier_rejection.outlierrejectionbase method)": [[15, "dials.algorithms.scaling.outlier_rejection.OutlierRejectionBase.run"]], "set_error_model() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.set_error_model"]], "set_scaling_model_as_scaled() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.set_scaling_model_as_scaled"]], "set_scaling_model_as_unscaled() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.set_scaling_model_as_unscaled"]], "set_valid_image_range() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.set_valid_image_range"]], "to_dict() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.to_dict"]], "update() (dials.algorithms.scaling.model.model.arrayscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.ArrayScalingModel.update"]], "update() (dials.algorithms.scaling.model.model.dosedecay method)": [[15, "dials.algorithms.scaling.model.model.DoseDecay.update"]], "update() (dials.algorithms.scaling.model.model.kbscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.KBScalingModel.update"]], "update() (dials.algorithms.scaling.model.model.physicalscalingmodel method)": [[15, "dials.algorithms.scaling.model.model.PhysicalScalingModel.update"]], "update() (dials.algorithms.scaling.model.model.scalingmodelbase method)": [[15, "dials.algorithms.scaling.model.model.ScalingModelBase.update"]], "backgroundgradientfilter (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.BackgroundGradientFilter"]], "extractpixelsfromimage (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage"]], "extractpixelsfromimage2dnoshoeboxes (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage2DNoShoeboxes"]], "extractspots (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.ExtractSpots"]], "extractspotsparalleltask (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.ExtractSpotsParallelTask"]], "filterrunner (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.FilterRunner"]], "peakcentroiddistancefilter (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.PeakCentroidDistanceFilter"]], "spotdensityfilter (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.SpotDensityFilter"]], "spotfinder (class in dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.SpotFinder"]], "spotfinderfactory (class in dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory"]], "__init__() (dials.algorithms.spot_finding.factory.backgroundgradientfilter method)": [[16, "dials.algorithms.spot_finding.factory.BackgroundGradientFilter.__init__"]], "__init__() (dials.algorithms.spot_finding.factory.filterrunner method)": [[16, "dials.algorithms.spot_finding.factory.FilterRunner.__init__"]], "__init__() (dials.algorithms.spot_finding.factory.peakcentroiddistancefilter method)": [[16, "dials.algorithms.spot_finding.factory.PeakCentroidDistanceFilter.__init__"]], "__init__() (dials.algorithms.spot_finding.factory.spotdensityfilter method)": [[16, "dials.algorithms.spot_finding.factory.SpotDensityFilter.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.extractpixelsfromimage method)": [[16, "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.extractpixelsfromimage2dnoshoeboxes method)": [[16, "dials.algorithms.spot_finding.finder.ExtractPixelsFromImage2DNoShoeboxes.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.extractspots method)": [[16, "dials.algorithms.spot_finding.finder.ExtractSpots.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.extractspotsparalleltask method)": [[16, "dials.algorithms.spot_finding.finder.ExtractSpotsParallelTask.__init__"]], "__init__() (dials.algorithms.spot_finding.finder.spotfinder method)": [[16, "dials.algorithms.spot_finding.finder.SpotFinder.__init__"]], "check_flags() (dials.algorithms.spot_finding.factory.filterrunner method)": [[16, "dials.algorithms.spot_finding.factory.FilterRunner.check_flags"]], "configure_filter() (dials.algorithms.spot_finding.factory.spotfinderfactory static method)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory.configure_filter"]], "configure_threshold() (dials.algorithms.spot_finding.factory.spotfinderfactory static method)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory.configure_threshold"]], "dials.algorithms.spot_finding.factory": [[16, "module-dials.algorithms.spot_finding.factory"]], "dials.algorithms.spot_finding.finder": [[16, "module-dials.algorithms.spot_finding.finder"]], "find_spots() (dials.algorithms.spot_finding.finder.spotfinder method)": [[16, "dials.algorithms.spot_finding.finder.SpotFinder.find_spots"]], "from_parameters() (dials.algorithms.spot_finding.factory.spotfinderfactory static method)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory.from_parameters"]], "generate_phil_scope() (in module dials.algorithms.spot_finding.factory)": [[16, "dials.algorithms.spot_finding.factory.generate_phil_scope"]], "load_image() (dials.algorithms.spot_finding.factory.spotfinderfactory static method)": [[16, "dials.algorithms.spot_finding.factory.SpotFinderFactory.load_image"]], "pixel_list_to_reflection_table() (in module dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.pixel_list_to_reflection_table"]], "pixel_list_to_shoeboxes() (in module dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.pixel_list_to_shoeboxes"]], "run() (dials.algorithms.spot_finding.factory.backgroundgradientfilter method)": [[16, "dials.algorithms.spot_finding.factory.BackgroundGradientFilter.run"]], "run() (dials.algorithms.spot_finding.factory.peakcentroiddistancefilter method)": [[16, "dials.algorithms.spot_finding.factory.PeakCentroidDistanceFilter.run"]], "run() (dials.algorithms.spot_finding.factory.spotdensityfilter method)": [[16, "dials.algorithms.spot_finding.factory.SpotDensityFilter.run"]], "shoeboxes_to_reflection_table() (in module dials.algorithms.spot_finding.finder)": [[16, "dials.algorithms.spot_finding.finder.shoeboxes_to_reflection_table"]], "reflectionpredictor (class in dials.algorithms.spot_prediction.reflection_predictor)": [[17, "dials.algorithms.spot_prediction.reflection_predictor.ReflectionPredictor"]], "__init__() (dials.algorithms.spot_prediction.reflection_predictor.reflectionpredictor method)": [[17, "dials.algorithms.spot_prediction.reflection_predictor.ReflectionPredictor.__init__"]], "dials.algorithms.spot_prediction.reflection_predictor": [[17, "module-dials.algorithms.spot_prediction.reflection_predictor"]], "predictor() (dials.algorithms.spot_prediction.reflection_predictor.reflectionpredictor method)": [[17, "dials.algorithms.spot_prediction.reflection_predictor.ReflectionPredictor.predictor"]], "correlationcoefficientaccumulator (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator"]], "cosymanalysis (class in dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis"]], "lauegroupanalysis (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis"]], "scorecorrelationcoefficient (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient"]], "scoresubgroup (class in dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.ScoreSubGroup"]], "scoresubgroup (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSubGroup"]], "scoresymmetryelement (class in dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.ScoreSymmetryElement"]], "scoresymmetryelement (class in dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSymmetryElement"]], "symmetryanalysis (class in dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis"]], "target (class in dials.algorithms.symmetry.cosym.target)": [[18, "dials.algorithms.symmetry.cosym.target.Target"]], "__init__() (dials.algorithms.symmetry.cosym.cosymanalysis method)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.scoresubgroup method)": [[18, "dials.algorithms.symmetry.cosym.ScoreSubGroup.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.scoresymmetryelement method)": [[18, "dials.algorithms.symmetry.cosym.ScoreSymmetryElement.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.symmetryanalysis method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.__init__"]], "__init__() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.lauegroupanalysis method)": [[18, "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.scorecorrelationcoefficient method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.scoresubgroup method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSubGroup.__init__"]], "__init__() (dials.algorithms.symmetry.laue_group.scoresymmetryelement method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSymmetryElement.__init__"]], "__init__() (dials.algorithms.symmetry.symmetry_base method)": [[18, "dials.algorithms.symmetry.symmetry_base.__init__"]], "accumulate() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.accumulate"]], "as_dict() (dials.algorithms.symmetry.cosym.cosymanalysis method)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis.as_dict"]], "as_dict() (dials.algorithms.symmetry.cosym.scoresubgroup method)": [[18, "dials.algorithms.symmetry.cosym.ScoreSubGroup.as_dict"]], "as_dict() (dials.algorithms.symmetry.cosym.scoresymmetryelement method)": [[18, "dials.algorithms.symmetry.cosym.ScoreSymmetryElement.as_dict"]], "as_dict() (dials.algorithms.symmetry.cosym.symmetryanalysis method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.as_dict"]], "as_dict() (dials.algorithms.symmetry.laue_group.lauegroupanalysis method)": [[18, "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis.as_dict"]], "as_dict() (dials.algorithms.symmetry.laue_group.scoresubgroup method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSubGroup.as_dict"]], "as_dict() (dials.algorithms.symmetry.laue_group.scoresymmetryelement method)": [[18, "dials.algorithms.symmetry.laue_group.ScoreSymmetryElement.as_dict"]], "as_json() (dials.algorithms.symmetry.cosym.cosymanalysis method)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis.as_json"]], "as_json() (dials.algorithms.symmetry.laue_group.lauegroupanalysis method)": [[18, "dials.algorithms.symmetry.laue_group.LaueGroupAnalysis.as_json"]], "callback_after_step() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.callback_after_step"]], "coefficient() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.coefficient"]], "compute_functional() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.compute_functional"]], "compute_functional_and_gradients() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.compute_functional_and_gradients"]], "compute_functional_gradients_and_curvatures() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.compute_functional_gradients_and_curvatures"]], "compute_functional_gradients_diag() (dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs method)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs.compute_functional_gradients_diag"]], "compute_gradients() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.compute_gradients"]], "compute_gradients_fd() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.compute_gradients_fd"]], "curvatures() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.curvatures"]], "curvatures_fd() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.curvatures_fd"]], "denominator() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.denominator"]], "determine_reindex_operator_against_reference() (in module dials.algorithms.symmetry.reindex_to_reference)": [[18, "dials.algorithms.symmetry.reindex_to_reference.determine_reindex_operator_against_reference"]], "dials.algorithms.symmetry": [[18, "module-dials.algorithms.symmetry"]], "dials.algorithms.symmetry.cosym": [[18, "module-dials.algorithms.symmetry.cosym"]], "dials.algorithms.symmetry.cosym.engine": [[18, "module-dials.algorithms.symmetry.cosym.engine"]], "dials.algorithms.symmetry.cosym.target": [[18, "module-dials.algorithms.symmetry.cosym.target"]], "dials.algorithms.symmetry.laue_group": [[18, "module-dials.algorithms.symmetry.laue_group"]], "dials.algorithms.symmetry.reindex_to_reference": [[18, "module-dials.algorithms.symmetry.reindex_to_reference"]], "dim (dials.algorithms.symmetry.cosym.target.target attribute)": [[18, "dials.algorithms.symmetry.cosym.target.Target.dim"]], "extract_reference_intensities() (in module dials.algorithms.symmetry.cosym)": [[18, "dials.algorithms.symmetry.cosym.extract_reference_intensities"]], "kernel_normalisation() (dials.algorithms.symmetry.symmetry_base static method)": [[18, "dials.algorithms.symmetry.symmetry_base.kernel_normalisation"]], "lbfgs_with_curvs (class in dials.algorithms.symmetry.cosym.engine)": [[18, "dials.algorithms.symmetry.cosym.engine.lbfgs_with_curvs"]], "minimize_scipy() (in module dials.algorithms.symmetry.cosym.engine)": [[18, "dials.algorithms.symmetry.cosym.engine.minimize_scipy"]], "minimize_scitbx_lbfgs() (in module dials.algorithms.symmetry.cosym.engine)": [[18, "dials.algorithms.symmetry.cosym.engine.minimize_scitbx_lbfgs"]], "ml_aniso_normalisation() (dials.algorithms.symmetry.symmetry_base static method)": [[18, "dials.algorithms.symmetry.symmetry_base.ml_aniso_normalisation"]], "ml_iso_normalisation() (dials.algorithms.symmetry.symmetry_base static method)": [[18, "dials.algorithms.symmetry.symmetry_base.ml_iso_normalisation"]], "n() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.n"]], "numerator() (dials.algorithms.symmetry.laue_group.correlationcoefficientaccumulator method)": [[18, "dials.algorithms.symmetry.laue_group.CorrelationCoefficientAccumulator.numerator"]], "p_cc_given_not_s (dials.algorithms.symmetry.laue_group.scorecorrelationcoefficient property)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient.p_cc_given_not_s"]], "p_cc_given_s (dials.algorithms.symmetry.laue_group.scorecorrelationcoefficient property)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient.p_cc_given_s"]], "p_s_given_cc (dials.algorithms.symmetry.laue_group.scorecorrelationcoefficient property)": [[18, "dials.algorithms.symmetry.laue_group.ScoreCorrelationCoefficient.p_s_given_cc"]], "resolution_filter_from_array() (in module dials.algorithms.symmetry)": [[18, "dials.algorithms.symmetry.resolution_filter_from_array"]], "resolution_filter_from_reflections_experiments() (in module dials.algorithms.symmetry)": [[18, "dials.algorithms.symmetry.resolution_filter_from_reflections_experiments"]], "run() (dials.algorithms.symmetry.cosym.cosymanalysis method)": [[18, "dials.algorithms.symmetry.cosym.CosymAnalysis.run"]], "set_dimensions() (dials.algorithms.symmetry.cosym.target.target method)": [[18, "dials.algorithms.symmetry.cosym.target.Target.set_dimensions"]], "stars (dials.algorithms.symmetry.cosym.scoresubgroup property)": [[18, "dials.algorithms.symmetry.cosym.ScoreSubGroup.stars"]], "stars (dials.algorithms.symmetry.cosym.scoresymmetryelement property)": [[18, "dials.algorithms.symmetry.cosym.ScoreSymmetryElement.stars"]], "subgroups_table() (dials.algorithms.symmetry.cosym.symmetryanalysis static method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.subgroups_table"]], "summary_table() (dials.algorithms.symmetry.cosym.symmetryanalysis static method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.summary_table"]], "sym_ops_table() (dials.algorithms.symmetry.cosym.symmetryanalysis static method)": [[18, "dials.algorithms.symmetry.cosym.SymmetryAnalysis.sym_ops_table"]], "symmetry_base (class in dials.algorithms.symmetry)": [[18, "dials.algorithms.symmetry.symmetry_base"]], "trunccauchy_pdf() (in module dials.algorithms.symmetry.laue_group)": [[18, "dials.algorithms.symmetry.laue_group.trunccauchy_pdf"]], "dials.array_family.flex": [[20, "module-dials.array_family.flex"]], "beamfactory (class in dxtbx.model.beam)": [[21, "dxtbx.model.beam.BeamFactory"]], "complex() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.complex"]], "dxtbx.model.beam": [[21, "module-dxtbx.model.beam"]], "from_dict() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.from_dict"]], "from_phil() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.from_phil"]], "imgcif() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.imgCIF"]], "imgcif_h() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.imgCIF_H"]], "make_beam() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.make_beam"]], "make_polarized_beam() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.make_polarized_beam"]], "make_polychromatic_beam() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.make_polychromatic_beam"]], "simple() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.simple"]], "simple_directional() (dxtbx.model.beam.beamfactory static method)": [[21, "dxtbx.model.beam.BeamFactory.simple_directional"]], "crystal (class in dxtbx.model)": [[22, "dxtbx.model.Crystal"]], "crystalfactory (class in dxtbx.model.crystal)": [[22, "dxtbx.model.crystal.CrystalFactory"]], "mosaiccrystalkabsch2010 (class in dxtbx.model)": [[22, "dxtbx.model.MosaicCrystalKabsch2010"]], "mosaiccrystalsauter2014 (class in dxtbx.model)": [[22, "dxtbx.model.MosaicCrystalSauter2014"]], "__init__() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.__init__"]], "__init__() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.__init__"]], "__init__() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.__init__"]], "as_str() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.as_str"]], "as_str() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.as_str"]], "as_str() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.as_str"]], "dxtbx.model.crystal": [[22, "module-dxtbx.model.crystal"]], "from_dict() (dxtbx.model.crystal static method)": [[22, "dxtbx.model.Crystal.from_dict"]], "from_dict() (dxtbx.model.mosaiccrystalkabsch2010 class method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.from_dict"]], "from_dict() (dxtbx.model.mosaiccrystalsauter2014 class method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.from_dict"]], "from_dict() (dxtbx.model.crystal.crystalfactory static method)": [[22, "dxtbx.model.crystal.CrystalFactory.from_dict"]], "from_mosflm_matrix() (dxtbx.model.crystal.crystalfactory static method)": [[22, "dxtbx.model.crystal.CrystalFactory.from_mosflm_matrix"]], "get_a_as_sqr() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.get_A_as_sqr"]], "get_a_inverse_as_sqr() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.get_A_inverse_as_sqr"]], "get_crystal_symmetry() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.get_crystal_symmetry"]], "get_domain_size_ang() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.get_domain_size_ang"]], "get_half_mosaicity_deg() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.get_half_mosaicity_deg"]], "get_mosaicity() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.get_mosaicity"]], "is_similar_to() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.is_similar_to"]], "is_similar_to() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.is_similar_to"]], "set_domain_size_ang() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.set_domain_size_ang"]], "set_half_mosaicity_deg() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.set_half_mosaicity_deg"]], "set_mosaicity() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.set_mosaicity"]], "show() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.show"]], "to_dict() (dxtbx.model.crystal method)": [[22, "dxtbx.model.Crystal.to_dict"]], "to_dict() (dxtbx.model.mosaiccrystalkabsch2010 method)": [[22, "dxtbx.model.MosaicCrystalKabsch2010.to_dict"]], "to_dict() (dxtbx.model.mosaiccrystalsauter2014 method)": [[22, "dxtbx.model.MosaicCrystalSauter2014.to_dict"]], "detector (class in dxtbx.model)": [[23, "dxtbx.model.Detector"]], "detectorfactory (class in dxtbx.model.detector)": [[23, "dxtbx.model.detector.DetectorFactory"]], "__init__() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.__init__"]], "add_group() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.add_group"]], "add_panel() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.add_panel"]], "complex() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.complex"]], "dxtbx.model.detector": [[23, "module-dxtbx.model.detector"]], "from_dict() (dxtbx.model.detector static method)": [[23, "dxtbx.model.Detector.from_dict"]], "from_dict() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.from_dict"]], "from_phil() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.from_phil"]], "generate_from_phil() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.generate_from_phil"]], "get_max_inscribed_resolution() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.get_max_inscribed_resolution"]], "get_max_resolution() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.get_max_resolution"]], "get_names() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.get_names"]], "get_panel_intersection() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.get_panel_intersection"]], "get_ray_intersection() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.get_ray_intersection"]], "has_projection_2d() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.has_projection_2d"]], "hierarchy() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.hierarchy"]], "imgcif() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.imgCIF"]], "imgcif_h() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.imgCIF_H"]], "is_similar_to() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.is_similar_to"]], "iter_levelorder() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.iter_levelorder"]], "iter_panels() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.iter_panels"]], "iter_preorder() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.iter_preorder"]], "make_detector() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.make_detector"]], "merge_panel_scope_extracts_by_id() (in module dxtbx.model.detector)": [[23, "dxtbx.model.detector.merge_panel_scope_extracts_by_id"]], "overwrite_from_phil() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.overwrite_from_phil"]], "rotate_around_origin() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.rotate_around_origin"]], "sensor() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.sensor"]], "simple() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.simple"]], "to_dict() (dxtbx.model.detector method)": [[23, "dxtbx.model.Detector.to_dict"]], "two_theta() (dxtbx.model.detector.detectorfactory static method)": [[23, "dxtbx.model.detector.DetectorFactory.two_theta"]], "beamcomparison (class in dxtbx.model.experiment_list)": [[24, "dxtbx.model.experiment_list.BeamComparison"]], "detectorcomparison (class in dxtbx.model.experiment_list)": [[24, "dxtbx.model.experiment_list.DetectorComparison"]], "experimentlist (class in dxtbx.model)": [[24, "dxtbx.model.ExperimentList"]], "experimentlistfactory (class in dxtbx.model.experiment_list)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory"]], "goniometercomparison (class in dxtbx.model.experiment_list)": [[24, "dxtbx.model.experiment_list.GoniometerComparison"]], "__init__() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.__init__"]], "__init__() (dxtbx.model.experiment_list.beamcomparison method)": [[24, "dxtbx.model.experiment_list.BeamComparison.__init__"]], "__init__() (dxtbx.model.experiment_list.detectorcomparison method)": [[24, "dxtbx.model.experiment_list.DetectorComparison.__init__"]], "__init__() (dxtbx.model.experiment_list.goniometercomparison method)": [[24, "dxtbx.model.experiment_list.GoniometerComparison.__init__"]], "all_sequences() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.all_sequences"]], "all_stills() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.all_stills"]], "append() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.append"]], "as_file() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.as_file"]], "as_json() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.as_json"]], "beams() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.beams"]], "change_basis() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.change_basis"]], "clear() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.clear"]], "crystals() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.crystals"]], "detectors() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.detectors"]], "dxtbx.model.experiment_list": [[24, "module-dxtbx.model.experiment_list"]], "empty() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.empty"]], "extend() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.extend"]], "find() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.find"]], "from_args() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_args"]], "from_dict() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_dict"]], "from_file() (dxtbx.model.experimentlist static method)": [[24, "dxtbx.model.ExperimentList.from_file"]], "from_filenames() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_filenames"]], "from_imageset_and_crystal() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_imageset_and_crystal"]], "from_json() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_json"]], "from_json_file() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_json_file"]], "from_pickle_file() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_pickle_file"]], "from_sequence_and_crystal() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_sequence_and_crystal"]], "from_serialized_format() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_serialized_format"]], "from_stills_and_crystal() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_stills_and_crystal"]], "from_templates() (dxtbx.model.experimentlist static method)": [[24, "dxtbx.model.ExperimentList.from_templates"]], "from_templates() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_templates"]], "from_xds() (dxtbx.model.experiment_list.experimentlistfactory static method)": [[24, "dxtbx.model.experiment_list.ExperimentListFactory.from_xds"]], "goniometers() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.goniometers"]], "identifiers() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.identifiers"]], "imagesets() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.imagesets"]], "indices() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.indices"]], "is_consistent() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.is_consistent"]], "nullify_all_single_file_reader_format_instances() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.nullify_all_single_file_reader_format_instances"]], "profiles() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.profiles"]], "remove_on_experiment_identifiers() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.remove_on_experiment_identifiers"]], "replace() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.replace"]], "scaling_models() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.scaling_models"]], "scans() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.scans"]], "select_on_experiment_identifiers() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.select_on_experiment_identifiers"]], "to_dict() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.to_dict"]], "where() (dxtbx.model.experimentlist method)": [[24, "dxtbx.model.ExperimentList.where"]], "goniometer (class in dxtbx.model.goniometer)": [[25, "dxtbx.model.goniometer.Goniometer"]], "goniometerfactory (class in dxtbx.model.goniometer)": [[25, "dxtbx.model.goniometer.GoniometerFactory"]], "kappagoniometer (class in dxtbx.model.goniometer)": [[25, "dxtbx.model.goniometer.KappaGoniometer"]], "multiaxisgoniometer (class in dxtbx.model.goniometer)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer"]], "__init__() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.__init__"]], "__init__() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.__init__"]], "__init__() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.__init__"]], "dxtbx.model.goniometer": [[25, "module-dxtbx.model.goniometer"]], "from_dict() (dxtbx.model.goniometer.goniometer static method)": [[25, "dxtbx.model.goniometer.Goniometer.from_dict"]], "from_dict() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.from_dict"]], "from_dict() (dxtbx.model.goniometer.multiaxisgoniometer static method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.from_dict"]], "from_phil() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.from_phil"]], "get_alpha_angle() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_alpha_angle"]], "get_angles() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.get_angles"]], "get_axes() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.get_axes"]], "get_direction() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_direction"]], "get_fixed_rotation() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_fixed_rotation"]], "get_kappa_angle() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_kappa_angle"]], "get_kappa_axis() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_kappa_axis"]], "get_names() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.get_names"]], "get_num_scan_points() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_num_scan_points"]], "get_omega_angle() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_omega_angle"]], "get_omega_axis() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_omega_axis"]], "get_phi_angle() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_phi_angle"]], "get_phi_axis() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_phi_axis"]], "get_rotation_axis() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_rotation_axis"]], "get_rotation_axis_datum() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_rotation_axis_datum"]], "get_scan_axis() (dxtbx.model.goniometer.kappagoniometer method)": [[25, "dxtbx.model.goniometer.KappaGoniometer.get_scan_axis"]], "get_scan_axis() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.get_scan_axis"]], "get_setting_rotation() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_setting_rotation"]], "get_setting_rotation_at_scan_point() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_setting_rotation_at_scan_point"]], "get_setting_rotation_at_scan_points() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.get_setting_rotation_at_scan_points"]], "imgcif() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.imgCIF"]], "imgcif_h() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.imgCIF_H"]], "is_similar_to() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.is_similar_to"]], "kappa() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.kappa"]], "known_axis() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.known_axis"]], "make_goniometer() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.make_goniometer"]], "make_kappa_goniometer() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.make_kappa_goniometer"]], "make_multi_axis_goniometer() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.make_multi_axis_goniometer"]], "multi_axis() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.multi_axis"]], "multi_axis_goniometer_from_phil() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.multi_axis_goniometer_from_phil"]], "num_scan_points (dxtbx.model.goniometer.goniometer property)": [[25, "dxtbx.model.goniometer.Goniometer.num_scan_points"]], "reset_scan_points() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.reset_scan_points"]], "rotate_around_origin() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.rotate_around_origin"]], "set_angles() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.set_angles"]], "set_axes() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.set_axes"]], "set_fixed_rotation() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.set_fixed_rotation"]], "set_rotation_axis() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.set_rotation_axis"]], "set_rotation_axis_datum() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.set_rotation_axis_datum"]], "set_setting_rotation() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.set_setting_rotation"]], "set_setting_rotation_at_scan_points() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.set_setting_rotation_at_scan_points"]], "single_axis() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.single_axis"]], "single_axis_goniometer_from_phil() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.single_axis_goniometer_from_phil"]], "single_axis_reverse() (dxtbx.model.goniometer.goniometerfactory static method)": [[25, "dxtbx.model.goniometer.GoniometerFactory.single_axis_reverse"]], "to_dict() (dxtbx.model.goniometer.goniometer method)": [[25, "dxtbx.model.goniometer.Goniometer.to_dict"]], "to_dict() (dxtbx.model.goniometer.multiaxisgoniometer method)": [[25, "dxtbx.model.goniometer.MultiAxisGoniometer.to_dict"]], "externallookup (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ExternalLookup"]], "externallookupitembool (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ExternalLookupItemBool"]], "externallookupitemdouble (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ExternalLookupItemDouble"]], "imagegrid (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ImageGrid"]], "imagesequence (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ImageSequence"]], "imageset (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ImageSet"]], "imagesetdata (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ImageSetData"]], "imagesetfactory (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ImageSetFactory"]], "imagesetlazy (class in dxtbx.imageset)": [[26, "dxtbx.imageset.ImageSetLazy"]], "memreader (class in dxtbx.imageset)": [[26, "dxtbx.imageset.MemReader"]], "__init__() (dxtbx.imageset.externallookup method)": [[26, "dxtbx.imageset.ExternalLookup.__init__"]], "__init__() (dxtbx.imageset.externallookupitembool method)": [[26, "dxtbx.imageset.ExternalLookupItemBool.__init__"]], "__init__() (dxtbx.imageset.externallookupitemdouble method)": [[26, "dxtbx.imageset.ExternalLookupItemDouble.__init__"]], "__init__() (dxtbx.imageset.imagegrid method)": [[26, "dxtbx.imageset.ImageGrid.__init__"]], "__init__() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.__init__"]], "__init__() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.__init__"]], "__init__() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.__init__"]], "__init__() (dxtbx.imageset.memreader method)": [[26, "dxtbx.imageset.MemReader.__init__"]], "as_imageset() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.as_imageset"]], "clear_cache() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.clear_cache"]], "complete_set() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.complete_set"]], "complete_set() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.complete_set"]], "copy() (dxtbx.imageset.memreader method)": [[26, "dxtbx.imageset.MemReader.copy"]], "data (dxtbx.imageset.externallookupitembool property)": [[26, "dxtbx.imageset.ExternalLookupItemBool.data"]], "data (dxtbx.imageset.externallookupitemdouble property)": [[26, "dxtbx.imageset.ExternalLookupItemDouble.data"]], "data() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.data"]], "dx (dxtbx.imageset.externallookup property)": [[26, "dxtbx.imageset.ExternalLookup.dx"]], "dxtbx.imageset": [[26, "module-dxtbx.imageset"]], "dy (dxtbx.imageset.externallookup property)": [[26, "dxtbx.imageset.ExternalLookup.dy"]], "external_lookup (dxtbx.imageset.imageset property)": [[26, "dxtbx.imageset.ImageSet.external_lookup"]], "external_lookup (dxtbx.imageset.imagesetdata property)": [[26, "dxtbx.imageset.ImageSetData.external_lookup"]], "filename (dxtbx.imageset.externallookupitembool property)": [[26, "dxtbx.imageset.ExternalLookupItemBool.filename"]], "filename (dxtbx.imageset.externallookupitemdouble property)": [[26, "dxtbx.imageset.ExternalLookupItemDouble.filename"]], "from_imageset() (dxtbx.imageset.imagegrid static method)": [[26, "dxtbx.imageset.ImageGrid.from_imageset"]], "from_template() (dxtbx.imageset.imagesetfactory static method)": [[26, "dxtbx.imageset.ImageSetFactory.from_template"]], "gain (dxtbx.imageset.externallookup property)": [[26, "dxtbx.imageset.ExternalLookup.gain"]], "get_array_range() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.get_array_range"]], "get_beam() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.get_beam"]], "get_beam() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_beam"]], "get_beam() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_beam"]], "get_beam() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_beam"]], "get_corrected_data() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_corrected_data"]], "get_corrected_data() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_corrected_data"]], "get_data() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_data"]], "get_detector() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.get_detector"]], "get_detector() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_detector"]], "get_detector() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_detector"]], "get_detector() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_detector"]], "get_detectorbase() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_detectorbase"]], "get_format_class() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_format_class"]], "get_format_class() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_format_class"]], "get_gain() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_gain"]], "get_gain() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_gain"]], "get_goniometer() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.get_goniometer"]], "get_goniometer() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_goniometer"]], "get_goniometer() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_goniometer"]], "get_goniometer() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_goniometer"]], "get_grid_size() (dxtbx.imageset.imagegrid method)": [[26, "dxtbx.imageset.ImageGrid.get_grid_size"]], "get_image_identifier() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_image_identifier"]], "get_image_identifier() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_image_identifier"]], "get_mask() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_mask"]], "get_mask() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_mask"]], "get_master_path() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_master_path"]], "get_params() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_params"]], "get_path() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_path"]], "get_path() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_path"]], "get_pedestal() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_pedestal"]], "get_raw_data() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_raw_data"]], "get_scan() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.get_scan"]], "get_scan() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_scan"]], "get_scan() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_scan"]], "get_scan() (dxtbx.imageset.imagesetlazy method)": [[26, "dxtbx.imageset.ImageSetLazy.get_scan"]], "get_spectrum() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_spectrum"]], "get_template() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.get_template"]], "get_template() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_template"]], "get_vendor() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.get_vendor"]], "get_vendortype() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.get_vendortype"]], "has_dynamic_mask() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.has_dynamic_mask"]], "has_single_file_reader() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.has_single_file_reader"]], "identifiers() (dxtbx.imageset.memreader method)": [[26, "dxtbx.imageset.MemReader.identifiers"]], "imageset_from_anyset() (dxtbx.imageset.imagesetfactory static method)": [[26, "dxtbx.imageset.ImageSetFactory.imageset_from_anyset"]], "indices() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.indices"]], "is_marked_for_rejection() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.is_marked_for_rejection"]], "is_marked_for_rejection() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.is_marked_for_rejection"]], "is_single_file_reader() (dxtbx.imageset.memreader static method)": [[26, "dxtbx.imageset.MemReader.is_single_file_reader"]], "make_imageset() (dxtbx.imageset.imagesetfactory static method)": [[26, "dxtbx.imageset.ImageSetFactory.make_imageset"]], "make_sequence() (dxtbx.imageset.imagesetfactory static method)": [[26, "dxtbx.imageset.ImageSetFactory.make_sequence"]], "mark_for_rejection() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.mark_for_rejection"]], "mark_for_rejection() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.mark_for_rejection"]], "mask (dxtbx.imageset.externallookup property)": [[26, "dxtbx.imageset.ExternalLookup.mask"]], "masker() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.masker"]], "masker() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.masker"]], "master_path() (dxtbx.imageset.memreader static method)": [[26, "dxtbx.imageset.MemReader.master_path"]], "new() (dxtbx.imageset.imagesetfactory static method)": [[26, "dxtbx.imageset.ImageSetFactory.new"]], "params() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.params"]], "partial_data() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.partial_data"]], "partial_set() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.partial_set"]], "partial_set() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.partial_set"]], "paths() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.paths"]], "paths() (dxtbx.imageset.memreader method)": [[26, "dxtbx.imageset.MemReader.paths"]], "pedestal (dxtbx.imageset.externallookup property)": [[26, "dxtbx.imageset.ExternalLookup.pedestal"]], "read() (dxtbx.imageset.memreader method)": [[26, "dxtbx.imageset.MemReader.read"]], "reader() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.reader"]], "reader() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.reader"]], "set_beam() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.set_beam"]], "set_beam() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.set_beam"]], "set_beam() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_beam"]], "set_detector() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.set_detector"]], "set_detector() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.set_detector"]], "set_detector() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_detector"]], "set_format_class() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_format_class"]], "set_goniometer() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.set_goniometer"]], "set_goniometer() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.set_goniometer"]], "set_goniometer() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_goniometer"]], "set_params() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_params"]], "set_scan() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.set_scan"]], "set_scan() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.set_scan"]], "set_scan() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_scan"]], "set_template() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_template"]], "set_vendor() (dxtbx.imageset.imagesetdata method)": [[26, "dxtbx.imageset.ImageSetData.set_vendor"]], "size() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.size"]], "update_detector_px_mm_data() (dxtbx.imageset.imagesequence method)": [[26, "dxtbx.imageset.ImageSequence.update_detector_px_mm_data"]], "update_detector_px_mm_data() (dxtbx.imageset.imageset method)": [[26, "dxtbx.imageset.ImageSet.update_detector_px_mm_data"]], "profilemodelfactory (class in dxtbx.model.profile)": [[28, "dxtbx.model.profile.ProfileModelFactory"]], "dxtbx.model.profile": [[28, "module-dxtbx.model.profile"]], "from_dict() (dxtbx.model.profile.profilemodelfactory static method)": [[28, "dxtbx.model.profile.ProfileModelFactory.from_dict"]], "scanfactory (class in dxtbx.model.scan)": [[29, "dxtbx.model.scan.ScanFactory"]], "add() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.add"]], "dxtbx.model.scan": [[29, "module-dxtbx.model.scan"]], "from_dict() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.from_dict"]], "from_phil() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.from_phil"]], "imgcif() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.imgCIF"]], "imgcif_h() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.imgCIF_H"]], "make_scan() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.make_scan"]], "search() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.search"]], "single_file() (dxtbx.model.scan.scanfactory static method)": [[29, "dxtbx.model.scan.ScanFactory.single_file"]], "xds_inp() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.XDS_INP"]], "__init__() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.__init__"]], "basic_imageset_from_dict() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.basic_imageset_from_dict"]], "basic_imageset_to_dict() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.basic_imageset_to_dict"]], "crystal() (in module dxtbx.serialize.load)": [[30, "dxtbx.serialize.load.crystal"]], "dxtbx.serialize.imageset": [[30, "module-dxtbx.serialize.imageset"]], "dxtbx.serialize.load": [[30, "module-dxtbx.serialize.load"]], "dxtbx.serialize.xds": [[30, "module-dxtbx.serialize.xds"]], "experiment_list() (in module dxtbx.serialize.load)": [[30, "dxtbx.serialize.load.experiment_list"]], "filename_or_none() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.filename_or_none"]], "filename_to_absolute() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.filename_to_absolute"]], "get_beam() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.get_beam"]], "get_detector() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.get_detector"]], "get_goniometer() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.get_goniometer"]], "get_scan() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.get_scan"]], "get_template() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.get_template"]], "imagesequence_from_dict() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.imagesequence_from_dict"]], "imagesequence_to_dict() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.imagesequence_to_dict"]], "imageset() (in module dxtbx.serialize.load)": [[30, "dxtbx.serialize.load.imageset"]], "imageset_from_dict() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.imageset_from_dict"]], "imageset_to_dict() (in module dxtbx.serialize.imageset)": [[30, "dxtbx.serialize.imageset.imageset_to_dict"]], "to_crystal() (in module dxtbx.serialize.xds)": [[30, "dxtbx.serialize.xds.to_crystal"]], "to_imageset() (in module dxtbx.serialize.xds)": [[30, "dxtbx.serialize.xds.to_imageset"]], "to_xds (class in dxtbx.serialize.xds)": [[30, "dxtbx.serialize.xds.to_xds"]], "xds_detector_name() (in module dxtbx.serialize.xds)": [[30, "dxtbx.serialize.xds.xds_detector_name"]], "xparm_xds() (dxtbx.serialize.xds.to_xds method)": [[30, "dxtbx.serialize.xds.to_xds.xparm_xds"]], "dispersionspotfinderthresholdext (class in dials.extensions.dispersion_spotfinder_threshold_ext)": [[31, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt"]], "gaussianrsprofilemodelext (class in dials.extensions.gaussian_rs_profile_model_ext)": [[31, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt"]], "nullbackgroundext (class in dials.extensions.null_background_ext)": [[31, "dials.extensions.null_background_ext.NullBackgroundExt"]], "simplebackgroundext (class in dials.extensions.simple_background_ext)": [[31, "dials.extensions.simple_background_ext.SimpleBackgroundExt"]], "simplecentroidext (class in dials.extensions.simple_centroid_ext)": [[31, "dials.extensions.simple_centroid_ext.SimpleCentroidExt"]], "__init__() (dials.extensions.dispersion_spotfinder_threshold_ext.dispersionspotfinderthresholdext method)": [[31, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt.__init__"]], "__init__() (dials.extensions.null_background_ext.nullbackgroundext method)": [[31, "dials.extensions.null_background_ext.NullBackgroundExt.__init__"]], "__init__() (dials.extensions.simple_background_ext.simplebackgroundext method)": [[31, "dials.extensions.simple_background_ext.SimpleBackgroundExt.__init__"]], "__init__() (dials.extensions.simple_centroid_ext.simplecentroidext method)": [[31, "dials.extensions.simple_centroid_ext.SimpleCentroidExt.__init__"]], "algorithm() (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext static method)": [[31, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.algorithm"]], "compute_background() (dials.extensions.null_background_ext.nullbackgroundext method)": [[31, "dials.extensions.null_background_ext.NullBackgroundExt.compute_background"]], "compute_background() (dials.extensions.simple_background_ext.simplebackgroundext method)": [[31, "dials.extensions.simple_background_ext.SimpleBackgroundExt.compute_background"]], "compute_centroid() (dials.extensions.simple_centroid_ext.simplecentroidext method)": [[31, "dials.extensions.simple_centroid_ext.SimpleCentroidExt.compute_centroid"]], "compute_threshold() (dials.extensions.dispersion_spotfinder_threshold_ext.dispersionspotfinderthresholdext method)": [[31, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt.compute_threshold"]], "default (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext attribute)": [[31, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.default"]], "default (dials.extensions.simple_centroid_ext.simplecentroidext attribute)": [[31, "dials.extensions.simple_centroid_ext.SimpleCentroidExt.default"]], "dials.extensions.dispersion_spotfinder_threshold_ext": [[31, "module-dials.extensions.dispersion_spotfinder_threshold_ext"]], "dials.extensions.gaussian_rs_profile_model_ext": [[31, "module-dials.extensions.gaussian_rs_profile_model_ext"]], "dials.extensions.null_background_ext": [[31, "module-dials.extensions.null_background_ext"]], "dials.extensions.simple_background_ext": [[31, "module-dials.extensions.simple_background_ext"]], "dials.extensions.simple_centroid_ext": [[31, "module-dials.extensions.simple_centroid_ext"]], "estimate_global_threshold() (in module dials.extensions.dispersion_spotfinder_threshold_ext)": [[31, "dials.extensions.dispersion_spotfinder_threshold_ext.estimate_global_threshold"]], "from_dict() (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext class method)": [[31, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.from_dict"]], "name (dials.extensions.dispersion_spotfinder_threshold_ext.dispersionspotfinderthresholdext attribute)": [[31, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt.name"]], "name (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext attribute)": [[31, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.name"]], "name (dials.extensions.null_background_ext.nullbackgroundext attribute)": [[31, "dials.extensions.null_background_ext.NullBackgroundExt.name"]], "name (dials.extensions.simple_background_ext.simplebackgroundext attribute)": [[31, "dials.extensions.simple_background_ext.SimpleBackgroundExt.name"]], "name (dials.extensions.simple_centroid_ext.simplecentroidext attribute)": [[31, "dials.extensions.simple_centroid_ext.SimpleCentroidExt.name"]], "phil() (dials.extensions.dispersion_spotfinder_threshold_ext.dispersionspotfinderthresholdext static method)": [[31, "dials.extensions.dispersion_spotfinder_threshold_ext.DispersionSpotFinderThresholdExt.phil"]], "phil() (dials.extensions.gaussian_rs_profile_model_ext.gaussianrsprofilemodelext static method)": [[31, "dials.extensions.gaussian_rs_profile_model_ext.GaussianRSProfileModelExt.phil"]], "phil() (dials.extensions.simple_background_ext.simplebackgroundext static method)": [[31, "dials.extensions.simple_background_ext.SimpleBackgroundExt.phil"]], "argumenthandlingerrorinfo (class in dials.util.options)": [[33, "dials.util.options.ArgumentHandlingErrorInfo"]], "argumentparser (class in dials.util.options)": [[33, "dials.util.options.ArgumentParser"]], "argumentparserbase (class in dials.util.options)": [[33, "dials.util.options.ArgumentParserBase"]], "command (class in dials.util.command_line)": [[33, "dials.util.command_line.Command"]], "importer (class in dials.util.options)": [[33, "dials.util.options.Importer"]], "invalidphilerror": [[33, "dials.util.options.InvalidPhilError"]], "madmergedmtzwriter (class in dials.util.export_mtz)": [[33, "dials.util.export_mtz.MADMergedMTZWriter"]], "mtzwriterbase (class in dials.util.export_mtz)": [[33, "dials.util.export_mtz.MTZWriterBase"]], "mergedmtzwriter (class in dials.util.export_mtz)": [[33, "dials.util.export_mtz.MergedMTZWriter"]], "optionparser (class in dials.util.options)": [[33, "dials.util.options.OptionParser"]], "philcommandparser (class in dials.util.options)": [[33, "dials.util.options.PhilCommandParser"]], "progressbar (class in dials.util.command_line)": [[33, "dials.util.command_line.ProgressBar"]], "progressbartimer (class in dials.util.command_line)": [[33, "dials.util.command_line.ProgressBarTimer"]], "unmergedmtzwriter (class in dials.util.export_mtz)": [[33, "dials.util.export_mtz.UnmergedMTZWriter"]], "wavelengthgroup (class in dials.util.export_mtz)": [[33, "dials.util.export_mtz.WavelengthGroup"]], "__init__() (dials.util.command_line.progressbar method)": [[33, "dials.util.command_line.ProgressBar.__init__"]], "__init__() (dials.util.command_line.progressbartimer method)": [[33, "dials.util.command_line.ProgressBarTimer.__init__"]], "__init__() (dials.util.export_mtz.mtzwriterbase method)": [[33, "dials.util.export_mtz.MTZWriterBase.__init__"]], "__init__() (dials.util.export_mtz.wavelengthgroup method)": [[33, "dials.util.export_mtz.WavelengthGroup.__init__"]], "__init__() (dials.util.options.argumentparser method)": [[33, "dials.util.options.ArgumentParser.__init__"]], "__init__() (dials.util.options.argumentparserbase method)": [[33, "dials.util.options.ArgumentParserBase.__init__"]], "__init__() (dials.util.options.importer method)": [[33, "dials.util.options.Importer.__init__"]], "__init__() (dials.util.options.optionparser method)": [[33, "dials.util.options.OptionParser.__init__"]], "__init__() (dials.util.options.philcommandparser method)": [[33, "dials.util.options.PhilCommandParser.__init__"]], "add_batch_list() (dials.util.export_mtz.unmergedmtzwriter method)": [[33, "dials.util.export_mtz.UnmergedMTZWriter.add_batch_list"]], "add_crystal() (dials.util.export_mtz.mtzwriterbase method)": [[33, "dials.util.export_mtz.MTZWriterBase.add_crystal"]], "add_dataset() (dials.util.export_mtz.madmergedmtzwriter method)": [[33, "dials.util.export_mtz.MADMergedMTZWriter.add_dataset"]], "add_dataset() (dials.util.export_mtz.mergedmtzwriter method)": [[33, "dials.util.export_mtz.MergedMTZWriter.add_dataset"]], "add_empty_dataset() (dials.util.export_mtz.mtzwriterbase method)": [[33, "dials.util.export_mtz.MTZWriterBase.add_empty_dataset"]], "add_experiment() (dials.util.export_mtz.wavelengthgroup method)": [[33, "dials.util.export_mtz.WavelengthGroup.add_experiment"]], "base_package_options (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.base_package_options"]], "calculate_weighted_mean() (dials.util.export_mtz.wavelengthgroup method)": [[33, "dials.util.export_mtz.WavelengthGroup.calculate_weighted_mean"]], "coloured() (in module dials.util.command_line)": [[33, "dials.util.command_line.coloured"]], "configure_modules (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.configure_modules"]], "convert_to_cambridge() (in module dials.util.export_mtz)": [[33, "dials.util.export_mtz.convert_to_cambridge"]], "dest_dir_prefix (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.dest_dir_prefix"]], "dials.util.command_line": [[33, "module-dials.util.command_line"]], "dials.util.export_mtz": [[33, "module-dials.util.export_mtz"]], "dials.util.export_text": [[33, "module-dials.util.export_text"]], "dials.util.image": [[33, "module-dials.util.image"]], "dials.util.installer": [[33, "module-dials.util.installer"]], "dials.util.ioutil": [[33, "module-dials.util.ioutil"]], "dials.util.nexus": [[33, "module-dials.util.nexus"]], "dials.util.options": [[33, "module-dials.util.options"]], "diff_phil (dials.util.options.argumentparser property)": [[33, "dials.util.options.ArgumentParser.diff_phil"]], "diff_phil (dials.util.options.philcommandparser property)": [[33, "dials.util.options.PhilCommandParser.diff_phil"]], "dump() (in module dials.util.nexus)": [[33, "dials.util.nexus.dump"]], "end() (dials.util.command_line.command class method)": [[33, "dials.util.command_line.Command.end"]], "exception (dials.util.options.argumenthandlingerrorinfo attribute)": [[33, "dials.util.options.ArgumentHandlingErrorInfo.exception"]], "exp_nos (dials.util.export_mtz.wavelengthgroup attribute)": [[33, "dials.util.export_mtz.WavelengthGroup.exp_nos"]], "export_mtz() (in module dials.util.export_mtz)": [[33, "dials.util.export_mtz.export_mtz"]], "export_text() (in module dials.util.export_text)": [[33, "dials.util.export_text.export_text"]], "finished() (dials.util.command_line.progressbar method)": [[33, "dials.util.command_line.ProgressBar.finished"]], "flatten_experiments() (in module dials.util.options)": [[33, "dials.util.options.flatten_experiments"]], "flatten_reflections() (in module dials.util.options)": [[33, "dials.util.options.flatten_reflections"]], "format_epilog() (dials.util.options.argumentparserbase method)": [[33, "dials.util.options.ArgumentParserBase.format_epilog"]], "format_help() (dials.util.options.argumentparser method)": [[33, "dials.util.options.ArgumentParser.format_help"]], "get_data() (dials.util.image.reader method)": [[33, "dials.util.image.reader.get_data"]], "get_elapsed_time() (dials.util.command_line.progressbartimer method)": [[33, "dials.util.command_line.ProgressBarTimer.get_elapsed_time"]], "get_entry() (in module dials.util.nexus)": [[33, "dials.util.nexus.get_entry"]], "get_inverse_ub_matrix_from_xparm() (in module dials.util.ioutil)": [[33, "dials.util.ioutil.get_inverse_ub_matrix_from_xparm"]], "get_space_group_type_from_xparm() (in module dials.util.ioutil)": [[33, "dials.util.ioutil.get_space_group_type_from_xparm"]], "heading() (in module dials.util.command_line)": [[33, "dials.util.command_line.heading"]], "identifiers (dials.util.export_mtz.wavelengthgroup attribute)": [[33, "dials.util.export_mtz.WavelengthGroup.identifiers"]], "include_gui_packages (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.include_gui_packages"]], "indent (dials.util.command_line.command attribute)": [[33, "dials.util.command_line.Command.indent"]], "installer (class in dials.util.installer)": [[33, "dials.util.installer.installer"]], "installer_dir (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.installer_dir"]], "load() (in module dials.util.nexus)": [[33, "dials.util.nexus.load"]], "make_apps (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.make_apps"]], "match_wavelengths() (in module dials.util.export_mtz)": [[33, "dials.util.export_mtz.match_wavelengths"]], "max_length (dials.util.command_line.command attribute)": [[33, "dials.util.command_line.Command.max_length"]], "max_possible_wl (dials.util.export_mtz.wavelengthgroup attribute)": [[33, "dials.util.export_mtz.WavelengthGroup.max_possible_wl"]], "message (dials.util.options.argumenthandlingerrorinfo attribute)": [[33, "dials.util.options.ArgumentHandlingErrorInfo.message"]], "min_wl (dials.util.export_mtz.wavelengthgroup attribute)": [[33, "dials.util.export_mtz.WavelengthGroup.min_wl"]], "name (dials.util.options.argumenthandlingerrorinfo attribute)": [[33, "dials.util.options.ArgumentHandlingErrorInfo.name"]], "parse_args() (dials.util.options.argumentparser method)": [[33, "dials.util.options.ArgumentParser.parse_args"]], "parse_args() (dials.util.options.philcommandparser method)": [[33, "dials.util.options.PhilCommandParser.parse_args"]], "parse_known_args() (dials.util.options.argumentparserbase method)": [[33, "dials.util.options.ArgumentParserBase.parse_known_args"]], "phil (dials.util.options.argumentparser property)": [[33, "dials.util.options.ArgumentParser.phil"]], "phil (dials.util.options.philcommandparser property)": [[33, "dials.util.options.PhilCommandParser.phil"]], "print_time (dials.util.command_line.command attribute)": [[33, "dials.util.command_line.Command.print_time"]], "product_name (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.product_name"]], "product_specific_finalize_install() (dials.util.installer.installer method)": [[33, "dials.util.installer.installer.product_specific_finalize_install"]], "read_file() (dials.util.image.reader method)": [[33, "dials.util.image.reader.read_file"]], "reader (class in dials.util.image)": [[33, "dials.util.image.reader"]], "reflections_and_experiments_from_files() (in module dials.util.options)": [[33, "dials.util.options.reflections_and_experiments_from_files"]], "remove_sources_default (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.remove_sources_default"]], "rotate_crystal() (in module dials.util.export_mtz)": [[33, "dials.util.export_mtz.rotate_crystal"]], "source_packages (dials.util.installer.installer attribute)": [[33, "dials.util.installer.installer.source_packages"]], "start() (dials.util.command_line.command class method)": [[33, "dials.util.command_line.Command.start"]], "system_phil (dials.util.options.argumentparser property)": [[33, "dials.util.options.ArgumentParser.system_phil"]], "system_phil (dials.util.options.philcommandparser property)": [[33, "dials.util.options.PhilCommandParser.system_phil"]], "traceback (dials.util.options.argumenthandlingerrorinfo attribute)": [[33, "dials.util.options.ArgumentHandlingErrorInfo.traceback"]], "try_read_experiments() (dials.util.options.importer method)": [[33, "dials.util.options.Importer.try_read_experiments"]], "try_read_experiments_from_images() (dials.util.options.importer method)": [[33, "dials.util.options.Importer.try_read_experiments_from_images"]], "try_read_reflections() (dials.util.options.importer method)": [[33, "dials.util.options.Importer.try_read_reflections"]], "type (dials.util.options.argumenthandlingerrorinfo attribute)": [[33, "dials.util.options.ArgumentHandlingErrorInfo.type"]], "update() (dials.util.command_line.progressbar method)": [[33, "dials.util.command_line.ProgressBar.update"]], "update() (dials.util.command_line.progressbartimer method)": [[33, "dials.util.command_line.ProgressBarTimer.update"]], "validation (dials.util.options.argumenthandlingerrorinfo attribute)": [[33, "dials.util.options.ArgumentHandlingErrorInfo.validation"]], "wavelengths (dials.util.export_mtz.wavelengthgroup attribute)": [[33, "dials.util.export_mtz.WavelengthGroup.wavelengths"]], "weighted_mean (dials.util.export_mtz.wavelengthgroup attribute)": [[33, "dials.util.export_mtz.WavelengthGroup.weighted_mean"]], "write_columns() (dials.util.export_mtz.unmergedmtzwriter method)": [[33, "dials.util.export_mtz.UnmergedMTZWriter.write_columns"]]}})